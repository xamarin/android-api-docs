<Type Name="Visibility" FullName="Android.Transitions.Visibility">
  <TypeSignature Language="C#" Value="public abstract class Visibility : Android.Transitions.Transition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Visibility extends Android.Transitions.Transition" />
  <TypeSignature Language="DocId" Value="T:Android.Transitions.Visibility" />
  <TypeSignature Language="F#" Value="type Visibility = class&#xA;    inherit Transition" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Transitions.Transition</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/transition/Visibility", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>This transition tracks changes to the visibility of target views in the
            start and end scenes.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/transition/Visibility" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Visibility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Visibility (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.#ctor(Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="new Android.Transitions.Visibility : Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Transitions.Visibility" Usage="new Android.Transitions.Visibility (context, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Visibility (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Transitions.Visibility : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Transitions.Visibility" Usage="new Android.Transitions.Visibility (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureEndValues">
      <MemberSignature Language="C#" Value="public override void CaptureEndValues (Android.Transitions.TransitionValues transitionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CaptureEndValues(class Android.Transitions.TransitionValues transitionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.CaptureEndValues(Android.Transitions.TransitionValues)" />
      <MemberSignature Language="F#" Value="override this.CaptureEndValues : Android.Transitions.TransitionValues -&gt; unit" Usage="visibility.CaptureEndValues transitionValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("captureEndValues", "(Landroid/transition/TransitionValues;)V", "GetCaptureEndValues_Landroid_transition_TransitionValues_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="transitionValues">The holder for any values that the Transition
 wishes to store. Values are stored in the <c>values</c> field
 of this TransitionValues object and are keyed from
 a String value. For example, to store a view's rotation value,
 a transition might call
 <c>transitionValues.values.put("appname:transitionname:rotation",
 view.getRotation())</c>. The target view will already be stored in
 the transitionValues structure when this method is called.</param>
        <summary>Captures the values in the end scene for the properties that this
 transition monitors.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureStartValues">
      <MemberSignature Language="C#" Value="public override void CaptureStartValues (Android.Transitions.TransitionValues transitionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CaptureStartValues(class Android.Transitions.TransitionValues transitionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.CaptureStartValues(Android.Transitions.TransitionValues)" />
      <MemberSignature Language="F#" Value="override this.CaptureStartValues : Android.Transitions.TransitionValues -&gt; unit" Usage="visibility.CaptureStartValues transitionValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("captureStartValues", "(Landroid/transition/TransitionValues;)V", "GetCaptureStartValues_Landroid_transition_TransitionValues_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="transitionValues">The holder for any values that the Transition
 wishes to store. Values are stored in the <c>values</c> field
 of this TransitionValues object and are keyed from
 a String value. For example, to store a view's rotation value,
 a transition might call
 <c>transitionValues.values.put("appname:transitionname:rotation",
 view.getRotation())</c>. The target view will already be stored in
 the transitionValues structure when this method is called.</param>
        <summary>Captures the values in the start scene for the properties that this
 transition monitors.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsVisible (Android.Transitions.TransitionValues values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsVisible(class Android.Transitions.TransitionValues values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.IsVisible(Android.Transitions.TransitionValues)" />
      <MemberSignature Language="F#" Value="abstract member IsVisible : Android.Transitions.TransitionValues -&gt; bool&#xA;override this.IsVisible : Android.Transitions.TransitionValues -&gt; bool" Usage="visibility.IsVisible values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isVisible", "(Landroid/transition/TransitionValues;)Z", "GetIsVisible_Landroid_transition_TransitionValues_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="values">The TransitionValues object that holds the information by
            which visibility is determined.</param>
        <summary>Returns whether the view is 'visible' according to the given values
            object.</summary>
        <returns>True if the view reference by &lt;code&gt;values&lt;/code&gt; is visible,
            false otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.Visibility.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Transitions.Visibility.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.VisibilityMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Transitions.VisibilityMode Mode" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.Visibility.Mode" />
      <MemberSignature Language="F#" Value="member this.Mode : Android.Transitions.VisibilityMode with get, set" Usage="Android.Transitions.Visibility.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMode", "()I", "GetGetModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMode", "(I)V", "GetSetMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.VisibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether appearing and/or disappearing Views are supported. -or- Changes the transition to support appearing and/or disappearing Views, depending
            on &lt;code&gt;mode&lt;/code&gt;.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <c>#MODE_IN</c>
        <c>#MODE_OUT</c>
      </Docs>
    </Member>
    <Member MemberName="OnAppear">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.Animator OnAppear (Android.Views.ViewGroup sceneRoot, Android.Views.View view, Android.Transitions.TransitionValues startValues, Android.Transitions.TransitionValues endValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.Animator OnAppear(class Android.Views.ViewGroup sceneRoot, class Android.Views.View view, class Android.Transitions.TransitionValues startValues, class Android.Transitions.TransitionValues endValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.OnAppear(Android.Views.ViewGroup,Android.Views.View,Android.Transitions.TransitionValues,Android.Transitions.TransitionValues)" />
      <MemberSignature Language="F#" Value="abstract member OnAppear : Android.Views.ViewGroup * Android.Views.View * Android.Transitions.TransitionValues * Android.Transitions.TransitionValues -&gt; Android.Animation.Animator&#xA;override this.OnAppear : Android.Views.ViewGroup * Android.Views.View * Android.Transitions.TransitionValues * Android.Transitions.TransitionValues -&gt; Android.Animation.Animator" Usage="visibility.OnAppear (sceneRoot, view, startValues, endValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAppear", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)Landroid/animation/Animator;", "GetOnAppear_Landroid_view_ViewGroup_Landroid_view_View_Landroid_transition_TransitionValues_Landroid_transition_TransitionValues_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="startValues" Type="Android.Transitions.TransitionValues" />
        <Parameter Name="endValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the transition hierarchy</param>
        <param name="view">The View to make appear. This will be in the target scene's View hierarchy and
             will be VISIBLE.</param>
        <param name="startValues">The target values in the start scene</param>
        <param name="endValues">The target values in the end scene</param>
        <summary>The default implementation of this method calls
            <c>#onAppear(ViewGroup, View, TransitionValues, TransitionValues)</c>.</summary>
        <returns>An Animator to be started at the appropriate time in the
            overall transition for this scene change. A null value means no animation
            should be run.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppear">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.Animator OnAppear (Android.Views.ViewGroup sceneRoot, Android.Transitions.TransitionValues startValues, int startVisibility, Android.Transitions.TransitionValues endValues, int endVisibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.Animator OnAppear(class Android.Views.ViewGroup sceneRoot, class Android.Transitions.TransitionValues startValues, int32 startVisibility, class Android.Transitions.TransitionValues endValues, int32 endVisibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.OnAppear(Android.Views.ViewGroup,Android.Transitions.TransitionValues,System.Int32,Android.Transitions.TransitionValues,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnAppear : Android.Views.ViewGroup * Android.Transitions.TransitionValues * int * Android.Transitions.TransitionValues * int -&gt; Android.Animation.Animator&#xA;override this.OnAppear : Android.Views.ViewGroup * Android.Transitions.TransitionValues * int * Android.Transitions.TransitionValues * int -&gt; Android.Animation.Animator" Usage="visibility.OnAppear (sceneRoot, startValues, startVisibility, endValues, endVisibility)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAppear", "(Landroid/view/ViewGroup;Landroid/transition/TransitionValues;ILandroid/transition/TransitionValues;I)Landroid/animation/Animator;", "GetOnAppear_Landroid_view_ViewGroup_Landroid_transition_TransitionValues_ILandroid_transition_TransitionValues_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
        <Parameter Name="startValues" Type="Android.Transitions.TransitionValues" />
        <Parameter Name="startVisibility" Type="System.Int32" />
        <Parameter Name="endValues" Type="Android.Transitions.TransitionValues" />
        <Parameter Name="endVisibility" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the transition hierarchy</param>
        <param name="startValues">The target values in the start scene</param>
        <param name="startVisibility">The target visibility in the start scene</param>
        <param name="endValues">The target values in the end scene</param>
        <param name="endVisibility">The target visibility in the end scene</param>
        <summary>The default implementation of this method calls
            <c>#onAppear(ViewGroup, View, TransitionValues, TransitionValues)</c>.</summary>
        <returns>An Animator to be started at the appropriate time in the
            overall transition for this scene change. A null value means no animation
            should be run.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisappear">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.Animator OnDisappear (Android.Views.ViewGroup sceneRoot, Android.Views.View view, Android.Transitions.TransitionValues startValues, Android.Transitions.TransitionValues endValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.Animator OnDisappear(class Android.Views.ViewGroup sceneRoot, class Android.Views.View view, class Android.Transitions.TransitionValues startValues, class Android.Transitions.TransitionValues endValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.OnDisappear(Android.Views.ViewGroup,Android.Views.View,Android.Transitions.TransitionValues,Android.Transitions.TransitionValues)" />
      <MemberSignature Language="F#" Value="abstract member OnDisappear : Android.Views.ViewGroup * Android.Views.View * Android.Transitions.TransitionValues * Android.Transitions.TransitionValues -&gt; Android.Animation.Animator&#xA;override this.OnDisappear : Android.Views.ViewGroup * Android.Views.View * Android.Transitions.TransitionValues * Android.Transitions.TransitionValues -&gt; Android.Animation.Animator" Usage="visibility.OnDisappear (sceneRoot, view, startValues, endValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDisappear", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)Landroid/animation/Animator;", "GetOnDisappear_Landroid_view_ViewGroup_Landroid_view_View_Landroid_transition_TransitionValues_Landroid_transition_TransitionValues_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="startValues" Type="Android.Transitions.TransitionValues" />
        <Parameter Name="endValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the transition hierarchy</param>
        <param name="view">The View to make disappear. This will be in the target scene's View
             hierarchy or in an <see cref="T:Android.Views.ViewGroupOverlay" /> and will be
             VISIBLE.</param>
        <param name="startValues">The target values in the start scene</param>
        <param name="endValues">The target values in the end scene</param>
        <summary>Subclasses should override this method or
            <c>#onDisappear(ViewGroup, View, TransitionValues, TransitionValues)</c>
            if they need to create an Animator when targets disappear.</summary>
        <returns>An Animator to be started at the appropriate time in the
            overall transition for this scene change. A null value means no animation
            should be run.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisappear">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.Animator OnDisappear (Android.Views.ViewGroup sceneRoot, Android.Transitions.TransitionValues startValues, int startVisibility, Android.Transitions.TransitionValues endValues, int endVisibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.Animator OnDisappear(class Android.Views.ViewGroup sceneRoot, class Android.Transitions.TransitionValues startValues, int32 startVisibility, class Android.Transitions.TransitionValues endValues, int32 endVisibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Visibility.OnDisappear(Android.Views.ViewGroup,Android.Transitions.TransitionValues,System.Int32,Android.Transitions.TransitionValues,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnDisappear : Android.Views.ViewGroup * Android.Transitions.TransitionValues * int * Android.Transitions.TransitionValues * int -&gt; Android.Animation.Animator&#xA;override this.OnDisappear : Android.Views.ViewGroup * Android.Transitions.TransitionValues * int * Android.Transitions.TransitionValues * int -&gt; Android.Animation.Animator" Usage="visibility.OnDisappear (sceneRoot, startValues, startVisibility, endValues, endVisibility)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDisappear", "(Landroid/view/ViewGroup;Landroid/transition/TransitionValues;ILandroid/transition/TransitionValues;I)Landroid/animation/Animator;", "GetOnDisappear_Landroid_view_ViewGroup_Landroid_transition_TransitionValues_ILandroid_transition_TransitionValues_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
        <Parameter Name="startValues" Type="Android.Transitions.TransitionValues" />
        <Parameter Name="startVisibility" Type="System.Int32" />
        <Parameter Name="endValues" Type="Android.Transitions.TransitionValues" />
        <Parameter Name="endVisibility" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the transition hierarchy</param>
        <param name="startValues">The target values in the start scene</param>
        <param name="startVisibility">The target visibility in the start scene</param>
        <param name="endValues">The target values in the end scene</param>
        <param name="endVisibility">The target visibility in the end scene</param>
        <summary>Subclasses should override this method or
            <c>#onDisappear(ViewGroup, View, TransitionValues, TransitionValues)</c>
            if they need to create an Animator when targets disappear.</summary>
        <returns>An Animator to be started at the appropriate time in the
            overall transition for this scene change. A null value means no animation
            should be run.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.Visibility.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Transitions.Visibility.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.Visibility.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Transitions.Visibility.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
