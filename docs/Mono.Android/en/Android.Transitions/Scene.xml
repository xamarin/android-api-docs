<Type Name="Scene" FullName="Android.Transitions.Scene">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Scene&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Scene sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class Scene : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Scene extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Transitions.Scene" />
  <TypeSignature Language="F#" Value="type Scene = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/transition/Scene", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/transition/Scene", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>A scene represents the collection of values that various properties in the
            View hierarchy will have when the scene is applied.</summary>
    <remarks>
      <para>A scene represents the collection of values that various properties in the
            View hierarchy will have when the scene is applied. A Scene can be
            configured to automatically run a Transition when it is applied, which will
            animate the various property changes that take place during the
            scene change.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/transition/Scene" title="Reference documentation">Java documentation for <code>android.transition.Scene</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (sceneRoot As ViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scene(Android::Views::ViewGroup ^ sceneRoot);" />
      <MemberSignature Language="C#" Value="public Scene (Android.Views.ViewGroup? sceneRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.ViewGroup sceneRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.#ctor(Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="new Android.Transitions.Scene : Android.Views.ViewGroup -&gt; Android.Transitions.Scene" Usage="new Android.Transitions.Scene sceneRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/view/ViewGroup;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/view/ViewGroup;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the hierarchy in which scene changes
            and transitions will take place.</param>
        <summary>Constructs a Scene with no information about how values will change
            when this scene is applied.</summary>
        <remarks>
          <para>Constructs a Scene with no information about how values will change
            when this scene is applied. This constructor might be used when
            a Scene is created with the intention of being dynamically configured,
            through setting <c>#setEnterAction(Runnable)</c> and possibly
            <c>#setExitAction(Runnable)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#Scene(android.view.ViewGroup)" title="Reference documentation">Java documentation for <code>android.transition.Scene.Scene(android.view.ViewGroup)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (sceneRoot As ViewGroup, layout As View)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scene(Android::Views::ViewGroup ^ sceneRoot, Android::Views::View ^ layout);" />
      <MemberSignature Language="C#" Value="public Scene (Android.Views.ViewGroup? sceneRoot, Android.Views.View? layout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.ViewGroup sceneRoot, class Android.Views.View layout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.#ctor(Android.Views.ViewGroup,Android.Views.View)" />
      <MemberSignature Language="F#" Value="new Android.Transitions.Scene : Android.Views.ViewGroup * Android.Views.View -&gt; Android.Transitions.Scene" Usage="new Android.Transitions.Scene (sceneRoot, layout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/view/ViewGroup;Landroid/view/View;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/view/ViewGroup;Landroid/view/View;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
        <Parameter Name="layout" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the hierarchy in which scene changes
            and transitions will take place.</param>
        <param name="layout">The view hierarchy of this scene, added as a child
            of sceneRoot when this scene is entered.</param>
        <summary>Constructs a Scene which, when entered, will remove any
            children from the sceneRoot container and add the layout
            object as a new child of that container.</summary>
        <remarks>
          <para>Constructs a Scene which, when entered, will remove any
            children from the sceneRoot container and add the layout
            object as a new child of that container.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#Scene(android.view.ViewGroup,%20android.view.View)" title="Reference documentation">Java documentation for <code>android.transition.Scene.Scene(android.view.ViewGroup, android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (sceneRoot As ViewGroup, layout As ViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scene(Android::Views::ViewGroup ^ sceneRoot, Android::Views::ViewGroup ^ layout);" />
      <MemberSignature Language="C#" Value="public Scene (Android.Views.ViewGroup? sceneRoot, Android.Views.ViewGroup? layout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.ViewGroup sceneRoot, class Android.Views.ViewGroup layout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.#ctor(Android.Views.ViewGroup,Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="new Android.Transitions.Scene : Android.Views.ViewGroup * Android.Views.ViewGroup -&gt; Android.Transitions.Scene" Usage="new Android.Transitions.Scene (sceneRoot, layout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/view/ViewGroup;Landroid/view/ViewGroup;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/view/ViewGroup;Landroid/view/ViewGroup;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
        <Parameter Name="layout" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the hierarchy in which scene changes
            and transitions will take place.</param>
        <param name="layout">To be added.</param>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. use <c>#Scene(ViewGroup, View)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#Scene(android.view.ViewGroup,%20android.view.ViewGroup)" title="Reference documentation">Java documentation for <code>android.transition.Scene.Scene(android.view.ViewGroup, android.view.ViewGroup)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="VB.NET" Value="Public Sub Enter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enter();" />
      <MemberSignature Language="C#" Value="public void Enter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.Enter" />
      <MemberSignature Language="F#" Value="member this.Enter : unit -&gt; unit" Usage="scene.Enter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enter", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enter", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enters this scene, which entails changing all values that
            are specified by this scene.</summary>
        <remarks>
          <para>Enters this scene, which entails changing all values that
            are specified by this scene. These may be values associated
            with a layout view group or layout resource file which will
            now be added to the scene root, or it may be values changed by
            an <c>#setEnterAction(Runnable)</c> enter action}, or a
            combination of the these. No transition will be run when the
            scene is entered. To get transition behavior in scene changes,
            use one of the methods in <c>TransitionManager</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#enter()" title="Reference documentation">Java documentation for <code>android.transition.Scene.enter()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="VB.NET" Value="Public Sub Exit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exit();" />
      <MemberSignature Language="C#" Value="public void Exit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.Exit" />
      <MemberSignature Language="F#" Value="member this.Exit : unit -&gt; unit" Usage="scene.Exit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exit", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exit", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exits this scene, if it is the current scene
            on the scene's <c>#getSceneRoot() scene root</c>.</summary>
        <remarks>
          <para>Exits this scene, if it is the current scene
            on the scene's <c>#getSceneRoot() scene root</c>. The current scene is
            set when <c>#enter() entering</c> a scene.
            Exiting a scene runs the <c>#setExitAction(Runnable) exit action</c>
            if there is one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#exit()" title="Reference documentation">Java documentation for <code>android.transition.Scene.exit()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentScene">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentScene (sceneRoot As ViewGroup) As Scene" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Transitions::Scene ^ GetCurrentScene(Android::Views::ViewGroup ^ sceneRoot);" />
      <MemberSignature Language="C#" Value="public static Android.Transitions.Scene? GetCurrentScene (Android.Views.ViewGroup sceneRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Transitions.Scene GetCurrentScene(class Android.Views.ViewGroup sceneRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.GetCurrentScene(Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="static member GetCurrentScene : Android.Views.ViewGroup -&gt; Android.Transitions.Scene" Usage="Android.Transitions.Scene.GetCurrentScene sceneRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCurrentScene", "(Landroid/view/ViewGroup;)Landroid/transition/Scene;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCurrentScene", "(Landroid/view/ViewGroup;)Landroid/transition/Scene;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Scene</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The ViewGroup on which the current scene will be returned</param>
        <summary>Gets the current <c>Scene</c> set on the given ViewGroup.</summary>
        <returns>The current Scene set on this ViewGroup. A value of null indicates that
            no Scene is currently set.</returns>
        <remarks>
          <para>Gets the current <c>Scene</c> set on the given ViewGroup. A scene is set on a ViewGroup
            only if that ViewGroup is the scene root.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#getCurrentScene(android.view.ViewGroup)" title="Reference documentation">Java documentation for <code>android.transition.Scene.getCurrentScene(android.view.ViewGroup)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSceneForLayout">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSceneForLayout (sceneRoot As ViewGroup, layoutId As Integer, context As Context) As Scene" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Transitions::Scene ^ GetSceneForLayout(Android::Views::ViewGroup ^ sceneRoot, int layoutId, Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public static Android.Transitions.Scene? GetSceneForLayout (Android.Views.ViewGroup? sceneRoot, int layoutId, Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Transitions.Scene GetSceneForLayout(class Android.Views.ViewGroup sceneRoot, int32 layoutId, class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.GetSceneForLayout(Android.Views.ViewGroup,System.Int32,Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetSceneForLayout : Android.Views.ViewGroup * int * Android.Content.Context -&gt; Android.Transitions.Scene" Usage="Android.Transitions.Scene.GetSceneForLayout (sceneRoot, layoutId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSceneForLayout", "(Landroid/view/ViewGroup;ILandroid/content/Context;)Landroid/transition/Scene;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSceneForLayout", "(Landroid/view/ViewGroup;ILandroid/content/Context;)Landroid/transition/Scene;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Scene</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
        <Parameter Name="layoutId" Type="System.Int32" />
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the hierarchy in which scene changes
            and transitions will take place.</param>
        <param name="layoutId">The id of a standard layout resource file.</param>
        <param name="context">The context used in the process of inflating
            the layout resource.</param>
        <summary>Returns a Scene described by the resource file associated with the given
            <c>layoutId</c> parameter.</summary>
        <returns>The scene for the given root and layout id</returns>
        <remarks>
          <para>Returns a Scene described by the resource file associated with the given
            <c>layoutId</c> parameter. If such a Scene has already been created for
            the given <c>sceneRoot</c>, that same Scene will be returned.
            This caching of layoutId-based scenes enables sharing of common scenes
            between those created in code and those referenced by <c>TransitionManager</c>
            XML resource files.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#getSceneForLayout(android.view.ViewGroup,%20int,%20android.content.Context)" title="Reference documentation">Java documentation for <code>android.transition.Scene.getSceneForLayout(android.view.ViewGroup, int, android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.Scene.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Transitions.Scene.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SceneRoot">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SceneRoot As ViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::ViewGroup ^ SceneRoot { Android::Views::ViewGroup ^ get(); };" />
      <MemberSignature Language="C#" Value="public Android.Views.ViewGroup? SceneRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewGroup SceneRoot" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.Scene.SceneRoot" />
      <MemberSignature Language="F#" Value="member this.SceneRoot : Android.Views.ViewGroup" Usage="Android.Transitions.Scene.SceneRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSceneRoot", "()Landroid/view/ViewGroup;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSceneRoot", "()Landroid/view/ViewGroup;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the root of the scene, which is the root of the view hierarchy
            affected by changes due to this scene, and which will be animated
            when this scene is entered.</summary>
        <value>The root of the view hierarchy affected by this scene.</value>
        <remarks>
          <para>Gets the root of the scene, which is the root of the view hierarchy
            affected by changes due to this scene, and which will be animated
            when this scene is entered.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#getSceneRoot()" title="Reference documentation">Java documentation for <code>android.transition.Scene.getSceneRoot()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnterAction">
      <MemberSignature Language="VB.NET" Value="Public Sub SetEnterAction (action As IRunnable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEnterAction(Java::Lang::IRunnable ^ action);" />
      <MemberSignature Language="C#" Value="public void SetEnterAction (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnterAction(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.SetEnterAction(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="member this.SetEnterAction : Java.Lang.IRunnable -&gt; unit" Usage="scene.SetEnterAction action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEnterAction", "(Ljava/lang/Runnable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEnterAction", "(Ljava/lang/Runnable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">The runnable whose <c>Runnable#run() run()</c> method will
            be called when this scene is entered</param>
        <summary>Scenes that are not defined with layout resources or
            hierarchies, or which need to perform additional steps
            after those hierarchies are changed to, should set an enter
            action, and possibly an exit action as well.</summary>
        <remarks>
          <para>Scenes that are not defined with layout resources or
            hierarchies, or which need to perform additional steps
            after those hierarchies are changed to, should set an enter
            action, and possibly an exit action as well. An enter action
            will cause Scene to call back into application code to do
            anything else the application needs after transitions have
            captured pre-change values and after any other scene changes
            have been applied, such as the layout (if any) being added to
            the view hierarchy. After this method is called, Transitions will
            be played.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#setEnterAction(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.transition.Scene.setEnterAction(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Transitions.Scene.SetExitAction(Java.Lang.IRunnable)" />
        <altmember cref="C:Android.Transitions.Scene(Android.Views.ViewGroup, Android.Views.ViewGroup)" />
      </Docs>
    </Member>
    <Member MemberName="SetExitAction">
      <MemberSignature Language="VB.NET" Value="Public Sub SetExitAction (action As IRunnable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExitAction(Java::Lang::IRunnable ^ action);" />
      <MemberSignature Language="C#" Value="public void SetExitAction (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExitAction(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.Scene.SetExitAction(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="member this.SetExitAction : Java.Lang.IRunnable -&gt; unit" Usage="scene.SetExitAction action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setExitAction", "(Ljava/lang/Runnable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setExitAction", "(Ljava/lang/Runnable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>Scenes that are not defined with layout resources or
            hierarchies, or which need to perform additional steps
            after those hierarchies are changed to, should set an enter
            action, and possibly an exit action as well.</summary>
        <remarks>
          <para>Scenes that are not defined with layout resources or
            hierarchies, or which need to perform additional steps
            after those hierarchies are changed to, should set an enter
            action, and possibly an exit action as well. An exit action
            will cause Scene to call back into application code to do
            anything the application needs to do after applicable transitions have
            captured pre-change values, but before any other scene changes
            have been applied, such as the new layout (if any) being added to
            the view hierarchy. After this method is called, the next scene
            will be entered, including a call to <c>#setEnterAction(Runnable)</c>
            if an enter action is set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/Scene#setExitAction(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.transition.Scene.setExitAction(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Transitions.Scene.SetEnterAction(Java.Lang.IRunnable)" />
        <altmember cref="C:Android.Transitions.Scene(Android.Views.ViewGroup, Android.Views.ViewGroup)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.Scene.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Transitions.Scene.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.Scene.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Transitions.Scene.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
