<Type Name="IOperatedClientConnection" FullName="Org.Apache.Http.Conn.IOperatedClientConnection">
  <TypeSignature Language="C#" Value="public interface IOperatedClientConnection : IDisposable, Org.Apache.Http.IHttpClientConnection, Org.Apache.Http.IHttpInetConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperatedClientConnection implements class Android.Runtime.IJavaObject, class Org.Apache.Http.IHttpClientConnection, class Org.Apache.Http.IHttpConnection, class Org.Apache.Http.IHttpInetConnection, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.Apache.Http.IHttpClientConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Apache.Http.IHttpInetConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/conn/OperatedClientConnection", "", "Org.Apache.Http.Conn.IOperatedClientConnectionInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A client-side connection that relies on outside logic to connect sockets to the 
 appropriate hosts.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A client-side connection that relies on outside logic to connect sockets to the 
 appropriate hosts. It can be operated directly by an application, or through an
 <c><see cref="T:Org.Apache.Http.Conn.IClientConnectionOperator" /></c>.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/conn/OperatedClientConnection.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public bool IsSecure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSecure", "()Z", "GetIsSecureHandler:Org.Apache.Http.Conn.IOperatedClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this connection is secure.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether this connection is secure.
 The return value is well-defined only while the connection is open.
 It may change even while the connection is open,
 because of an <c><see cref="M:Org.Apache.Http.Conn.IOperatedClientConnection.Update(Java.Net.Socket,Org.Apache.Http.HttpHost,Org.Apache.Http.HttpHost,Org.Apache.Http.HttpHost)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/OperatedClientConnection.html#isSecure()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenCompleted">
      <MemberSignature Language="C#" Value="public void OpenCompleted (bool secure, Org.Apache.Http.Params.IHttpParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenCompleted(bool secure, class Org.Apache.Http.Params.IHttpParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openCompleted", "(ZLorg/apache/http/params/HttpParams;)V", "GetOpenCompleted_ZLorg_apache_http_params_HttpParams_Handler:Org.Apache.Http.Conn.IOperatedClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
      </Parameters>
      <Docs>
        <param name="secure">
          <c>true</c> if this connection is secure, for
                  example if an <c>SSLSocket</c> is used, or
                  <c>false</c> if it is not secure</param>
        <param name="params">parameters for this connection. The parameters will
                  be used when creating dependent objects, for example
                  to determine buffer sizes.
</param>
        <summary>Signals that the connection has been successfully open.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Signals that the connection has been successfully open.
 An attempt to call this method on an open connection will cause
 an exception.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/OperatedClientConnection.html#openCompleted(boolean, org.apache.http.params.HttpParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="public void Opening (Java.Net.Socket sock, Org.Apache.Http.HttpHost target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Opening(class Java.Net.Socket sock, class Org.Apache.Http.HttpHost target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("opening", "(Ljava/net/Socket;Lorg/apache/http/HttpHost;)V", "GetOpening_Ljava_net_Socket_Lorg_apache_http_HttpHost_Handler:Org.Apache.Http.Conn.IOperatedClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sock" Type="Java.Net.Socket" />
        <Parameter Name="target" Type="Org.Apache.Http.HttpHost" />
      </Parameters>
      <Docs>
        <param name="sock">the unconnected socket which is about to
                  be connected.</param>
        <param name="target">the target host of this connection
</param>
        <summary>Signals that this connection is in the process of being open.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Signals that this connection is in the process of being open.
 <format type="text/html"><br /></format>
 By calling this method, you can provide the connection with
 the unconnected socket that will be connected before
 <c><see cref="M:Org.Apache.Http.Conn.IOperatedClientConnection.OpenCompleted(System.Boolean,Org.Apache.Http.Params.IHttpParams)" /></c> is called. This allows 
 the connection to close that socket if
 <c><see cref="M:Org.Apache.Http.IHttpConnection.Shutdown" /></c>
 is called before it is open. Closing the unconnected socket
 will interrupt a thread that is blocked on the connect.
 Otherwise, that thread will either time out on the connect,
 or it returns successfully and then opens this connection
 which was just shut down.
 <format type="text/html"><br /></format>
 You also must call <c><see cref="M:Org.Apache.Http.Conn.IOperatedClientConnection.OpenCompleted(System.Boolean,Org.Apache.Http.Params.IHttpParams)" /></c> in order to complete
 the process</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/OperatedClientConnection.html#opening(java.net.Socket, org.apache.http.HttpHost)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="public Java.Net.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.Socket Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSocket", "()Ljava/net/Socket;", "GetGetSocketHandler:Org.Apache.Http.Conn.IOperatedClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the socket for this connection.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the socket for this connection.
 The return value is well-defined only while the connection is open.
 It may change even while the connection is open,
 because of an <c><see cref="M:Org.Apache.Http.Conn.IOperatedClientConnection.Update(Java.Net.Socket,Org.Apache.Http.HttpHost,Org.Apache.Http.HttpHost,Org.Apache.Http.HttpHost)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/OperatedClientConnection.html#getSocket()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TargetHost">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.HttpHost TargetHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Apache.Http.HttpHost TargetHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargetHost", "()Lorg/apache/http/HttpHost;", "GetGetTargetHostHandler:Org.Apache.Http.Conn.IOperatedClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.HttpHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the target host for this connection.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the target host for this connection.
 If the connection is to a proxy but not tunnelled, this is
 the proxy. If the connection is tunnelled through a proxy,
 this is the target of the tunnel.
 <format type="text/html"><br /></format>
 The return value is well-defined only while the connection is open.
 It may change even while the connection is open,
 because of an <c><see cref="M:Org.Apache.Http.Conn.IOperatedClientConnection.Update(Java.Net.Socket,Org.Apache.Http.HttpHost,Org.Apache.Http.HttpHost,Org.Apache.Http.HttpHost)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/OperatedClientConnection.html#getTargetHost()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (Java.Net.Socket sock, Org.Apache.Http.HttpHost target, bool secure, Org.Apache.Http.Params.IHttpParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class Java.Net.Socket sock, class Org.Apache.Http.HttpHost target, bool secure, class Org.Apache.Http.Params.IHttpParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V", "GetUpdate_Ljava_net_Socket_Lorg_apache_http_HttpHost_ZLorg_apache_http_params_HttpParams_Handler:Org.Apache.Http.Conn.IOperatedClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sock" Type="Java.Net.Socket" />
        <Parameter Name="target" Type="Org.Apache.Http.HttpHost" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
      </Parameters>
      <Docs>
        <param name="sock">the new socket for communicating with the target host,
                  or <c>null</c> to continue using the old socket.
                  If <c>null</c> is passed, helper objects that
                  depend on the socket should be re-used. In that case,
                  some changes in the parameters will not take effect.</param>
        <param name="target">the new target host of this connection</param>
        <param name="secure">
          <c>true</c> if this connection is now secure,
                  <c>false</c> if it is not secure</param>
        <param name="params">new parameters for this connection
</param>
        <summary>Updates this connection.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates this connection.
 A connection can be updated only while it is open.
 Updates are used for example when a tunnel has been established,
 or when a TLS/SSL connection has been layered on top of a plain
 socket connection.
 <format type="text/html"><br /></format><format type="text/html"><b>Note:</b></format> Updating the connection will <format type="text/html"><i>not</i></format> close the
 previously used socket. It is the caller's responsibility to close
 that socket if it is no longer required.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/OperatedClientConnection.html#update(java.net.Socket, org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
  </Members>
</Type>
