<Type Name="IEofSensorWatcher" FullName="Org.Apache.Http.Conn.IEofSensorWatcher">
  <TypeSignature Language="C#" Value="public interface IEofSensorWatcher : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEofSensorWatcher implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Apache.Http.Conn.IEofSensorWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEofSensorWatcher&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEofSensorWatcher : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="F#" Value="type IEofSensorWatcher = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/apache/http/conn/EofSensorWatcher", "", "Org.Apache.Http.Conn.IEofSensorWatcherInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/apache/http/conn/EofSensorWatcher", "", "Org.Apache.Http.Conn.IEofSensorWatcherInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android22.0", "This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android22.0", "This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A watcher for <see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" />.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/apache/http/conn/EofSensorWatcher" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="EofDetected">
      <MemberSignature Language="C#" Value="public bool EofDetected (System.IO.Stream? wrapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EofDetected(class System.IO.Stream wrapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Conn.IEofSensorWatcher.EofDetected(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function EofDetected (wrapped As Stream) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EofDetected(System::IO::Stream ^ wrapped);" />
      <MemberSignature Language="F#" Value="abstract member EofDetected : System.IO.Stream -&gt; bool" Usage="iEofSensorWatcher.EofDetected wrapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("eofDetected", "(Ljava/io/InputStream;)Z", "GetEofDetected_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("eofDetected", "(Ljava/io/InputStream;)Z", "GetEofDetected_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrapped" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="wrapped">the underlying stream which has reached EOF</param>
        <summary>Indicates that EOF is detected.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem, for example if the watcher itself
         closes the underlying stream. The caller will leave the
         wrapped stream alone, as if <c>false</c> was returned.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StreamAbort">
      <MemberSignature Language="C#" Value="public bool StreamAbort (System.IO.Stream? wrapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StreamAbort(class System.IO.Stream wrapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Conn.IEofSensorWatcher.StreamAbort(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function StreamAbort (wrapped As Stream) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StreamAbort(System::IO::Stream ^ wrapped);" />
      <MemberSignature Language="F#" Value="abstract member StreamAbort : System.IO.Stream -&gt; bool" Usage="iEofSensorWatcher.StreamAbort wrapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("streamAbort", "(Ljava/io/InputStream;)Z", "GetStreamAbort_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("streamAbort", "(Ljava/io/InputStream;)Z", "GetStreamAbort_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrapped" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="wrapped">the underlying stream which has not reached EOF</param>
        <summary>Indicates that the <see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /> is aborted.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem, for example if the watcher itself
         closes the underlying stream. The caller will leave the
         wrapped stream alone, as if <c>false</c> was returned.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StreamClosed">
      <MemberSignature Language="C#" Value="public bool StreamClosed (System.IO.Stream? wrapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StreamClosed(class System.IO.Stream wrapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Conn.IEofSensorWatcher.StreamClosed(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function StreamClosed (wrapped As Stream) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StreamClosed(System::IO::Stream ^ wrapped);" />
      <MemberSignature Language="F#" Value="abstract member StreamClosed : System.IO.Stream -&gt; bool" Usage="iEofSensorWatcher.StreamClosed wrapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("streamClosed", "(Ljava/io/InputStream;)Z", "GetStreamClosed_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("streamClosed", "(Ljava/io/InputStream;)Z", "GetStreamClosed_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrapped" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="wrapped">the underlying stream which has not reached EOF</param>
        <summary>Indicates that the <see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /> is closed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem, for example if the watcher itself
         closes the underlying stream. The caller will leave the
         wrapped stream alone, as if <c>false</c> was returned.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
