<Type Name="SelectorProvider" FullName="Java.Nio.Channels.Spi.SelectorProvider">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SelectorProvider&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class SelectorProvider abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class SelectorProvider : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SelectorProvider extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.Spi.SelectorProvider" />
  <TypeSignature Language="F#" Value="type SelectorProvider = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/spi/SelectorProvider", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/spi/SelectorProvider", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Service-provider class for selectors and selectable channels.</summary>
    <remarks>
      <para>Service-provider class for selectors and selectable channels.</para>
      <para>A selector provider is a concrete subclass of this class that has a
            zero-argument constructor and implements the abstract methods specified
            below.  A given invocation of the Java virtual machine maintains a single
            system-wide default provider instance, which is returned by the <c>#provider() provider</c> method.  The first invocation of that method will locate
            the default provider as specified below.</para>
      <para>The system-wide default provider is used by the static <c>open</c>
            methods of the <c>java.nio.channels.DatagramChannel#open
            DatagramChannel</c>, <c>java.nio.channels.Pipe#open Pipe</c>, <c>java.nio.channels.Selector#open Selector</c>, <c>java.nio.channels.ServerSocketChannel#open ServerSocketChannel</c>, and <c>java.nio.channels.SocketChannel#open SocketChannel</c> classes.  It is also
            used by the <c>java.lang.System#inheritedChannel System.inheritedChannel()</c>
            method. A program may make use of a provider other than the default provider
            by instantiating that provider and then directly invoking the <c>open</c>
            methods defined in this class.</para>
      <para>All of the methods in this class are safe for use by multiple concurrent
            threads.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SelectorProvider();" />
      <MemberSignature Language="C#" Value="protected SelectorProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of this class.</summary>
        <remarks>
          <para>Initializes a new instance of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#SelectorProvider()" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.SelectorProvider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SelectorProvider(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected SelectorProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.Spi.SelectorProvider : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Channels.Spi.SelectorProvider" Usage="new Java.Nio.Channels.Spi.SelectorProvider (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritedChannel">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InheritedChannel () As IChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Channels::IChannel ^ InheritedChannel();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.IChannel? InheritedChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.IChannel InheritedChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.InheritedChannel" />
      <MemberSignature Language="F#" Value="abstract member InheritedChannel : unit -&gt; Java.Nio.Channels.IChannel&#xA;override this.InheritedChannel : unit -&gt; Java.Nio.Channels.IChannel" Usage="selectorProvider.InheritedChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inheritedChannel", "()Ljava/nio/channels/Channel;", "GetInheritedChannelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inheritedChannel", "()Ljava/nio/channels/Channel;", "GetInheritedChannelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.IChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the channel inherited from the entity that created this
            Java virtual machine.</summary>
        <returns>The inherited channel, if any, otherwise <c>null</c>.</returns>
        <remarks>
          <para>Returns the channel inherited from the entity that created this
            Java virtual machine.</para>
          <para>On many operating systems a process, such as a Java virtual
            machine, can be started in a manner that allows the process to
            inherit a channel from the entity that created the process. The
            manner in which this is done is system dependent, as are the
            possible entities to which the channel may be connected. For example,
            on UNIX systems, the Internet services daemon (<i>inetd</i>) is used to
            start programs to service requests when a request arrives on an
            associated network port. In this example, the process that is started,
            inherits a channel representing a network socket.</para>
          <para>In cases where the inherited channel represents a network socket
            then the <c>java.nio.channels.Channel Channel</c> type returned
            by this method is determined as follows:
            
            &lt;ul&gt;
            
             &lt;li&gt;</para>
          <para>If the inherited channel represents a stream-oriented connected
             socket then a <c>java.nio.channels.SocketChannel SocketChannel</c> is
             returned. The socket channel is, at least initially, in blocking
             mode, bound to a socket address, and connected to a peer.</para>
          <para>&lt;/li&gt;
            
             &lt;li&gt;</para>
          <para>If the inherited channel represents a stream-oriented listening
             socket then a <c>java.nio.channels.ServerSocketChannel
             ServerSocketChannel</c> is returned. The server-socket channel is, at
             least initially, in blocking mode, and bound to a socket address.</para>
          <para>&lt;/li&gt;
            
             &lt;li&gt;</para>
          <para>If the inherited channel is a datagram-oriented socket
             then a <c>java.nio.channels.DatagramChannel DatagramChannel</c> is
             returned. The datagram channel is, at least initially, in blocking
             mode, and bound to a socket address.</para>
          <para>&lt;/li&gt;
            
            &lt;/ul&gt;</para>
          <para>In addition to the network-oriented channels described, this method
            may return other kinds of channels in the future.</para>
          <para>The first invocation of this method creates the channel that is
            returned. Subsequent invocations of this method return the same
            channel.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#inheritedChannel()" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.inheritedChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Spi.SelectorProvider.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Channels.Spi.SelectorProvider.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatagramChannel">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OpenDatagramChannel () As DatagramChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::DatagramChannel ^ OpenDatagramChannel();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.DatagramChannel? OpenDatagramChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.DatagramChannel OpenDatagramChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.OpenDatagramChannel" />
      <MemberSignature Language="F#" Value="abstract member OpenDatagramChannel : unit -&gt; Java.Nio.Channels.DatagramChannel" Usage="selectorProvider.OpenDatagramChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openDatagramChannel", "()Ljava/nio/channels/DatagramChannel;", "GetOpenDatagramChannelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openDatagramChannel", "()Ljava/nio/channels/DatagramChannel;", "GetOpenDatagramChannelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.DatagramChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opens a datagram channel.</summary>
        <returns>The new channel</returns>
        <remarks>
          <para>Opens a datagram channel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#openDatagramChannel()" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.openDatagramChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenDatagramChannel">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OpenDatagramChannel (family As IProtocolFamily) As DatagramChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::DatagramChannel ^ OpenDatagramChannel(Java::Net::IProtocolFamily ^ family);" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.DatagramChannel? OpenDatagramChannel (Java.Net.IProtocolFamily? family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.DatagramChannel OpenDatagramChannel(class Java.Net.IProtocolFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.OpenDatagramChannel(Java.Net.IProtocolFamily)" />
      <MemberSignature Language="F#" Value="abstract member OpenDatagramChannel : Java.Net.IProtocolFamily -&gt; Java.Nio.Channels.DatagramChannel" Usage="selectorProvider.OpenDatagramChannel family" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openDatagramChannel", "(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;", "GetOpenDatagramChannel_Ljava_net_ProtocolFamily_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openDatagramChannel", "(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;", "GetOpenDatagramChannel_Ljava_net_ProtocolFamily_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.DatagramChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="family" Type="Java.Net.IProtocolFamily" />
      </Parameters>
      <Docs>
        <param name="family">The protocol family</param>
        <summary>Opens a datagram channel.</summary>
        <returns>A new datagram channel</returns>
        <remarks>
          <para>Opens a datagram channel.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#openDatagramChannel(java.net.ProtocolFamily)" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.openDatagramChannel(java.net.ProtocolFamily)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenPipe">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OpenPipe () As Pipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::Pipe ^ OpenPipe();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.Pipe? OpenPipe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.Pipe OpenPipe() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.OpenPipe" />
      <MemberSignature Language="F#" Value="abstract member OpenPipe : unit -&gt; Java.Nio.Channels.Pipe" Usage="selectorProvider.OpenPipe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openPipe", "()Ljava/nio/channels/Pipe;", "GetOpenPipeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openPipe", "()Ljava/nio/channels/Pipe;", "GetOpenPipeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Pipe</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opens a pipe.</summary>
        <returns>The new pipe</returns>
        <remarks>
          <para>Opens a pipe.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#openPipe()" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.openPipe()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenSelector">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OpenSelector () As AbstractSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::Spi::AbstractSelector ^ OpenSelector();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.Spi.AbstractSelector? OpenSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.Spi.AbstractSelector OpenSelector() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.OpenSelector" />
      <MemberSignature Language="F#" Value="abstract member OpenSelector : unit -&gt; Java.Nio.Channels.Spi.AbstractSelector" Usage="selectorProvider.OpenSelector " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openSelector", "()Ljava/nio/channels/spi/AbstractSelector;", "GetOpenSelectorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openSelector", "()Ljava/nio/channels/spi/AbstractSelector;", "GetOpenSelectorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Spi.AbstractSelector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opens a selector.</summary>
        <returns>The new selector</returns>
        <remarks>
          <para>Opens a selector.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#openSelector()" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.openSelector()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenServerSocketChannel">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OpenServerSocketChannel () As ServerSocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::ServerSocketChannel ^ OpenServerSocketChannel();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.ServerSocketChannel? OpenServerSocketChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.ServerSocketChannel OpenServerSocketChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.OpenServerSocketChannel" />
      <MemberSignature Language="F#" Value="abstract member OpenServerSocketChannel : unit -&gt; Java.Nio.Channels.ServerSocketChannel" Usage="selectorProvider.OpenServerSocketChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openServerSocketChannel", "()Ljava/nio/channels/ServerSocketChannel;", "GetOpenServerSocketChannelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openServerSocketChannel", "()Ljava/nio/channels/ServerSocketChannel;", "GetOpenServerSocketChannelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.ServerSocketChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opens a server-socket channel.</summary>
        <returns>The new channel</returns>
        <remarks>
          <para>Opens a server-socket channel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#openServerSocketChannel()" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.openServerSocketChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenSocketChannel">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OpenSocketChannel () As SocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::SocketChannel ^ OpenSocketChannel();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.SocketChannel? OpenSocketChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.SocketChannel OpenSocketChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.OpenSocketChannel" />
      <MemberSignature Language="F#" Value="abstract member OpenSocketChannel : unit -&gt; Java.Nio.Channels.SocketChannel" Usage="selectorProvider.OpenSocketChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openSocketChannel", "()Ljava/nio/channels/SocketChannel;", "GetOpenSocketChannelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openSocketChannel", "()Ljava/nio/channels/SocketChannel;", "GetOpenSocketChannelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SocketChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opens a socket channel.</summary>
        <returns>The new channel</returns>
        <remarks>
          <para>Opens a socket channel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#openSocketChannel()" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.openSocketChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Provider () As SelectorProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::Channels::Spi::SelectorProvider ^ Provider();" />
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.Spi.SelectorProvider? Provider ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.Spi.SelectorProvider Provider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.SelectorProvider.Provider" />
      <MemberSignature Language="F#" Value="static member Provider : unit -&gt; Java.Nio.Channels.Spi.SelectorProvider" Usage="Java.Nio.Channels.Spi.SelectorProvider.Provider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/SelectorProvider;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/SelectorProvider;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Spi.SelectorProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the system-wide default selector provider for this invocation of
            the Java virtual machine.</summary>
        <returns>The system-wide default selector provider</returns>
        <remarks>
          <para>Returns the system-wide default selector provider for this invocation of
            the Java virtual machine.</para>
          <para>The first invocation of this method locates the default provider
            object as follows:</para>
          <para>&lt;ol&gt;
            
              &lt;li&gt;</para>
          <para>If the system property
              <c>java.nio.channels.spi.SelectorProvider</c> is defined then it is
              taken to be the fully-qualified name of a concrete provider class.
              The class is loaded and instantiated; if this process fails then an
              unspecified error is thrown.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>If a provider class has been installed in a jar file that is
              visible to the system class loader, and that jar file contains a
              provider-configuration file named
              <c>java.nio.channels.spi.SelectorProvider</c> in the resource
              directory <c>META-INF/services</c>, then the first class name
              specified in that file is taken.  The class is loaded and
              instantiated; if this process fails then an unspecified error is
              thrown.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>Finally, if no provider has been specified by any of the above
              means then the system-default provider class is instantiated and the
              result is returned.</para>
          <para>&lt;/li&gt;
            
            &lt;/ol&gt;</para>
          <para>Subsequent invocations of this method return the provider that was
            returned by the first invocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider#provider()" title="Reference documentation">Java documentation for <code>java.nio.channels.spi.SelectorProvider.provider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Spi.SelectorProvider.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Channels.Spi.SelectorProvider.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Spi.SelectorProvider.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Channels.Spi.SelectorProvider.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
