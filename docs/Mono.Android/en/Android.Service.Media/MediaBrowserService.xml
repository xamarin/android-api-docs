<Type Name="MediaBrowserService" FullName="Android.Service.Media.MediaBrowserService">
  <TypeSignature Language="C#" Value="public abstract class MediaBrowserService : Android.App.Service" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MediaBrowserService extends Android.App.Service" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Service</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/service/media/MediaBrowserService", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Base class for media browse services.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Base class for media browse services.
 

 To extend this class, you must declare the service in your manifest file with
 an intent filter with the <c><see cref="F:Android.Service.Media.MediaBrowserService.ServiceInterface" /></c> action.

 For example:
 </para>
      <para tool="javadoc-to-mdoc">
 Media browse services enable applications to browse media content provided by an application
 and ask the application to start playing it.  They may also be used to control content that
 is already playing by way of a <c><see cref="T:Android.Media.Session.MediaSession" /></c>.
 </para>
      <sample external-id="E4A019E453326DB2A1F57AF7E6E24F5E" />
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaBrowserService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html#MediaBrowserService()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaBrowserService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public virtual void Dump (Java.IO.FileDescriptor fd, Java.IO.PrintWriter writer, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dump(class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter writer, string[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dump", "(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="writer" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="writer">The PrintWriter to which you should dump your state.  This will be
 closed for you after you return.</param>
        <param name="args">additional arguments to the dump request.
</param>
        <summary>Print the Service's state into the given stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Print the Service's state into the given stream.  This gets invoked if
 you run "adb shell dumpsys activity service &lt;yourservicename&gt;"
 (note that for this command to work, the service must be running, and
 you must specify a fully-qualified service name).
 This is distinct from "dumpsys &lt;servicename&gt;", which only works for
 named system services and which invokes the <c><see cref="!:Android.OS.BinderConsts.dump(java.io.FileDescriptor,java.lang.String[])" /></c> method
 on the <c><see cref="T:Android.OS.BinderConsts" /></c> interface registered with ServiceManager.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html#dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyChildrenChanged">
      <MemberSignature Language="C#" Value="public virtual void NotifyChildrenChanged (string parentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyChildrenChanged(string parentId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notifyChildrenChanged", "(Ljava/lang/String;)V", "GetNotifyChildrenChanged_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parentId">The id of the parent media item whose
 children changed.
</param>
        <summary>Notifies all connected media browsers that the children of
 the specified parent id have changed in some way.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies all connected media browsers that the children of
 the specified parent id have changed in some way.
 This will cause browsers to fetch subscribed content again.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html#notifyChildrenChanged(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public override Android.OS.IBinder OnBind (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>Return the communication channel to the service.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the communication channel to the service.  May return null if 
 clients can not bind to the service.  The returned
 <c><see cref="T:Android.OS.BinderConsts" /></c> is usually for a complex interface
 that has been <format type="text/html"><a href="http://developer.android.com/reference/../guide/components/aidl.html">described using
 aidl</a></format>.
 
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note that unlike other application components, calls on to the
 IBinder interface returned here may not happen on the main thread
 of the process</i>.  More information about the main thread can be found in
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/fundamentals/processes-and-threads.html">Processes and
 Threads</a></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html#onBind(android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetRoot">
      <MemberSignature Language="C#" Value="public abstract Android.Service.Media.MediaBrowserService.BrowserRoot OnGetRoot (string clientPackageName, int clientUid, Android.OS.Bundle rootHints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Service.Media.MediaBrowserService/BrowserRoot OnGetRoot(string clientPackageName, int32 clientUid, class Android.OS.Bundle rootHints) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onGetRoot", "(Ljava/lang/String;ILandroid/os/Bundle;)Landroid/service/media/MediaBrowserService$BrowserRoot;", "GetOnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Media.MediaBrowserService+BrowserRoot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientPackageName" Type="System.String" />
        <Parameter Name="clientUid" Type="System.Int32" />
        <Parameter Name="rootHints" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="clientPackageName">The package name of the application which is
            requesting access to browse media.</param>
        <param name="clientUid">The uid of the application which is requesting access to
            browse media.</param>
        <param name="rootHints">An optional bundle of service-specific arguments to send
            to the media browse service when connecting and retrieving the
            root id for browsing, or null if none. The contents of this
            bundle may affect the information returned when browsing.</param>
        <summary>Called to get the root information for browsing by a particular client.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to get the root information for browsing by a particular client.
 </para>
          <para tool="javadoc-to-mdoc">
 The implementation should verify that the client package has permission
 to access browse media information before returning the root id; it
 should return null if the client is not allowed to access this
 information.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html#onGetRoot(java.lang.String, int, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadChildren">
      <MemberSignature Language="C#" Value="public abstract void OnLoadChildren (string parentId, Android.Service.Media.MediaBrowserService.Result result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLoadChildren(string parentId, class Android.Service.Media.MediaBrowserService/Result result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLoadChildren", "(Ljava/lang/String;Landroid/service/media/MediaBrowserService$Result;)V", "GetOnLoadChildren_Ljava_lang_String_Landroid_service_media_MediaBrowserService_Result_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentId" Type="System.String" />
        <Parameter Name="result" Type="Android.Service.Media.MediaBrowserService+Result" />
      </Parameters>
      <Docs>
        <param name="parentId">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInterface">
      <MemberSignature Language="C#" Value="public const string ServiceInterface;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceInterface" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SERVICE_INTERFACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c><see cref="T:Android.Content.Intent" /></c> that must be declared as handled by the service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The <c><see cref="T:Android.Content.Intent" /></c> that must be declared as handled by the service.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html#SERVICE_INTERFACE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionToken">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Session.MediaSession.Token SessionToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.MediaSession/Token SessionToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSessionToken", "()Landroid/media/session/MediaSession$Token;", "GetGetSessionTokenHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSessionToken", "(Landroid/media/session/MediaSession$Token;)V", "GetSetSessionToken_Landroid_media_session_MediaSession_Token_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaSession+Token</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the session token, or null if it has not yet been created
 or if it has been destroyed.</summary>
        <value>To be added.<list type="bullet"><item><term>The media session token, must not be null.
</term></item></list></value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html#getSessionToken()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the session token, or null if it has not yet been created
 or if it has been destroyed.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/service/media/MediaBrowserService.html#setSessionToken(android.media.session.MediaSession.Token)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Call to set the media session.
 
 This should be called as soon as possible during the service's startup.
 It may only be called once.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 21" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
