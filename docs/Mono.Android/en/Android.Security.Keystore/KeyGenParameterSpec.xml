<Type Name="KeyGenParameterSpec" FullName="Android.Security.Keystore.KeyGenParameterSpec">
  <TypeSignature Language="C#" Value="public sealed class KeyGenParameterSpec : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Security.Spec.IAlgorithmParameterSpec" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KeyGenParameterSpec extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Security.Spec.IAlgorithmParameterSpec, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Security.Keystore.KeyGenParameterSpec" />
  <TypeSignature Language="F#" Value="type KeyGenParameterSpec = class&#xA;    inherit Object&#xA;    interface IAlgorithmParameterSpec&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Security.Spec.IAlgorithmParameterSpec</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/security/keystore/KeyGenParameterSpec", ApiSince=23, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/security/keystore/KeyGenParameterSpec", ApiSince=23, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <c>AlgorithmParameterSpec</c> for initializing a <c>KeyPairGenerator</c> or a
            <c>KeyGenerator</c> of the <see href="https://developer.android.com/training/articles/keystore.html">Android Keystore
            system</see>.</summary>
    <remarks>
      <para>
        <c>AlgorithmParameterSpec</c> for initializing a <c>KeyPairGenerator</c> or a
            <c>KeyGenerator</c> of the <see href="https://developer.android.com/training/articles/keystore.html">Android Keystore
            system</see>. The spec determines authorized uses of the key, such as whether user authentication
            is required for using the key, what operations are authorized (e.g., signing, but not
            decryption), with what parameters (e.g., only with a particular padding scheme or digest), and
            the key's validity start and end dates. Key use authorizations expressed in the spec apply
            only to secret keys and private keys -- public keys can be used for any supported operations.</para>
      <para>To generate an asymmetric key pair or a symmetric key, create an instance of this class using
            the <c>Builder</c>, initialize a <c>KeyPairGenerator</c> or a <c>KeyGenerator</c> of the
            desired key type (e.g., <c>EC</c> or <c>AES</c> -- see
            <c>KeyProperties</c>.<c>KEY_ALGORITHM</c> constants) from the <c>AndroidKeyStore</c> provider
            with the <c>KeyGenParameterSpec</c> instance, and then generate a key or key pair using
            <c>KeyGenerator#generateKey()</c> or <c>KeyPairGenerator#generateKeyPair()</c>.</para>
      <para>The generated key pair or key will be returned by the generator and also stored in the Android
            Keystore under the alias specified in this spec. To obtain the secret or private key from the
            Android Keystore use <c>java.security.KeyStore#getKey(String, char[]) KeyStore.getKey(String, null)</c>
            or <c>java.security.KeyStore#getEntry(String, java.security.KeyStore.ProtectionParameter) KeyStore.getEntry(String, null)</c>.
            To obtain the public key from the Android Keystore use
            <c>java.security.KeyStore#getCertificate(String)</c> and then
            <c>Certificate#getPublicKey()</c>.</para>
      <para>To help obtain algorithm-specific public parameters of key pairs stored in the Android
            Keystore, generated private keys implement <c>java.security.interfaces.ECKey</c> or
            <c>java.security.interfaces.RSAKey</c> interfaces whereas public keys implement
            <c>java.security.interfaces.ECPublicKey</c> or <c>java.security.interfaces.RSAPublicKey</c>
            interfaces.</para>
      <para>For asymmetric key pairs, a self-signed X.509 certificate will be also generated and stored in
            the Android Keystore. This is because the <c>java.security.KeyStore</c> abstraction does not
            support storing key pairs without a certificate. The subject, serial number, and validity dates
            of the certificate can be customized in this spec. The self-signed certificate may be replaced at
            a later time by a certificate signed by a Certificate Authority (CA).</para>
      <para>NOTE: If a private key is not authorized to sign the self-signed certificate, then the
            certificate will be created with an invalid signature which will not verify. Such a certificate
            is still useful because it provides access to the public key. To generate a valid signature for
            the certificate the key needs to be authorized for all of the following:
            &lt;ul&gt;
            &lt;li&gt;<c>KeyProperties#PURPOSE_SIGN</c>,&lt;/li&gt;
            &lt;li&gt;operation without requiring the user to be authenticated (see
            <c>Builder#setUserAuthenticationRequired(boolean)</c>),&lt;/li&gt;
            &lt;li&gt;signing/origination at this moment in time (see <c>Builder#setKeyValidityStart(Date)</c>
            and <c>Builder#setKeyValidityForOriginationEnd(Date)</c>),&lt;/li&gt;
            &lt;li&gt;suitable digest,&lt;/li&gt;
            &lt;li&gt;(RSA keys only) padding scheme <c>KeyProperties#SIGNATURE_PADDING_RSA_PKCS1</c>.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>NOTE: The key material of the generated symmetric and private keys is not accessible. The key
            material of the public keys is accessible.</para>
      <para>Instances of this class are immutable.</para>
      <para>&lt;h3&gt;Known issues&lt;/h3&gt;
            A known bug in Android 6.0 (API Level 23) causes user authentication-related authorizations to be
            enforced even for public keys. To work around this issue extract the public key material to use
            outside of Android Keystore. For example:</para>
      <code lang="text/java">{@code
            PublicKey unrestrictedPublicKey =
                    KeyFactory.getInstance(publicKey.getAlgorithm()).generatePublic(
                            new X509EncodedKeySpec(publicKey.getEncoded()));
            }</code>
      <para>&lt;h3&gt;Example: NIST P-256 EC key pair for signing/verification using ECDSA&lt;/h3&gt;
            This example illustrates how to generate a NIST P-256 (aka secp256r1 aka prime256v1) EC key pair
            in the Android KeyStore system under alias <c>key1</c> where the private key is authorized to be
            used only for signing using SHA-256, SHA-384, or SHA-512 digest and only if the user has been
            authenticated within the last five minutes. The use of the public key is unrestricted (See Known
            Issues).</para>
      <code lang="text/java">{@code
            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(
                    KeyProperties.KEY_ALGORITHM_EC, "AndroidKeyStore");
            keyPairGenerator.initialize(
                    new KeyGenParameterSpec.Builder(
                            "key1",
                            KeyProperties.PURPOSE_SIGN)
                            .setAlgorithmParameterSpec(new ECGenParameterSpec("secp256r1"))
                            .setDigests(KeyProperties.DIGEST_SHA256,
                                    KeyProperties.DIGEST_SHA384,
                                    KeyProperties.DIGEST_SHA512)
                            // Only permit the private key to be used if the user authenticated
                            // within the last five minutes.
                            .setUserAuthenticationRequired(true)
                            .setUserAuthenticationValidityDurationSeconds(5 * 60)
                            .build());
            KeyPair keyPair = keyPairGenerator.generateKeyPair();
            Signature signature = Signature.getInstance("SHA256withECDSA");
            signature.initSign(keyPair.getPrivate());
            ...
            
            // The key pair can also be obtained from the Android Keystore any time as follows:
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            PrivateKey privateKey = (PrivateKey) keyStore.getKey("key1", null);
            PublicKey publicKey = keyStore.getCertificate("key1").getPublicKey();
            }</code>
      <para>&lt;h3&gt;Example: RSA key pair for signing/verification using RSA-PSS&lt;/h3&gt;
            This example illustrates how to generate an RSA key pair in the Android KeyStore system under
            alias <c>key1</c> authorized to be used only for signing using the RSA-PSS signature padding
            scheme with SHA-256 or SHA-512 digests. The use of the public key is unrestricted.</para>
      <code lang="text/java">{@code
            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(
                    KeyProperties.KEY_ALGORITHM_RSA, "AndroidKeyStore");
            keyPairGenerator.initialize(
                    new KeyGenParameterSpec.Builder(
                            "key1",
                            KeyProperties.PURPOSE_SIGN)
                            .setDigests(KeyProperties.DIGEST_SHA256, KeyProperties.DIGEST_SHA512)
                            .setSignaturePaddings(KeyProperties.SIGNATURE_PADDING_RSA_PSS)
                            .build());
            KeyPair keyPair = keyPairGenerator.generateKeyPair();
            Signature signature = Signature.getInstance("SHA256withRSA/PSS");
            signature.initSign(keyPair.getPrivate());
            ...
            
            // The key pair can also be obtained from the Android Keystore any time as follows:
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            PrivateKey privateKey = (PrivateKey) keyStore.getKey("key1", null);
            PublicKey publicKey = keyStore.getCertificate("key1").getPublicKey();
            }</code>
      <para>&lt;h3&gt;Example: RSA key pair for encryption/decryption using RSA OAEP&lt;/h3&gt;
            This example illustrates how to generate an RSA key pair in the Android KeyStore system under
            alias <c>key1</c> where the private key is authorized to be used only for decryption using RSA
            OAEP encryption padding scheme with SHA-256 or SHA-512 digests. The use of the public key is
            unrestricted.</para>
      <code lang="text/java">{@code
            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(
                    KeyProperties.KEY_ALGORITHM_RSA, "AndroidKeyStore");
            keyPairGenerator.initialize(
                    new KeyGenParameterSpec.Builder(
                            "key1",
                            KeyProperties.PURPOSE_DECRYPT)
                            .setDigests(KeyProperties.DIGEST_SHA256, KeyProperties.DIGEST_SHA512)
                            .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_OAEP)
                            .build());
            KeyPair keyPair = keyPairGenerator.generateKeyPair();
            Cipher cipher = Cipher.getInstance("RSA/ECB/OAEPWithSHA-256AndMGF1Padding");
            cipher.init(Cipher.DECRYPT_MODE, keyPair.getPrivate());
            ...
            
            // The key pair can also be obtained from the Android Keystore any time as follows:
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            PrivateKey privateKey = (PrivateKey) keyStore.getKey("key1", null);
            PublicKey publicKey = keyStore.getCertificate("key1").getPublicKey();
            }</code>
      <para>&lt;h3&gt;Example: AES key for encryption/decryption in GCM mode&lt;/h3&gt;
            The following example illustrates how to generate an AES key in the Android KeyStore system under
            alias <c>key2</c> authorized to be used only for encryption/decryption in GCM mode with no
            padding.</para>
      <code lang="text/java">{@code
            KeyGenerator keyGenerator = KeyGenerator.getInstance(
                    KeyProperties.KEY_ALGORITHM_AES, "AndroidKeyStore");
            keyGenerator.init(
                    new KeyGenParameterSpec.Builder("key2",
                            KeyProperties.PURPOSE_ENCRYPT | KeyProperties.PURPOSE_DECRYPT)
                            .setBlockModes(KeyProperties.BLOCK_MODE_GCM)
                            .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE)
                            .build());
            SecretKey key = keyGenerator.generateKey();
            
            Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding");
            cipher.init(Cipher.ENCRYPT_MODE, key);
            ...
            
            // The key can also be obtained from the Android Keystore any time as follows:
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            key = (SecretKey) keyStore.getKey("key2", null);
            }</code>
      <para>&lt;h3&gt;Example: HMAC key for generating a MAC using SHA-256&lt;/h3&gt;
            This example illustrates how to generate an HMAC key in the Android KeyStore system under alias
            <c>key2</c> authorized to be used only for generating an HMAC using SHA-256.</para>
      <code lang="text/java">{@code
            KeyGenerator keyGenerator = KeyGenerator.getInstance(
                    KeyProperties.KEY_ALGORITHM_HMAC_SHA256, "AndroidKeyStore");
            keyGenerator.init(
                    new KeyGenParameterSpec.Builder("key2", KeyProperties.PURPOSE_SIGN).build());
            SecretKey key = keyGenerator.generateKey();
            Mac mac = Mac.getInstance("HmacSHA256");
            mac.init(key);
            ...
            
            // The key can also be obtained from the Android Keystore any time as follows:
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            key = (SecretKey) keyStore.getKey("key2", null);
            }</code>
      <para>&lt;h3 id="example:ecdh"&gt;Example: EC key for ECDH key agreement&lt;/h3&gt;
            This example illustrates how to generate an elliptic curve key pair, used to establish a shared
            secret with another party using ECDH key agreement.</para>
      <code lang="text/java">{@code
            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(
                    KeyProperties.KEY_ALGORITHM_EC, "AndroidKeyStore");
            keyPairGenerator.initialize(
                    new KeyGenParameterSpec.Builder(
                        "eckeypair",
                        KeyProperties.PURPOSE_AGREE_KEY)
                        .setAlgorithmParameterSpec(new ECGenParameterSpec("secp256r1"))
                        .build());
            KeyPair myKeyPair = keyPairGenerator.generateKeyPair();
            
            // Exchange public keys with server. A new ephemeral key MUST be used for every message.
            PublicKey serverEphemeralPublicKey; // Ephemeral key received from server.
            
            // Create a shared secret based on our private key and the other party's public key.
            KeyAgreement keyAgreement = KeyAgreement.getInstance("ECDH", "AndroidKeyStore");
            keyAgreement.init(myKeyPair.getPrivate());
            keyAgreement.doPhase(serverEphemeralPublicKey, true);
            byte[] sharedSecret = keyAgreement.generateSecret();
            
            // sharedSecret cannot safely be used as a key yet. We must run it through a key derivation
            // function with some other data: "salt" and "info". Salt is an optional random value,
            // omitted in this example. It's good practice to include both public keys and any other
            // key negotiation data in info. Here we use the public keys and a label that indicates
            // messages encrypted with this key are coming from the server.
            byte[] salt = {};
            ByteArrayOutputStream info = new ByteArrayOutputStream();
            info.write("ECDH secp256r1 AES-256-GCM-SIV\0".getBytes(StandardCharsets.UTF_8));
            info.write(myKeyPair.getPublic().getEncoded());
            info.write(serverEphemeralPublicKey.getEncoded());
            
            // This example uses the Tink library and the HKDF key derivation function.
            AesGcmSiv key = new AesGcmSiv(Hkdf.computeHkdf(
                    "HMACSHA256", sharedSecret, salt, info.toByteArray(), 32));
            byte[] associatedData = {};
            return key.decrypt(ciphertext, associatedData);
            }</code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AlgorithmParameterSpec">
      <MemberSignature Language="C#" Value="public Java.Security.Spec.IAlgorithmParameterSpec? AlgorithmParameterSpec { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Spec.IAlgorithmParameterSpec AlgorithmParameterSpec" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.AlgorithmParameterSpec" />
      <MemberSignature Language="F#" Value="member this.AlgorithmParameterSpec : Java.Security.Spec.IAlgorithmParameterSpec" Usage="Android.Security.Keystore.KeyGenParameterSpec.AlgorithmParameterSpec" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAlgorithmParameterSpec", "()Ljava/security/spec/AlgorithmParameterSpec;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAlgorithmParameterSpec", "()Ljava/security/spec/AlgorithmParameterSpec;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Spec.IAlgorithmParameterSpec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the key algorithm-specific <c>AlgorithmParameterSpec</c> that will be used for
            creation of the key or <c>null</c> if algorithm-specific defaults should be used.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the key algorithm-specific <c>AlgorithmParameterSpec</c> that will be used for
            creation of the key or <c>null</c> if algorithm-specific defaults should be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getAlgorithmParameterSpec()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getAlgorithmParameterSpec()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestKeyAlias">
      <MemberSignature Language="C#" Value="public string? AttestKeyAlias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttestKeyAlias" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.AttestKeyAlias" />
      <MemberSignature Language="F#" Value="member this.AttestKeyAlias : string" Usage="Android.Security.Keystore.KeyGenParameterSpec.AttestKeyAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAttestKeyAlias", "()Ljava/lang/String;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAttestKeyAlias", "()Ljava/lang/String;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the alias of the attestation key that will be used to sign the attestation
            certificate of the generated key.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the alias of the attestation key that will be used to sign the attestation
            certificate of the generated key.  Note that an attestation certificate will only be
            generated if an attestation challenge is set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getAttestKeyAlias()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getAttestKeyAlias()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateNotAfter">
      <MemberSignature Language="C#" Value="public Java.Util.Date CertificateNotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date CertificateNotAfter" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.CertificateNotAfter" />
      <MemberSignature Language="F#" Value="member this.CertificateNotAfter : Java.Util.Date" Usage="Android.Security.Keystore.KeyGenParameterSpec.CertificateNotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCertificateNotAfter", "()Ljava/util/Date;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCertificateNotAfter", "()Ljava/util/Date;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the end date to be used on the X.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the end date to be used on the X.509 certificate that will be put in the
            <c>java.security.KeyStore</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getCertificateNotAfter()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getCertificateNotAfter()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateNotBefore">
      <MemberSignature Language="C#" Value="public Java.Util.Date CertificateNotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date CertificateNotBefore" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.CertificateNotBefore" />
      <MemberSignature Language="F#" Value="member this.CertificateNotBefore : Java.Util.Date" Usage="Android.Security.Keystore.KeyGenParameterSpec.CertificateNotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCertificateNotBefore", "()Ljava/util/Date;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCertificateNotBefore", "()Ljava/util/Date;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the start date to be used on the X.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the start date to be used on the X.509 certificate that will be put in the
            <c>java.security.KeyStore</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getCertificateNotBefore()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getCertificateNotBefore()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateSerialNumber">
      <MemberSignature Language="C#" Value="public Java.Math.BigInteger CertificateSerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Math.BigInteger CertificateSerialNumber" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.CertificateSerialNumber" />
      <MemberSignature Language="F#" Value="member this.CertificateSerialNumber : Java.Math.BigInteger" Usage="Android.Security.Keystore.KeyGenParameterSpec.CertificateSerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCertificateSerialNumber", "()Ljava/math/BigInteger;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCertificateSerialNumber", "()Ljava/math/BigInteger;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the serial number to be used on the X.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the serial number to be used on the X.509 certificate that will be put in the
            <c>java.security.KeyStore</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getCertificateSerialNumber()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getCertificateSerialNumber()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateSubject">
      <MemberSignature Language="C#" Value="public Javax.Security.Auth.X500.X500Principal CertificateSubject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Security.Auth.X500.X500Principal CertificateSubject" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.CertificateSubject" />
      <MemberSignature Language="F#" Value="member this.CertificateSubject : Javax.Security.Auth.X500.X500Principal" Usage="Android.Security.Keystore.KeyGenParameterSpec.CertificateSubject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCertificateSubject", "()Ljavax/security/auth/x500/X500Principal;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCertificateSubject", "()Ljavax/security/auth/x500/X500Principal;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Security.Auth.X500.X500Principal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the subject distinguished name to be used on the X.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the subject distinguished name to be used on the X.509 certificate that will be put
            in the <c>java.security.KeyStore</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getCertificateSubject()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getCertificateSubject()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttestationChallenge">
      <MemberSignature Language="C#" Value="public byte[]? GetAttestationChallenge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetAttestationChallenge() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyGenParameterSpec.GetAttestationChallenge" />
      <MemberSignature Language="F#" Value="member this.GetAttestationChallenge : unit -&gt; byte[]" Usage="keyGenParameterSpec.GetAttestationChallenge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttestationChallenge", "()[B", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttestationChallenge", "()[B", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the attestation challenge value that will be placed in attestation certificate for
            this key pair.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the attestation challenge value that will be placed in attestation certificate for
            this key pair.</para>
          <para>If this method returns non-<c>null</c>, the public key certificate for this key pair will
            contain an extension that describes the details of the key's configuration and
            authorizations, including the content of the attestation challenge value. If the key is in
            secure hardware, and if the secure hardware supports attestation, the certificate will be
            signed by a chain of certificates rooted at a trustworthy CA key. Otherwise the chain will
            be rooted at an untrusted certificate.</para>
          <para>If this method returns <c>null</c>, and the spec is used to generate an asymmetric (RSA
            or EC) key pair, the public key will have a self-signed certificate if it has purpose <c>KeyProperties#PURPOSE_SIGN</c>. If does not have purpose <c>KeyProperties#PURPOSE_SIGN</c>, it
            will have a fake certificate.</para>
          <para>Symmetric keys, such as AES and HMAC keys, do not have public key certificates. If a
            KeyGenParameterSpec with getAttestationChallenge returning non-null is used to generate a
            symmetric (AES or HMAC) key, <c>javax.crypto.KeyGenerator#generateKey()</c> will throw
            <c>java.security.InvalidAlgorithmParameterException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getAttestationChallenge()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getAttestationChallenge()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlockModes">
      <MemberSignature Language="C#" Value="public string[] GetBlockModes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetBlockModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyGenParameterSpec.GetBlockModes" />
      <MemberSignature Language="F#" Value="member this.GetBlockModes : unit -&gt; string[]" Usage="keyGenParameterSpec.GetBlockModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBlockModes", "()[Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBlockModes", "()[Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "BlockModeEcb", "BlockModeCbc", "BlockModeCtr", "BlockModeGcm" }, Type="Android.Security.Keystore.KeyProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "BlockModeEcb", "BlockModeCbc", "BlockModeCtr", "BlockModeGcm" }, Type="Android.Security.Keystore.KeyProperties")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the set of block modes (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets the set of block modes (e.g., <c>GCM</c>, <c>CBC</c>) with which the key can be used
            when encrypting/decrypting. Attempts to use the key with any other block modes will be
            rejected.</para>
          <para>See <c>KeyProperties</c>.<c>BLOCK_MODE</c> constants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getBlockModes()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getBlockModes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigests">
      <MemberSignature Language="C#" Value="public string[] GetDigests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDigests() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyGenParameterSpec.GetDigests" />
      <MemberSignature Language="F#" Value="member this.GetDigests : unit -&gt; string[]" Usage="keyGenParameterSpec.GetDigests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDigests", "()[Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDigests", "()[Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "DigestNone", "DigestMd5", "DigestSha1", "DigestSha224", "DigestSha256", "DigestSha384", "DigestSha512" }, Type="Android.Security.Keystore.KeyProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "DigestNone", "DigestMd5", "DigestSha1", "DigestSha224", "DigestSha256", "DigestSha384", "DigestSha512" }, Type="Android.Security.Keystore.KeyProperties")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the set of digest algorithms (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the set of digest algorithms (e.g., <c>SHA-256</c>, <c>SHA-384</c> with which the
            key can be used or <c>null</c> if not specified.</para>
          <para>See <c>KeyProperties</c>.<c>DIGEST</c> constants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getDigests()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getDigests()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionPaddings">
      <MemberSignature Language="C#" Value="public string[] GetEncryptionPaddings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetEncryptionPaddings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyGenParameterSpec.GetEncryptionPaddings" />
      <MemberSignature Language="F#" Value="member this.GetEncryptionPaddings : unit -&gt; string[]" Usage="keyGenParameterSpec.GetEncryptionPaddings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEncryptionPaddings", "()[Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEncryptionPaddings", "()[Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "EncryptionPaddingNone", "EncryptionPaddingPkcs7", "EncryptionPaddingRsaPkcs1", "EncryptionPaddingRsaOaep" }, Type="Android.Security.Keystore.KeyProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "EncryptionPaddingNone", "EncryptionPaddingPkcs7", "EncryptionPaddingRsaPkcs1", "EncryptionPaddingRsaOaep" }, Type="Android.Security.Keystore.KeyProperties")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the set of padding schemes (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the set of padding schemes (e.g., <c>PKCS7Padding</c>, <c>OEAPPadding</c>,
            <c>PKCS1Padding</c>, <c>NoPadding</c>) with which the key can be used when
            encrypting/decrypting. Attempts to use the key with any other padding scheme will be
            rejected.</para>
          <para>See <c>KeyProperties</c>.<c>ENCRYPTION_PADDING</c> constants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getEncryptionPaddings()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getEncryptionPaddings()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignaturePaddings">
      <MemberSignature Language="C#" Value="public string[] GetSignaturePaddings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetSignaturePaddings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyGenParameterSpec.GetSignaturePaddings" />
      <MemberSignature Language="F#" Value="member this.GetSignaturePaddings : unit -&gt; string[]" Usage="keyGenParameterSpec.GetSignaturePaddings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSignaturePaddings", "()[Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSignaturePaddings", "()[Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "SignaturePaddingRsaPkcs1", "SignaturePaddingRsaPss" }, Type="Android.Security.Keystore.KeyProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "SignaturePaddingRsaPkcs1", "SignaturePaddingRsaPss" }, Type="Android.Security.Keystore.KeyProperties")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the set of padding schemes (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets the set of padding schemes (e.g., <c>PSS</c>, <c>PKCS#1</c>) with which the key
            can be used when signing/verifying. Attempts to use the key with any other padding scheme
            will be rejected.</para>
          <para>See <c>KeyProperties</c>.<c>SIGNATURE_PADDING</c> constants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getSignaturePaddings()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getSignaturePaddings()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevicePropertiesAttestationIncluded">
      <MemberSignature Language="C#" Value="public bool IsDevicePropertiesAttestationIncluded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDevicePropertiesAttestationIncluded" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsDevicePropertiesAttestationIncluded" />
      <MemberSignature Language="F#" Value="member this.IsDevicePropertiesAttestationIncluded : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsDevicePropertiesAttestationIncluded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDevicePropertiesAttestationIncluded", "()Z", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDevicePropertiesAttestationIncluded", "()Z", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if attestation for the base device properties (<c>Build#BRAND</c>,
            <c>Build#DEVICE</c>, <c>Build#MANUFACTURER</c>, <c>Build#MODEL</c>, <c>Build#PRODUCT</c>)
            was requested to be added in the attestation certificate for the generated key.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if attestation for the base device properties (<c>Build#BRAND</c>,
            <c>Build#DEVICE</c>, <c>Build#MANUFACTURER</c>, <c>Build#MODEL</c>, <c>Build#PRODUCT</c>)
            was requested to be added in the attestation certificate for the generated key.
            
            <c>javax.crypto.KeyGenerator#generateKey()</c> will throw
            <c>java.security.ProviderException</c> if device properties attestation fails or is not
            supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isDevicePropertiesAttestationIncluded()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isDevicePropertiesAttestationIncluded()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigestsSpecified">
      <MemberSignature Language="C#" Value="public bool IsDigestsSpecified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDigestsSpecified" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsDigestsSpecified" />
      <MemberSignature Language="F#" Value="member this.IsDigestsSpecified : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsDigestsSpecified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDigestsSpecified", "()Z", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDigestsSpecified", "()Z", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the set of digest algorithms with which the key can be used has been
            specified.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the set of digest algorithms with which the key can be used has been
            specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isDigestsSpecified()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isDigestsSpecified()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvalidatedByBiometricEnrollment">
      <MemberSignature Language="C#" Value="public bool IsInvalidatedByBiometricEnrollment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalidatedByBiometricEnrollment" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsInvalidatedByBiometricEnrollment" />
      <MemberSignature Language="F#" Value="member this.IsInvalidatedByBiometricEnrollment : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsInvalidatedByBiometricEnrollment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInvalidatedByBiometricEnrollment", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInvalidatedByBiometricEnrollment", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is irreversibly invalidated when a new biometric is
            enrolled or all enrolled biometrics are removed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is irreversibly invalidated when a new biometric is
            enrolled or all enrolled biometrics are removed. This has effect only for keys that
            require biometric user authentication for every use.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isInvalidatedByBiometricEnrollment()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isInvalidatedByBiometricEnrollment()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRandomizedEncryptionRequired">
      <MemberSignature Language="C#" Value="public bool IsRandomizedEncryptionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRandomizedEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsRandomizedEncryptionRequired" />
      <MemberSignature Language="F#" Value="member this.IsRandomizedEncryptionRequired : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsRandomizedEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRandomizedEncryptionRequired", "()Z", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRandomizedEncryptionRequired", "()Z", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if encryption using this key must be sufficiently randomized to produce
            different ciphertexts for the same plaintext every time.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if encryption using this key must be sufficiently randomized to produce
            different ciphertexts for the same plaintext every time. The formal cryptographic property
            being required is &lt;em&gt;indistinguishability under chosen-plaintext attack (<c>IND-CPA</c>)&lt;/em&gt;. This property is important because it mitigates several classes of
            weaknesses due to which ciphertext may leak information about plaintext.  For example, if a
            given plaintext always produces the same ciphertext, an attacker may see the repeated
            ciphertexts and be able to deduce something about the plaintext.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isRandomizedEncryptionRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isRandomizedEncryptionRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStrongBoxBacked">
      <MemberSignature Language="C#" Value="public bool IsStrongBoxBacked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStrongBoxBacked" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsStrongBoxBacked" />
      <MemberSignature Language="F#" Value="member this.IsStrongBoxBacked : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsStrongBoxBacked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isStrongBoxBacked", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isStrongBoxBacked", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is protected by a Strongbox security chip.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is protected by a Strongbox security chip.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isStrongBoxBacked()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isStrongBoxBacked()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnlockedDeviceRequired">
      <MemberSignature Language="C#" Value="public bool IsUnlockedDeviceRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnlockedDeviceRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsUnlockedDeviceRequired" />
      <MemberSignature Language="F#" Value="member this.IsUnlockedDeviceRequired : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsUnlockedDeviceRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUnlockedDeviceRequired", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUnlockedDeviceRequired", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the screen must be unlocked for this key to be used for decryption or
            signing.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the screen must be unlocked for this key to be used for decryption or
            signing. Encryption and signature verification will still be available when the screen is
            locked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isUnlockedDeviceRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isUnlockedDeviceRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserAuthenticationRequired">
      <MemberSignature Language="C#" Value="public bool IsUserAuthenticationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserAuthenticationRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsUserAuthenticationRequired" />
      <MemberSignature Language="F#" Value="member this.IsUserAuthenticationRequired : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsUserAuthenticationRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserAuthenticationRequired", "()Z", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserAuthenticationRequired", "()Z", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is authorized to be used only if the user has been
            authenticated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is authorized to be used only if the user has been
            authenticated.</para>
          <para>This authorization applies only to secret key and private key operations. Public key
            operations are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isUserAuthenticationRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isUserAuthenticationRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserAuthenticationValidWhileOnBody">
      <MemberSignature Language="C#" Value="public bool IsUserAuthenticationValidWhileOnBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserAuthenticationValidWhileOnBody" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsUserAuthenticationValidWhileOnBody" />
      <MemberSignature Language="F#" Value="member this.IsUserAuthenticationValidWhileOnBody : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsUserAuthenticationValidWhileOnBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserAuthenticationValidWhileOnBody", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserAuthenticationValidWhileOnBody", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key will remain authorized only until the device is removed from
            the user's body, up to the validity duration.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key will remain authorized only until the device is removed from
            the user's body, up to the validity duration.  This option has no effect on keys that don't
            have an authentication validity duration, and has no effect if the device lacks an on-body
            sensor.</para>
          <para>Authorization applies only to secret key and private key operations. Public key operations
            are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isUserAuthenticationValidWhileOnBody()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isUserAuthenticationValidWhileOnBody()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserConfirmationRequired">
      <MemberSignature Language="C#" Value="public bool IsUserConfirmationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserConfirmationRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsUserConfirmationRequired" />
      <MemberSignature Language="F#" Value="member this.IsUserConfirmationRequired : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsUserConfirmationRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserConfirmationRequired", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserConfirmationRequired", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is authorized to be used only for messages confirmed by the
            user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is authorized to be used only for messages confirmed by the
            user.
            
            Confirmation is separate from user authentication (see
            <c>Builder#setUserAuthenticationRequired(boolean)</c>). Keys can be created that require
            confirmation but not user authentication, or user authentication but not confirmation, or
            both. Confirmation verifies that some user with physical possession of the device has
            approved a displayed message. User authentication verifies that the correct user is present
            and has authenticated.</para>
          <para>This authorization applies only to secret key and private key operations. Public key
            operations are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isUserConfirmationRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isUserConfirmationRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserPresenceRequired">
      <MemberSignature Language="C#" Value="public bool IsUserPresenceRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserPresenceRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.IsUserPresenceRequired" />
      <MemberSignature Language="F#" Value="member this.IsUserPresenceRequired : bool" Usage="Android.Security.Keystore.KeyGenParameterSpec.IsUserPresenceRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserPresenceRequired", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserPresenceRequired", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is authorized to be used only if a test of user presence has
            been performed between the <c>Signature.initSign()</c> and <c>Signature.sign()</c> calls.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is authorized to be used only if a test of user presence has
            been performed between the <c>Signature.initSign()</c> and <c>Signature.sign()</c> calls.
            It requires that the KeyStore implementation have a direct way to validate the user presence
            for example a KeyStore hardware backed strongbox can use a button press that is observable
            in hardware. A test for user presence is tangential to authentication. The test can be part
            of an authentication step as long as this step can be validated by the hardware protecting
            the key and cannot be spoofed. For example, a physical button press can be used as a test of
            user presence if the other pins connected to the button are not able to simulate a button
            press. There must be no way for the primary processor to fake a button press, or that
            button must not be used as a test of user presence.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#isUserPresenceRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.isUserPresenceRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Security.Keystore.KeyGenParameterSpec.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.KeySize" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="Android.Security.Keystore.KeyGenParameterSpec.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeySize", "()I", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeySize", "()I", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the requested key size.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the requested key size. If <c>-1</c>, the size should be looked up from
            <c>#getAlgorithmParameterSpec()</c>, if provided, otherwise an algorithm-specific default
            size should be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getKeySize()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getKeySize()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeystoreAlias">
      <MemberSignature Language="C#" Value="public string KeystoreAlias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeystoreAlias" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.KeystoreAlias" />
      <MemberSignature Language="F#" Value="member this.KeystoreAlias : string" Usage="Android.Security.Keystore.KeyGenParameterSpec.KeystoreAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeystoreAlias", "()Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeystoreAlias", "()Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the alias that will be used in the <c>java.security.KeyStore</c>
            in conjunction with the <c>AndroidKeyStore</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the alias that will be used in the <c>java.security.KeyStore</c>
            in conjunction with the <c>AndroidKeyStore</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getKeystoreAlias()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getKeystoreAlias()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValidityForConsumptionEnd">
      <MemberSignature Language="C#" Value="public Java.Util.Date? KeyValidityForConsumptionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date KeyValidityForConsumptionEnd" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.KeyValidityForConsumptionEnd" />
      <MemberSignature Language="F#" Value="member this.KeyValidityForConsumptionEnd : Java.Util.Date" Usage="Android.Security.Keystore.KeyGenParameterSpec.KeyValidityForConsumptionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeyValidityForConsumptionEnd", "()Ljava/util/Date;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeyValidityForConsumptionEnd", "()Ljava/util/Date;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the time instant after which the key is no longer valid for decryption and
            verification or <c>null</c> if not restricted.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the time instant after which the key is no longer valid for decryption and
            verification or <c>null</c> if not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getKeyValidityForConsumptionEnd()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getKeyValidityForConsumptionEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValidityForOriginationEnd">
      <MemberSignature Language="C#" Value="public Java.Util.Date? KeyValidityForOriginationEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date KeyValidityForOriginationEnd" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.KeyValidityForOriginationEnd" />
      <MemberSignature Language="F#" Value="member this.KeyValidityForOriginationEnd : Java.Util.Date" Usage="Android.Security.Keystore.KeyGenParameterSpec.KeyValidityForOriginationEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeyValidityForOriginationEnd", "()Ljava/util/Date;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeyValidityForOriginationEnd", "()Ljava/util/Date;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the time instant after which the key is no longer valid for encryption and signing
            or <c>null</c> if not restricted.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the time instant after which the key is no longer valid for encryption and signing
            or <c>null</c> if not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getKeyValidityForOriginationEnd()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getKeyValidityForOriginationEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValidityStart">
      <MemberSignature Language="C#" Value="public Java.Util.Date? KeyValidityStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date KeyValidityStart" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.KeyValidityStart" />
      <MemberSignature Language="F#" Value="member this.KeyValidityStart : Java.Util.Date" Usage="Android.Security.Keystore.KeyGenParameterSpec.KeyValidityStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeyValidityStart", "()Ljava/util/Date;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeyValidityStart", "()Ljava/util/Date;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the time instant before which the key is not yet valid or <c>null</c> if not
            restricted.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the time instant before which the key is not yet valid or <c>null</c> if not
            restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getKeyValidityStart()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getKeyValidityStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxUsageCount">
      <MemberSignature Language="C#" Value="public int MaxUsageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxUsageCount" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.MaxUsageCount" />
      <MemberSignature Language="F#" Value="member this.MaxUsageCount : int" Usage="Android.Security.Keystore.KeyGenParameterSpec.MaxUsageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxUsageCount", "()I", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxUsageCount", "()I", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum number of times the limited use key is allowed to be used or
            <c>KeyProperties#UNRESTRICTED_USAGE_COUNT</c> if there’s no restriction on the number of
            times the key can be used.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the maximum number of times the limited use key is allowed to be used or
            <c>KeyProperties#UNRESTRICTED_USAGE_COUNT</c> if there’s no restriction on the number of
            times the key can be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getMaxUsageCount()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getMaxUsageCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Purposes">
      <MemberSignature Language="C#" Value="public Android.Security.Keystore.KeyStorePurpose Purposes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Security.Keystore.KeyStorePurpose Purposes" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.Purposes" />
      <MemberSignature Language="F#" Value="member this.Purposes : Android.Security.Keystore.KeyStorePurpose" Usage="Android.Security.Keystore.KeyGenParameterSpec.Purposes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPurposes", "()I", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPurposes", "()I", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Keystore.KeyStorePurpose</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the set of purposes (e.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the set of purposes (e.g., encrypt, decrypt, sign) for which the key can be used.
            Attempts to use the key for any other purpose will be rejected.</para>
          <para>See <c>KeyProperties</c>.<c>PURPOSE</c> flags.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getPurposes()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getPurposes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Security.Keystore.KeyGenParameterSpec.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Security.Keystore.KeyGenParameterSpec.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAuthenticationType">
      <MemberSignature Language="C#" Value="public int UserAuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UserAuthenticationType" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.UserAuthenticationType" />
      <MemberSignature Language="F#" Value="member this.UserAuthenticationType : int" Usage="Android.Security.Keystore.KeyGenParameterSpec.UserAuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUserAuthenticationType", "()I", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUserAuthenticationType", "()I", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the modes of authentication that can authorize use of this key.</summary>
        <value>integer representing the bitwse OR of all acceptable authentication types for the
                    key.</value>
        <remarks>
          <para>Gets the modes of authentication that can authorize use of this key. This has effect only if
            user authentication is required (see <c>#isUserAuthenticationRequired()</c>).</para>
          <para>This authorization applies only to secret key and private key operations. Public key
            operations are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getUserAuthenticationType()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getUserAuthenticationType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAuthenticationValidityDurationSeconds">
      <MemberSignature Language="C#" Value="public int UserAuthenticationValidityDurationSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UserAuthenticationValidityDurationSeconds" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyGenParameterSpec.UserAuthenticationValidityDurationSeconds" />
      <MemberSignature Language="F#" Value="member this.UserAuthenticationValidityDurationSeconds : int" Usage="Android.Security.Keystore.KeyGenParameterSpec.UserAuthenticationValidityDurationSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUserAuthenticationValidityDurationSeconds", "()I", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUserAuthenticationValidityDurationSeconds", "()I", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the duration of time (seconds) for which this key is authorized to be used after the
            user is successfully authenticated.</summary>
        <value>duration in seconds or <c>-1</c> if authentication is required for every use of the
                    key.</value>
        <remarks>
          <para>Gets the duration of time (seconds) for which this key is authorized to be used after the
            user is successfully authenticated. This has effect only if user authentication is required
            (see <c>#isUserAuthenticationRequired()</c>).</para>
          <para>This authorization applies only to secret key and private key operations. Public key
            operations are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec#getUserAuthenticationValidityDurationSeconds()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyGenParameterSpec.getUserAuthenticationValidityDurationSeconds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
