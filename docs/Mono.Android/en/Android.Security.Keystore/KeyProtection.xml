<Type Name="KeyProtection" FullName="Android.Security.Keystore.KeyProtection">
  <TypeSignature Language="C#" Value="public sealed class KeyProtection : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Security.KeyStore.IProtectionParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KeyProtection extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Security.KeyStore/IProtectionParameter, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Security.Keystore.KeyProtection" />
  <TypeSignature Language="F#" Value="type KeyProtection = class&#xA;    inherit Object&#xA;    interface KeyStore.IProtectionParameter&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Security.KeyStore+IProtectionParameter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/security/keystore/KeyProtection", ApiSince=23, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/security/keystore/KeyProtection", ApiSince=23, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specification of how a key or key pair is secured when imported into the
            <see href="https://developer.android.com/training/articles/keystore.html">Android Keystore system</see>.</summary>
    <remarks>
      <para>Specification of how a key or key pair is secured when imported into the
            <see href="https://developer.android.com/training/articles/keystore.html">Android Keystore system</see>. This class
            specifies authorized uses of the imported key, such as whether user authentication is required
            for using the key, what operations the key is authorized for (e.g., decryption, but not signing)
            with what parameters (e.g., only with a particular padding scheme or digest), and the key's
            validity start and end dates. Key use authorizations expressed in this class apply only to secret
            keys and private keys -- public keys can be used for any supported operations.</para>
      <para>To import a key or key pair into the Android Keystore, create an instance of this class using
            the <c>Builder</c> and pass the instance into <c>java.security.KeyStore#setEntry(String, java.security.KeyStore.Entry, ProtectionParameter) KeyStore.setEntry</c>
            with the key or key pair being imported.</para>
      <para>To obtain the secret/symmetric or private key from the Android Keystore use
            <c>java.security.KeyStore#getKey(String, char[]) KeyStore.getKey(String, null)</c> or
            <c>java.security.KeyStore#getEntry(String, java.security.KeyStore.ProtectionParameter) KeyStore.getEntry(String, null)</c>.
            To obtain the public key from the Android Keystore use
            <c>java.security.KeyStore#getCertificate(String)</c> and then
            <c>Certificate#getPublicKey()</c>.</para>
      <para>To help obtain algorithm-specific public parameters of key pairs stored in the Android
            Keystore, its private keys implement <c>java.security.interfaces.ECKey</c> or
            <c>java.security.interfaces.RSAKey</c> interfaces whereas its public keys implement
            <c>java.security.interfaces.ECPublicKey</c> or <c>java.security.interfaces.RSAPublicKey</c>
            interfaces.</para>
      <para>NOTE: The key material of keys stored in the Android Keystore is not accessible.</para>
      <para>Instances of this class are immutable.</para>
      <para>&lt;h3&gt;Known issues&lt;/h3&gt;
            A known bug in Android 6.0 (API Level 23) causes user authentication-related authorizations to be
            enforced even for public keys. To work around this issue extract the public key material to use
            outside of Android Keystore. For example:</para>
      <code lang="text/java">{@code
            PublicKey unrestrictedPublicKey =
                    KeyFactory.getInstance(publicKey.getAlgorithm()).generatePublic(
                            new X509EncodedKeySpec(publicKey.getEncoded()));
            }</code>
      <para>&lt;h3&gt;Example: AES key for encryption/decryption in GCM mode&lt;/h3&gt;
            This example illustrates how to import an AES key into the Android KeyStore under alias
            <c>key1</c> authorized to be used only for encryption/decryption in GCM mode with no padding.
            The key must export its key material via <c>Key#getEncoded()</c> in <c>RAW</c> format.</para>
      <code lang="text/java">{@code
            SecretKey key = ...; // AES key
            
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            keyStore.setEntry(
                    "key1",
                    new KeyStore.SecretKeyEntry(key),
                    new KeyProtection.Builder(KeyProperties.PURPOSE_ENCRYPT | KeyProperties.PURPOSE_DECRYPT)
                            .setBlockMode(KeyProperties.BLOCK_MODE_GCM)
                            .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE)
                            .build());
            // Key imported, obtain a reference to it.
            SecretKey keyStoreKey = (SecretKey) keyStore.getKey("key1", null);
            // The original key can now be discarded.
            
            Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding");
            cipher.init(Cipher.ENCRYPT_MODE, keyStoreKey);
            ...
            }</code>
      <para>&lt;h3&gt;Example: HMAC key for generating MACs using SHA-512&lt;/h3&gt;
            This example illustrates how to import an HMAC key into the Android KeyStore under alias
            <c>key1</c> authorized to be used only for generating MACs using SHA-512 digest. The key must
            export its key material via <c>Key#getEncoded()</c> in <c>RAW</c> format.</para>
      <code lang="text/java">{@code
            SecretKey key = ...; // HMAC key of algorithm "HmacSHA512".
            
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            keyStore.setEntry(
                    "key1",
                    new KeyStore.SecretKeyEntry(key),
                    new KeyProtection.Builder(KeyProperties.PURPOSE_SIGN).build());
            // Key imported, obtain a reference to it.
            SecretKey keyStoreKey = (SecretKey) keyStore.getKey("key1", null);
            // The original key can now be discarded.
            
            Mac mac = Mac.getInstance("HmacSHA512");
            mac.init(keyStoreKey);
            ...
            }</code>
      <para>&lt;h3&gt;Example: EC key pair for signing/verification using ECDSA&lt;/h3&gt;
            This example illustrates how to import an EC key pair into the Android KeyStore under alias
            <c>key2</c> with the private key authorized to be used only for signing with SHA-256 or SHA-512
            digests. The use of the public key is unrestricted. Both the private and the public key must
            export their key material via <c>Key#getEncoded()</c> in <c>PKCS#8</c> and <c>X.509</c> format
            respectively.</para>
      <code lang="text/java">{@code
            PrivateKey privateKey = ...;   // EC private key
            Certificate[] certChain = ...; // Certificate chain with the first certificate
                                           // containing the corresponding EC public key.
            
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            keyStore.setEntry(
                    "key2",
                    new KeyStore.PrivateKeyEntry(privateKey, certChain),
                    new KeyProtection.Builder(KeyProperties.PURPOSE_SIGN)
                            .setDigests(KeyProperties.DIGEST_SHA256, KeyProperties.DIGEST_SHA512)
                            .build());
            // Key pair imported, obtain a reference to it.
            PrivateKey keyStorePrivateKey = (PrivateKey) keyStore.getKey("key2", null);
            PublicKey publicKey = keyStore.getCertificate("key2").getPublicKey();
            // The original private key can now be discarded.
            
            Signature signature = Signature.getInstance("SHA256withECDSA");
            signature.initSign(keyStorePrivateKey);
            ...
            }</code>
      <para>&lt;h3&gt;Example: RSA key pair for signing/verification using PKCS#1 padding&lt;/h3&gt;
            This example illustrates how to import an RSA key pair into the Android KeyStore under alias
            <c>key2</c> with the private key authorized to be used only for signing using the PKCS#1
            signature padding scheme with SHA-256 digest and only if the user has been authenticated within
            the last ten minutes. The use of the public key is unrestricted (see Known Issues). Both the
            private and the public key must export their key material via <c>Key#getEncoded()</c> in
            <c>PKCS#8</c> and <c>X.509</c> format respectively.</para>
      <code lang="text/java">{@code
            PrivateKey privateKey = ...;   // RSA private key
            Certificate[] certChain = ...; // Certificate chain with the first certificate
                                           // containing the corresponding RSA public key.
            
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            keyStore.setEntry(
                    "key2",
                    new KeyStore.PrivateKeyEntry(privateKey, certChain),
                    new KeyProtection.Builder(KeyProperties.PURPOSE_SIGN)
                            .setDigests(KeyProperties.DIGEST_SHA256)
                            .setSignaturePaddings(KeyProperties.SIGNATURE_PADDING_RSA_PKCS1)
                            // Only permit this key to be used if the user
                            // authenticated within the last ten minutes.
                            .setUserAuthenticationRequired(true)
                            .setUserAuthenticationValidityDurationSeconds(10 * 60)
                            .build());
            // Key pair imported, obtain a reference to it.
            PrivateKey keyStorePrivateKey = (PrivateKey) keyStore.getKey("key2", null);
            PublicKey publicKey = keyStore.getCertificate("key2").getPublicKey();
            // The original private key can now be discarded.
            
            Signature signature = Signature.getInstance("SHA256withRSA");
            signature.initSign(keyStorePrivateKey);
            ...
            }</code>
      <para>&lt;h3&gt;Example: RSA key pair for encryption/decryption using PKCS#1 padding&lt;/h3&gt;
            This example illustrates how to import an RSA key pair into the Android KeyStore under alias
            <c>key2</c> with the private key authorized to be used only for decryption using the PKCS#1
            encryption padding scheme. The use of public key is unrestricted, thus permitting encryption
            using any padding schemes and digests. Both the private and the public key must export their key
            material via <c>Key#getEncoded()</c> in <c>PKCS#8</c> and <c>X.509</c> format respectively.</para>
      <code lang="text/java">{@code
            PrivateKey privateKey = ...;   // RSA private key
            Certificate[] certChain = ...; // Certificate chain with the first certificate
                                           // containing the corresponding RSA public key.
            
            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
            keyStore.load(null);
            keyStore.setEntry(
                    "key2",
                    new KeyStore.PrivateKeyEntry(privateKey, certChain),
                    new KeyProtection.Builder(KeyProperties.PURPOSE_DECRYPT)
                            .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_PKCS1)
                            .build());
            // Key pair imported, obtain a reference to it.
            PrivateKey keyStorePrivateKey = (PrivateKey) keyStore.getKey("key2", null);
            PublicKey publicKey = keyStore.getCertificate("key2").getPublicKey();
            // The original private key can now be discarded.
            
            Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
            cipher.init(Cipher.DECRYPT_MODE, keyStorePrivateKey);
            ...
            }</code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetBlockModes">
      <MemberSignature Language="C#" Value="public string[] GetBlockModes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetBlockModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyProtection.GetBlockModes" />
      <MemberSignature Language="F#" Value="member this.GetBlockModes : unit -&gt; string[]" Usage="keyProtection.GetBlockModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBlockModes", "()[Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBlockModes", "()[Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "BlockModeEcb", "BlockModeCbc", "BlockModeCtr", "BlockModeGcm" }, Type="Android.Security.Keystore.KeyProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "BlockModeEcb", "BlockModeCbc", "BlockModeCtr", "BlockModeGcm" }, Type="Android.Security.Keystore.KeyProperties")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the set of block modes (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets the set of block modes (e.g., <c>GCM</c>, <c>CBC</c>) with which the key can be used
            when encrypting/decrypting. Attempts to use the key with any other block modes will be
            rejected.</para>
          <para>See <c>KeyProperties</c>.<c>BLOCK_MODE</c> constants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getBlockModes()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getBlockModes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigests">
      <MemberSignature Language="C#" Value="public string[] GetDigests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDigests() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyProtection.GetDigests" />
      <MemberSignature Language="F#" Value="member this.GetDigests : unit -&gt; string[]" Usage="keyProtection.GetDigests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDigests", "()[Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDigests", "()[Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "DigestNone", "DigestMd5", "DigestSha1", "DigestSha224", "DigestSha256", "DigestSha384", "DigestSha512" }, Type="Android.Security.Keystore.KeyProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "DigestNone", "DigestMd5", "DigestSha1", "DigestSha224", "DigestSha256", "DigestSha384", "DigestSha512" }, Type="Android.Security.Keystore.KeyProperties")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the set of digest algorithms (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets the set of digest algorithms (e.g., <c>SHA-256</c>, <c>SHA-384</c>) with which the key
            can be used.</para>
          <para>See <c>KeyProperties</c>.<c>DIGEST</c> constants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getDigests()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getDigests()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionPaddings">
      <MemberSignature Language="C#" Value="public string[] GetEncryptionPaddings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetEncryptionPaddings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyProtection.GetEncryptionPaddings" />
      <MemberSignature Language="F#" Value="member this.GetEncryptionPaddings : unit -&gt; string[]" Usage="keyProtection.GetEncryptionPaddings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEncryptionPaddings", "()[Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEncryptionPaddings", "()[Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "EncryptionPaddingNone", "EncryptionPaddingPkcs7", "EncryptionPaddingRsaPkcs1", "EncryptionPaddingRsaOaep" }, Type="Android.Security.Keystore.KeyProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "EncryptionPaddingNone", "EncryptionPaddingPkcs7", "EncryptionPaddingRsaPkcs1", "EncryptionPaddingRsaOaep" }, Type="Android.Security.Keystore.KeyProperties")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the set of padding schemes (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets the set of padding schemes (e.g., <c>PKCS7Padding</c>, <c>PKCS1Padding</c>,
            <c>NoPadding</c>) with which the key can be used when encrypting/decrypting. Attempts to use
            the key with any other padding scheme will be rejected.</para>
          <para>See <c>KeyProperties</c>.<c>ENCRYPTION_PADDING</c> constants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getEncryptionPaddings()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getEncryptionPaddings()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignaturePaddings">
      <MemberSignature Language="C#" Value="public string[] GetSignaturePaddings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetSignaturePaddings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Keystore.KeyProtection.GetSignaturePaddings" />
      <MemberSignature Language="F#" Value="member this.GetSignaturePaddings : unit -&gt; string[]" Usage="keyProtection.GetSignaturePaddings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSignaturePaddings", "()[Ljava/lang/String;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSignaturePaddings", "()[Ljava/lang/String;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "SignaturePaddingRsaPkcs1", "SignaturePaddingRsaPss" }, Type="Android.Security.Keystore.KeyProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "SignaturePaddingRsaPkcs1", "SignaturePaddingRsaPss" }, Type="Android.Security.Keystore.KeyProperties")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the set of padding schemes (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets the set of padding schemes (e.g., <c>PSS</c>, <c>PKCS#1</c>) with which the key
            can be used when signing/verifying. Attempts to use the key with any other padding scheme
            will be rejected.</para>
          <para>See <c>KeyProperties</c>.<c>SIGNATURE_PADDING</c> constants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getSignaturePaddings()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getSignaturePaddings()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigestsSpecified">
      <MemberSignature Language="C#" Value="public bool IsDigestsSpecified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDigestsSpecified" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.IsDigestsSpecified" />
      <MemberSignature Language="F#" Value="member this.IsDigestsSpecified : bool" Usage="Android.Security.Keystore.KeyProtection.IsDigestsSpecified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDigestsSpecified", "()Z", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDigestsSpecified", "()Z", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the set of digest algorithms with which the key can be used has been
            specified.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the set of digest algorithms with which the key can be used has been
            specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#isDigestsSpecified()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.isDigestsSpecified()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvalidatedByBiometricEnrollment">
      <MemberSignature Language="C#" Value="public bool IsInvalidatedByBiometricEnrollment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalidatedByBiometricEnrollment" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.IsInvalidatedByBiometricEnrollment" />
      <MemberSignature Language="F#" Value="member this.IsInvalidatedByBiometricEnrollment : bool" Usage="Android.Security.Keystore.KeyProtection.IsInvalidatedByBiometricEnrollment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInvalidatedByBiometricEnrollment", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInvalidatedByBiometricEnrollment", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is irreversibly invalidated when a new biometric is
            enrolled or all enrolled biometrics are removed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is irreversibly invalidated when a new biometric is
            enrolled or all enrolled biometrics are removed. This has effect only for keys that
            require biometric user authentication for every use.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#isInvalidatedByBiometricEnrollment()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.isInvalidatedByBiometricEnrollment()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRandomizedEncryptionRequired">
      <MemberSignature Language="C#" Value="public bool IsRandomizedEncryptionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRandomizedEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.IsRandomizedEncryptionRequired" />
      <MemberSignature Language="F#" Value="member this.IsRandomizedEncryptionRequired : bool" Usage="Android.Security.Keystore.KeyProtection.IsRandomizedEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRandomizedEncryptionRequired", "()Z", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRandomizedEncryptionRequired", "()Z", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if encryption using this key must be sufficiently randomized to produce
            different ciphertexts for the same plaintext every time.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if encryption using this key must be sufficiently randomized to produce
            different ciphertexts for the same plaintext every time. The formal cryptographic property
            being required is &lt;em&gt;indistinguishability under chosen-plaintext attack (<c>IND-CPA</c>)&lt;/em&gt;. This property is important because it mitigates several classes of
            weaknesses due to which ciphertext may leak information about plaintext. For example, if a
            given plaintext always produces the same ciphertext, an attacker may see the repeated
            ciphertexts and be able to deduce something about the plaintext.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#isRandomizedEncryptionRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.isRandomizedEncryptionRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnlockedDeviceRequired">
      <MemberSignature Language="C#" Value="public bool IsUnlockedDeviceRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnlockedDeviceRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.IsUnlockedDeviceRequired" />
      <MemberSignature Language="F#" Value="member this.IsUnlockedDeviceRequired : bool" Usage="Android.Security.Keystore.KeyProtection.IsUnlockedDeviceRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUnlockedDeviceRequired", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUnlockedDeviceRequired", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the screen must be unlocked for this key to be used for decryption or
            signing.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the screen must be unlocked for this key to be used for decryption or
            signing. Encryption and signature verification will still be available when the screen is
            locked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#isUnlockedDeviceRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.isUnlockedDeviceRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserAuthenticationRequired">
      <MemberSignature Language="C#" Value="public bool IsUserAuthenticationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserAuthenticationRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.IsUserAuthenticationRequired" />
      <MemberSignature Language="F#" Value="member this.IsUserAuthenticationRequired : bool" Usage="Android.Security.Keystore.KeyProtection.IsUserAuthenticationRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserAuthenticationRequired", "()Z", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserAuthenticationRequired", "()Z", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is authorized to be used only if the user has been
            authenticated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is authorized to be used only if the user has been
            authenticated.</para>
          <para>This authorization applies only to secret key and private key operations. Public key
            operations are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#isUserAuthenticationRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.isUserAuthenticationRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserAuthenticationValidWhileOnBody">
      <MemberSignature Language="C#" Value="public bool IsUserAuthenticationValidWhileOnBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserAuthenticationValidWhileOnBody" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.IsUserAuthenticationValidWhileOnBody" />
      <MemberSignature Language="F#" Value="member this.IsUserAuthenticationValidWhileOnBody : bool" Usage="Android.Security.Keystore.KeyProtection.IsUserAuthenticationValidWhileOnBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserAuthenticationValidWhileOnBody", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserAuthenticationValidWhileOnBody", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key will be de-authorized when the device is removed from the
            user's body.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key will be de-authorized when the device is removed from the
            user's body.  This option has no effect on keys that don't have an authentication validity
            duration, and has no effect if the device lacks an on-body sensor.</para>
          <para>Authorization applies only to secret key and private key operations. Public key operations
            are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#isUserAuthenticationValidWhileOnBody()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.isUserAuthenticationValidWhileOnBody()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserConfirmationRequired">
      <MemberSignature Language="C#" Value="public bool IsUserConfirmationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserConfirmationRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.IsUserConfirmationRequired" />
      <MemberSignature Language="F#" Value="member this.IsUserConfirmationRequired : bool" Usage="Android.Security.Keystore.KeyProtection.IsUserConfirmationRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserConfirmationRequired", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserConfirmationRequired", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is authorized to be used only for messages confirmed by the
            user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is authorized to be used only for messages confirmed by the
            user.
            
            Confirmation is separate from user authentication (see
            <c>#isUserAuthenticationRequired()</c>). Keys can be created that require confirmation but
            not user authentication, or user authentication but not confirmation, or both. Confirmation
            verifies that some user with physical possession of the device has approved a displayed
            message. User authentication verifies that the correct user is present and has
            authenticated.</para>
          <para>This authorization applies only to secret key and private key operations. Public key
            operations are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#isUserConfirmationRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.isUserConfirmationRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserPresenceRequired">
      <MemberSignature Language="C#" Value="public bool IsUserPresenceRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserPresenceRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.IsUserPresenceRequired" />
      <MemberSignature Language="F#" Value="member this.IsUserPresenceRequired : bool" Usage="Android.Security.Keystore.KeyProtection.IsUserPresenceRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserPresenceRequired", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserPresenceRequired", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the key is authorized to be used only if a test of user presence has
            been performed between the <c>Signature.initSign()</c> and <c>Signature.sign()</c> calls.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the key is authorized to be used only if a test of user presence has
            been performed between the <c>Signature.initSign()</c> and <c>Signature.sign()</c> calls.
            It requires that the KeyStore implementation have a direct way to validate the user presence
            for example a KeyStore hardware backed strongbox can use a button press that is observable
            in hardware. A test for user presence is tangential to authentication. The test can be part
            of an authentication step as long as this step can be validated by the hardware protecting
            the key and cannot be spoofed. For example, a physical button press can be used as a test of
            user presence if the other pins connected to the button are not able to simulate a button
            press. There must be no way for the primary processor to fake a button press, or that
            button must not be used as a test of user presence.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#isUserPresenceRequired()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.isUserPresenceRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Security.Keystore.KeyProtection.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValidityForConsumptionEnd">
      <MemberSignature Language="C#" Value="public Java.Util.Date? KeyValidityForConsumptionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date KeyValidityForConsumptionEnd" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.KeyValidityForConsumptionEnd" />
      <MemberSignature Language="F#" Value="member this.KeyValidityForConsumptionEnd : Java.Util.Date" Usage="Android.Security.Keystore.KeyProtection.KeyValidityForConsumptionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeyValidityForConsumptionEnd", "()Ljava/util/Date;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeyValidityForConsumptionEnd", "()Ljava/util/Date;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time instant after which the key is no long valid for decryption and verification.</summary>
        <value>instant or <c>null</c> if not restricted.</value>
        <remarks>
          <para>Gets the time instant after which the key is no long valid for decryption and verification.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getKeyValidityForConsumptionEnd()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getKeyValidityForConsumptionEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValidityForOriginationEnd">
      <MemberSignature Language="C#" Value="public Java.Util.Date? KeyValidityForOriginationEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date KeyValidityForOriginationEnd" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.KeyValidityForOriginationEnd" />
      <MemberSignature Language="F#" Value="member this.KeyValidityForOriginationEnd : Java.Util.Date" Usage="Android.Security.Keystore.KeyProtection.KeyValidityForOriginationEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeyValidityForOriginationEnd", "()Ljava/util/Date;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeyValidityForOriginationEnd", "()Ljava/util/Date;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time instant after which the key is no long valid for encryption and signing.</summary>
        <value>instant or <c>null</c> if not restricted.</value>
        <remarks>
          <para>Gets the time instant after which the key is no long valid for encryption and signing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getKeyValidityForOriginationEnd()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getKeyValidityForOriginationEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValidityStart">
      <MemberSignature Language="C#" Value="public Java.Util.Date? KeyValidityStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date KeyValidityStart" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.KeyValidityStart" />
      <MemberSignature Language="F#" Value="member this.KeyValidityStart : Java.Util.Date" Usage="Android.Security.Keystore.KeyProtection.KeyValidityStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeyValidityStart", "()Ljava/util/Date;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeyValidityStart", "()Ljava/util/Date;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time instant before which the key is not yet valid.</summary>
        <value>instant or <c>null</c> if not restricted.</value>
        <remarks>
          <para>Gets the time instant before which the key is not yet valid.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getKeyValidityStart()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getKeyValidityStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxUsageCount">
      <MemberSignature Language="C#" Value="public int MaxUsageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxUsageCount" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.MaxUsageCount" />
      <MemberSignature Language="F#" Value="member this.MaxUsageCount : int" Usage="Android.Security.Keystore.KeyProtection.MaxUsageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxUsageCount", "()I", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxUsageCount", "()I", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum number of times the limited use key is allowed to be used or
            <c>KeyProperties#UNRESTRICTED_USAGE_COUNT</c> if there’s no restriction on the number of
            times the key can be used.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the maximum number of times the limited use key is allowed to be used or
            <c>KeyProperties#UNRESTRICTED_USAGE_COUNT</c> if there’s no restriction on the number of
            times the key can be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getMaxUsageCount()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getMaxUsageCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Purposes">
      <MemberSignature Language="C#" Value="public Android.Security.Keystore.KeyStorePurpose Purposes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Security.Keystore.KeyStorePurpose Purposes" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.Purposes" />
      <MemberSignature Language="F#" Value="member this.Purposes : Android.Security.Keystore.KeyStorePurpose" Usage="Android.Security.Keystore.KeyProtection.Purposes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPurposes", "()I", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPurposes", "()I", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Keystore.KeyStorePurpose</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the set of purposes (e.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the set of purposes (e.g., encrypt, decrypt, sign) for which the key can be used.
            Attempts to use the key for any other purpose will be rejected.</para>
          <para>See <c>KeyProperties</c>.<c>PURPOSE</c> flags.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getPurposes()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getPurposes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Security.Keystore.KeyProtection.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Security.Keystore.KeyProtection.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAuthenticationType">
      <MemberSignature Language="C#" Value="public int UserAuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UserAuthenticationType" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.UserAuthenticationType" />
      <MemberSignature Language="F#" Value="member this.UserAuthenticationType : int" Usage="Android.Security.Keystore.KeyProtection.UserAuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUserAuthenticationType", "()I", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUserAuthenticationType", "()I", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAuthenticationValidityDurationSeconds">
      <MemberSignature Language="C#" Value="public int UserAuthenticationValidityDurationSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UserAuthenticationValidityDurationSeconds" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Keystore.KeyProtection.UserAuthenticationValidityDurationSeconds" />
      <MemberSignature Language="F#" Value="member this.UserAuthenticationValidityDurationSeconds : int" Usage="Android.Security.Keystore.KeyProtection.UserAuthenticationValidityDurationSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUserAuthenticationValidityDurationSeconds", "()I", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUserAuthenticationValidityDurationSeconds", "()I", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the duration of time (seconds) for which this key is authorized to be used after the
            user is successfully authenticated.</summary>
        <value>duration in seconds or <c>-1</c> if authentication is required for every use of the
                    key.</value>
        <remarks>
          <para>Gets the duration of time (seconds) for which this key is authorized to be used after the
            user is successfully authenticated. This has effect only if user authentication is required
            (see <c>#isUserAuthenticationRequired()</c>).</para>
          <para>This authorization applies only to secret key and private key operations. Public key
            operations are not restricted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/keystore/KeyProtection#getUserAuthenticationValidityDurationSeconds()" title="Reference documentation">Java documentation for <code>android.security.keystore.KeyProtection.getUserAuthenticationValidityDurationSeconds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
