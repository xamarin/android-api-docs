<Type Name="ValidatorHandler" FullName="Javax.Xml.Validation.ValidatorHandler">
  <TypeSignature Language="C#" Value="public abstract class ValidatorHandler : Java.Lang.Object, IDisposable, Org.Xml.Sax.IContentHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidatorHandler extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Org.Xml.Sax.IContentHandler, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IContentHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/validation/ValidatorHandler", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Streaming validator that works on SAX stream.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Streaming validator that works on SAX stream.

 </para>
      <para tool="javadoc-to-mdoc">
 A <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> object is a thread-unsafe, non-reentrant object.
 In other words, it is the application's responsibility to make
 sure that one <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> object is not used from
 more than one thread at any given time.

 </para>
      <para tool="javadoc-to-mdoc">
        <c>
          <see cref="T:Javax.Xml.Validation.ValidatorHandler" />
        </c> checks if the SAX events follow
 the set of constraints described in the associated <c><see cref="T:Javax.Xml.Validation.Schema" /></c>,
 and additionally it may modify the SAX events (for example
 by adding default values, etc.)

 </para>
      <para tool="javadoc-to-mdoc">
        <c>
          <see cref="T:Javax.Xml.Validation.ValidatorHandler" />
        </c> extends from <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>,
 but it refines the underlying <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> in
 the following way:
 <list type="number"><item><term>startElement/endElement events must receive non-null String
      for <c>uri</c>, <c>localName</c>, and <c>qname</c>,
      even though SAX allows some of them to be null.
      Similarly, the user-specified <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> will receive non-null
      Strings for all three parameters.

  </term></item><item><term>Applications must ensure that <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>'s
      <c><see cref="M:Org.Xml.Sax.IContentHandler.StartPrefixMapping(System.String,System.String)" /></c> and
      <c><see cref="M:Org.Xml.Sax.IContentHandler.EndPrefixMapping(System.String)" /></c> are invoked
      properly. Similarly, the user-specified <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>
      will receive startPrefixMapping/endPrefixMapping events.
      If the <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> introduces additional namespace
      bindings, the user-specified <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> will receive
      additional startPrefixMapping/endPrefixMapping events.

  </term></item><item><term><c><see cref="T:Org.Xml.Sax.IAttributes" /></c> for the
      <c><see cref="M:Org.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,System.String)" /></c> method
      may or may not include xmlns* attributes.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc">
 A <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> is automatically reset every time
 the startDocument method is invoked.

 <format type="text/html"><h2>Recognized Properties and Features</h2></format></para>
      <para tool="javadoc-to-mdoc">
 This spec defines the following feature that must be recognized
 by all <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> implementations.

 <format type="text/html"><h3><c>http://xml.org/sax/features/namespace-prefixes</c></h3></format></para>
      <para tool="javadoc-to-mdoc">
 This feature controls how a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> introduces
 namespace bindings that were not present in the original SAX event
 stream.
 When this feature is set to true, it must make
 sure that the user's <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> will see
 the corresponding <c>xmlns*</c> attribute in
 the <c><see cref="T:Org.Xml.Sax.IAttributes" /></c> object of the
 <c><see cref="M:Org.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,System.String)" /></c>
 callback. Otherwise, <c>xmlns*</c> attributes must not be
 added to <c><see cref="T:Org.Xml.Sax.IAttributes" /></c> that's passed to the
 user-specified <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 (Note that regardless of this switch, namespace bindings are
 always notified to applications through
 <c><see cref="M:Org.Xml.Sax.IContentHandler.StartPrefixMapping(System.String,System.String)" /></c> and
 <c><see cref="M:Org.Xml.Sax.IContentHandler.EndPrefixMapping(System.String)" /></c> methods of the
 <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> specified by the user.)

 </para>
      <para tool="javadoc-to-mdoc">
 Note that this feature does <i>NOT</i> affect the way
 a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> receives SAX events. It merely
 changes the way it augments SAX events.

 </para>
      <para tool="javadoc-to-mdoc">This feature is set to <c>false</c> by default.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidatorHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructor for derived classes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructor for derived classes.

 </para>
          <para tool="javadoc-to-mdoc">
 The constructor does nothing.

 </para>
          <para tool="javadoc-to-mdoc">
 Derived classes must create <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> objects that have
 <c>null</c><c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> and
 <c>null</c><c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#ValidatorHandler()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidatorHandler (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public abstract void Characters (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Characters(char[] ch, int32 start, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="start">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentHandler">
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IContentHandler ContentHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IContentHandler ContentHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentHandler", "()Lorg/xml/sax/ContentHandler;", "GetGetContentHandlerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setContentHandler", "(Lorg/xml/sax/ContentHandler;)V", "GetSetContentHandler_Lorg_xml_sax_ContentHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IContentHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> which receives the
 augmented validation result.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#getContentHandler()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> which receives the
 augmented validation result.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#setContentHandler(org.xml.sax.ContentHandler)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> which receives
 the augmented validation result.

 
 When a <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> is specified, a
 <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> will work as a filter
 and basically copy the incoming events to the
 specified <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>.

 
 In doing so, a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> may modify
 the events, for example by adding defaulted attributes.

 
 A <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> may buffer events to certain
 extent, but to allow <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> to be used
 by a parser, the following requirement has to be met.

 <list type="number"><item><term>When
      <c><see cref="M:Org.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,System.String)" /></c>,
      <c><see cref="M:Org.Xml.Sax.IContentHandler.EndElement(System.String,System.String,System.String)" /></c>,
      <c><see cref="M:Org.Xml.Sax.IContentHandler.StartDocument" /></c>, or
      <c><see cref="M:Org.Xml.Sax.IContentHandler.EndDocument" /></c>
      are invoked on a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>,
      the same method on the user-specified <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>
      must be invoked for the same event before the callback
      returns.
  </term></item><item><term><c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> may not introduce new elements that
      were not present in the input.

  </term></item><item><term><c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> may not remove attributes that were
      present in the input.
 </term></item></list>
 When a callback method on the specified <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>
 throws an exception, the same exception object must be thrown
 from the <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>. The <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>
 should not be notified of such an exception.

 
 This method can be called even during a middle of a validation.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.ValidatorHandler.ContentHandler" />
      </Docs>
    </Member>
    <Member MemberName="EndDocument">
      <MemberSignature Language="C#" Value="public abstract void EndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDocument() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndElement">
      <MemberSignature Language="C#" Value="public abstract void EndElement (string uri, string localName, string qName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndElement(string uri, string localName, string qName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="qName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="localName">To be added.</param>
        <param name="qName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPrefixMapping">
      <MemberSignature Language="C#" Value="public abstract void EndPrefixMapping (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndPrefixMapping(string prefix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endPrefixMapping", "(Ljava/lang/String;)V", "GetEndPrefixMapping_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandler">
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IErrorHandler ErrorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IErrorHandler ErrorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getErrorHandler", "()Lorg/xml/sax/ErrorHandler;", "GetGetErrorHandlerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IErrorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> set to this <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#getErrorHandler()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the current <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> set to this <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#setErrorHandler(org.xml.sax.ErrorHandler)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> to receive errors encountered
 during the validation.

 
 Error handler can be used to customize the error handling process
 during a validation. When an <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is set,
 errors found during the validation will be first sent
 to the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>.

 
 The error handler can abort further validation immediately
 by throwing <c><see cref="T:Org.Xml.Sax.SAXException" /></c> from the handler. Or for example
 it can print an error to the screen and try to continue the
 validation by returning normally from the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>
 If any <c><see cref="T:Java.Lang.Throwable" /></c> is thrown from an <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>,
 the same <c><see cref="T:Java.Lang.Throwable" /></c> object will be thrown toward the
 root of the call stack.

 <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> is not allowed to
 throw <c><see cref="T:Org.Xml.Sax.SAXException" /></c> without first reporting it to
 <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>.

 
 When the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is null, the implementation will
 behave as if the following <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is set:
 <example><code lang="java">
 class DraconianErrorHandler implements ErrorHandler {
     public void fatalError( SAXParseException e ) throws SAXException {
         throw e;
     }
     public void error( SAXParseException e ) throws SAXException {
         throw e;
     }
     public void warning( SAXParseException e ) throws SAXException {
         // noop
     }
 }
 </code></example>
 When a new <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> object is created, initially
 this field is set to null.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.ValidatorHandler.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public virtual bool GetFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a non-null fully-qualified URI.</param>
        <summary>Look up the value of a feature flag.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Look up the value of a feature flag.

 </para>
          <para tool="javadoc-to-mdoc">The feature name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> to recognize a feature name but
 temporarily be unable to return its value.
 Some feature values may be available only in specific
 contexts, such as before, during, or after a validation.

 </para>
          <para tool="javadoc-to-mdoc">Implementors are free (and encouraged) to invent their own features,
 using names built on their own URIs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#getFeature(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> recognizes the feature name but
            cannot determine its value at this time.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.ValidatorHandler.SetFeature(System.String, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a non-null fully-qualified URI.</param>
        <summary>Look up the value of a property.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Look up the value of a property.

 </para>
          <para tool="javadoc-to-mdoc">The property name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> to recognize a property name but
 temporarily be unable to return its value.
 Some property values may be available only in specific
 contexts, such as before, during, or after a validation.</para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="T:Javax.Xml.Validation.ValidatorHandler" />
            </c>s are not required to recognize any specific
 property names.</para>
          <para tool="javadoc-to-mdoc">Implementors are free (and encouraged) to invent their own properties,
 using names built on their own URIs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#getProperty(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the property name but
            cannot determine its value at this time.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.ValidatorHandler.SetProperty(System.String, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IgnorableWhitespace">
      <MemberSignature Language="C#" Value="public abstract void IgnorableWhitespace (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IgnorableWhitespace(char[] ch, int32 start, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <param name="start">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessingInstruction">
      <MemberSignature Language="C#" Value="public abstract void ProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessingInstruction(string target, string data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceResolver">
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.LS.ILSResourceResolver ResourceResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.LS.ILSResourceResolver ResourceResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getResourceResolver", "()Lorg/w3c/dom/ls/LSResourceResolver;", "GetGetResourceResolverHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setResourceResolver", "(Lorg/w3c/dom/ls/LSResourceResolver;)V", "GetSetResourceResolver_Lorg_w3c_dom_ls_LSResourceResolver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.LS.ILSResourceResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> set to this <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#getResourceResolver()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the current <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> set to this <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> to customize
 resource resolution while in a validation episode.

 <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> uses a <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c>
 when it needs to locate external resources while a validation,
 although exactly what constitutes "locating external resources" is
 up to each schema language.

 
 When the <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> is null, the implementation will
 behave as if the following <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> is set:
 <example><code lang="java">
 class DumbLSResourceResolver implements LSResourceResolver {
     public LSInput resolveResource(
         String publicId, String systemId, String baseURI) {

         return null; // always return null
     }
 }
 </code></example>
 If a <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> throws a <c><see cref="T:Java.Lang.RuntimeException" /></c>
  (or instances of its derived classes),
 then the <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> will abort the parsing and
 the caller of the <c>validate</c> method will receive
 the same <c><see cref="T:Java.Lang.RuntimeException" /></c>.

 
 When a new <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> object is created, initially
 this field is set to null.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.ValidatorHandler.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="SetDocumentLocator">
      <MemberSignature Language="C#" Value="public abstract void SetDocumentLocator (Org.Xml.Sax.ILocator locator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocumentLocator(class Org.Xml.Sax.ILocator locator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locator" Type="Org.Xml.Sax.ILocator" />
      </Parameters>
      <Docs>
        <param name="locator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public virtual void SetFeature (string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a non-null fully-qualified URI.</param>
        <param name="value">The requested value of the feature (true or false).</param>
        <summary>Set the value of a feature flag.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the value of a feature flag.

 </para>
          <para tool="javadoc-to-mdoc">
 Feature can be used to control the way a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>
 parses schemas, although <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>s are not required
 to recognize any specific property names.</para>
          <para tool="javadoc-to-mdoc">The feature name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> to expose a feature value but
 to be unable to change the current value.
 Some feature values may be immutable or mutable only
 in specific contexts, such as before, during, or after
 a validation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#setFeature(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> recognizes the feature name but
            cannot set the requested value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.ValidatorHandler.GetFeature(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public virtual void SetProperty (string name, Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a non-null fully-qualified URI.</param>
        <param name="object">The requested value for the property.</param>
        <summary>Set the value of a property.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the value of a property.

 </para>
          <para tool="javadoc-to-mdoc">The property name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> to recognize a property name but
 to be unable to change the current value.
 Some property values may be immutable or mutable only
 in specific contexts, such as before, during, or after
 a validation.</para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="T:Javax.Xml.Validation.ValidatorHandler" />
            </c>s are not required to recognize setting
 any specific property names.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#setProperty(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c> recognizes the property name but
            cannot set the requested value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SkippedEntity">
      <MemberSignature Language="C#" Value="public abstract void SkippedEntity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SkippedEntity(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("skippedEntity", "(Ljava/lang/String;)V", "GetSkippedEntity_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDocument">
      <MemberSignature Language="C#" Value="public abstract void StartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDocument() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartElement">
      <MemberSignature Language="C#" Value="public abstract void StartElement (string uri, string localName, string qName, Org.Xml.Sax.IAttributes atts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartElement(string uri, string localName, string qName, class Org.Xml.Sax.IAttributes atts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V", "GetStartElement_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Lorg_xml_sax_Attributes_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="qName" Type="System.String" />
        <Parameter Name="atts" Type="Org.Xml.Sax.IAttributes" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="localName">To be added.</param>
        <param name="qName">To be added.</param>
        <param name="atts">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPrefixMapping">
      <MemberSignature Language="C#" Value="public abstract void StartPrefixMapping (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartPrefixMapping(string prefix, string uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startPrefixMapping", "(Ljava/lang/String;Ljava/lang/String;)V", "GetStartPrefixMapping_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInfoProvider">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Validation.TypeInfoProvider TypeInfoProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Validation.TypeInfoProvider TypeInfoProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTypeInfoProvider", "()Ljavax/xml/validation/TypeInfoProvider;", "GetGetTypeInfoProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.TypeInfoProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the <c><see cref="T:Javax.Xml.Validation.TypeInfoProvider" /></c> implementation of this
 <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the <c><see cref="T:Javax.Xml.Validation.TypeInfoProvider" /></c> implementation of this
 <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">
 The obtained <c><see cref="T:Javax.Xml.Validation.TypeInfoProvider" /></c> can be queried during a parse
 to access the type information determined by the validator.

 </para>
          <para tool="javadoc-to-mdoc">
 Some schema languages do not define the notion of type,
 for those languages, this method may not be supported.
 However, to be compliant with this specification, implementations
 for W3C XML Schema 1.0 must support this operation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html#getTypeInfoProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
