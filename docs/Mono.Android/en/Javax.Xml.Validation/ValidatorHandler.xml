<Type Name="ValidatorHandler" FullName="Javax.Xml.Validation.ValidatorHandler">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValidatorHandler&#xA;Inherits Object&#xA;Implements IContentHandler, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidatorHandler abstract : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Org::Xml::Sax::IContentHandler" />
  <TypeSignature Language="C#" Value="public abstract class ValidatorHandler : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Org.Xml.Sax.IContentHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidatorHandler extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.Xml.Sax.IContentHandler, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Javax.Xml.Validation.ValidatorHandler" />
  <TypeSignature Language="F#" Value="type ValidatorHandler = class&#xA;    inherit Object&#xA;    interface IContentHandler&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IContentHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/xml/validation/ValidatorHandler", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/xml/validation/ValidatorHandler", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Streaming validator that works on SAX stream.</summary>
    <remarks>
      <para>Streaming validator that works on SAX stream.</para>
      <para>A <c>ValidatorHandler</c> object is a thread-unsafe, non-reentrant object.
            In other words, it is the application's responsibility to make
            sure that one <c>ValidatorHandler</c> object is not used from
            more than one thread at any given time.</para>
      <para>
        <c>ValidatorHandler</c> checks if the SAX events follow
            the set of constraints described in the associated <c>Schema</c>,
            and additionally it may modify the SAX events (for example
            by adding default values, etc.)</para>
      <para>
        <c>ValidatorHandler</c> extends from <c>ContentHandler</c>,
            but it refines the underlying <c>ContentHandler</c> in
            the following way:
            &lt;ol&gt;
             &lt;li&gt;startElement/endElement events must receive non-null String
                 for <c>uri</c>, <c>localName</c>, and <c>qname</c>,
                 even though SAX allows some of them to be null.
                 Similarly, the user-specified <c>ContentHandler</c> will receive non-null
                 Strings for all three parameters.
            
             &lt;li&gt;Applications must ensure that <c>ValidatorHandler</c>'s
                 <c>ContentHandler#startPrefixMapping(String,String)</c> and
                 <c>ContentHandler#endPrefixMapping(String)</c> are invoked
                 properly. Similarly, the user-specified <c>ContentHandler</c>
                 will receive startPrefixMapping/endPrefixMapping events.
                 If the <c>ValidatorHandler</c> introduces additional namespace
                 bindings, the user-specified <c>ContentHandler</c> will receive
                 additional startPrefixMapping/endPrefixMapping events.
            
             &lt;li&gt;<c>org.xml.sax.Attributes</c> for the
                 <c>ContentHandler#startElement(String,String,String,Attributes)</c> method
                 may or may not include xmlns* attributes.
            &lt;/ol&gt;</para>
      <para>A <c>ValidatorHandler</c> is automatically reset every time
            the startDocument method is invoked.
            
            &lt;h2&gt;Recognized Properties and Features&lt;/h2&gt;</para>
      <para>This spec defines the following feature that must be recognized
            by all <c>ValidatorHandler</c> implementations.
            
            &lt;h3&gt;<c>http://xml.org/sax/features/namespace-prefixes</c>&lt;/h3&gt;</para>
      <para>This feature controls how a <c>ValidatorHandler</c> introduces
            namespace bindings that were not present in the original SAX event
            stream.
            When this feature is set to true, it must make
            sure that the user's <c>ContentHandler</c> will see
            the corresponding <c>xmlns*</c> attribute in
            the <c>org.xml.sax.Attributes</c> object of the
            <c>ContentHandler#startElement(String,String,String,Attributes)</c>
            callback. Otherwise, <c>xmlns*</c> attributes must not be
            added to <c>org.xml.sax.Attributes</c> that's passed to the
            user-specified <c>ContentHandler</c>.</para>
      <para>(Note that regardless of this switch, namespace bindings are
            always notified to applications through
            <c>ContentHandler#startPrefixMapping(String,String)</c> and
            <c>ContentHandler#endPrefixMapping(String)</c> methods of the
            <c>ContentHandler</c> specified by the user.)</para>
      <para>Note that this feature does &lt;em&gt;NOT&lt;/em&gt; affect the way
            a <c>ValidatorHandler</c> receives SAX events. It merely
            changes the way it augments SAX events.</para>
      <para>This feature is set to <c>false</c> by default.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/xml/validation/ValidatorHandler" title="Reference documentation">Java documentation for <code>javax.xml.validation.ValidatorHandler</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidatorHandler();" />
      <MemberSignature Language="C#" Value="protected ValidatorHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructor for derived classes.</summary>
        <remarks>
          <para>Constructor for derived classes.</para>
          <para>The constructor does nothing.</para>
          <para>Derived classes must create <c>ValidatorHandler</c> objects that have
            <c>null</c><c>ErrorHandler</c> and
            <c>null</c><c>LSResourceResolver</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/ValidatorHandler#ValidatorHandler()" title="Reference documentation">Java documentation for <code>javax.xml.validation.ValidatorHandler.ValidatorHandler()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidatorHandler(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ValidatorHandler (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Xml.Validation.ValidatorHandler : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Xml.Validation.ValidatorHandler" Usage="new Javax.Xml.Validation.ValidatorHandler (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Characters (ch As Char(), start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Characters(cli::array &lt;char&gt; ^ ch, int start, int length);" />
      <MemberSignature Language="C#" Value="public abstract void Characters (char[]? ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Characters(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.Characters(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Characters : char[] * int * int -&gt; unit" Usage="validatorHandler.Characters (ch, start, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.Characters(System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the characters from the XML document</param>
        <param name="start">the start position in the array</param>
        <param name="length">the number of characters to read from the array</param>
        <summary>Receive notification of character data.</summary>
        <remarks>
          <para>Receive notification of character data.</para>
          <para>The Parser will call this method to report each chunk of
            character data.  SAX parsers may return all contiguous character
            data in a single chunk, or they may split it into several
            chunks; however, all of the characters in any single event
            must come from the same external entity so that the Locator
            provides useful information.</para>
          <para>The application must not attempt to read from the array
            outside of the specified range.</para>
          <para>Individual characters may consist of more than one Java
            <c>char</c> value.  There are two important cases where this
            happens, because characters can't be represented in just sixteen bits.
            In one case, characters are represented in a &lt;em&gt;Surrogate Pair&lt;/em&gt;,
            using two special Unicode values. Such characters are in the so-called
            "Astral Planes", with a code point above U+FFFF.  A second case involves
            composite characters, such as a base character combining with one or
            more accent characters.</para>
          <para>Your code should not assume that algorithms using
            <c>char</c>-at-a-time idioms will be working in character
            units; in some cases they will split characters.  This is relevant
            wherever XML permits arbitrary characters, such as attribute values,
            processing instruction data, and comments as well as in data reported
            from this method.  It's also generally relevant whenever Java code
            manipulates internationalized text; the issue isn't unique to XML.</para>
          <para>Note that some parsers will report whitespace in element
            content using the <c>#ignorableWhitespace ignorableWhitespace</c>
            method rather than this one (validating parsers &lt;em&gt;must&lt;/em&gt;
            do so).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#characters(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.characters(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentHandler">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ContentHandler As IContentHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Org::Xml::Sax::IContentHandler ^ ContentHandler { Org::Xml::Sax::IContentHandler ^ get(); void set(Org::Xml::Sax::IContentHandler ^ value); };" />
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IContentHandler? ContentHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IContentHandler ContentHandler" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.ValidatorHandler.ContentHandler" />
      <MemberSignature Language="F#" Value="member this.ContentHandler : Org.Xml.Sax.IContentHandler with get, set" Usage="Javax.Xml.Validation.ValidatorHandler.ContentHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentHandler", "()Lorg/xml/sax/ContentHandler;", "GetGetContentHandlerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentHandler", "()Lorg/xml/sax/ContentHandler;", "GetGetContentHandlerHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setContentHandler", "(Lorg/xml/sax/ContentHandler;)V", "GetSetContentHandler_Lorg_xml_sax_ContentHandler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setContentHandler", "(Lorg/xml/sax/ContentHandler;)V", "GetSetContentHandler_Lorg_xml_sax_ContentHandler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IContentHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:Org.Xml.Sax.IContentHandler" /> which receives the
 augmented validation result.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.ValidatorHandler.ContentHandler" />
      </Docs>
    </Member>
    <Member MemberName="EndDocument">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndDocument();" />
      <MemberSignature Language="C#" Value="public abstract void EndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.EndDocument" />
      <MemberSignature Language="F#" Value="abstract member EndDocument : unit -&gt; unit" Usage="validatorHandler.EndDocument " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.EndDocument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive notification of the end of a document.</summary>
        <remarks>
          <para>Receive notification of the end of a document.</para>
          <para>&lt;strong&gt;There is an apparent contradiction between the
            documentation for this method and the documentation for <c>org.xml.sax.ErrorHandler#fatalError</c>.  Until this ambiguity is
            resolved in a future major release, clients should make no
            assumptions about whether endDocument() will or will not be
            invoked when the parser has reported a fatalError() or thrown
            an exception.&lt;/strong&gt;</para>
          <para>The SAX parser will invoke this method only once, and it will
            be the last method invoked during the parse.  The parser shall
            not invoke this method until it has either abandoned parsing
            (because of an unrecoverable error) or reached the end of
            input.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#endDocument()" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.endDocument()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndElement">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndElement (uri As String, localName As String, qName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndElement(System::String ^ uri, System::String ^ localName, System::String ^ qName);" />
      <MemberSignature Language="C#" Value="public abstract void EndElement (string? uri, string? localName, string? qName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndElement(string uri, string localName, string qName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.EndElement(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EndElement : string * string * string -&gt; unit" Usage="validatorHandler.EndElement (uri, localName, qName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.EndElement(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="qName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">the Namespace URI, or the empty string if the
                   element has no Namespace URI or if Namespace
                   processing is not being performed</param>
        <param name="localName">the local name (without prefix), or the
                   empty string if Namespace processing is not being
                   performed</param>
        <param name="qName">the qualified XML name (with prefix), or the
                   empty string if qualified names are not available</param>
        <summary>Receive notification of the end of an element.</summary>
        <remarks>
          <para>Receive notification of the end of an element.</para>
          <para>The SAX parser will invoke this method at the end of every
            element in the XML document; there will be a corresponding
            <c>#startElement startElement</c> event for every endElement
            event (even when the element is empty).</para>
          <para>For information on the names, see startElement.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#endElement(java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.endElement(java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPrefixMapping">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndPrefixMapping (prefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndPrefixMapping(System::String ^ prefix);" />
      <MemberSignature Language="C#" Value="public abstract void EndPrefixMapping (string? prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndPrefixMapping(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.EndPrefixMapping(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EndPrefixMapping : string -&gt; unit" Usage="validatorHandler.EndPrefixMapping prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.EndPrefixMapping(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endPrefixMapping", "(Ljava/lang/String;)V", "GetEndPrefixMapping_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endPrefixMapping", "(Ljava/lang/String;)V", "GetEndPrefixMapping_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">the prefix that was being mapped.
               This is the empty string when a default mapping scope ends.</param>
        <summary>End the scope of a prefix-URI mapping.</summary>
        <remarks>
          <para>End the scope of a prefix-URI mapping.</para>
          <para>See <c>#startPrefixMapping startPrefixMapping</c> for
            details.  These events will always occur immediately after the
            corresponding <c>#endElement endElement</c> event, but the order of
            <c>#endPrefixMapping endPrefixMapping</c> events is not otherwise
            guaranteed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#endPrefixMapping(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.endPrefixMapping(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandler">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ErrorHandler As IErrorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Org::Xml::Sax::IErrorHandler ^ ErrorHandler { Org::Xml::Sax::IErrorHandler ^ get(); void set(Org::Xml::Sax::IErrorHandler ^ value); };" />
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IErrorHandler? ErrorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IErrorHandler ErrorHandler" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.ValidatorHandler.ErrorHandler" />
      <MemberSignature Language="F#" Value="member this.ErrorHandler : Org.Xml.Sax.IErrorHandler with get, set" Usage="Javax.Xml.Validation.ValidatorHandler.ErrorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getErrorHandler", "()Lorg/xml/sax/ErrorHandler;", "GetGetErrorHandlerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getErrorHandler", "()Lorg/xml/sax/ErrorHandler;", "GetGetErrorHandlerHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IErrorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current <see cref="T:Org.Xml.Sax.IErrorHandler" /> set to this <see cref="T:Javax.Xml.Validation.ValidatorHandler" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.ValidatorHandler.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFeature (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetFeature(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public virtual bool GetFeature (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.GetFeature(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetFeature : string -&gt; bool&#xA;override this.GetFeature : string -&gt; bool" Usage="validatorHandler.GetFeature name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a non-null fully-qualified URI.</param>
        <summary>Look up the value of a feature flag.</summary>
        <returns>The current value of the feature (true or false).</returns>
        <remarks>
          <para>Look up the value of a feature flag.</para>
          <para>The feature name is any fully-qualified URI.  It is
            possible for a <c>ValidatorHandler</c> to recognize a feature name but
            temporarily be unable to return its value.
            Some feature values may be available only in specific
            contexts, such as before, during, or after a validation.</para>
          <para>Implementors are free (and encouraged) to invent their own features,
            using names built on their own URIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/ValidatorHandler#getFeature(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.xml.validation.ValidatorHandler.getFeature(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <see cref="T:Javax.Xml.Validation.ValidatorHandler" /> recognizes the feature name but
            cannot determine its value at this time.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.ValidatorHandler.SetFeature(System.String, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::Object ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? GetProperty (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.GetProperty(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Java.Lang.Object&#xA;override this.GetProperty : string -&gt; Java.Lang.Object" Usage="validatorHandler.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a non-null fully-qualified URI.</param>
        <summary>Look up the value of a property.</summary>
        <returns>The current value of the property.</returns>
        <remarks>
          <para>Look up the value of a property.</para>
          <para>The property name is any fully-qualified URI.  It is
            possible for a <c>ValidatorHandler</c> to recognize a property name but
            temporarily be unable to return its value.
            Some property values may be available only in specific
            contexts, such as before, during, or after a validation.</para>
          <para>
            <c>ValidatorHandler</c>s are not required to recognize any specific
            property names.</para>
          <para>Implementors are free (and encouraged) to invent their own properties,
            using names built on their own URIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/ValidatorHandler#getProperty(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.xml.validation.ValidatorHandler.getProperty(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the property name but
            cannot determine its value at this time.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.ValidatorHandler.SetProperty(System.String, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IgnorableWhitespace">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub IgnorableWhitespace (ch As Char(), start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void IgnorableWhitespace(cli::array &lt;char&gt; ^ ch, int start, int length);" />
      <MemberSignature Language="C#" Value="public abstract void IgnorableWhitespace (char[]? ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IgnorableWhitespace(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IgnorableWhitespace : char[] * int * int -&gt; unit" Usage="validatorHandler.IgnorableWhitespace (ch, start, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the characters from the XML document</param>
        <param name="start">the start position in the array</param>
        <param name="length">the number of characters to read from the array</param>
        <summary>Receive notification of ignorable whitespace in element content.</summary>
        <remarks>
          <para>Receive notification of ignorable whitespace in element content.</para>
          <para>Validating Parsers must use this method to report each chunk
            of whitespace in element content (see the W3C XML 1.0
            recommendation, section 2.10): non-validating parsers may also
            use this method if they are capable of parsing and using
            content models.</para>
          <para>SAX parsers may return all contiguous whitespace in a single
            chunk, or they may split it into several chunks; however, all of
            the characters in any single event must come from the same
            external entity, so that the Locator provides useful
            information.</para>
          <para>The application must not attempt to read from the array
            outside of the specified range.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#ignorableWhitespace(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.ignorableWhitespace(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.ValidatorHandler.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Xml.Validation.ValidatorHandler.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessingInstruction">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessingInstruction (target As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberSignature Language="C#" Value="public abstract void ProcessingInstruction (string? target, string? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.ProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ProcessingInstruction : string * string -&gt; unit" Usage="validatorHandler.ProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.ProcessingInstruction(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">the processing instruction target</param>
        <param name="data">the processing instruction data, or null if
                   none was supplied.  The data does not include any
                   whitespace separating it from the target</param>
        <summary>Receive notification of a processing instruction.</summary>
        <remarks>
          <para>Receive notification of a processing instruction.</para>
          <para>The Parser will invoke this method once for each processing
            instruction found: note that processing instructions may occur
            before or after the main document element.</para>
          <para>A SAX parser must never report an XML declaration (XML 1.0,
            section 2.8) or a text declaration (XML 1.0, section 4.3.1)
            using this method.</para>
          <para>Like <c>#characters characters()</c>, processing instruction
            data may have characters that need more than one <c>char</c>
            value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#processingInstruction(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.processingInstruction(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceResolver">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ResourceResolver As ILSResourceResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Org::W3c::Dom::LS::ILSResourceResolver ^ ResourceResolver { Org::W3c::Dom::LS::ILSResourceResolver ^ get(); void set(Org::W3c::Dom::LS::ILSResourceResolver ^ value); };" />
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.LS.ILSResourceResolver? ResourceResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.LS.ILSResourceResolver ResourceResolver" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.ValidatorHandler.ResourceResolver" />
      <MemberSignature Language="F#" Value="member this.ResourceResolver : Org.W3c.Dom.LS.ILSResourceResolver with get, set" Usage="Javax.Xml.Validation.ValidatorHandler.ResourceResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getResourceResolver", "()Lorg/w3c/dom/ls/LSResourceResolver;", "GetGetResourceResolverHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getResourceResolver", "()Lorg/w3c/dom/ls/LSResourceResolver;", "GetGetResourceResolverHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setResourceResolver", "(Lorg/w3c/dom/ls/LSResourceResolver;)V", "GetSetResourceResolver_Lorg_w3c_dom_ls_LSResourceResolver_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setResourceResolver", "(Lorg/w3c/dom/ls/LSResourceResolver;)V", "GetSetResourceResolver_Lorg_w3c_dom_ls_LSResourceResolver_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.LS.ILSResourceResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current <see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /> set to this <see cref="T:Javax.Xml.Validation.ValidatorHandler" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.ValidatorHandler.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="SetDocumentLocator">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetDocumentLocator (locator As ILocator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetDocumentLocator(Org::Xml::Sax::ILocator ^ locator);" />
      <MemberSignature Language="C#" Value="public abstract void SetDocumentLocator (Org.Xml.Sax.ILocator? locator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocumentLocator(class Org.Xml.Sax.ILocator locator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.SetDocumentLocator(Org.Xml.Sax.ILocator)" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentLocator : Org.Xml.Sax.ILocator -&gt; unit" Usage="validatorHandler.SetDocumentLocator locator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.SetDocumentLocator(Org.Xml.Sax.ILocator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locator" Type="Org.Xml.Sax.ILocator" />
      </Parameters>
      <Docs>
        <param name="locator">an object that can return the location of
                           any SAX document event</param>
        <summary>Receive an object for locating the origin of SAX document events.</summary>
        <remarks>
          <para>Receive an object for locating the origin of SAX document events.</para>
          <para>SAX parsers are strongly encouraged (though not absolutely
            required) to supply a locator: if it does so, it must supply
            the locator to the application by invoking this method before
            invoking any of the other methods in the ContentHandler
            interface.</para>
          <para>The locator allows the application to determine the end
            position of any document-related event, even if the parser is
            not reporting an error.  Typically, the application will
            use this information for reporting its own errors (such as
            character content that does not match an application's
            business rules).  The information returned by the locator
            is probably not sufficient for use with a search engine.</para>
          <para>Note that the locator will return correct information only
            during the invocation SAX event callbacks after
            <c>#startDocument startDocument</c> returns and before
            <c>#endDocument endDocument</c> is called.  The
            application should not attempt to use it at any other time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#setDocumentLocator(org.xml.sax.Locator)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.setDocumentLocator(org.xml.sax.Locator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFeature (name As String, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFeature(System::String ^ name, bool value);" />
      <MemberSignature Language="C#" Value="public virtual void SetFeature (string? name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.SetFeature(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetFeature : string * bool -&gt; unit&#xA;override this.SetFeature : string * bool -&gt; unit" Usage="validatorHandler.SetFeature (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a non-null fully-qualified URI.</param>
        <param name="value">The requested value of the feature (true or false).</param>
        <summary>Set the value of a feature flag.</summary>
        <remarks>
          <para>Set the value of a feature flag.</para>
          <para>Feature can be used to control the way a <c>ValidatorHandler</c>
            parses schemas, although <c>ValidatorHandler</c>s are not required
            to recognize any specific property names.</para>
          <para>The feature name is any fully-qualified URI.  It is
            possible for a <c>ValidatorHandler</c> to expose a feature value but
            to be unable to change the current value.
            Some feature values may be immutable or mutable only
            in specific contexts, such as before, during, or after
            a validation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/ValidatorHandler#setFeature(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>javax.xml.validation.ValidatorHandler.setFeature(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <see cref="T:Javax.Xml.Validation.ValidatorHandler" /> recognizes the feature name but
            cannot set the requested value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.ValidatorHandler.GetFeature(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetProperty (name As String, object As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetProperty(System::String ^ name, Java::Lang::Object ^ object);" />
      <MemberSignature Language="C#" Value="public virtual void SetProperty (string? name, Java.Lang.Object? object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object object) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.SetProperty(System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : string * Java.Lang.Object -&gt; unit&#xA;override this.SetProperty : string * Java.Lang.Object -&gt; unit" Usage="validatorHandler.SetProperty (name, object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a non-null fully-qualified URI.</param>
        <param name="object">The requested value for the property.</param>
        <summary>Set the value of a property.</summary>
        <remarks>
          <para>Set the value of a property.</para>
          <para>The property name is any fully-qualified URI.  It is
            possible for a <c>ValidatorHandler</c> to recognize a property name but
            to be unable to change the current value.
            Some property values may be immutable or mutable only
            in specific contexts, such as before, during, or after
            a validation.</para>
          <para>
            <c>ValidatorHandler</c>s are not required to recognize setting
            any specific property names.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/ValidatorHandler#setProperty(java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>javax.xml.validation.ValidatorHandler.setProperty(java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <see cref="T:Javax.Xml.Validation.ValidatorHandler" /> recognizes the property name but
            cannot set the requested value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SkippedEntity">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SkippedEntity (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SkippedEntity(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public abstract void SkippedEntity (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SkippedEntity(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.SkippedEntity(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SkippedEntity : string -&gt; unit" Usage="validatorHandler.SkippedEntity name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.SkippedEntity(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("skippedEntity", "(Ljava/lang/String;)V", "GetSkippedEntity_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("skippedEntity", "(Ljava/lang/String;)V", "GetSkippedEntity_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name of the skipped entity.  If it is a
                   parameter entity, the name will begin with '%', and if
                   it is the external DTD subset, it will be the string
                   "[dtd]"</param>
        <summary>Receive notification of a skipped entity.</summary>
        <remarks>
          <para>Receive notification of a skipped entity.
            This is not called for entity references within markup constructs
            such as element start tags or markup declarations.  (The XML
            recommendation requires reporting skipped external entities.
            SAX also reports internal entity expansion/non-expansion, except
            within markup constructs.)</para>
          <para>The Parser will invoke this method each time the entity is
            skipped.  Non-validating processors may skip entities if they
            have not seen the declarations (because, for example, the
            entity was declared in an external DTD subset).  All processors
            may skip external entities, depending on the values of the
            <c>http://xml.org/sax/features/external-general-entities</c>
            and the
            <c>http://xml.org/sax/features/external-parameter-entities</c>
            properties.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#skippedEntity(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.skippedEntity(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDocument">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub StartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StartDocument();" />
      <MemberSignature Language="C#" Value="public abstract void StartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.StartDocument" />
      <MemberSignature Language="F#" Value="abstract member StartDocument : unit -&gt; unit" Usage="validatorHandler.StartDocument " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.StartDocument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive notification of the beginning of a document.</summary>
        <remarks>
          <para>Receive notification of the beginning of a document.</para>
          <para>The SAX parser will invoke this method only once, before any
            other event callbacks (except for <c>#setDocumentLocator
            setDocumentLocator</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#startDocument()" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.startDocument()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartElement">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub StartElement (uri As String, localName As String, qName As String, atts As IAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StartElement(System::String ^ uri, System::String ^ localName, System::String ^ qName, Org::Xml::Sax::IAttributes ^ atts);" />
      <MemberSignature Language="C#" Value="public abstract void StartElement (string? uri, string? localName, string? qName, Org.Xml.Sax.IAttributes? atts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartElement(string uri, string localName, string qName, class Org.Xml.Sax.IAttributes atts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.StartElement(System.String,System.String,System.String,Org.Xml.Sax.IAttributes)" />
      <MemberSignature Language="F#" Value="abstract member StartElement : string * string * string * Org.Xml.Sax.IAttributes -&gt; unit" Usage="validatorHandler.StartElement (uri, localName, qName, atts)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,Org.Xml.Sax.IAttributes)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V", "GetStartElement_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Lorg_xml_sax_Attributes_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V", "GetStartElement_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Lorg_xml_sax_Attributes_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="qName" Type="System.String" />
        <Parameter Name="atts" Type="Org.Xml.Sax.IAttributes" />
      </Parameters>
      <Docs>
        <param name="uri">the Namespace URI, or the empty string if the
                   element has no Namespace URI or if Namespace
                   processing is not being performed</param>
        <param name="localName">the local name (without prefix), or the
                   empty string if Namespace processing is not being
                   performed</param>
        <param name="qName">the qualified name (with prefix), or the
                   empty string if qualified names are not available</param>
        <param name="atts">the attributes attached to the element.  If
                   there are no attributes, it shall be an empty
                   Attributes object.  The value of this object after
                   startElement returns is undefined</param>
        <summary>Receive notification of the beginning of an element.</summary>
        <remarks>
          <para>Receive notification of the beginning of an element.</para>
          <para>The Parser will invoke this method at the beginning of every
            element in the XML document; there will be a corresponding
            <c>#endElement endElement</c> event for every startElement event
            (even when the element is empty). All of the element's content will be
            reported, in order, before the corresponding endElement
            event.</para>
          <para>This event allows up to three name components for each
            element:</para>
          <para>&lt;ol&gt;
            &lt;li&gt;the Namespace URI;&lt;/li&gt;
            &lt;li&gt;the local name; and&lt;/li&gt;
            &lt;li&gt;the qualified (prefixed) name.&lt;/li&gt;
            &lt;/ol&gt;</para>
          <para>Any or all of these may be provided, depending on the
            values of the &lt;var&gt;http://xml.org/sax/features/namespaces&lt;/var&gt;
            and the &lt;var&gt;http://xml.org/sax/features/namespace-prefixes&lt;/var&gt;
            properties:</para>
          <para>&lt;ul&gt;
            &lt;li&gt;the Namespace URI and local name are required when
            the namespaces property is &lt;var&gt;true&lt;/var&gt; (the default), and are
            optional when the namespaces property is &lt;var&gt;false&lt;/var&gt; (if one is
            specified, both must be);&lt;/li&gt;
            &lt;li&gt;the qualified name is required when the namespace-prefixes property
            is &lt;var&gt;true&lt;/var&gt;, and is optional when the namespace-prefixes property
            is &lt;var&gt;false&lt;/var&gt; (the default).&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Note that the attribute list provided will contain only
            attributes with explicit values (specified or defaulted):
            #IMPLIED attributes will be omitted.  The attribute list
            will contain attributes used for Namespace declarations
            (xmlns* attributes) only if the
            <c>http://xml.org/sax/features/namespace-prefixes</c>
            property is true (it is false by default, and support for a
            true value is optional).</para>
          <para>Like <c>#characters characters()</c>, attribute values may have
            characters that need more than one <c>char</c> value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#startElement(java.lang.String,%20java.lang.String,%20java.lang.String,%20org.xml.sax.Attributes)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPrefixMapping">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub StartPrefixMapping (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StartPrefixMapping(System::String ^ prefix, System::String ^ uri);" />
      <MemberSignature Language="C#" Value="public abstract void StartPrefixMapping (string? prefix, string? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartPrefixMapping(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.ValidatorHandler.StartPrefixMapping(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member StartPrefixMapping : string * string -&gt; unit" Usage="validatorHandler.StartPrefixMapping (prefix, uri)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.StartPrefixMapping(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startPrefixMapping", "(Ljava/lang/String;Ljava/lang/String;)V", "GetStartPrefixMapping_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startPrefixMapping", "(Ljava/lang/String;Ljava/lang/String;)V", "GetStartPrefixMapping_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">the Namespace prefix being declared.
               An empty string is used for the default element namespace,
               which has no prefix.</param>
        <param name="uri">the Namespace URI the prefix is mapped to</param>
        <summary>Begin the scope of a prefix-URI Namespace mapping.</summary>
        <remarks>
          <para>Begin the scope of a prefix-URI Namespace mapping.</para>
          <para>The information from this event is not necessary for
            normal Namespace processing: the SAX XML reader will
            automatically replace prefixes for element and attribute
            names when the <c>http://xml.org/sax/features/namespaces</c>
            feature is &lt;var&gt;true&lt;/var&gt; (the default).</para>
          <para>There are cases, however, when applications need to
            use prefixes in character data or in attribute values,
            where they cannot safely be expanded automatically; the
            start/endPrefixMapping event supplies the information
            to the application to expand prefixes in those contexts
            itself, if necessary.</para>
          <para>Note that start/endPrefixMapping events are not
            guaranteed to be properly nested relative to each other:
            all startPrefixMapping events will occur immediately before the
            corresponding <c>#startElement startElement</c> event,
            and all <c>#endPrefixMapping endPrefixMapping</c>
            events will occur immediately after the corresponding
            <c>#endElement endElement</c> event,
            but their order is not otherwise
            guaranteed.</para>
          <para>There should never be start/endPrefixMapping events for the
            "xml" prefix, since it is predeclared and immutable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ContentHandler#startPrefixMapping(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ContentHandler.startPrefixMapping(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.ValidatorHandler.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Xml.Validation.ValidatorHandler.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.ValidatorHandler.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Xml.Validation.ValidatorHandler.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInfoProvider">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeInfoProvider As TypeInfoProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Javax::Xml::Validation::TypeInfoProvider ^ TypeInfoProvider { Javax::Xml::Validation::TypeInfoProvider ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Validation.TypeInfoProvider? TypeInfoProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Validation.TypeInfoProvider TypeInfoProvider" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.ValidatorHandler.TypeInfoProvider" />
      <MemberSignature Language="F#" Value="member this.TypeInfoProvider : Javax.Xml.Validation.TypeInfoProvider" Usage="Javax.Xml.Validation.ValidatorHandler.TypeInfoProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTypeInfoProvider", "()Ljavax/xml/validation/TypeInfoProvider;", "GetGetTypeInfoProviderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTypeInfoProvider", "()Ljavax/xml/validation/TypeInfoProvider;", "GetGetTypeInfoProviderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.TypeInfoProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the <see cref="T:Javax.Xml.Validation.TypeInfoProvider" /> implementation of this
 <see cref="T:Javax.Xml.Validation.ValidatorHandler" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
