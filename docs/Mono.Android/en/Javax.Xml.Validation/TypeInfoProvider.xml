<Type Name="TypeInfoProvider" FullName="Javax.Xml.Validation.TypeInfoProvider">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeInfoProvider&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeInfoProvider abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class TypeInfoProvider : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeInfoProvider extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Xml.Validation.TypeInfoProvider" />
  <TypeSignature Language="F#" Value="type TypeInfoProvider = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/xml/validation/TypeInfoProvider", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/xml/validation/TypeInfoProvider", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>This class provides access to the type information determined
            by <c>ValidatorHandler</c>.</summary>
    <remarks>
      <para>This class provides access to the type information determined
            by <c>ValidatorHandler</c>.</para>
      <para>Some schema languages, such as W3C XML Schema, encourages a validator
            to report the "type" it assigns to each attribute/element.
            Those applications who wish to access this type information can invoke
            methods defined on this "interface" to access such type information.</para>
      <para>Implementation of this "interface" can be obtained through the
            <c>ValidatorHandler#getTypeInfoProvider()</c> method.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/xml/validation/TypeInfoProvider" title="Reference documentation">Java documentation for <code>javax.xml.validation.TypeInfoProvider</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeInfoProvider();" />
      <MemberSignature Language="C#" Value="protected TypeInfoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.TypeInfoProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructor for the derived class.</summary>
        <remarks>
          <para>Constructor for the derived class.</para>
          <para>The constructor does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/TypeInfoProvider#TypeInfoProvider()" title="Reference documentation">Java documentation for <code>javax.xml.validation.TypeInfoProvider.TypeInfoProvider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeInfoProvider(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected TypeInfoProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.TypeInfoProvider.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Xml.Validation.TypeInfoProvider : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Xml.Validation.TypeInfoProvider" Usage="new Javax.Xml.Validation.TypeInfoProvider (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementTypeInfo">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ElementTypeInfo As ITypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Org::W3c::Dom::ITypeInfo ^ ElementTypeInfo { Org::W3c::Dom::ITypeInfo ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.ITypeInfo? ElementTypeInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.ITypeInfo ElementTypeInfo" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.TypeInfoProvider.ElementTypeInfo" />
      <MemberSignature Language="F#" Value="member this.ElementTypeInfo : Org.W3c.Dom.ITypeInfo" Usage="Javax.Xml.Validation.TypeInfoProvider.ElementTypeInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getElementTypeInfo", "()Lorg/w3c/dom/TypeInfo;", "GetGetElementTypeInfoHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getElementTypeInfo", "()Lorg/w3c/dom/TypeInfo;", "GetGetElementTypeInfoHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.ITypeInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalStateException">If this method is called from other <see cref="T:Org.Xml.Sax.IContentHandler" />
      methods.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeTypeInfo">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttributeTypeInfo (index As Integer) As ITypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Org::W3c::Dom::ITypeInfo ^ GetAttributeTypeInfo(int index);" />
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.ITypeInfo? GetAttributeTypeInfo (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.ITypeInfo GetAttributeTypeInfo(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.TypeInfoProvider.GetAttributeTypeInfo(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeTypeInfo : int -&gt; Org.W3c.Dom.ITypeInfo" Usage="typeInfoProvider.GetAttributeTypeInfo index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttributeTypeInfo", "(I)Lorg/w3c/dom/TypeInfo;", "GetGetAttributeTypeInfo_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttributeTypeInfo", "(I)Lorg/w3c/dom/TypeInfo;", "GetGetAttributeTypeInfo_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.ITypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the attribute. The same index for
                 the <c>org.xml.sax.Attributes</c> object passed to the
                 <c>startElement</c> callback.</param>
        <summary>Returns the immutable <c>TypeInfo</c> object for the specified
            attribute of the current element.</summary>
        <returns>An immutable <c>TypeInfo</c> object that represents the
                 type of the specified attribute.
                 Note that the caller can keep references to the obtained
                 <c>TypeInfo</c> longer than the callback scope.
            
                 Otherwise, this method returns
                 null if the validator is unable to
                 determine the type.</returns>
        <remarks>
          <para>Returns the immutable <c>TypeInfo</c> object for the specified
            attribute of the current element.</para>
          <para>The method may only be called by the startElement event of
            the <c>org.xml.sax.ContentHandler</c> that the application sets to the
            <c>ValidatorHandler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/TypeInfoProvider#getAttributeTypeInfo(int)" title="Reference documentation">Java documentation for <code>javax.xml.validation.TypeInfoProvider.getAttributeTypeInfo(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">If the index is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If this method is called from other <see cref="T:Org.Xml.Sax.IContentHandler" />
      methods.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsIdAttribute">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsIdAttribute (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsIdAttribute(int index);" />
      <MemberSignature Language="C#" Value="public abstract bool IsIdAttribute (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdAttribute(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.TypeInfoProvider.IsIdAttribute(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsIdAttribute : int -&gt; bool" Usage="typeInfoProvider.IsIdAttribute index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isIdAttribute", "(I)Z", "GetIsIdAttribute_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isIdAttribute", "(I)Z", "GetIsIdAttribute_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the attribute. The same index for
                 the <c>org.xml.sax.Attributes</c> object passed to the
                 <c>startElement</c> callback.</param>
        <summary>Returns <c>true</c> if the specified attribute is determined
            to be ID.</summary>
        <returns>true
                 if the type of the specified attribute is ID.</returns>
        <remarks>
          <para>Returns <c>true</c> if the specified attribute is determined
            to be ID.</para>
          <para>Exactly how an attribute is "determined to be ID" is up to the
            schema language. In case of W3C XML Schema, this means
            that the actual type of the attribute is the built-in ID type
            or its derived type.</para>
          <para>A <c>javax.xml.parsers.DocumentBuilder</c> uses this information
            to properly implement <c>org.w3c.dom.Attr#isId()</c>.</para>
          <para>The method may only be called by the startElement event of
            the <c>org.xml.sax.ContentHandler</c> that the application sets to the
            <c>ValidatorHandler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/TypeInfoProvider#isIdAttribute(int)" title="Reference documentation">Java documentation for <code>javax.xml.validation.TypeInfoProvider.isIdAttribute(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">If the index is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If this method is called from other <see cref="T:Org.Xml.Sax.IContentHandler" />
      methods.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSpecified">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSpecified (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSpecified(int index);" />
      <MemberSignature Language="C#" Value="public abstract bool IsSpecified (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSpecified(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Validation.TypeInfoProvider.IsSpecified(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsSpecified : int -&gt; bool" Usage="typeInfoProvider.IsSpecified index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSpecified", "(I)Z", "GetIsSpecified_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSpecified", "(I)Z", "GetIsSpecified_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the attribute. The same index for
                 the <c>org.xml.sax.Attributes</c> object passed to the
                 <c>startElement</c> callback.</param>
        <summary>Returns <c>false</c> if the attribute was added by the validator.</summary>
        <returns>
          <c>true</c> if the attribute was present before the validator
                 processes input. <c>false</c> if the attribute was added
                 by the validator.</returns>
        <remarks>
          <para>Returns <c>false</c> if the attribute was added by the validator.</para>
          <para>This method provides information necessary for
            a <c>javax.xml.parsers.DocumentBuilder</c> to determine what
            the DOM tree should return from the <c>org.w3c.dom.Attr#getSpecified()</c> method.</para>
          <para>The method may only be called by the startElement event of
            the <c>org.xml.sax.ContentHandler</c> that the application sets to the
            <c>ValidatorHandler</c>.</para>
          <para>A general guideline for validators is to return true if
            the attribute was originally present in the pipeline, and
            false if it was added by the validator.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/validation/TypeInfoProvider#isSpecified(int)" title="Reference documentation">Java documentation for <code>javax.xml.validation.TypeInfoProvider.isSpecified(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">If the index is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If this method is called from other <see cref="T:Org.Xml.Sax.IContentHandler" />
      methods.</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.TypeInfoProvider.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Xml.Validation.TypeInfoProvider.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.TypeInfoProvider.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Xml.Validation.TypeInfoProvider.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Validation.TypeInfoProvider.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Xml.Validation.TypeInfoProvider.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
