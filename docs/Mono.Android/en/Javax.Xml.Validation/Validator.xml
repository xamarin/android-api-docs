<Type Name="Validator" FullName="Javax.Xml.Validation.Validator">
  <TypeSignature Language="C#" Value="public abstract class Validator : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Validator extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/validation/Validator", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">A processor that checks an XML document against <c><see cref="T:Javax.Xml.Validation.Schema" /></c>.</para>
      <para tool="javadoc-to-mdoc">
 A validator is a thread-unsafe and non-reentrant object.
 In other words, it is the application's responsibility to make
 sure that one <c><see cref="T:Javax.Xml.Validation.Validator" /></c> object is not used from
 more than one thread at any given time, and while the <c>validate</c>
 method is invoked, applications may not recursively call
 the <c>validate</c> method.
 </para>
      <para tool="javadoc-to-mdoc">

 Note that while the <c><see cref="M:Javax.Xml.Validation.Validator.Validate(Javax.Xml.Transform.ISource)" /></c> and <c><see cref="M:Javax.Xml.Validation.Validator.Validate(Javax.Xml.Transform.ISource,Javax.Xml.Transform.IResult)" /></c>
 methods take a <c><see cref="T:Javax.Xml.Transform.ISource" /></c> instance, the <c>Source</c>
 instance must be a <c>SAXSource</c>, <c>DOMSource</c>, <c>StAXSource</c> or <c>StreamSource</c>.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Validator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructor for derived classes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructor for derived classes.

 </para>
          <para tool="javadoc-to-mdoc">
 The constructor does nothing.

 </para>
          <para tool="javadoc-to-mdoc">
 Derived classes must create <c><see cref="T:Javax.Xml.Validation.Validator" /></c> objects that have
 <c>null</c><c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> and
 <c>null</c><c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#Validator()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Validator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandler">
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IErrorHandler ErrorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IErrorHandler ErrorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getErrorHandler", "()Lorg/xml/sax/ErrorHandler;", "GetGetErrorHandlerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IErrorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> set to this <c><see cref="T:Javax.Xml.Validation.Validator" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#getErrorHandler()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the current <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> set to this <c><see cref="T:Javax.Xml.Validation.Validator" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#setErrorHandler(org.xml.sax.ErrorHandler)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> to receive errors encountered
 during the <c>validate</c> method invocation.

 
 Error handler can be used to customize the error handling process
 during a validation. When an <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is set,
 errors found during the validation will be first sent
 to the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>.

 
 The error handler can abort further validation immediately
 by throwing <c><see cref="T:Org.Xml.Sax.SAXException" /></c> from the handler. Or for example
 it can print an error to the screen and try to continue the
 validation by returning normally from the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>
 If any <c><see cref="T:Java.Lang.Throwable" /></c> is thrown from an <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>,
 the caller of the <c>validate</c> method will be thrown
 the same <c><see cref="T:Java.Lang.Throwable" /></c> object.

 <c><see cref="T:Javax.Xml.Validation.Validator" /></c> is not allowed to
 throw <c><see cref="T:Org.Xml.Sax.SAXException" /></c> without first reporting it to
 <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>.

 
 When the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is null, the implementation will
 behave as if the following <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is set:
 <example><code lang="java">
 class DraconianErrorHandler implements ErrorHandler {
     public void fatalError( SAXParseException e ) throws SAXException {
         throw e;
     }
     public void error( SAXParseException e ) throws SAXException {
         throw e;
     }
     public void warning( SAXParseException e ) throws SAXException {
         // noop
     }
 }
 </code></example>
 When a new <c><see cref="T:Javax.Xml.Validation.Validator" /></c> object is created, initially
 this field is set to null.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.Validator.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public virtual bool GetFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a non-null fully-qualified URI.</param>
        <summary>Look up the value of a feature flag.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Look up the value of a feature flag.

 </para>
          <para tool="javadoc-to-mdoc">The feature name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.Validator" /></c> to recognize a feature name but
 temporarily be unable to return its value.
 Some feature values may be available only in specific
 contexts, such as before, during, or after a validation.

 </para>
          <para tool="javadoc-to-mdoc">Implementors are free (and encouraged) to invent their own features,
 using names built on their own URIs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#getFeature(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.Validator" /></c> recognizes the feature name but
            cannot determine its value at this time.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.Validator.SetFeature(System.String, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a non-null fully-qualified URI.</param>
        <summary>Look up the value of a property.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Look up the value of a property.

 </para>
          <para tool="javadoc-to-mdoc">The property name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.Validator" /></c> to recognize a property name but
 temporarily be unable to return its value.
 Some property values may be available only in specific
 contexts, such as before, during, or after a validation.</para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="T:Javax.Xml.Validation.Validator" />
            </c>s are not required to recognize any specific
 property names.</para>
          <para tool="javadoc-to-mdoc">Implementors are free (and encouraged) to invent their own properties,
 using names built on their own URIs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#getProperty(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the property name but
            cannot determine its value at this time.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.Validator.SetProperty(System.String, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public abstract void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Reset this <c>Validator</c> to its original configuration.</para>
          <para tool="javadoc-to-mdoc">
            <c>Validator</c> is reset to the same state as when it was created with
 <c><see cref="M:Javax.Xml.Validation.Schema.NewValidator" /></c>.
 <c>reset()</c> is designed to allow the reuse of existing <c>Validator</c>s
 thus saving resources associated with the creation of new <c>Validator</c>s.</para>
          <para tool="javadoc-to-mdoc">The reset <c>Validator</c> is not guaranteed to have the same <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> or <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c><c>Object</c>s, e.g. <c><see cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" /></c>.  It is guaranteed to have a functionally equal
 <c>LSResourceResolver</c> and <c>ErrorHandler</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ResourceResolver">
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.LS.ILSResourceResolver ResourceResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.LS.ILSResourceResolver ResourceResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getResourceResolver", "()Lorg/w3c/dom/ls/LSResourceResolver;", "GetGetResourceResolverHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setResourceResolver", "(Lorg/w3c/dom/ls/LSResourceResolver;)V", "GetSetResourceResolver_Lorg_w3c_dom_ls_LSResourceResolver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.LS.ILSResourceResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> set to this <c><see cref="T:Javax.Xml.Validation.Validator" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#getResourceResolver()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the current <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> set to this <c><see cref="T:Javax.Xml.Validation.Validator" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> to customize
 resource resolution while in a validation episode.

 <c><see cref="T:Javax.Xml.Validation.Validator" /></c> uses a <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c>
 when it needs to locate external resources while a validation,
 although exactly what constitutes "locating external resources" is
 up to each schema language.

 
 When the <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> is null, the implementation will
 behave as if the following <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> is set:
 <example><code lang="java">
 class DumbLSResourceResolver implements LSResourceResolver {
     public LSInput resolveResource(
         String publicId, String systemId, String baseURI) {

         return null; // always return null
     }
 }
 </code></example>
 If a <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> throws a <c><see cref="T:Java.Lang.RuntimeException" /></c>
  (or instances of its derived classes),
 then the <c><see cref="T:Javax.Xml.Validation.Validator" /></c> will abort the parsing and
 the caller of the <c>validate</c> method will receive
 the same <c><see cref="T:Java.Lang.RuntimeException" /></c>.

 
 When a new <c><see cref="T:Javax.Xml.Validation.Validator" /></c> object is created, initially
 this field is set to null.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.Validator.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public virtual void SetFeature (string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a non-null fully-qualified URI.</param>
        <param name="value">The requested value of the feature (true or false).</param>
        <summary>Set the value of a feature flag.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the value of a feature flag.

 </para>
          <para tool="javadoc-to-mdoc">
 Feature can be used to control the way a <c><see cref="T:Javax.Xml.Validation.Validator" /></c>
 parses schemas, although <c><see cref="T:Javax.Xml.Validation.Validator" /></c>s are not required
 to recognize any specific property names.</para>
          <para tool="javadoc-to-mdoc">The feature name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.Validator" /></c> to expose a feature value but
 to be unable to change the current value.
 Some feature values may be immutable or mutable only
 in specific contexts, such as before, during, or after
 a validation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#setFeature(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.Validator" /></c> recognizes the feature name but
            cannot set the requested value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.Validator.GetFeature(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public virtual void SetProperty (string name, Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a non-null fully-qualified URI.</param>
        <param name="object">The requested value for the property.</param>
        <summary>Set the value of a property.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the value of a property.

 </para>
          <para tool="javadoc-to-mdoc">The property name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.Validator" /></c> to recognize a property name but
 to be unable to change the current value.
 Some property values may be immutable or mutable only
 in specific contexts, such as before, during, or after
 a validation.</para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="T:Javax.Xml.Validation.Validator" />
            </c>s are not required to recognize setting
 any specific property names.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#setProperty(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.Validator" /></c> recognizes the property name but
            cannot set the requested value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">When the name parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (Javax.Xml.Transform.ISource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class Javax.Xml.Transform.ISource source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("validate", "(Ljavax/xml/transform/Source;)V", "GetValidate_Ljavax_xml_transform_Source_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Javax.Xml.Transform.ISource" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>Validates the specified input.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Validates the specified input.

 </para>
          <para tool="javadoc-to-mdoc">
 This is just a convenience method of:
 <example><code lang="java">
 validate(source,null);
 </code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#validate(javax.xml.transform.Source)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="P:Javax.Xml.Validation.Validator.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract void Validate (Javax.Xml.Transform.ISource source, Javax.Xml.Transform.IResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class Javax.Xml.Transform.ISource source, class Javax.Xml.Transform.IResult result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("validate", "(Ljavax/xml/transform/Source;Ljavax/xml/transform/Result;)V", "GetValidate_Ljavax_xml_transform_Source_Ljavax_xml_transform_Result_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Javax.Xml.Transform.ISource" />
        <Parameter Name="result" Type="Javax.Xml.Transform.IResult" />
      </Parameters>
      <Docs>
        <param name="source">XML to be validated. Must not be null.</param>
        <param name="result">The <c><see cref="T:Javax.Xml.Transform.Result" /></c> object that receives (possibly augmented)
      XML. This parameter can be null if the caller is not interested
      in it.

      Note that when a <c><see cref="T:Javax.Xml.Transform.Dom.DOMResult" /></c> is used,
      a validator might just pass the same DOM node from
      <c><see cref="T:Javax.Xml.Transform.Dom.DOMSource" /></c> to
      <c><see cref="T:Javax.Xml.Transform.Dom.DOMResult" /></c>
      (in which case <c>source.getNode()==result.getNode()</c>),
      it might copy the entire DOM tree, or it might alter the
      node given by the source.</param>
        <summary>Validates the specified input and send the augmented validation
 result to the specified output.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Validates the specified input and send the augmented validation
 result to the specified output.

 </para>
          <para tool="javadoc-to-mdoc">
 This method places the following restrictions on the types of
 the <c><see cref="T:Javax.Xml.Transform.ISource" /></c>/<c><see cref="T:Javax.Xml.Transform.Result" /></c> accepted.

 <format type="text/html"><h4><c><see cref="T:Javax.Xml.Transform.ISource" /></c>/<c><see cref="T:Javax.Xml.Transform.Result" /></c> accepted:</h4></format><format type="text/html"><table border="1"><thead><tr><td /><td><c><see cref="T:Javax.Xml.Transform.Sax.SAXSource" /></c></td><td><c><see cref="T:Javax.Xml.Transform.Dom.DOMSource" /></c></td><td><c><see cref="T:Javax.Xml.Transform.Stream.StreamSource" /></c></td></tr></thead><tbody><tr><td><c>null</c></td><td>OK</td><td>OK</td><td>OK</td><td>OK</td></tr><tr><td><c><see cref="T:Javax.Xml.Transform.Sax.SAXResult" /></c></td><td>OK</td><td>Err</td><td>Err</td><td>Err</td></tr><tr><td><c><see cref="T:Javax.Xml.Transform.Dom.DOMResult" /></c></td><td>Err</td><td>OK</td><td>Err</td><td>Err</td></tr><tr><td><c><see cref="T:Javax.Xml.Transform.Stream.StreamResult" /></c></td><td>Err</td><td>Err</td><td>Err</td><td>OK</td></tr></tbody></table></format></para>
          <para tool="javadoc-to-mdoc">
 To validate one <c><see cref="T:Javax.Xml.Transform.ISource" /></c> into another kind of <c><see cref="T:Javax.Xml.Transform.Result" /></c>, use the identity transformer
 (see <c><see cref="M:Javax.Xml.Transform.TransformerFactory.NewTransformer" /></c>).

 </para>
          <para tool="javadoc-to-mdoc">
 Errors found during the validation is sent to the specified
 <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">
 If a document is valid, or if a document contains some errors
 but none of them were fatal and the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> didn't
 throw any exception, then the method returns normally.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/validation/Validator.html#validate(javax.xml.transform.Source, javax.xml.transform.Result)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the <c><see cref="T:Javax.Xml.Transform.Result" /></c> type doesn't match the <c><see cref="T:Javax.Xml.Transform.ISource" /></c> type,
      or if the specified source is not a
      <c><see cref="T:Javax.Xml.Transform.Sax.SAXSource" /></c>,
      <c><see cref="T:Javax.Xml.Transform.Dom.DOMSource" /></c> or
      <c><see cref="T:Javax.Xml.Transform.Stream.StreamSource" /></c>.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> throws a <c><see cref="T:Org.Xml.Sax.SAXException" /></c> or
      if a fatal error is found and the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> returns
      normally.</exception>
        <exception cref="T:Java.IO.IOException">If the validator is processing a
      <c><see cref="T:Javax.Xml.Transform.Sax.SAXSource" /></c> and the
      underlying <c><see cref="T:Org.Xml.Sax.IXMLReader" /></c> throws an
      <c><see cref="T:Java.IO.IOException" /></c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">If the <c>source</c> parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.Validator.Validate(Javax.Xml.Transform.ISource)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ValidateAsync (Javax.Xml.Transform.ISource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ValidateAsync(class Javax.Xml.Transform.ISource source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Javax.Xml.Transform.ISource" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ValidateAsync (Javax.Xml.Transform.ISource source, Javax.Xml.Transform.IResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ValidateAsync(class Javax.Xml.Transform.ISource source, class Javax.Xml.Transform.IResult result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Javax.Xml.Transform.ISource" />
        <Parameter Name="result" Type="Javax.Xml.Transform.IResult" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
