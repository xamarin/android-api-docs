<Type Name="IChronology" FullName="Java.Time.Chrono.IChronology">
  <TypeSignature Language="VB.NET" Value="Public Interface IChronology&#xA;Implements IComparable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChronology : IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IComparable" />
  <TypeSignature Language="C#" Value="public interface IChronology : IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IChronology implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IComparable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Time.Chrono.IChronology" />
  <TypeSignature Language="F#" Value="type IChronology = interface&#xA;    interface IComparable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/time/chrono/Chronology", "", "Java.Time.Chrono.IChronologyInvoker", ApiSince=26)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/time/chrono/Chronology", "", "Java.Time.Chrono.IChronologyInvoker", ApiSince=26)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A calendar system, used to organize and identify dates.</summary>
    <remarks>
      <para>A calendar system, used to organize and identify dates.</para>
      <para>The main date and time API is built on the ISO calendar system.
            The chronology operates behind the scenes to represent the general concept of a calendar system.
            For example, the Japanese, Minguo, Thai Buddhist and others.</para>
      <para>Most other calendar systems also operate on the shared concepts of year, month and day,
            linked to the cycles of the Earth around the Sun, and the Moon around the Earth.
            These shared concepts are defined by <c>ChronoField</c> and are available
            for use by any <c>Chronology</c> implementation:</para>
      <code lang="text/java">LocalDate isoDate = ...
              ThaiBuddhistDate thaiDate = ...
              int isoYear = isoDate.get(ChronoField.YEAR);
              int thaiYear = thaiDate.get(ChronoField.YEAR);
            </code>
      <para>As shown, although the date objects are in different calendar systems, represented by different
            <c>Chronology</c> instances, both can be queried using the same constant on <c>ChronoField</c>.
            For a full discussion of the implications of this, see <c>ChronoLocalDate</c>.
            In general, the advice is to use the known ISO-based <c>LocalDate</c>, rather than
            <c>ChronoLocalDate</c>.</para>
      <para>While a <c>Chronology</c> object typically uses <c>ChronoField</c> and is based on
            an era, year-of-era, month-of-year, day-of-month model of a date, this is not required.
            A <c>Chronology</c> instance may represent a totally different kind of calendar system,
            such as the Mayan.</para>
      <para>In practical terms, the <c>Chronology</c> instance also acts as a factory.
            The <c>#of(String)</c> method allows an instance to be looked up by identifier,
            while the <c>#ofLocale(Locale)</c> method allows lookup by locale.</para>
      <para>The <c>Chronology</c> instance provides a set of methods to create <c>ChronoLocalDate</c> instances.
            The date classes are used to manipulate specific dates.
            &lt;ul&gt;
            &lt;li&gt; <c>#dateNow() dateNow()</c>&lt;li&gt; <c>#dateNow(Clock) dateNow(clock)</c>&lt;li&gt; <c>#dateNow(ZoneId) dateNow(zone)</c>&lt;li&gt; <c>#date(int, int, int) date(yearProleptic, month, day)</c>&lt;li&gt; <c>#date(Era, int, int, int) date(era, yearOfEra, month, day)</c>&lt;li&gt; <c>#dateYearDay(int, int) dateYearDay(yearProleptic, dayOfYear)</c>&lt;li&gt; <c>#dateYearDay(Era, int, int) dateYearDay(era, yearOfEra, dayOfYear)</c>&lt;li&gt; <c>#date(TemporalAccessor) date(TemporalAccessor)</c>&lt;/ul&gt;
            
            &lt;h2 id="addcalendars"&gt;Adding New Calendars&lt;/h2&gt;
            The set of available chronologies can be extended by applications.
            Adding a new calendar system requires the writing of an implementation of
            <c>Chronology</c>, <c>ChronoLocalDate</c> and <c>Era</c>.
            The majority of the logic specific to the calendar system will be in the
            <c>ChronoLocalDate</c> implementation.
            The <c>Chronology</c> implementation acts as a factory.</para>
      <para>To permit the discovery of additional chronologies, the <c>java.util.ServiceLoader ServiceLoader</c>
            is used. A file must be added to the <c>META-INF/services</c> directory with the
            name 'java.time.chrono.Chronology' listing the implementation classes.
            See the ServiceLoader for more details on service loading.
            For lookup by id or calendarType, the system provided calendars are found
            first followed by application provided calendars.</para>
      <para>Each chronology must define a chronology ID that is unique within the system.
            If the chronology represents a calendar system defined by the
            CLDR specification then the calendar type is the concatenation of the
            CLDR type and, if applicable, the CLDR variant.</para>
      <para>Added in 1.8.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/time/chrono/Chronology" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailableChronologies">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AvailableChronologies As ICollection(Of IChronology)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::ICollection&lt;Java::Time::Chrono::IChronology ^&gt; ^ AvailableChronologies { System::Collections::Generic::ICollection&lt;Java::Time::Chrono::IChronology ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;Java.Time.Chrono.IChronology&gt;? AvailableChronologies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.ICollection`1&lt;class Java.Time.Chrono.IChronology&gt; AvailableChronologies" />
      <MemberSignature Language="DocId" Value="P:Java.Time.Chrono.IChronology.AvailableChronologies" />
      <MemberSignature Language="F#" Value="member this.AvailableChronologies : System.Collections.Generic.ICollection&lt;Java.Time.Chrono.IChronology&gt;" Usage="Java.Time.Chrono.IChronology.AvailableChronologies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAvailableChronologies", "()Ljava/util/Set;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAvailableChronologies", "()Ljava/util/Set;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Time.Chrono.IChronology&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the available chronologies.</summary>
        <value>the independent, modifiable set of the available chronology IDs, not null</value>
        <remarks>
          <para>Returns the available chronologies.</para>
          <para>Each returned <c>Chronology</c> is available for use in the system.
            The set of chronologies includes the system chronologies and
            any chronologies provided by the application via ServiceLoader
            configuration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#getAvailableChronologies()" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.getAvailableChronologies()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarType">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalendarType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CalendarType { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? CalendarType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CalendarType" />
      <MemberSignature Language="DocId" Value="P:Java.Time.Chrono.IChronology.CalendarType" />
      <MemberSignature Language="F#" Value="member this.CalendarType : string" Usage="Java.Time.Chrono.IChronology.CalendarType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCalendarType", "()Ljava/lang/String;", "GetGetCalendarTypeHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCalendarType", "()Ljava/lang/String;", "GetGetCalendarTypeHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As IChronology) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(Java::Time::Chrono::IChronology ^ other);" />
      <MemberSignature Language="C#" Value="public int CompareTo (Java.Time.Chrono.IChronology? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.Time.Chrono.IChronology other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.CompareTo(Java.Time.Chrono.IChronology)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Java.Time.Chrono.IChronology -&gt; int" Usage="iChronology.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/time/chrono/Chronology;)I", "GetCompareTo_Ljava_time_chrono_Chronology_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/time/chrono/Chronology;)I", "GetCompareTo_Ljava_time_chrono_Chronology_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Time.Chrono.IChronology" />
      </Parameters>
      <Docs>
        <param name="other">the other chronology to compare to, not null</param>
        <summary>Compares this chronology to another chronology.</summary>
        <returns>the comparator value, negative if less, positive if greater</returns>
        <remarks>
          <para>Compares this chronology to another chronology.</para>
          <para>The comparison order first by the chronology ID string, then by any
            additional information specific to the subclass.
            It is "consistent with equals", as defined by <c>Comparable</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#compareTo(java.time.chrono.Chronology)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.compareTo(java.time.chrono.Chronology)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="VB.NET" Value="Public Function Date (temporal As ITemporalAccessor) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Time::Chrono::IChronoLocalDate ^ Date(Java::Time::Temporal::ITemporalAccessor ^ temporal);" />
      <MemberSignature Language="C#" Value="public Java.Time.Chrono.IChronoLocalDate? Date (Java.Time.Temporal.ITemporalAccessor? temporal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate Date(class Java.Time.Temporal.ITemporalAccessor temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.Date(Java.Time.Temporal.ITemporalAccessor)" />
      <MemberSignature Language="F#" Value="abstract member Date : Java.Time.Temporal.ITemporalAccessor -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.Date temporal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("date", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDate;", "GetDate_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("date", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDate;", "GetDate_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temporal" Type="Java.Time.Temporal.ITemporalAccessor" />
      </Parameters>
      <Docs>
        <param name="temporal">the temporal object to convert, not null</param>
        <summary>Obtains a local date in this chronology from another temporal object.</summary>
        <returns>the local date in this chronology, not null</returns>
        <remarks>
          <para>Obtains a local date in this chronology from another temporal object.</para>
          <para>This obtains a date in this chronology based on the specified temporal.
            A <c>TemporalAccessor</c> represents an arbitrary set of date and time information,
            which this factory converts to an instance of <c>ChronoLocalDate</c>.</para>
          <para>The conversion typically uses the <c>ChronoField#EPOCH_DAY EPOCH_DAY</c>
            field, which is standardized across calendar systems.</para>
          <para>This method matches the signature of the functional interface <c>TemporalQuery</c>
            allowing it to be used as a query via method reference, <c>aChronology::date</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#date(java.time.temporal.TemporalAccessor)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.date(java.time.temporal.TemporalAccessor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="VB.NET" Value="Public Function Date (prolepticYear As Integer, month As Integer, dayOfMonth As Integer) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Time::Chrono::IChronoLocalDate ^ Date(int prolepticYear, int month, int dayOfMonth);" />
      <MemberSignature Language="C#" Value="public Java.Time.Chrono.IChronoLocalDate? Date (int prolepticYear, int month, int dayOfMonth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate Date(int32 prolepticYear, int32 month, int32 dayOfMonth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.Date(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Date : int * int * int -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.Date (prolepticYear, month, dayOfMonth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("date", "(III)Ljava/time/chrono/ChronoLocalDate;", "GetDate_IIIHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("date", "(III)Ljava/time/chrono/ChronoLocalDate;", "GetDate_IIIHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prolepticYear" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="dayOfMonth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="prolepticYear">the chronology proleptic-year</param>
        <param name="month">the chronology month-of-year</param>
        <param name="dayOfMonth">the chronology day-of-month</param>
        <summary>Obtains a local date in this chronology from the proleptic-year,
            month-of-year and day-of-month fields.</summary>
        <returns>the local date in this chronology, not null</returns>
        <remarks>
          <para>Obtains a local date in this chronology from the proleptic-year,
            month-of-year and day-of-month fields.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#date(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.date(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Date (era As IEra, yearOfEra As Integer, month As Integer, dayOfMonth As Integer) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoLocalDate ^ Date(Java::Time::Chrono::IEra ^ era, int yearOfEra, int month, int dayOfMonth);" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoLocalDate? Date (Java.Time.Chrono.IEra? era, int yearOfEra, int month, int dayOfMonth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate Date(class Java.Time.Chrono.IEra era, int32 yearOfEra, int32 month, int32 dayOfMonth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.Date(Java.Time.Chrono.IEra,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Date : Java.Time.Chrono.IEra * int * int * int -&gt; Java.Time.Chrono.IChronoLocalDate&#xA;override this.Date : Java.Time.Chrono.IEra * int * int * int -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.Date (era, yearOfEra, month, dayOfMonth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("date", "(Ljava/time/chrono/Era;III)Ljava/time/chrono/ChronoLocalDate;", "GetDate_Ljava_time_chrono_Era_IIIHandler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("date", "(Ljava/time/chrono/Era;III)Ljava/time/chrono/ChronoLocalDate;", "GetDate_Ljava_time_chrono_Era_IIIHandler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="Java.Time.Chrono.IEra" />
        <Parameter Name="yearOfEra" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="dayOfMonth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">the era of the correct type for the chronology, not null</param>
        <param name="yearOfEra">the chronology year-of-era</param>
        <param name="month">the chronology month-of-year</param>
        <param name="dayOfMonth">the chronology day-of-month</param>
        <summary>Obtains a local date in this chronology from the era, year-of-era,
            month-of-year and day-of-month fields.</summary>
        <returns>the local date in this chronology, not null</returns>
        <remarks>
          <para>Obtains a local date in this chronology from the era, year-of-era,
            month-of-year and day-of-month fields.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#date(java.time.chrono.Era,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.date(java.time.chrono.Era, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateEpochDay">
      <MemberSignature Language="VB.NET" Value="Public Function DateEpochDay (epochDay As Long) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Time::Chrono::IChronoLocalDate ^ DateEpochDay(long epochDay);" />
      <MemberSignature Language="C#" Value="public Java.Time.Chrono.IChronoLocalDate? DateEpochDay (long epochDay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate DateEpochDay(int64 epochDay) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.DateEpochDay(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member DateEpochDay : int64 -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.DateEpochDay epochDay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dateEpochDay", "(J)Ljava/time/chrono/ChronoLocalDate;", "GetDateEpochDay_JHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dateEpochDay", "(J)Ljava/time/chrono/ChronoLocalDate;", "GetDateEpochDay_JHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="epochDay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="epochDay">the epoch day</param>
        <summary>Obtains a local date in this chronology from the epoch-day.</summary>
        <returns>the local date in this chronology, not null</returns>
        <remarks>
          <para>Obtains a local date in this chronology from the epoch-day.</para>
          <para>The definition of <c>ChronoField#EPOCH_DAY EPOCH_DAY</c> is the same
            for all calendar systems, thus it can be used for conversion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#dateEpochDay(long)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.dateEpochDay(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateNow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DateNow () As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoLocalDate ^ DateNow();" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoLocalDate? DateNow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate DateNow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.DateNow" />
      <MemberSignature Language="F#" Value="abstract member DateNow : unit -&gt; Java.Time.Chrono.IChronoLocalDate&#xA;override this.DateNow : unit -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.DateNow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dateNow", "()Ljava/time/chrono/ChronoLocalDate;", "GetDateNowHandler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dateNow", "()Ljava/time/chrono/ChronoLocalDate;", "GetDateNowHandler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtains the current local date in this chronology from the system clock in the default time-zone.</summary>
        <returns>the current local date using the system clock and default time-zone, not null</returns>
        <remarks>
          <para>Obtains the current local date in this chronology from the system clock in the default time-zone.</para>
          <para>This will query the <c>Clock#systemDefaultZone() system clock</c> in the default
            time-zone to obtain the current date.</para>
          <para>Using this method will prevent the ability to use an alternate clock for testing
            because the clock is hard-coded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#dateNow()" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.dateNow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateNow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DateNow (clock As Clock) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoLocalDate ^ DateNow(Java::Time::Clock ^ clock);" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoLocalDate? DateNow (Java.Time.Clock? clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate DateNow(class Java.Time.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.DateNow(Java.Time.Clock)" />
      <MemberSignature Language="F#" Value="abstract member DateNow : Java.Time.Clock -&gt; Java.Time.Chrono.IChronoLocalDate&#xA;override this.DateNow : Java.Time.Clock -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.DateNow clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dateNow", "(Ljava/time/Clock;)Ljava/time/chrono/ChronoLocalDate;", "GetDateNow_Ljava_time_Clock_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dateNow", "(Ljava/time/Clock;)Ljava/time/chrono/ChronoLocalDate;", "GetDateNow_Ljava_time_Clock_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="Java.Time.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">the clock to use, not null</param>
        <summary>Obtains the current local date in this chronology from the specified clock.</summary>
        <returns>the current local date, not null</returns>
        <remarks>
          <para>Obtains the current local date in this chronology from the specified clock.</para>
          <para>This will query the specified clock to obtain the current date - today.
            Using this method allows the use of an alternate clock for testing.
            The alternate clock may be introduced using <c>Clock dependency injection</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#dateNow(java.time.Clock)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.dateNow(java.time.Clock)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateNow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DateNow (zone As ZoneId) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoLocalDate ^ DateNow(Java::Time::ZoneId ^ zone);" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoLocalDate? DateNow (Java.Time.ZoneId? zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate DateNow(class Java.Time.ZoneId zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.DateNow(Java.Time.ZoneId)" />
      <MemberSignature Language="F#" Value="abstract member DateNow : Java.Time.ZoneId -&gt; Java.Time.Chrono.IChronoLocalDate&#xA;override this.DateNow : Java.Time.ZoneId -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.DateNow zone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dateNow", "(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoLocalDate;", "GetDateNow_Ljava_time_ZoneId_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dateNow", "(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoLocalDate;", "GetDateNow_Ljava_time_ZoneId_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="Java.Time.ZoneId" />
      </Parameters>
      <Docs>
        <param name="zone">the zone ID to use, not null</param>
        <summary>Obtains the current local date in this chronology from the system clock in the specified time-zone.</summary>
        <returns>the current local date using the system clock, not null</returns>
        <remarks>
          <para>Obtains the current local date in this chronology from the system clock in the specified time-zone.</para>
          <para>This will query the <c>Clock#system(ZoneId) system clock</c> to obtain the current date.
            Specifying the time-zone avoids dependence on the default time-zone.</para>
          <para>Using this method will prevent the ability to use an alternate clock for testing
            because the clock is hard-coded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#dateNow(java.time.ZoneId)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.dateNow(java.time.ZoneId)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateYearDay">
      <MemberSignature Language="VB.NET" Value="Public Function DateYearDay (prolepticYear As Integer, dayOfYear As Integer) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Time::Chrono::IChronoLocalDate ^ DateYearDay(int prolepticYear, int dayOfYear);" />
      <MemberSignature Language="C#" Value="public Java.Time.Chrono.IChronoLocalDate? DateYearDay (int prolepticYear, int dayOfYear);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate DateYearDay(int32 prolepticYear, int32 dayOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.DateYearDay(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member DateYearDay : int * int -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.DateYearDay (prolepticYear, dayOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dateYearDay", "(II)Ljava/time/chrono/ChronoLocalDate;", "GetDateYearDay_IIHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dateYearDay", "(II)Ljava/time/chrono/ChronoLocalDate;", "GetDateYearDay_IIHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prolepticYear" Type="System.Int32" />
        <Parameter Name="dayOfYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="prolepticYear">the chronology proleptic-year</param>
        <param name="dayOfYear">the chronology day-of-year</param>
        <summary>Obtains a local date in this chronology from the proleptic-year and
            day-of-year fields.</summary>
        <returns>the local date in this chronology, not null</returns>
        <remarks>
          <para>Obtains a local date in this chronology from the proleptic-year and
            day-of-year fields.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#dateYearDay(int,%20int)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.dateYearDay(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateYearDay">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DateYearDay (era As IEra, yearOfEra As Integer, dayOfYear As Integer) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoLocalDate ^ DateYearDay(Java::Time::Chrono::IEra ^ era, int yearOfEra, int dayOfYear);" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoLocalDate? DateYearDay (Java.Time.Chrono.IEra? era, int yearOfEra, int dayOfYear);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate DateYearDay(class Java.Time.Chrono.IEra era, int32 yearOfEra, int32 dayOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.DateYearDay(Java.Time.Chrono.IEra,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member DateYearDay : Java.Time.Chrono.IEra * int * int -&gt; Java.Time.Chrono.IChronoLocalDate&#xA;override this.DateYearDay : Java.Time.Chrono.IEra * int * int -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.DateYearDay (era, yearOfEra, dayOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dateYearDay", "(Ljava/time/chrono/Era;II)Ljava/time/chrono/ChronoLocalDate;", "GetDateYearDay_Ljava_time_chrono_Era_IIHandler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dateYearDay", "(Ljava/time/chrono/Era;II)Ljava/time/chrono/ChronoLocalDate;", "GetDateYearDay_Ljava_time_chrono_Era_IIHandler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="Java.Time.Chrono.IEra" />
        <Parameter Name="yearOfEra" Type="System.Int32" />
        <Parameter Name="dayOfYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">the era of the correct type for the chronology, not null</param>
        <param name="yearOfEra">the chronology year-of-era</param>
        <param name="dayOfYear">the chronology day-of-year</param>
        <summary>Obtains a local date in this chronology from the era, year-of-era and
            day-of-year fields.</summary>
        <returns>the local date in this chronology, not null</returns>
        <remarks>
          <para>Obtains a local date in this chronology from the era, year-of-era and
            day-of-year fields.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#dateYearDay(java.time.chrono.Era,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.dateYearDay(java.time.chrono.Era, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EpochSecond">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EpochSecond (prolepticYear As Integer, month As Integer, dayOfMonth As Integer, hour As Integer, minute As Integer, second As Integer, zoneOffset As ZoneOffset) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long EpochSecond(int prolepticYear, int month, int dayOfMonth, int hour, int minute, int second, Java::Time::ZoneOffset ^ zoneOffset);" />
      <MemberSignature Language="C#" Value="public virtual long EpochSecond (int prolepticYear, int month, int dayOfMonth, int hour, int minute, int second, Java.Time.ZoneOffset? zoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 EpochSecond(int32 prolepticYear, int32 month, int32 dayOfMonth, int32 hour, int32 minute, int32 second, class Java.Time.ZoneOffset zoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.EpochSecond(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Java.Time.ZoneOffset)" />
      <MemberSignature Language="F#" Value="abstract member EpochSecond : int * int * int * int * int * int * Java.Time.ZoneOffset -&gt; int64&#xA;override this.EpochSecond : int * int * int * int * int * int * Java.Time.ZoneOffset -&gt; int64" Usage="iChronology.EpochSecond (prolepticYear, month, dayOfMonth, hour, minute, second, zoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("epochSecond", "(IIIIIILjava/time/ZoneOffset;)J", "GetEpochSecond_IIIIIILjava_time_ZoneOffset_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("epochSecond", "(IIIIIILjava/time/ZoneOffset;)J", "GetEpochSecond_IIIIIILjava_time_ZoneOffset_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prolepticYear" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="dayOfMonth" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="zoneOffset" Type="Java.Time.ZoneOffset" />
      </Parameters>
      <Docs>
        <param name="prolepticYear">the chronology proleptic-year</param>
        <param name="month">the chronology month-of-year</param>
        <param name="dayOfMonth">the chronology day-of-month</param>
        <param name="hour">the hour-of-day, from 0 to 23</param>
        <param name="minute">the minute-of-hour, from 0 to 59</param>
        <param name="second">the second-of-minute, from 0 to 59</param>
        <param name="zoneOffset">the zone offset, not null</param>
        <summary>Gets the number of seconds from the epoch of 1970-01-01T00:00:00Z.</summary>
        <returns>the number of seconds relative to 1970-01-01T00:00:00Z, may be negative</returns>
        <remarks>
          <para>Gets the number of seconds from the epoch of 1970-01-01T00:00:00Z.</para>
          <para>The number of seconds is calculated using the proleptic-year,
            month, day-of-month, hour, minute, second, and zoneOffset.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#epochSecond(int,%20int,%20int,%20int,%20int,%20int,%20java.time.ZoneOffset)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.epochSecond(int, int, int, int, int, int, java.time.ZoneOffset)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EpochSecond">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EpochSecond (era As IEra, yearOfEra As Integer, month As Integer, dayOfMonth As Integer, hour As Integer, minute As Integer, second As Integer, zoneOffset As ZoneOffset) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long EpochSecond(Java::Time::Chrono::IEra ^ era, int yearOfEra, int month, int dayOfMonth, int hour, int minute, int second, Java::Time::ZoneOffset ^ zoneOffset);" />
      <MemberSignature Language="C#" Value="public virtual long EpochSecond (Java.Time.Chrono.IEra? era, int yearOfEra, int month, int dayOfMonth, int hour, int minute, int second, Java.Time.ZoneOffset? zoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 EpochSecond(class Java.Time.Chrono.IEra era, int32 yearOfEra, int32 month, int32 dayOfMonth, int32 hour, int32 minute, int32 second, class Java.Time.ZoneOffset zoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.EpochSecond(Java.Time.Chrono.IEra,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Java.Time.ZoneOffset)" />
      <MemberSignature Language="F#" Value="abstract member EpochSecond : Java.Time.Chrono.IEra * int * int * int * int * int * int * Java.Time.ZoneOffset -&gt; int64&#xA;override this.EpochSecond : Java.Time.Chrono.IEra * int * int * int * int * int * int * Java.Time.ZoneOffset -&gt; int64" Usage="iChronology.EpochSecond (era, yearOfEra, month, dayOfMonth, hour, minute, second, zoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("epochSecond", "(Ljava/time/chrono/Era;IIIIIILjava/time/ZoneOffset;)J", "GetEpochSecond_Ljava_time_chrono_Era_IIIIIILjava_time_ZoneOffset_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("epochSecond", "(Ljava/time/chrono/Era;IIIIIILjava/time/ZoneOffset;)J", "GetEpochSecond_Ljava_time_chrono_Era_IIIIIILjava_time_ZoneOffset_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="Java.Time.Chrono.IEra" />
        <Parameter Name="yearOfEra" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="dayOfMonth" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="zoneOffset" Type="Java.Time.ZoneOffset" />
      </Parameters>
      <Docs>
        <param name="era">the era of the correct type for the chronology, not null</param>
        <param name="yearOfEra">the chronology year-of-era</param>
        <param name="month">the chronology month-of-year</param>
        <param name="dayOfMonth">the chronology day-of-month</param>
        <param name="hour">the hour-of-day, from 0 to 23</param>
        <param name="minute">the minute-of-hour, from 0 to 59</param>
        <param name="second">the second-of-minute, from 0 to 59</param>
        <param name="zoneOffset">the zone offset, not null</param>
        <summary>Gets the number of seconds from the epoch of 1970-01-01T00:00:00Z.</summary>
        <returns>the number of seconds relative to 1970-01-01T00:00:00Z, may be negative</returns>
        <remarks>
          <para>Gets the number of seconds from the epoch of 1970-01-01T00:00:00Z.</para>
          <para>The number of seconds is calculated using the era, year-of-era,
            month, day-of-month, hour, minute, second, and zoneOffset.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#epochSecond(java.time.chrono.Era,%20int,%20int,%20int,%20int,%20int,%20int,%20java.time.ZoneOffset)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.epochSecond(java.time.chrono.Era, int, int, int, int, int, int, java.time.ZoneOffset)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Java::Lang::Object ^ obj);" />
      <MemberSignature Language="C#" Value="public bool Equals (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.Equals(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Equals : Java.Lang.Object -&gt; bool" Usage="iChronology.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "(Ljava/lang/Object;)Z", "GetEquals_Ljava_lang_Object_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "(Ljava/lang/Object;)Z", "GetEquals_Ljava_lang_Object_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">the object to check, null returns false</param>
        <summary>Checks if this chronology is equal to another chronology.</summary>
        <returns>true if this is equal to the other chronology</returns>
        <remarks>
          <para>Checks if this chronology is equal to another chronology.</para>
          <para>The comparison is based on the entire state of the object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#equals(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.equals(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EraOf">
      <MemberSignature Language="VB.NET" Value="Public Function EraOf (eraValue As Integer) As IEra" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Time::Chrono::IEra ^ EraOf(int eraValue);" />
      <MemberSignature Language="C#" Value="public Java.Time.Chrono.IEra? EraOf (int eraValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IEra EraOf(int32 eraValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.EraOf(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EraOf : int -&gt; Java.Time.Chrono.IEra" Usage="iChronology.EraOf eraValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("eraOf", "(I)Ljava/time/chrono/Era;", "GetEraOf_IHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("eraOf", "(I)Ljava/time/chrono/Era;", "GetEraOf_IHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IEra</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eraValue">the era value</param>
        <summary>Creates the chronology era object from the numeric value.</summary>
        <returns>the calendar system era, not null</returns>
        <remarks>
          <para>Creates the chronology era object from the numeric value.</para>
          <para>The era is, conceptually, the largest division of the time-line.
            Most calendar systems have a single epoch dividing the time-line into two eras.
            However, some have multiple eras, such as one for the reign of each leader.
            The exact meaning is determined by the chronology according to the following constraints.</para>
          <para>The era in use at 1970-01-01 must have the value 1.
            Later eras must have sequentially higher values.
            Earlier eras must have sequentially lower values.
            Each chronology must refer to an enum or similar singleton to provide the era values.</para>
          <para>This method returns the singleton era of the correct type for the specified era value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#eraOf(int)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.eraOf(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="VB.NET" Value="Public Function Eras () As IList(Of IEra)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Java::Time::Chrono::IEra ^&gt; ^ Eras();" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Java.Time.Chrono.IEra&gt;? Eras ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Java.Time.Chrono.IEra&gt; Eras() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.Eras" />
      <MemberSignature Language="F#" Value="abstract member Eras : unit -&gt; System.Collections.Generic.IList&lt;Java.Time.Chrono.IEra&gt;" Usage="iChronology.Eras " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("eras", "()Ljava/util/List;", "GetErasHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("eras", "()Ljava/util/List;", "GetErasHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Java.Time.Chrono.IEra&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the list of eras for the chronology.</summary>
        <returns>the list of eras for the chronology, may be immutable, not null</returns>
        <remarks>
          <para>Gets the list of eras for the chronology.</para>
          <para>Most calendar systems have an era, within which the year has meaning.
            If the calendar system does not support the concept of eras, an empty
            list must be returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#eras()" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.eras()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="VB.NET" Value="Public Shared Function From (temporal As ITemporalAccessor) As IChronology" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Time::Chrono::IChronology ^ From(Java::Time::Temporal::ITemporalAccessor ^ temporal);" />
      <MemberSignature Language="C#" Value="public static Java.Time.Chrono.IChronology? From (Java.Time.Temporal.ITemporalAccessor? temporal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Time.Chrono.IChronology From(class Java.Time.Temporal.ITemporalAccessor temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.From(Java.Time.Temporal.ITemporalAccessor)" />
      <MemberSignature Language="F#" Value="static member From : Java.Time.Temporal.ITemporalAccessor -&gt; Java.Time.Chrono.IChronology" Usage="Java.Time.Chrono.IChronology.From temporal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("from", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/Chronology;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("from", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/Chronology;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronology</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temporal" Type="Java.Time.Temporal.ITemporalAccessor" />
      </Parameters>
      <Docs>
        <param name="temporal">the temporal to convert, not null</param>
        <summary>Obtains an instance of <c>Chronology</c> from a temporal object.</summary>
        <returns>the chronology, not null</returns>
        <remarks>
          <para>Obtains an instance of <c>Chronology</c> from a temporal object.</para>
          <para>This obtains a chronology based on the specified temporal.
            A <c>TemporalAccessor</c> represents an arbitrary set of date and time information,
            which this factory converts to an instance of <c>Chronology</c>.</para>
          <para>The conversion will obtain the chronology using <c>TemporalQueries#chronology()</c>.
            If the specified temporal object does not have a chronology, <c>IsoChronology</c> is returned.</para>
          <para>This method matches the signature of the functional interface <c>TemporalQuery</c>
            allowing it to be used as a query via method reference, <c>Chronology::from</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#from(java.time.temporal.TemporalAccessor)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.from(java.time.temporal.TemporalAccessor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayName (style As TextStyle, locale As Locale) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDisplayName(Java::Time::Format::TextStyle ^ style, Java::Util::Locale ^ locale);" />
      <MemberSignature Language="C#" Value="public virtual string? GetDisplayName (Java.Time.Format.TextStyle? style, Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayName(class Java.Time.Format.TextStyle style, class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.GetDisplayName(Java.Time.Format.TextStyle,Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayName : Java.Time.Format.TextStyle * Java.Util.Locale -&gt; string&#xA;override this.GetDisplayName : Java.Time.Format.TextStyle * Java.Util.Locale -&gt; string" Usage="iChronology.GetDisplayName (style, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDisplayName", "(Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;", "GetGetDisplayName_Ljava_time_format_TextStyle_Ljava_util_Locale_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDisplayName", "(Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;", "GetGetDisplayName_Ljava_time_format_TextStyle_Ljava_util_Locale_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="Java.Time.Format.TextStyle" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="style">the style of the text required, not null</param>
        <param name="locale">the locale to use, not null</param>
        <summary>Gets the textual representation of this chronology.</summary>
        <returns>the text value of the chronology, not null</returns>
        <remarks>
          <para>Gets the textual representation of this chronology.</para>
          <para>This returns the textual name used to identify the chronology,
            suitable for presentation to the user.
            The parameters control the style of the returned text and the locale.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#getDisplayName(java.time.format.TextStyle,%20java.util.Locale)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.getDisplayName(java.time.format.TextStyle, java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.GetHashCode" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="iChronology.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "()I", "GetGetHashCodeHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "()I", "GetGetHashCodeHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>A hash code for this chronology.</summary>
        <returns>a suitable hash code</returns>
        <remarks>
          <para>A hash code for this chronology.</para>
          <para>The hash code should be based on the entire state of the object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#hashCode()" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.hashCode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Java.Time.Chrono.IChronology.Id" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Java.Time.Chrono.IChronology.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getId", "()Ljava/lang/String;", "GetGetIdHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getId", "()Ljava/lang/String;", "GetGetIdHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="VB.NET" Value="Public Function IsLeapYear (prolepticYear As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLeapYear(long prolepticYear);" />
      <MemberSignature Language="C#" Value="public bool IsLeapYear (long prolepticYear);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int64 prolepticYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.IsLeapYear(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int64 -&gt; bool" Usage="iChronology.IsLeapYear prolepticYear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLeapYear", "(J)Z", "GetIsLeapYear_JHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLeapYear", "(J)Z", "GetIsLeapYear_JHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prolepticYear" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="prolepticYear">the proleptic-year to check, not validated for range</param>
        <summary>Checks if the specified year is a leap year.</summary>
        <returns>true if the year is a leap year</returns>
        <remarks>
          <para>Checks if the specified year is a leap year.</para>
          <para>A leap-year is a year of a longer length than normal.
            The exact meaning is determined by the chronology according to the following constraints.
            &lt;ul&gt;
            &lt;li&gt;a leap-year must imply a year-length longer than a non leap-year.
            &lt;li&gt;a chronology that does not support the concept of a year must return false.
            &lt;li&gt;the correct result must be returned for all years within the
                valid range of years for the chronology.
            &lt;/ul&gt;</para>
          <para>Outside the range of valid years an implementation is free to return
            either a best guess or false.
            An implementation must not throw an exception, even if the year is
            outside the range of valid years.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#isLeapYear(long)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.isLeapYear(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalDateTime">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LocalDateTime (temporal As ITemporalAccessor) As IChronoLocalDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoLocalDateTime ^ LocalDateTime(Java::Time::Temporal::ITemporalAccessor ^ temporal);" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoLocalDateTime? LocalDateTime (Java.Time.Temporal.ITemporalAccessor? temporal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDateTime LocalDateTime(class Java.Time.Temporal.ITemporalAccessor temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.LocalDateTime(Java.Time.Temporal.ITemporalAccessor)" />
      <MemberSignature Language="F#" Value="abstract member LocalDateTime : Java.Time.Temporal.ITemporalAccessor -&gt; Java.Time.Chrono.IChronoLocalDateTime&#xA;override this.LocalDateTime : Java.Time.Temporal.ITemporalAccessor -&gt; Java.Time.Chrono.IChronoLocalDateTime" Usage="iChronology.LocalDateTime temporal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("localDateTime", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDateTime;", "GetLocalDateTime_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("localDateTime", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDateTime;", "GetLocalDateTime_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temporal" Type="Java.Time.Temporal.ITemporalAccessor" />
      </Parameters>
      <Docs>
        <param name="temporal">the temporal object to convert, not null</param>
        <summary>Obtains a local date-time in this chronology from another temporal object.</summary>
        <returns>the local date-time in this chronology, not null</returns>
        <remarks>
          <para>Obtains a local date-time in this chronology from another temporal object.</para>
          <para>This obtains a date-time in this chronology based on the specified temporal.
            A <c>TemporalAccessor</c> represents an arbitrary set of date and time information,
            which this factory converts to an instance of <c>ChronoLocalDateTime</c>.</para>
          <para>The conversion extracts and combines the <c>ChronoLocalDate</c> and the
            <c>LocalTime</c> from the temporal object.
            Implementations are permitted to perform optimizations such as accessing
            those fields that are equivalent to the relevant objects.
            The result uses this chronology.</para>
          <para>This method matches the signature of the functional interface <c>TemporalQuery</c>
            allowing it to be used as a query via method reference, <c>aChronology::localDateTime</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#localDateTime(java.time.temporal.TemporalAccessor)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.localDateTime(java.time.temporal.TemporalAccessor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Of">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Of (id As String) As IChronology" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Time::Chrono::IChronology ^ Of(System::String ^ id);" />
      <MemberSignature Language="C#" Value="public static Java.Time.Chrono.IChronology? Of (string? id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Time.Chrono.IChronology Of(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.Of(System.String)" />
      <MemberSignature Language="F#" Value="static member Of : string -&gt; Java.Time.Chrono.IChronology" Usage="Java.Time.Chrono.IChronology.Of id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("of", "(Ljava/lang/String;)Ljava/time/chrono/Chronology;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("of", "(Ljava/lang/String;)Ljava/time/chrono/Chronology;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronology</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">the chronology ID or calendar system type, not null</param>
        <summary>Obtains an instance of <c>Chronology</c> from a chronology ID or
            calendar system type.</summary>
        <returns>the chronology with the identifier requested, not null</returns>
        <remarks>
          <para>Obtains an instance of <c>Chronology</c> from a chronology ID or
            calendar system type.</para>
          <para>This returns a chronology based on either the ID or the type.
            The <c>#getId() chronology ID</c> uniquely identifies the chronology.
            The <c>#getCalendarType() calendar system type</c> is defined by the
            CLDR specification.</para>
          <para>The chronology may be a system chronology or a chronology
            provided by the application via ServiceLoader configuration.</para>
          <para>Since some calendars can be customized, the ID or type typically refers
            to the default customization. For example, the Gregorian calendar can have multiple
            cutover dates from the Julian, but the lookup only provides the default cutover date.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#of(java.lang.String)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.of(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfLocale">
      <MemberSignature Language="VB.NET" Value="Public Shared Function OfLocale (locale As Locale) As IChronology" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Time::Chrono::IChronology ^ OfLocale(Java::Util::Locale ^ locale);" />
      <MemberSignature Language="C#" Value="public static Java.Time.Chrono.IChronology? OfLocale (Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Time.Chrono.IChronology OfLocale(class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.OfLocale(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member OfLocale : Java.Util.Locale -&gt; Java.Time.Chrono.IChronology" Usage="Java.Time.Chrono.IChronology.OfLocale locale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofLocale", "(Ljava/util/Locale;)Ljava/time/chrono/Chronology;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofLocale", "(Ljava/util/Locale;)Ljava/time/chrono/Chronology;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronology</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">the locale to use to obtain the calendar system, not null</param>
        <summary>Obtains an instance of <c>Chronology</c> from a locale.</summary>
        <returns>the calendar system associated with the locale, not null</returns>
        <remarks>
          <para>Obtains an instance of <c>Chronology</c> from a locale.</para>
          <para>This returns a <c>Chronology</c> based on the specified locale,
            typically returning <c>IsoChronology</c>. Other calendar systems
            are only returned if they are explicitly selected within the locale.</para>
          <para>The <c>Locale</c> class provide access to a range of information useful
            for localizing an application. This includes the language and region,
            such as "en-GB" for English as used in Great Britain.</para>
          <para>The <c>Locale</c> class also supports an extension mechanism that
            can be used to identify a calendar system. The mechanism is a form
            of key-value pairs, where the calendar system has the key "ca".
            For example, the locale "en-JP-u-ca-japanese" represents the English
            language as used in Japan with the Japanese calendar system.</para>
          <para>This method finds the desired calendar system in a manner equivalent
            to passing "ca" to <c>Locale#getUnicodeLocaleType(String)</c>.
            If the "ca" key is not present, then <c>IsoChronology</c> is returned.</para>
          <para>Note that the behavior of this method differs from the older
            <c>java.util.Calendar#getInstance(Locale)</c> method.
            If that method receives a locale of "th_TH" it will return <c>BuddhistCalendar</c>.
            By contrast, this method will return <c>IsoChronology</c>.
            Passing the locale "th-TH-u-ca-buddhist" into either method will
            result in the Thai Buddhist calendar system and is therefore the
            recommended approach going forward for Thai calendar system localization.</para>
          <para>A similar, but simpler, situation occurs for the Japanese calendar system.
            The locale "jp_JP_JP" has previously been used to access the calendar.
            However, unlike the Thai locale, "ja_JP_JP" is automatically converted by
            <c>Locale</c> to the modern and recommended form of "ja-JP-u-ca-japanese".
            Thus, there is no difference in behavior between this method and
            <c>Calendar#getInstance(Locale)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#ofLocale(java.util.Locale)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.ofLocale(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Period">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Period (years As Integer, months As Integer, days As Integer) As IChronoPeriod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoPeriod ^ Period(int years, int months, int days);" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoPeriod? Period (int years, int months, int days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoPeriod Period(int32 years, int32 months, int32 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.Period(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Period : int * int * int -&gt; Java.Time.Chrono.IChronoPeriod&#xA;override this.Period : int * int * int -&gt; Java.Time.Chrono.IChronoPeriod" Usage="iChronology.Period (years, months, days)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("period", "(III)Ljava/time/chrono/ChronoPeriod;", "GetPeriod_IIIHandler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("period", "(III)Ljava/time/chrono/ChronoPeriod;", "GetPeriod_IIIHandler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoPeriod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="years" Type="System.Int32" />
        <Parameter Name="months" Type="System.Int32" />
        <Parameter Name="days" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="years">the number of years, may be negative</param>
        <param name="months">the number of years, may be negative</param>
        <param name="days">the number of years, may be negative</param>
        <summary>Obtains a period for this chronology based on years, months and days.</summary>
        <returns>the period in terms of this chronology, not null</returns>
        <remarks>
          <para>Obtains a period for this chronology based on years, months and days.</para>
          <para>This returns a period tied to this chronology using the specified
            years, months and days.  All supplied chronologies use periods
            based on years, months and days, however the <c>ChronoPeriod</c> API
            allows the period to be represented using other units.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#period(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.period(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProlepticYear">
      <MemberSignature Language="VB.NET" Value="Public Function ProlepticYear (era As IEra, yearOfEra As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ProlepticYear(Java::Time::Chrono::IEra ^ era, int yearOfEra);" />
      <MemberSignature Language="C#" Value="public int ProlepticYear (Java.Time.Chrono.IEra? era, int yearOfEra);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ProlepticYear(class Java.Time.Chrono.IEra era, int32 yearOfEra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.ProlepticYear(Java.Time.Chrono.IEra,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ProlepticYear : Java.Time.Chrono.IEra * int -&gt; int" Usage="iChronology.ProlepticYear (era, yearOfEra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("prolepticYear", "(Ljava/time/chrono/Era;I)I", "GetProlepticYear_Ljava_time_chrono_Era_IHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("prolepticYear", "(Ljava/time/chrono/Era;I)I", "GetProlepticYear_Ljava_time_chrono_Era_IHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="Java.Time.Chrono.IEra" />
        <Parameter Name="yearOfEra" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">the era of the correct type for the chronology, not null</param>
        <param name="yearOfEra">the chronology year-of-era</param>
        <summary>Calculates the proleptic-year given the era and year-of-era.</summary>
        <returns>the proleptic-year</returns>
        <remarks>
          <para>Calculates the proleptic-year given the era and year-of-era.</para>
          <para>This combines the era and year-of-era into the single proleptic-year field.</para>
          <para>If the chronology makes active use of eras, such as <c>JapaneseChronology</c>
            then the year-of-era will be validated against the era.
            For other chronologies, validation is optional.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#prolepticYear(java.time.chrono.Era,%20int)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.prolepticYear(java.time.chrono.Era, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="VB.NET" Value="Public Function Range (field As ChronoField) As ValueRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Time::Temporal::ValueRange ^ Range(Java::Time::Temporal::ChronoField ^ field);" />
      <MemberSignature Language="C#" Value="public Java.Time.Temporal.ValueRange? Range (Java.Time.Temporal.ChronoField? field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ValueRange Range(class Java.Time.Temporal.ChronoField field) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.Range(Java.Time.Temporal.ChronoField)" />
      <MemberSignature Language="F#" Value="abstract member Range : Java.Time.Temporal.ChronoField -&gt; Java.Time.Temporal.ValueRange" Usage="iChronology.Range field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("range", "(Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange;", "GetRange_Ljava_time_temporal_ChronoField_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("range", "(Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange;", "GetRange_Ljava_time_temporal_ChronoField_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ValueRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Java.Time.Temporal.ChronoField" />
      </Parameters>
      <Docs>
        <param name="field">the field to get the range for, not null</param>
        <summary>Gets the range of valid values for the specified field.</summary>
        <returns>the range of valid values for the field, not null</returns>
        <remarks>
          <para>Gets the range of valid values for the specified field.</para>
          <para>All fields can be expressed as a <c>long</c> integer.
            This method returns an object that describes the valid range for that value.</para>
          <para>Note that the result only describes the minimum and maximum valid values
            and it is important not to read too much into them. For example, there
            could be values within the range that are invalid for the field.</para>
          <para>This method will return a result whether or not the chronology supports the field.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#range(java.time.temporal.ChronoField)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.range(java.time.temporal.ChronoField)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveDate">
      <MemberSignature Language="VB.NET" Value="Public Function ResolveDate (fieldValues As IDictionary(Of ITemporalField, Long), resolverStyle As ResolverStyle) As IChronoLocalDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Time::Chrono::IChronoLocalDate ^ ResolveDate(System::Collections::Generic::IDictionary&lt;Java::Time::Temporal::ITemporalField ^, Java::Lang::Long ^&gt; ^ fieldValues, Java::Time::Format::ResolverStyle ^ resolverStyle);" />
      <MemberSignature Language="C#" Value="public Java.Time.Chrono.IChronoLocalDate? ResolveDate (System.Collections.Generic.IDictionary&lt;Java.Time.Temporal.ITemporalField,Java.Lang.Long&gt;? fieldValues, Java.Time.Format.ResolverStyle? resolverStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoLocalDate ResolveDate(class System.Collections.Generic.IDictionary`2&lt;class Java.Time.Temporal.ITemporalField, class Java.Lang.Long&gt; fieldValues, class Java.Time.Format.ResolverStyle resolverStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.ResolveDate(System.Collections.Generic.IDictionary{Java.Time.Temporal.ITemporalField,Java.Lang.Long},Java.Time.Format.ResolverStyle)" />
      <MemberSignature Language="F#" Value="abstract member ResolveDate : System.Collections.Generic.IDictionary&lt;Java.Time.Temporal.ITemporalField, Java.Lang.Long&gt; * Java.Time.Format.ResolverStyle -&gt; Java.Time.Chrono.IChronoLocalDate" Usage="iChronology.ResolveDate (fieldValues, resolverStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveDate", "(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;", "GetResolveDate_Ljava_util_Map_Ljava_time_format_ResolverStyle_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveDate", "(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;", "GetResolveDate_Ljava_util_Map_Ljava_time_format_ResolverStyle_Handler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoLocalDate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Generic.IDictionary&lt;Java.Time.Temporal.ITemporalField,Java.Lang.Long&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resolverStyle" Type="Java.Time.Format.ResolverStyle" />
      </Parameters>
      <Docs>
        <param name="fieldValues">the map of fields to values, which can be updated, not null</param>
        <param name="resolverStyle">the requested type of resolve, not null</param>
        <summary>Resolves parsed <c>ChronoField</c> values into a date during parsing.</summary>
        <returns>the resolved date, null if insufficient information to create a date</returns>
        <remarks>
          <para>Resolves parsed <c>ChronoField</c> values into a date during parsing.</para>
          <para>Most <c>TemporalField</c> implementations are resolved using the
            resolve method on the field. By contrast, the <c>ChronoField</c> class
            defines fields that only have meaning relative to the chronology.
            As such, <c>ChronoField</c> date fields are resolved here in the
            context of a specific chronology.</para>
          <para>The default implementation, which explains typical resolve behaviour,
            is provided in <c>AbstractChronology</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#resolveDate(java.util.Map%3Cjava.time.temporal.TemporalField,%20java.lang.Long%3E,%20java.time.format.ResolverStyle)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.resolveDate(java.util.Map&lt;java.time.temporal.TemporalField, java.lang.Long&gt;, java.time.format.ResolverStyle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="C#" Value="public string? ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.ToString" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="iChronology.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler:Java.Time.Chrono.IChronologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Outputs this chronology as a <c>String</c>.</summary>
        <returns>a string representation of this chronology, not null</returns>
        <remarks>
          <para>Outputs this chronology as a <c>String</c>.</para>
          <para>The format should include the entire state of the object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#toString()" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.toString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZonedDateTime">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ZonedDateTime (temporal As ITemporalAccessor) As IChronoZonedDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoZonedDateTime ^ ZonedDateTime(Java::Time::Temporal::ITemporalAccessor ^ temporal);" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoZonedDateTime? ZonedDateTime (Java.Time.Temporal.ITemporalAccessor? temporal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoZonedDateTime ZonedDateTime(class Java.Time.Temporal.ITemporalAccessor temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.ZonedDateTime(Java.Time.Temporal.ITemporalAccessor)" />
      <MemberSignature Language="F#" Value="abstract member ZonedDateTime : Java.Time.Temporal.ITemporalAccessor -&gt; Java.Time.Chrono.IChronoZonedDateTime&#xA;override this.ZonedDateTime : Java.Time.Temporal.ITemporalAccessor -&gt; Java.Time.Chrono.IChronoZonedDateTime" Usage="iChronology.ZonedDateTime temporal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("zonedDateTime", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoZonedDateTime;", "GetZonedDateTime_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("zonedDateTime", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoZonedDateTime;", "GetZonedDateTime_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoZonedDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temporal" Type="Java.Time.Temporal.ITemporalAccessor" />
      </Parameters>
      <Docs>
        <param name="temporal">the temporal object to convert, not null</param>
        <summary>Obtains a <c>ChronoZonedDateTime</c> in this chronology from another temporal object.</summary>
        <returns>the zoned date-time in this chronology, not null</returns>
        <remarks>
          <para>Obtains a <c>ChronoZonedDateTime</c> in this chronology from another temporal object.</para>
          <para>This obtains a zoned date-time in this chronology based on the specified temporal.
            A <c>TemporalAccessor</c> represents an arbitrary set of date and time information,
            which this factory converts to an instance of <c>ChronoZonedDateTime</c>.</para>
          <para>The conversion will first obtain a <c>ZoneId</c> from the temporal object,
            falling back to a <c>ZoneOffset</c> if necessary. It will then try to obtain
            an <c>Instant</c>, falling back to a <c>ChronoLocalDateTime</c> if necessary.
            The result will be either the combination of <c>ZoneId</c> or <c>ZoneOffset</c>
            with <c>Instant</c> or <c>ChronoLocalDateTime</c>.
            Implementations are permitted to perform optimizations such as accessing
            those fields that are equivalent to the relevant objects.
            The result uses this chronology.</para>
          <para>This method matches the signature of the functional interface <c>TemporalQuery</c>
            allowing it to be used as a query via method reference, <c>aChronology::zonedDateTime</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#zonedDateTime(java.time.temporal.TemporalAccessor)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.zonedDateTime(java.time.temporal.TemporalAccessor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZonedDateTime">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ZonedDateTime (instant As Instant, zone As ZoneId) As IChronoZonedDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Time::Chrono::IChronoZonedDateTime ^ ZonedDateTime(Java::Time::Instant ^ instant, Java::Time::ZoneId ^ zone);" />
      <MemberSignature Language="C#" Value="public virtual Java.Time.Chrono.IChronoZonedDateTime? ZonedDateTime (Java.Time.Instant? instant, Java.Time.ZoneId? zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Chrono.IChronoZonedDateTime ZonedDateTime(class Java.Time.Instant instant, class Java.Time.ZoneId zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.IChronology.ZonedDateTime(Java.Time.Instant,Java.Time.ZoneId)" />
      <MemberSignature Language="F#" Value="abstract member ZonedDateTime : Java.Time.Instant * Java.Time.ZoneId -&gt; Java.Time.Chrono.IChronoZonedDateTime&#xA;override this.ZonedDateTime : Java.Time.Instant * Java.Time.ZoneId -&gt; Java.Time.Chrono.IChronoZonedDateTime" Usage="iChronology.ZonedDateTime (instant, zone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("zonedDateTime", "(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;", "GetZonedDateTime_Ljava_time_Instant_Ljava_time_ZoneId_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("zonedDateTime", "(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;", "GetZonedDateTime_Ljava_time_Instant_Ljava_time_ZoneId_Handler:Java.Time.Chrono.IChronology, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoZonedDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instant" Type="Java.Time.Instant" />
        <Parameter Name="zone" Type="Java.Time.ZoneId" />
      </Parameters>
      <Docs>
        <param name="instant">the instant to create the date-time from, not null</param>
        <param name="zone">the time-zone, not null</param>
        <summary>Obtains a <c>ChronoZonedDateTime</c> in this chronology from an <c>Instant</c>.</summary>
        <returns>the zoned date-time, not null</returns>
        <remarks>
          <para>Obtains a <c>ChronoZonedDateTime</c> in this chronology from an <c>Instant</c>.</para>
          <para>This obtains a zoned date-time with the same instant as that specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/Chronology#zonedDateTime(java.time.Instant,%20java.time.ZoneId)" title="Reference documentation">Java documentation for <code>java.time.chrono.Chronology.zonedDateTime(java.time.Instant, java.time.ZoneId)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
