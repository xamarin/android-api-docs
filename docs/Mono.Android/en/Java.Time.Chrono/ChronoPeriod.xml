<Type Name="ChronoPeriod" FullName="Java.Time.Chrono.ChronoPeriod">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChronoPeriod&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChronoPeriod abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class ChronoPeriod : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChronoPeriod extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Time.Chrono.ChronoPeriod" />
  <TypeSignature Language="F#" Value="type ChronoPeriod = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/time/chrono/ChronoPeriod", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/time/chrono/ChronoPeriod", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("Use the 'Java.Time.Chrono.IChronoPeriod' type. This class will be removed in a future release.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use the 'Java.Time.Chrono.IChronoPeriod' type. This class will be removed in a future release.")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Between">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Between (startDateInclusive As IChronoLocalDate, endDateExclusive As IChronoLocalDate) As IChronoPeriod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Time::Chrono::IChronoPeriod ^ Between(Java::Time::Chrono::IChronoLocalDate ^ startDateInclusive, Java::Time::Chrono::IChronoLocalDate ^ endDateExclusive);" />
      <MemberSignature Language="C#" Value="public static Java.Time.Chrono.IChronoPeriod? Between (Java.Time.Chrono.IChronoLocalDate? startDateInclusive, Java.Time.Chrono.IChronoLocalDate? endDateExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Time.Chrono.IChronoPeriod Between(class Java.Time.Chrono.IChronoLocalDate startDateInclusive, class Java.Time.Chrono.IChronoLocalDate endDateExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Chrono.ChronoPeriod.Between(Java.Time.Chrono.IChronoLocalDate,Java.Time.Chrono.IChronoLocalDate)" />
      <MemberSignature Language="F#" Value="static member Between : Java.Time.Chrono.IChronoLocalDate * Java.Time.Chrono.IChronoLocalDate -&gt; Java.Time.Chrono.IChronoPeriod" Usage="Java.Time.Chrono.ChronoPeriod.Between (startDateInclusive, endDateExclusive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("between", "(Ljava/time/chrono/ChronoLocalDate;Ljava/time/chrono/ChronoLocalDate;)Ljava/time/chrono/ChronoPeriod;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("between", "(Ljava/time/chrono/ChronoLocalDate;Ljava/time/chrono/ChronoLocalDate;)Ljava/time/chrono/ChronoPeriod;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Java.Time.Chrono.IChronoPeriod.Between'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Java.Time.Chrono.IChronoPeriod.Between'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Chrono.IChronoPeriod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDateInclusive" Type="Java.Time.Chrono.IChronoLocalDate" />
        <Parameter Name="endDateExclusive" Type="Java.Time.Chrono.IChronoLocalDate" />
      </Parameters>
      <Docs>
        <param name="startDateInclusive">the start date, inclusive, specifying the chronology of the calculation, not null</param>
        <param name="endDateExclusive">the end date, exclusive, in any chronology, not null</param>
        <summary>Obtains a <c>ChronoPeriod</c> consisting of amount of time between two dates.</summary>
        <returns>the period between this date and the end date, not null</returns>
        <remarks>
          <para>Obtains a <c>ChronoPeriod</c> consisting of amount of time between two dates.</para>
          <para>The start date is included, but the end date is not.
            The period is calculated using <c>ChronoLocalDate#until(ChronoLocalDate)</c>.
            As such, the calculation is chronology specific.</para>
          <para>The chronology of the first date is used.
            The chronology of the second date is ignored, with the date being converted
            to the target chronology system before the calculation starts.</para>
          <para>The result of this method can be a negative period if the end is before the start.
            In most cases, the positive/negative sign will be the same in each of the supported fields.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/chrono/ChronoPeriod#between(java.time.chrono.ChronoLocalDate,%20java.time.chrono.ChronoLocalDate)" title="Reference documentation">Java documentation for <code>java.time.chrono.ChronoPeriod.between(java.time.chrono.ChronoLocalDate, java.time.chrono.ChronoLocalDate)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
