<Type Name="LensShadingMap" FullName="Android.Hardware.Camera2.Params.LensShadingMap">
  <TypeSignature Language="C#" Value="public sealed class LensShadingMap : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LensShadingMap extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/camera2/params/LensShadingMap", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Immutable class for describing a <c>4 x N x M</c> lens shading map of floats.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Immutable class for describing a <c>4 x N x M</c> lens shading map of floats.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsLensShadingCorrectionMap" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColumnCount", "()I", "GetGetColumnCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the number of columns in this map.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the number of columns in this map.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html#getColumnCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyGainFactors">
      <MemberSignature Language="C#" Value="public void CopyGainFactors (float[] destination, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyGainFactors(float32[] destination, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyGainFactors", "([FI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">an array big enough to hold at least <c><see cref="F:Android.Hardware.Camera2.Params.RggbChannelVector.Count" /></c>
          elements after the <c>offset</c></param>
        <param name="offset">a non-negative offset into the array</param>
        <summary>Copy all gain factors in row-major order from this lens shading map into the destination.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy all gain factors in row-major order from this lens shading map into the destination.

 </para>
          <para tool="javadoc-to-mdoc">Each gain factor will be &gt;= <c><see cref="F:Android.Hardware.Camera2.Params.LensShadingMap.MinimumGainFactor" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html#copyGainFactors(float[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.NullPointerException">If <c>destination</c> was <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If offset was negative</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">If there's not enough room to write the elements at the specified destination and
          offset.</exception>
      </Docs>
    </Member>
    <Member MemberName="GainFactorCount">
      <MemberSignature Language="C#" Value="public int GainFactorCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GainFactorCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGainFactorCount", "()I", "GetGetGainFactorCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the total number of gain factors in this map.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the total number of gain factors in this map.

 </para>
          <para tool="javadoc-to-mdoc">A single gain factor contains exactly one color channel.
 Use with <c><see cref="M:Android.Hardware.Camera2.Params.LensShadingMap.CopyGainFactors(System.Single[],System.Int32)" /></c> to allocate a large-enough array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html#getGainFactorCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGainFactor">
      <MemberSignature Language="C#" Value="public float GetGainFactor (Android.Graphics.Color colorChannel, int column, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetGainFactor(valuetype Android.Graphics.Color colorChannel, int32 column, int32 row) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getGainFactor", "(III)F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorChannel" Type="Android.Graphics.Color" />
        <Parameter Name="column" Type="System.Int32" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="colorChannel">color channel from <c>[R, Geven, Godd, B]</c></param>
        <param name="column">within the range [0, <c><see cref="P:Android.Hardware.Camera2.Params.LensShadingMap.ColumnCount" /></c>)</param>
        <param name="row">within the range [0, <c><see cref="P:Android.Hardware.Camera2.Params.LensShadingMap.RowCount" /></c>)</param>
        <summary>Get a single color channel gain factor from this lens shading map by its row and column.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a single color channel gain factor from this lens shading map by its row and column.

 </para>
          <para tool="javadoc-to-mdoc">The rows must be within the range [0, <c><see cref="P:Android.Hardware.Camera2.Params.LensShadingMap.RowCount" /></c>),
 the column must be within the range [0, <c><see cref="P:Android.Hardware.Camera2.Params.LensShadingMap.ColumnCount" /></c>),
 and the color channel must be within the range [0, <c><see cref="F:Android.Hardware.Camera2.Params.RggbChannelVector.Count" /></c>).</para>
          <para tool="javadoc-to-mdoc">The channel order is <c>[R, Geven, Godd, B]</c>, where
 <c>Geven</c> is the green channel for the even rows of a Bayer pattern, and
 <c>Godd</c> is the odd rows.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html#getGainFactor(int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if any of the parameters was out of range</exception>
        <altmember cref="P:Android.Hardware.Camera2.Params.LensShadingMap.RowCount" />
        <altmember cref="P:Android.Hardware.Camera2.Params.LensShadingMap.ColumnCount" />
      </Docs>
    </Member>
    <Member MemberName="GetGainFactorVector">
      <MemberSignature Language="C#" Value="public Android.Hardware.Camera2.Params.RggbChannelVector GetGainFactorVector (int column, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Hardware.Camera2.Params.RggbChannelVector GetGainFactorVector(int32 column, int32 row) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getGainFactorVector", "(II)Landroid/hardware/camera2/params/RggbChannelVector;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.Params.RggbChannelVector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Int32" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="column">within the range [0, <c><see cref="P:Android.Hardware.Camera2.Params.LensShadingMap.ColumnCount" /></c>)</param>
        <param name="row">within the range [0, <c><see cref="P:Android.Hardware.Camera2.Params.LensShadingMap.RowCount" /></c>)</param>
        <summary>Get a gain factor vector from this lens shading map by its row and column.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a gain factor vector from this lens shading map by its row and column.

 </para>
          <para tool="javadoc-to-mdoc">The rows must be within the range [0, <c><see cref="P:Android.Hardware.Camera2.Params.LensShadingMap.RowCount" /></c>),
 the column must be within the range [0, <c><see cref="P:Android.Hardware.Camera2.Params.LensShadingMap.ColumnCount" /></c>).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html#getGainFactorVector(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if any of the parameters was out of range</exception>
        <altmember cref="P:Android.Hardware.Camera2.Params.LensShadingMap.RowCount" />
        <altmember cref="P:Android.Hardware.Camera2.Params.LensShadingMap.ColumnCount" />
      </Docs>
    </Member>
    <Member MemberName="MinimumGainFactor">
      <MemberSignature Language="C#" Value="public const float MinimumGainFactor = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 MinimumGainFactor = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MINIMUM_GAIN_FACTOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The smallest gain factor in this map.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The smallest gain factor in this map.

 </para>
          <para tool="javadoc-to-mdoc">All values in this map will be at least this large.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html#MINIMUM_GAIN_FACTOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRowCount", "()I", "GetGetRowCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the number of rows in this map.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the number of rows in this map.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html#getRowCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
