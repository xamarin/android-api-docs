<Type Name="StreamConfigurationMap" FullName="Android.Hardware.Camera2.Params.StreamConfigurationMap">
  <TypeSignature Language="C#" Value="public sealed class StreamConfigurationMap : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StreamConfigurationMap extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Hardware.Camera2.Params.StreamConfigurationMap" />
  <TypeSignature Language="F#" Value="type StreamConfigurationMap = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/hardware/camera2/params/StreamConfigurationMap", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/hardware/camera2/params/StreamConfigurationMap", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Immutable class to store the available stream
            <c>CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP configurations</c> to set up
            <c>android.view.Surface Surfaces</c> for creating a
            <c>android.hardware.camera2.CameraCaptureSession capture session</c> with
            <c>android.hardware.camera2.CameraDevice#createCaptureSession</c>.</summary>
    <remarks>
      <para>Immutable class to store the available stream
            <c>CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP configurations</c> to set up
            <c>android.view.Surface Surfaces</c> for creating a
            <c>android.hardware.camera2.CameraCaptureSession capture session</c> with
            <c>android.hardware.camera2.CameraDevice#createCaptureSession</c>.
            &lt;!-- TODO: link to input stream configuration --&gt;</para>
      <para>This is the authoritative list for all &lt;!-- input/ --&gt;output formats (and sizes respectively
            for that format) that are supported by a camera device.</para>
      <para>This also contains the minimum frame durations and stall durations for each format/size
            combination that can be used to calculate effective frame rate when submitting multiple captures.</para>
      <para>An instance of this object is available from <c>CameraCharacteristics</c> using
            the <c>CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP</c> key and the
            <c>CameraCharacteristics#get</c> method.</para>
      <code lang="text/java">&lt;code&gt;{@code
            CameraCharacteristics characteristics = cameraManager.getCameraCharacteristics(cameraId);
            StreamConfigurationMap configs = characteristics.get(
                    CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);
            }&lt;/code&gt;</code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHighResolutionOutputSizes">
      <MemberSignature Language="C#" Value="public Android.Util.Size[]? GetHighResolutionOutputSizes (int format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Size[] GetHighResolutionOutputSizes(int32 format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetHighResolutionOutputSizes(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetHighResolutionOutputSizes : int -&gt; Android.Util.Size[]" Usage="streamConfigurationMap.GetHighResolutionOutputSizes format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHighResolutionOutputSizes", "(I)[Landroid/util/Size;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHighResolutionOutputSizes", "(I)[Landroid/util/Size;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Size[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <summary>Get a list of supported high resolution sizes, which cannot operate at full BURST_CAPTURE
            rate.</summary>
        <returns>an array of supported slower high-resolution sizes, or <c>null</c> if the
                    BURST_CAPTURE capability is not supported</returns>
        <remarks>
          <para>Get a list of supported high resolution sizes, which cannot operate at full BURST_CAPTURE
            rate.</para>
          <para>This includes all output sizes that cannot meet the 20 fps frame rate requirements for the
            <c>android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_BURST_CAPTURE BURST_CAPTURE</c>
            capability.  This does not include the stall duration, so for example, a JPEG or RAW16 output
            resolution with a large stall duration but a minimum frame duration that's above 20 fps will
            still be listed in the regular <c>#getOutputSizes</c> list. All the sizes on this list that
            are less than 24 megapixels are still guaranteed to operate at a rate of at least 10 fps,
            not including stall duration. Sizes on this list that are at least 24 megapixels are allowed
            to operate at less than 10 fps.</para>
          <para>For a device that does not support the BURST_CAPTURE capability, this list will be
            <c>null</c>, since resolutions in the <c>#getOutputSizes</c> list are already not
            guaranteed to meet &amp;gt;= 20 fps rate requirements. For a device that does support the
            BURST_CAPTURE capability, this list may be empty, if all supported resolutions meet the 20
            fps requirement.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getHighResolutionOutputSizes(int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getHighResolutionOutputSizes(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHighSpeedVideoFpsRanges">
      <MemberSignature Language="C#" Value="public Android.Util.Range[]? GetHighSpeedVideoFpsRanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Range[] GetHighSpeedVideoFpsRanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetHighSpeedVideoFpsRanges" />
      <MemberSignature Language="F#" Value="member this.GetHighSpeedVideoFpsRanges : unit -&gt; Android.Util.Range[]" Usage="streamConfigurationMap.GetHighSpeedVideoFpsRanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHighSpeedVideoFpsRanges", "()[Landroid/util/Range;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHighSpeedVideoFpsRanges", "()[Landroid/util/Range;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Range[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a list of supported high speed video recording FPS ranges.</summary>
        <returns>an array of supported high speed video recording FPS ranges The upper bound of
                    returned ranges is guaranteed to be larger or equal to 120.</returns>
        <remarks>
          <para>Get a list of supported high speed video recording FPS ranges.</para>
          <para>When <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO</c> is
            supported in <c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c>, this method will
            list the supported high speed video FPS range configurations. Application can then use
            <c>#getHighSpeedVideoSizesFor</c> to query available sizes for one of returned FPS range.</para>
          <para>To enable high speed video recording, application must create a constrained create high speed
            capture session via <c>CameraDevice#createConstrainedHighSpeedCaptureSession</c>, and submit
            a CaptureRequest list created by
            <c>android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession#createHighSpeedRequestList</c>
            to this session. The application must select the video size from this method and
            <c>CaptureRequest#CONTROL_AE_TARGET_FPS_RANGE FPS range</c> from
            <c>#getHighSpeedVideoFpsRangesFor</c> to configure the constrained high speed session and
            generate the high speed request list. For example, if the application intends to do high
            speed recording, it can select one FPS range reported by this method, query the video sizes
            corresponding to this FPS range by <c>#getHighSpeedVideoSizesFor</c> and use one of reported
            sizes to create a high speed capture session. Note that for the use case of multiple output
            streams, application must select one unique size from this method to use (e.g., preview and
            recording streams must have the same size). Otherwise, the high speed session creation will
            fail. Once the high speed capture session is created, the application can set the FPS range
            in the recording request lists via
            <c>android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession#createHighSpeedRequestList</c>.</para>
          <para>The FPS ranges reported by this method will have below characteristics:
            &lt;li&gt;The fpsMin and fpsMax will be a multiple 30fps.&lt;/li&gt;
            &lt;li&gt;The fpsMin will be no less than 30fps, the fpsMax will be no less than 120fps.&lt;/li&gt;
            &lt;li&gt;At least one range will be a fixed FPS range where fpsMin == fpsMax.&lt;/li&gt;
            &lt;li&gt;For each fixed FPS range, there will be one corresponding variable FPS range
            [30, fps_max] or [60, fps_max]. These kinds of FPS ranges are suitable for preview-only
            use cases where the application doesn't want the camera device always produce higher frame
            rate than the display refresh rate. Both 30fps and 60fps preview rate will not be
            supported for the same recording rate.&lt;/li&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getHighSpeedVideoFpsRanges()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoFpsRanges()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHighSpeedVideoFpsRangesFor">
      <MemberSignature Language="C#" Value="public Android.Util.Range[]? GetHighSpeedVideoFpsRangesFor (Android.Util.Size? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Range[] GetHighSpeedVideoFpsRangesFor(class Android.Util.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetHighSpeedVideoFpsRangesFor(Android.Util.Size)" />
      <MemberSignature Language="F#" Value="member this.GetHighSpeedVideoFpsRangesFor : Android.Util.Size -&gt; Android.Util.Range[]" Usage="streamConfigurationMap.GetHighSpeedVideoFpsRangesFor size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHighSpeedVideoFpsRangesFor", "(Landroid/util/Size;)[Landroid/util/Range;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHighSpeedVideoFpsRangesFor", "(Landroid/util/Size;)[Landroid/util/Range;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Range[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Android.Util.Size" />
      </Parameters>
      <Docs>
        <param name="size">one of the sizes returned by <c>#getHighSpeedVideoSizes()</c></param>
        <summary>Get the frame per second ranges (fpsMin, fpsMax) for input high speed video size.</summary>
        <returns>an array of supported high speed video recording FPS ranges The upper bound of
                    returned ranges is guaranteed to be greater than or equal to 120.</returns>
        <remarks>
          <para>Get the frame per second ranges (fpsMin, fpsMax) for input high speed video size.</para>
          <para>See <c>#getHighSpeedVideoFpsRanges</c> for how to enable high speed recording.</para>
          <para>The <c>CaptureRequest#CONTROL_AE_TARGET_FPS_RANGE FPS ranges</c> reported in this method
            must not be used to setup capture requests that are submitted to unconstrained capture
            sessions, or it will result in <c>IllegalArgumentException IllegalArgumentExceptions</c>.</para>
          <para>See <c>#getHighSpeedVideoFpsRanges</c> for the characteristics of the returned FPS ranges.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getHighSpeedVideoFpsRangesFor(android.util.Size)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoFpsRangesFor(android.util.Size)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if input size does not exist in the return value of
             getHighSpeedVideoSizes</exception>
        <altmember cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetHighSpeedVideoSizes" />
        <altmember cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetHighSpeedVideoFpsRanges" />
      </Docs>
    </Member>
    <Member MemberName="GetHighSpeedVideoSizes">
      <MemberSignature Language="C#" Value="public Android.Util.Size[]? GetHighSpeedVideoSizes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Size[] GetHighSpeedVideoSizes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetHighSpeedVideoSizes" />
      <MemberSignature Language="F#" Value="member this.GetHighSpeedVideoSizes : unit -&gt; Android.Util.Size[]" Usage="streamConfigurationMap.GetHighSpeedVideoSizes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHighSpeedVideoSizes", "()[Landroid/util/Size;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHighSpeedVideoSizes", "()[Landroid/util/Size;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Size[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a list of supported high speed video recording sizes.</summary>
        <returns>an array of supported high speed video recording sizes</returns>
        <remarks>
          <para>Get a list of supported high speed video recording sizes.</para>
          <para>When <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO</c> is
            supported in <c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c>, this method will
            list the supported high speed video size configurations. All the sizes listed will be a
            subset of the sizes reported by <c>#getOutputSizes</c> for processed non-stalling formats
            (typically <c>ImageFormat#PRIVATE</c><c>ImageFormat#YUV_420_888</c>, etc.)</para>
          <para>To enable high speed video recording, application must create a constrained create high speed
            capture session via <c>CameraDevice#createConstrainedHighSpeedCaptureSession</c>, and submit
            a CaptureRequest list created by
            <c>android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession#createHighSpeedRequestList</c>
            to this session. The application must select the video size from this method and
            <c>CaptureRequest#CONTROL_AE_TARGET_FPS_RANGE FPS range</c> from
            <c>#getHighSpeedVideoFpsRangesFor</c> to configure the constrained high speed session and
            generate the high speed request list. For example, if the application intends to do high
            speed recording, it can select the maximum size reported by this method to create high speed
            capture session. Note that for the use case of multiple output streams, application must
            select one unique size from this method to use (e.g., preview and recording streams must have
            the same size). Otherwise, the high speed session creation will fail. Once the size is
            selected, application can get the supported FPS ranges by
            <c>#getHighSpeedVideoFpsRangesFor</c>, and use these FPS ranges to setup the recording
            request lists via
            <c>android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession#createHighSpeedRequestList</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getHighSpeedVideoSizes()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoSizes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetHighSpeedVideoFpsRangesFor(Android.Util.Size)" />
        <altmember cref="M:Android.Hardware.Camera2.CameraConstrainedHighSpeedCaptureSession.CreateHighSpeedRequestList(Android.Hardware.Camera2.CaptureRequest)" />
      </Docs>
    </Member>
    <Member MemberName="GetHighSpeedVideoSizesFor">
      <MemberSignature Language="C#" Value="public Android.Util.Size[]? GetHighSpeedVideoSizesFor (Android.Util.Range? fpsRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Size[] GetHighSpeedVideoSizesFor(class Android.Util.Range fpsRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetHighSpeedVideoSizesFor(Android.Util.Range)" />
      <MemberSignature Language="F#" Value="member this.GetHighSpeedVideoSizesFor : Android.Util.Range -&gt; Android.Util.Size[]" Usage="streamConfigurationMap.GetHighSpeedVideoSizesFor fpsRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHighSpeedVideoSizesFor", "(Landroid/util/Range;)[Landroid/util/Size;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHighSpeedVideoSizesFor", "(Landroid/util/Range;)[Landroid/util/Size;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Size[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fpsRange" Type="Android.Util.Range" />
      </Parameters>
      <Docs>
        <param name="fpsRange">one of the FPS range returned by <c>#getHighSpeedVideoFpsRanges()</c></param>
        <summary>Get the supported video sizes for an input high speed FPS range.</summary>
        <returns>An array of video sizes to create high speed capture sessions for high speed streaming
                    use cases.</returns>
        <remarks>
          <para>Get the supported video sizes for an input high speed FPS range.</para>
          <para>See <c>#getHighSpeedVideoSizes</c> for how to enable high speed recording.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getHighSpeedVideoSizesFor(android.util.Range%3Cjava.lang.Integer%3E)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoSizesFor(android.util.Range&lt;java.lang.Integer&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputFormats">
      <MemberSignature Language="C#" Value="public int[]? GetInputFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetInputFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetInputFormats" />
      <MemberSignature Language="F#" Value="member this.GetInputFormats : unit -&gt; int[]" Usage="streamConfigurationMap.GetInputFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInputFormats", "()[I", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInputFormats", "()[I", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the image <c>format</c> input formats in this stream configuration.</summary>
        <returns>an array of integer format</returns>
        <remarks>
          <para>Get the image <c>format</c> input formats in this stream configuration.</para>
          <para>All image formats returned by this function will be defined in either <c>ImageFormat</c>
            or in <c>PixelFormat</c> (and there is no possibility of collision).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getInputFormats()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getInputFormats()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputSizes">
      <MemberSignature Language="C#" Value="public Android.Util.Size[]? GetInputSizes (int format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Size[] GetInputSizes(int32 format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetInputSizes(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetInputSizes : int -&gt; Android.Util.Size[]" Usage="streamConfigurationMap.GetInputSizes format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInputSizes", "(I)[Landroid/util/Size;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInputSizes", "(I)[Landroid/util/Size;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Size[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="format">a format from <c>#getInputFormats</c></param>
        <summary>Get the supported input sizes for this input format.</summary>
        <returns>a non-empty array of sizes, or <c>null</c> if the format was not available.</returns>
        <remarks>
          <para>Get the supported input sizes for this input format.</para>
          <para>The format must have come from <c>#getInputFormats</c>; otherwise
            <c>null</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getInputSizes(int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getInputSizes(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormats">
      <MemberSignature Language="C#" Value="public int[]? GetOutputFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetOutputFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputFormats" />
      <MemberSignature Language="F#" Value="member this.GetOutputFormats : unit -&gt; int[]" Usage="streamConfigurationMap.GetOutputFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputFormats", "()[I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputFormats", "()[I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the image <c>format</c> output formats in this stream configuration.</summary>
        <returns>an array of integer format</returns>
        <remarks>
          <para>Get the image <c>format</c> output formats in this stream configuration.</para>
          <para>All image formats returned by this function will be defined in either <c>ImageFormat</c>
            or in <c>PixelFormat</c> (and there is no possibility of collision).</para>
          <para>Formats listed in this array are guaranteed to return true if queried with
            <c>#isOutputSupportedFor(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getOutputFormats()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getOutputFormats()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Graphics.ImageFormat" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputMinFrameDuration">
      <MemberSignature Language="C#" Value="public long GetOutputMinFrameDuration (Java.Lang.Class? klass, Android.Util.Size? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetOutputMinFrameDuration(class Java.Lang.Class klass, class Android.Util.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputMinFrameDuration(Java.Lang.Class,Android.Util.Size)" />
      <MemberSignature Language="F#" Value="member this.GetOutputMinFrameDuration : Java.Lang.Class * Android.Util.Size -&gt; int64" Usage="streamConfigurationMap.GetOutputMinFrameDuration (klass, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputMinFrameDuration", "(Ljava/lang/Class;Landroid/util/Size;)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputMinFrameDuration", "(Ljava/lang/Class;Landroid/util/Size;)J", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="klass" Type="Java.Lang.Class" />
        <Parameter Name="size" Type="Android.Util.Size" />
      </Parameters>
      <Docs>
        <param name="klass">a class which is supported by <c>#isOutputSupportedFor(Class)</c> and has a
                     non-empty array returned by <c>#getOutputSizes(Class)</c></param>
        <param name="size">an output-compatible size</param>
        <summary>Get the minimum <c>CaptureRequest#SENSOR_FRAME_DURATION frame duration</c>
            for the class/size combination (in nanoseconds).</summary>
        <returns>a minimum frame duration <c>&gt;</c> 0 in nanoseconds, or
                     0 if the minimum frame duration is not available.</returns>
        <remarks>
          <para>Get the minimum <c>CaptureRequest#SENSOR_FRAME_DURATION frame duration</c>
            for the class/size combination (in nanoseconds).</para>
          <para>This assumes that the <c>klass</c> is set up to use <c>ImageFormat#PRIVATE</c>.
            For user-defined formats, use <c>#getOutputMinFrameDuration(int, Size)</c>.</para>
          <para>
            <c>klass</c> should be one of the ones which is supported by
            <c>#isOutputSupportedFor(Class)</c>.</para>
          <para>
            <c>size</c> should be one of the ones returned by
            <c>#getOutputSizes(int)</c>.</para>
          <para>This corresponds to the minimum frame duration (maximum frame rate) possible when only
            that stream is configured in a session, with all processing (typically in
            <c>android.*.mode</c>) set to either <c>OFF</c> or <c>FAST</c>.</para>
          <para>When multiple streams are used in a session, the minimum frame duration will be
            <c>max(individual stream min durations)</c>.  See <c>#getOutputStallDuration</c> for
            details of timing for formats that may cause frame rate slowdown when they are targeted by a
            capture request.</para>
          <para>For devices that do not support manual sensor control
            (<c>android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR</c>),
            this function may return 0.</para>
          <para>The minimum frame duration of a stream (of a particular format, size) is the same
            regardless of whether the stream is input or output.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getOutputMinFrameDuration(java.lang.Class%3CT%3E,%20android.util.Size)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getOutputMinFrameDuration(java.lang.Class&lt;T&gt;, android.util.Size)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputMinFrameDuration">
      <MemberSignature Language="C#" Value="public long GetOutputMinFrameDuration (int format, Android.Util.Size? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetOutputMinFrameDuration(int32 format, class Android.Util.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputMinFrameDuration(System.Int32,Android.Util.Size)" />
      <MemberSignature Language="F#" Value="member this.GetOutputMinFrameDuration : int * Android.Util.Size -&gt; int64" Usage="streamConfigurationMap.GetOutputMinFrameDuration (format, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputMinFrameDuration", "(ILandroid/util/Size;)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputMinFrameDuration", "(ILandroid/util/Size;)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Int32" />
        <Parameter Name="size" Type="Android.Util.Size" />
      </Parameters>
      <Docs>
        <param name="format">an image format from <c>ImageFormat</c> or <c>PixelFormat</c></param>
        <param name="size">an output-compatible size</param>
        <summary>Get the minimum <c>CaptureRequest#SENSOR_FRAME_DURATION frame duration</c>
            for the format/size combination (in nanoseconds).</summary>
        <returns>a minimum frame duration <c>&gt;</c> 0 in nanoseconds, or
                     0 if the minimum frame duration is not available.</returns>
        <remarks>
          <para>Get the minimum <c>CaptureRequest#SENSOR_FRAME_DURATION frame duration</c>
            for the format/size combination (in nanoseconds).</para>
          <para>
            <c>format</c> should be one of the ones returned by <c>#getOutputFormats()</c>.</para>
          <para>
            <c>size</c> should be one of the ones returned by
            <c>#getOutputSizes(int)</c>.</para>
          <para>This corresponds to the minimum frame duration (maximum frame rate) possible when only
            that stream is configured in a session, with all processing (typically in
            <c>android.*.mode</c>) set to either <c>OFF</c> or <c>FAST</c>.</para>
          <para>When multiple streams are used in a session, the minimum frame duration will be
            <c>max(individual stream min durations)</c>.  See <c>#getOutputStallDuration</c> for
            details of timing for formats that may cause frame rate slowdown when they are targeted by a
            capture request.</para>
          <para>For devices that do not support manual sensor control
            (<c>android.hardware.camera2.CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR</c>),
            this function may return 0.</para>
          <para>The minimum frame duration of a stream (of a particular format, size) is the same
            regardless of whether the stream is input or output.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getOutputMinFrameDuration(int,%20android.util.Size)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getOutputMinFrameDuration(int, android.util.Size)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>format</c> or <c>size</c> was not supported</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>size</c> was <c>null</c></exception>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" />
        <altmember cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputStallDuration(System.Int32, Android.Util.Size)" />
        <altmember cref="T:Android.Graphics.ImageFormat" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputSizes">
      <MemberSignature Language="C#" Value="public Android.Util.Size[]? GetOutputSizes (Java.Lang.Class? klass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Size[] GetOutputSizes(class Java.Lang.Class klass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputSizes(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="member this.GetOutputSizes : Java.Lang.Class -&gt; Android.Util.Size[]" Usage="streamConfigurationMap.GetOutputSizes klass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputSizes", "(Ljava/lang/Class;)[Landroid/util/Size;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputSizes", "(Ljava/lang/Class;)[Landroid/util/Size;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Size[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="klass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="klass">a non-<c>null</c><c>Class</c> object reference</param>
        <summary>Get a list of sizes compatible with <c>klass</c> to use as an output.</summary>
        <returns>an array of supported sizes for <c>ImageFormat#PRIVATE</c> format,
                     or <c>null</c> iff the <c>klass</c> is not a supported output.</returns>
        <remarks>
          <para>Get a list of sizes compatible with <c>klass</c> to use as an output.</para>
          <para>Some of the supported classes may support additional formats beyond
            <c>ImageFormat#PRIVATE</c>; this function only returns
            sizes for <c>ImageFormat#PRIVATE</c>. For example, <c>android.media.ImageReader</c>
            supports <c>ImageFormat#YUV_420_888</c> and <c>ImageFormat#PRIVATE</c>, this method will
            only return the sizes for <c>ImageFormat#PRIVATE</c> for <c>android.media.ImageReader</c>
            class.</para>
          <para>If a well-defined format such as <c>NV21</c> is required, use
            <c>#getOutputSizes(int)</c> instead.</para>
          <para>The <c>klass</c> should be a supported output, that querying
            <c>#isOutputSupportedFor(Class)</c> should return <c>true</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getOutputSizes(java.lang.Class%3CT%3E)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getOutputSizes(java.lang.Class&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSizes">
      <MemberSignature Language="C#" Value="public Android.Util.Size[]? GetOutputSizes (int format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Size[] GetOutputSizes(int32 format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputSizes(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetOutputSizes : int -&gt; Android.Util.Size[]" Usage="streamConfigurationMap.GetOutputSizes format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputSizes", "(I)[Landroid/util/Size;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputSizes", "(I)[Landroid/util/Size;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Size[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="format">an image format from <c>ImageFormat</c> or <c>PixelFormat</c></param>
        <summary>Get a list of sizes compatible with the requested image <c>format</c>.</summary>
        <returns>an array of supported sizes,
                     or <c>null</c> if the <c>format</c> is not a supported output</returns>
        <remarks>
          <para>Get a list of sizes compatible with the requested image <c>format</c>.</para>
          <para>The <c>format</c> should be a supported format (one of the formats returned by
            <c>#getOutputFormats</c>).</para>
          <para>As of API level 23, the <c>#getHighResolutionOutputSizes</c> method can be used on devices
            that support the
            <c>android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_BURST_CAPTURE BURST_CAPTURE</c>
            capability to get a list of high-resolution output sizes that cannot operate at the preferred
            20fps rate. This means that for some supported formats, this method will return an empty
            list, if all the supported resolutions operate at below 20fps.  For devices that do not
            support the BURST_CAPTURE capability, all output resolutions are listed through this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getOutputSizes(int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getOutputSizes(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Graphics.ImageFormat" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
        <altmember cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputFormats" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputStallDuration">
      <MemberSignature Language="C#" Value="public long GetOutputStallDuration (Java.Lang.Class? klass, Android.Util.Size? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetOutputStallDuration(class Java.Lang.Class klass, class Android.Util.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputStallDuration(Java.Lang.Class,Android.Util.Size)" />
      <MemberSignature Language="F#" Value="member this.GetOutputStallDuration : Java.Lang.Class * Android.Util.Size -&gt; int64" Usage="streamConfigurationMap.GetOutputStallDuration (klass, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputStallDuration", "(Ljava/lang/Class;Landroid/util/Size;)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputStallDuration", "(Ljava/lang/Class;Landroid/util/Size;)J", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="klass" Type="Java.Lang.Class" />
        <Parameter Name="size" Type="Android.Util.Size" />
      </Parameters>
      <Docs>
        <param name="klass">a class which is supported by <c>#isOutputSupportedFor(Class)</c> and has a
                     non-empty array returned by <c>#getOutputSizes(Class)</c></param>
        <param name="size">an output-compatible size</param>
        <summary>Get the stall duration for the class/size combination (in nanoseconds).</summary>
        <returns>a minimum frame duration <c>&gt;=</c> 0 in nanoseconds</returns>
        <remarks>
          <para>Get the stall duration for the class/size combination (in nanoseconds).</para>
          <para>This assumes that the <c>klass</c> is set up to use <c>ImageFormat#PRIVATE</c>.
            For user-defined formats, use <c>#getOutputMinFrameDuration(int, Size)</c>.</para>
          <para>
            <c>klass</c> should be one of the ones with a non-empty array returned by
            <c>#getOutputSizes(Class)</c>.</para>
          <para>
            <c>size</c> should be one of the ones returned by
            <c>#getOutputSizes(Class)</c>.</para>
          <para>See <c>#getOutputStallDuration(int, Size)</c> for a definition of a
            &lt;em&gt;stall duration&lt;/em&gt;.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getOutputStallDuration(java.lang.Class%3CT%3E,%20android.util.Size)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getOutputStallDuration(java.lang.Class&lt;T&gt;, android.util.Size)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputStallDuration">
      <MemberSignature Language="C#" Value="public long GetOutputStallDuration (int format, Android.Util.Size? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetOutputStallDuration(int32 format, class Android.Util.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputStallDuration(System.Int32,Android.Util.Size)" />
      <MemberSignature Language="F#" Value="member this.GetOutputStallDuration : int * Android.Util.Size -&gt; int64" Usage="streamConfigurationMap.GetOutputStallDuration (format, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputStallDuration", "(ILandroid/util/Size;)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputStallDuration", "(ILandroid/util/Size;)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Int32" />
        <Parameter Name="size" Type="Android.Util.Size" />
      </Parameters>
      <Docs>
        <param name="format">an image format from <c>ImageFormat</c> or <c>PixelFormat</c></param>
        <param name="size">an output-compatible size</param>
        <summary>Get the stall duration for the format/size combination (in nanoseconds).</summary>
        <returns>a stall duration <c>&gt;=</c> 0 in nanoseconds</returns>
        <remarks>
          <para>Get the stall duration for the format/size combination (in nanoseconds).</para>
          <para>
            <c>format</c> should be one of the ones returned by <c>#getOutputFormats()</c>.</para>
          <para>
            <c>size</c> should be one of the ones returned by
            <c>#getOutputSizes(int)</c>.</para>
          <para>A stall duration is how much extra time would get added to the normal minimum frame duration
            for a repeating request that has streams with non-zero stall.</para>
          <para>For example, consider JPEG captures which have the following characteristics:
            
            &lt;ul&gt;
            &lt;li&gt;JPEG streams act like processed YUV streams in requests for which they are not included;
            in requests in which they are directly referenced, they act as JPEG streams.
            This is because supporting a JPEG stream requires the underlying YUV data to always be ready
            for use by a JPEG encoder, but the encoder will only be used (and impact frame duration) on
            requests that actually reference a JPEG stream.
            &lt;li&gt;The JPEG processor can run concurrently to the rest of the camera pipeline, but cannot
            process more than 1 capture at a time.
            &lt;/ul&gt;</para>
          <para>In other words, using a repeating YUV request would result in a steady frame rate
            (let's say it's 30 FPS). If a single JPEG request is submitted periodically,
            the frame rate will stay at 30 FPS (as long as we wait for the previous JPEG to return each
            time). If we try to submit a repeating YUV + JPEG request, then the frame rate will drop from
            30 FPS.</para>
          <para>In general, submitting a new request with a non-0 stall time stream will &lt;em&gt;not&lt;/em&gt; cause a
            frame rate drop unless there are still outstanding buffers for that stream from previous
            requests.</para>
          <para>Submitting a repeating request with streams (call this <c>S</c>) is the same as setting
            the minimum frame duration from the normal minimum frame duration corresponding to <c>S</c>,
            added with the maximum stall duration for <c>S</c>.</para>
          <para>If interleaving requests with and without a stall duration, a request will stall by the
            maximum of the remaining times for each can-stall stream with outstanding buffers.</para>
          <para>This means that a stalling request will not have an exposure start until the stall has
            completed.</para>
          <para>This should correspond to the stall duration when only that stream is active, with all
            processing (typically in <c>android.*.mode</c>) set to <c>FAST</c> or <c>OFF</c>.
            Setting any of the processing modes to <c>HIGH_QUALITY</c> effectively results in an
            indeterminate stall duration for all streams in a request (the regular stall calculation
            rules are ignored).</para>
          <para>The following formats may always have a stall duration:
            &lt;ul&gt;
            &lt;li&gt;<c>ImageFormat#JPEG JPEG</c>&lt;li&gt;<c>ImageFormat#RAW_SENSOR RAW16</c>&lt;li&gt;<c>ImageFormat#RAW_PRIVATE RAW_PRIVATE</c>&lt;/ul&gt;</para>
          <para>The following formats will never have a stall duration:
            &lt;ul&gt;
            &lt;li&gt;<c>ImageFormat#YUV_420_888 YUV_420_888</c>&lt;li&gt;<c>ImageFormat#PRIVATE PRIVATE</c>&lt;/ul&gt;</para>
          <para>All other formats may or may not have an allowed stall duration on a per-capability basis;
            refer to <c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES
            android.request.availableCapabilities</c> for more details.</para>
          <para>&lt;/p&gt;</para>
          <para>See <c>CaptureRequest#SENSOR_FRAME_DURATION android.sensor.frameDuration</c>
            for more information about calculating the max frame rate (absent stalls).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getOutputStallDuration(int,%20android.util.Size)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getOutputStallDuration(int, android.util.Size)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>format</c> or <c>size</c> was not supported</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>size</c> was <c>null</c></exception>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" />
        <altmember cref="T:Android.Graphics.ImageFormat" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetValidOutputFormatsForInput">
      <MemberSignature Language="C#" Value="public int[]? GetValidOutputFormatsForInput (int inputFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetValidOutputFormatsForInput(int32 inputFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetValidOutputFormatsForInput(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetValidOutputFormatsForInput : int -&gt; int[]" Usage="streamConfigurationMap.GetValidOutputFormatsForInput inputFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getValidOutputFormatsForInput", "(I)[I", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getValidOutputFormatsForInput", "(I)[I", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFormat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputFormat">To be added.</param>
        <summary>Get the image <c>format</c> output formats for a reprocessing input format.</summary>
        <returns>an array of integer format</returns>
        <remarks>
          <para>Get the image <c>format</c> output formats for a reprocessing input format.</para>
          <para>When submitting a <c>CaptureRequest</c> with an input Surface of a given format,
            the only allowed target outputs of the <c>CaptureRequest</c> are the ones with a format
            listed in the return value of this method. Including any other output Surface as a target
            will throw an IllegalArgumentException. If no output format is supported given the input
            format, an empty int[] will be returned.</para>
          <para>All image formats returned by this function will be defined in either <c>ImageFormat</c>
            or in <c>PixelFormat</c> (and there is no possibility of collision).</para>
          <para>Formats listed in this array are guaranteed to return true if queried with
            <c>#isOutputSupportedFor(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#getValidOutputFormatsForInput(int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.getValidOutputFormatsForInput(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutputSupportedFor">
      <MemberSignature Language="C#" Value="public bool IsOutputSupportedFor (Android.Views.Surface? surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutputSupportedFor(class Android.Views.Surface surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.IsOutputSupportedFor(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="member this.IsOutputSupportedFor : Android.Views.Surface -&gt; bool" Usage="streamConfigurationMap.IsOutputSupportedFor surface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isOutputSupportedFor", "(Landroid/view/Surface;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isOutputSupportedFor", "(Landroid/view/Surface;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="surface">a non-<c>null</c><c>Surface</c> object reference</param>
        <summary>Determine whether or not the <c>surface</c> in its current state is suitable to be included
            in a <c>CameraDevice#createCaptureSession capture session</c> as an output.</summary>
        <returns>
          <c>true</c> if this is supported, <c>false</c> otherwise</returns>
        <remarks>
          <para>Determine whether or not the <c>surface</c> in its current state is suitable to be included
            in a <c>CameraDevice#createCaptureSession capture session</c> as an output.</para>
          <para>Not all surfaces are usable with the <c>CameraDevice</c>, and not all configurations
            of that <c>surface</c> are compatible. Some classes that provide the <c>surface</c> are
            compatible with the <c>CameraDevice</c> in general
            (see <c>#isOutputSupportedFor(Class)</c>, but it is the caller's responsibility to put the
            <c>surface</c> into a state that will be compatible with the <c>CameraDevice</c>.</para>
          <para>Reasons for a <c>surface</c> being specifically incompatible might be:
            &lt;ul&gt;
            &lt;li&gt;Using a format that's not listed by <c>#getOutputFormats</c>&lt;li&gt;Using a format/size combination that's not listed by <c>#getOutputSizes</c>&lt;li&gt;The <c>surface</c> itself is not in a state where it can service a new producer.</para>
          <para>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Surfaces from flexible sources will return true even if the exact size of the Surface does
            not match a camera-supported size, as long as the format (or class) is supported and the
            camera device supports a size that is equal to or less than 1080p in that format. If such as
            Surface is used to create a capture session, it will have its size rounded to the nearest
            supported size, below or equal to 1080p. Flexible sources include SurfaceView, SurfaceTexture,
            and ImageReader.</para>
          <para>This is not an exhaustive list; see the particular class's documentation for further
            possible reasons of incompatibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#isOutputSupportedFor(android.view.Surface)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(android.view.Surface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.NullPointerException">if <c>surface</c> was <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the Surface endpoint is no longer valid</exception>
      </Docs>
    </Member>
    <Member MemberName="IsOutputSupportedFor">
      <MemberSignature Language="C#" Value="public static bool IsOutputSupportedFor (Java.Lang.Class? klass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOutputSupportedFor(class Java.Lang.Class klass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.IsOutputSupportedFor(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member IsOutputSupportedFor : Java.Lang.Class -&gt; bool" Usage="Android.Hardware.Camera2.Params.StreamConfigurationMap.IsOutputSupportedFor klass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isOutputSupportedFor", "(Ljava/lang/Class;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isOutputSupportedFor", "(Ljava/lang/Class;)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="klass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="klass">a non-<c>null</c><c>Class</c> object reference</param>
        <summary>Determine whether or not output streams can be configured with a particular class
            as a consumer.</summary>
        <returns>
          <c>true</c> if this class is supported as an output, <c>false</c> otherwise</returns>
        <remarks>
          <para>Determine whether or not output streams can be configured with a particular class
            as a consumer.</para>
          <para>The following list is generally usable for outputs:
            &lt;ul&gt;
            &lt;li&gt;<c>android.media.ImageReader</c> -
            Recommended for image processing or streaming to external resources (such as a file or
            network)
            &lt;li&gt;<c>android.media.MediaRecorder</c> -
            Recommended for recording video (simple to use)
            &lt;li&gt;<c>android.media.MediaCodec</c> -
            Recommended for recording video (more complicated to use, with more flexibility)
            &lt;li&gt;<c>android.renderscript.Allocation</c> -
            Recommended for image processing with <c>android.renderscript RenderScript</c>&lt;li&gt;<c>android.view.SurfaceHolder</c> -
            Recommended for low-power camera preview with <c>android.view.SurfaceView</c>&lt;li&gt;<c>android.graphics.SurfaceTexture</c> -
            Recommended for OpenGL-accelerated preview processing or compositing with
            <c>android.view.TextureView</c>&lt;/ul&gt;</para>
          <para>Generally speaking this means that creating a <c>Surface</c> from that class <i>may</i>
            provide a producer endpoint that is suitable to be used with
            <c>CameraDevice#createCaptureSession</c>.</para>
          <para>Since not all of the above classes support output of all format and size combinations,
            the particular combination should be queried with <c>#isOutputSupportedFor(Surface)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#isOutputSupportedFor(java.lang.Class%3CT%3E)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(java.lang.Class&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutputSupportedFor">
      <MemberSignature Language="C#" Value="public bool IsOutputSupportedFor (int format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutputSupportedFor(int32 format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.IsOutputSupportedFor(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.IsOutputSupportedFor : int -&gt; bool" Usage="streamConfigurationMap.IsOutputSupportedFor format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isOutputSupportedFor", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isOutputSupportedFor", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="format">an image format from either <c>ImageFormat</c> or <c>PixelFormat</c></param>
        <summary>Determine whether or not output surfaces with a particular user-defined format can be passed
            <c>CameraDevice#createCaptureSession createCaptureSession</c>.</summary>
        <returns>
          <c>true</c> iff using a <c>surface</c> with this <c>format</c> will be
                     supported with <c>CameraDevice#createCaptureSession</c></returns>
        <remarks>
          <para>Determine whether or not output surfaces with a particular user-defined format can be passed
            <c>CameraDevice#createCaptureSession createCaptureSession</c>.</para>
          <para>This method determines that the output <c>format</c> is supported by the camera device;
            each output <c>surface</c> target may or may not itself support that <c>format</c>.
            Refer to the class which provides the surface for additional documentation.</para>
          <para>Formats for which this returns <c>true</c> are guaranteed to exist in the result
            returned by <c>#getOutputSizes</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap#isOutputSupportedFor(int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the image format was not a defined named constant
          from either <see cref="T:Android.Graphics.ImageFormat" /> or <see cref="T:Android.Graphics.PixelFormat" /></exception>
        <altmember cref="T:Android.Graphics.ImageFormat" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.Params.StreamConfigurationMap.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Hardware.Camera2.Params.StreamConfigurationMap.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.Params.StreamConfigurationMap.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Hardware.Camera2.Params.StreamConfigurationMap.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.Params.StreamConfigurationMap.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Hardware.Camera2.Params.StreamConfigurationMap.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
