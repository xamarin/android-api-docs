<Type Name="SAXParser" FullName="Javax.Xml.Parsers.SAXParser">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SAXParser&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class SAXParser abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class SAXParser : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SAXParser extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Xml.Parsers.SAXParser" />
  <TypeSignature Language="F#" Value="type SAXParser = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/xml/parsers/SAXParser", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/xml/parsers/SAXParser", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Defines the API that wraps an <c>org.xml.sax.XMLReader</c>
            implementation class.</summary>
    <remarks>
      <para>Defines the API that wraps an <c>org.xml.sax.XMLReader</c>
            implementation class. In JAXP 1.0, this class wrapped the
            <c>org.xml.sax.Parser</c> interface, however this interface was
            replaced by the <c>org.xml.sax.XMLReader</c>. For ease
            of transition, this class continues to support the same name
            and interface as well as supporting new methods.
            
            An instance of this class can be obtained from the
            <c>javax.xml.parsers.SAXParserFactory#newSAXParser()</c> method.
            Once an instance of this class is obtained, XML can be parsed from
            a variety of input sources. These input sources are InputStreams,
            Files, URLs, and SAX InputSources.</para>
      <para>This static method creates a new factory instance based
            on a system property setting or uses the platform default
            if no property has been defined.</para>
      <para>The system property that controls which Factory implementation
            to create is named <c>&amp;quot;javax.xml.parsers.SAXParserFactory&amp;quot;</c>.
            This property names a class that is a concrete subclass of this
            abstract class. If no property is defined, a platform default
            will be used.</para>
      <para>As the content is parsed by the underlying parser, methods of the
            given <c>org.xml.sax.HandlerBase</c> or the
            <c>org.xml.sax.helpers.DefaultHandler</c> are called.</para>
      <para>Implementations of this class which wrap an underlying implementation
            can consider using the <c>org.xml.sax.helpers.ParserAdapter</c>
            class to initially adapt their SAX1 implementation to work under
            this revised class.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SAXParser();" />
      <MemberSignature Language="C#" Value="protected SAXParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Protected constructor to prevent instantiation.</summary>
        <remarks>
          <para>Protected constructor to prevent instantiation.
            Use <c>javax.xml.parsers.SAXParserFactory#newSAXParser()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#SAXParser()" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.SAXParser()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SAXParser(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected SAXParser (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Xml.Parsers.SAXParser : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Xml.Parsers.SAXParser" Usage="new Javax.Xml.Parsers.SAXParser (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Lang::Object ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object? GetProperty (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.GetProperty(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Java.Lang.Object" Usage="sAXParser.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the property to be retrieved.</param>
        <summary>Returns the particular property requested for in the underlying
            implementation of <c>org.xml.sax.XMLReader</c>.</summary>
        <returns>Value of the requested property.</returns>
        <remarks>
          <para>Returns the particular property requested for in the underlying
            implementation of <c>org.xml.sax.XMLReader</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#getProperty(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.getProperty(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">When the underlying XMLReader does
    not recognize the property name.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the underlying XMLReader
  recognizes the property name but doesn't support the property.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.GetProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceAware">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsNamespaceAware As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsNamespaceAware { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsNamespaceAware { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceAware" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.IsNamespaceAware" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceAware : bool" Usage="Javax.Xml.Parsers.SAXParser.IsNamespaceAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isNamespaceAware", "()Z", "GetIsNamespaceAwareHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isNamespaceAware", "()Z", "GetIsNamespaceAwareHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this parser is configured to
 understand namespaces.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsValidating">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsValidating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsValidating { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsValidating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValidating" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.IsValidating" />
      <MemberSignature Language="F#" Value="member this.IsValidating : bool" Usage="Javax.Xml.Parsers.SAXParser.IsValidating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isValidating", "()Z", "GetIsValidatingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isValidating", "()Z", "GetIsValidatingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this parser is configured to
 validate XML documents.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsXIncludeAware">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsXIncludeAware As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsXIncludeAware { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsXIncludeAware { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXIncludeAware" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.IsXIncludeAware" />
      <MemberSignature Language="F#" Value="member this.IsXIncludeAware : bool" Usage="Javax.Xml.Parsers.SAXParser.IsXIncludeAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isXIncludeAware", "()Z", "GetIsXIncludeAwareHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isXIncludeAware", "()Z", "GetIsXIncludeAwareHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the XInclude processing mode for this parser.</summary>
        <value>the return value of
                 the <c>SAXParserFactory#isXIncludeAware()</c>
                 when this parser was created from factory.</value>
        <remarks>
          <para>Get the XInclude processing mode for this parser.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#isXIncludeAware()" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.isXIncludeAware()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
        <altmember cref="P:Javax.Xml.Parsers.SAXParserFactory.XIncludeAware" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Xml.Parsers.SAXParser.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (f As File, hb As HandlerBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(Java::IO::File ^ f, Org::Xml::Sax::HandlerBase ^ hb);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (Java.IO.File? f, Org.Xml.Sax.HandlerBase? hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Java.IO.File f, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(Java.IO.File,Org.Xml.Sax.HandlerBase)" />
      <MemberSignature Language="F#" Value="abstract member Parse : Java.IO.File * Org.Xml.Sax.HandlerBase -&gt; unit&#xA;override this.Parse : Java.IO.File * Org.Xml.Sax.HandlerBase -&gt; unit" Usage="sAXParser.Parse (f, hb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/io/File;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_io_File_Lorg_xml_sax_HandlerBase_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/io/File;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_io_File_Lorg_xml_sax_HandlerBase_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="Java.IO.File" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="f">The file containing the XML to parse</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <summary>Parse the content of the file specified as XML using the
            specified <c>org.xml.sax.HandlerBase</c>.</summary>
        <remarks>
          <para>Parse the content of the file specified as XML using the
            specified <c>org.xml.sax.HandlerBase</c>.
            <i> Use of the DefaultHandler version of this method is recommended as
            the HandlerBase class has been deprecated in SAX 2.0</i></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(java.io.File,%20org.xml.sax.HandlerBase)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(java.io.File, org.xml.sax.HandlerBase)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the File object is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (f As File, dh As DefaultHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(Java::IO::File ^ f, Org::Xml::Sax::Helpers::DefaultHandler ^ dh);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (Java.IO.File? f, Org.Xml.Sax.Helpers.DefaultHandler? dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Java.IO.File f, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(Java.IO.File,Org.Xml.Sax.Helpers.DefaultHandler)" />
      <MemberSignature Language="F#" Value="abstract member Parse : Java.IO.File * Org.Xml.Sax.Helpers.DefaultHandler -&gt; unit&#xA;override this.Parse : Java.IO.File * Org.Xml.Sax.Helpers.DefaultHandler -&gt; unit" Usage="sAXParser.Parse (f, dh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/io/File;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_io_File_Lorg_xml_sax_helpers_DefaultHandler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/io/File;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_io_File_Lorg_xml_sax_helpers_DefaultHandler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="Java.IO.File" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="f">The file containing the XML to parse</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <summary>Parse the content of the file specified as XML using the
            specified <c>org.xml.sax.helpers.DefaultHandler</c>.</summary>
        <remarks>
          <para>Parse the content of the file specified as XML using the
            specified <c>org.xml.sax.helpers.DefaultHandler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(java.io.File,%20org.xml.sax.helpers.DefaultHandler)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(java.io.File, org.xml.sax.helpers.DefaultHandler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the File object is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (is As InputSource, hb As HandlerBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(Org::Xml::Sax::InputSource ^ is, Org::Xml::Sax::HandlerBase ^ hb);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (Org.Xml.Sax.InputSource? is, Org.Xml.Sax.HandlerBase? hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Org.Xml.Sax.InputSource is, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(Org.Xml.Sax.InputSource,Org.Xml.Sax.HandlerBase)" />
      <MemberSignature Language="F#" Value="abstract member Parse : Org.Xml.Sax.InputSource * Org.Xml.Sax.HandlerBase -&gt; unit&#xA;override this.Parse : Org.Xml.Sax.InputSource * Org.Xml.Sax.HandlerBase -&gt; unit" Usage="sAXParser.Parse (is, hb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;Lorg/xml/sax/HandlerBase;)V", "GetParse_Lorg_xml_sax_InputSource_Lorg_xml_sax_HandlerBase_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;Lorg/xml/sax/HandlerBase;)V", "GetParse_Lorg_xml_sax_InputSource_Lorg_xml_sax_HandlerBase_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="Org.Xml.Sax.InputSource" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="is">The InputSource containing the content to be parsed.</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <summary>Parse the content given <c>org.xml.sax.InputSource</c>
            as XML using the specified
            <c>org.xml.sax.HandlerBase</c>.</summary>
        <remarks>
          <para>Parse the content given <c>org.xml.sax.InputSource</c>
            as XML using the specified
            <c>org.xml.sax.HandlerBase</c>.
            <i> Use of the DefaultHandler version of this method is recommended as
            the HandlerBase class has been deprecated in SAX 2.0</i></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(org.xml.sax.InputSource,%20org.xml.sax.HandlerBase)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource, org.xml.sax.HandlerBase)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the <c>InputSource</c> object
   is <c>null</c>.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (is As InputSource, dh As DefaultHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(Org::Xml::Sax::InputSource ^ is, Org::Xml::Sax::Helpers::DefaultHandler ^ dh);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (Org.Xml.Sax.InputSource? is, Org.Xml.Sax.Helpers.DefaultHandler? dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Org.Xml.Sax.InputSource is, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(Org.Xml.Sax.InputSource,Org.Xml.Sax.Helpers.DefaultHandler)" />
      <MemberSignature Language="F#" Value="abstract member Parse : Org.Xml.Sax.InputSource * Org.Xml.Sax.Helpers.DefaultHandler -&gt; unit&#xA;override this.Parse : Org.Xml.Sax.InputSource * Org.Xml.Sax.Helpers.DefaultHandler -&gt; unit" Usage="sAXParser.Parse (is, dh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Lorg_xml_sax_InputSource_Lorg_xml_sax_helpers_DefaultHandler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Lorg_xml_sax_InputSource_Lorg_xml_sax_helpers_DefaultHandler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="Org.Xml.Sax.InputSource" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="is">The InputSource containing the content to be parsed.</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <summary>Parse the content given <c>org.xml.sax.InputSource</c>
            as XML using the specified
            <c>org.xml.sax.helpers.DefaultHandler</c>.</summary>
        <remarks>
          <para>Parse the content given <c>org.xml.sax.InputSource</c>
            as XML using the specified
            <c>org.xml.sax.helpers.DefaultHandler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(org.xml.sax.InputSource,%20org.xml.sax.helpers.DefaultHandler)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource, org.xml.sax.helpers.DefaultHandler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the <c>InputSource</c> object
   is <c>null</c>.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (is As Stream, hb As HandlerBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(System::IO::Stream ^ is, Org::Xml::Sax::HandlerBase ^ hb);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.Stream? is, Org.Xml.Sax.HandlerBase? hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.Stream is, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(System.IO.Stream,Org.Xml.Sax.HandlerBase)" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.Stream * Org.Xml.Sax.HandlerBase -&gt; unit&#xA;override this.Parse : System.IO.Stream * Org.Xml.Sax.HandlerBase -&gt; unit" Usage="sAXParser.Parse (is, hb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_HandlerBase_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_HandlerBase_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <summary>Parse the content of the given <c>java.io.InputStream</c>
            instance as XML using the specified <c>org.xml.sax.HandlerBase</c>.</summary>
        <remarks>
          <para>Parse the content of the given <c>java.io.InputStream</c>
            instance as XML using the specified <c>org.xml.sax.HandlerBase</c>.
            <i> Use of the DefaultHandler version of this method is recommended as
            the HandlerBase class has been deprecated in SAX 2.0</i>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(java.io.InputStream,%20org.xml.sax.HandlerBase)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(java.io.InputStream, org.xml.sax.HandlerBase)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the given InputStream is null.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If parse produces a SAX error.</exception>
        <exception cref="T:Java.IO.IOException">If an IO error occurs interacting with the
   <c>InputStream</c>.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (is As Stream, dh As DefaultHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(System::IO::Stream ^ is, Org::Xml::Sax::Helpers::DefaultHandler ^ dh);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.Stream? is, Org.Xml.Sax.Helpers.DefaultHandler? dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.Stream is, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(System.IO.Stream,Org.Xml.Sax.Helpers.DefaultHandler)" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.Stream * Org.Xml.Sax.Helpers.DefaultHandler -&gt; unit&#xA;override this.Parse : System.IO.Stream * Org.Xml.Sax.Helpers.DefaultHandler -&gt; unit" Usage="sAXParser.Parse (is, dh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_helpers_DefaultHandler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_helpers_DefaultHandler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <summary>Parse the content of the given <c>java.io.InputStream</c>
            instance as XML using the specified
            <c>org.xml.sax.helpers.DefaultHandler</c>.</summary>
        <remarks>
          <para>Parse the content of the given <c>java.io.InputStream</c>
            instance as XML using the specified
            <c>org.xml.sax.helpers.DefaultHandler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(java.io.InputStream,%20org.xml.sax.helpers.DefaultHandler)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(java.io.InputStream, org.xml.sax.helpers.DefaultHandler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the given InputStream is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (uri As String, hb As HandlerBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(System::String ^ uri, Org::Xml::Sax::HandlerBase ^ hb);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (string? uri, Org.Xml.Sax.HandlerBase? hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(string uri, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(System.String,Org.Xml.Sax.HandlerBase)" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * Org.Xml.Sax.HandlerBase -&gt; unit&#xA;override this.Parse : string * Org.Xml.Sax.HandlerBase -&gt; unit" Usage="sAXParser.Parse (uri, hb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/lang/String;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_lang_String_Lorg_xml_sax_HandlerBase_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/lang/String;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_lang_String_Lorg_xml_sax_HandlerBase_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="uri">The location of the content to be parsed.</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <summary>Parse the content described by the giving Uniform Resource
            Identifier (URI) as XML using the specified
            <c>org.xml.sax.HandlerBase</c>.</summary>
        <remarks>
          <para>Parse the content described by the giving Uniform Resource
            Identifier (URI) as XML using the specified
            <c>org.xml.sax.HandlerBase</c>.
            <i> Use of the DefaultHandler version of this method is recommended as
            the <c>HandlerBase</c> class has been deprecated in SAX 2.0</i></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(java.lang.String,%20org.xml.sax.HandlerBase)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(java.lang.String, org.xml.sax.HandlerBase)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the uri is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (uri As String, dh As DefaultHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(System::String ^ uri, Org::Xml::Sax::Helpers::DefaultHandler ^ dh);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (string? uri, Org.Xml.Sax.Helpers.DefaultHandler? dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(string uri, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(System.String,Org.Xml.Sax.Helpers.DefaultHandler)" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * Org.Xml.Sax.Helpers.DefaultHandler -&gt; unit&#xA;override this.Parse : string * Org.Xml.Sax.Helpers.DefaultHandler -&gt; unit" Usage="sAXParser.Parse (uri, dh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/lang/String;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_lang_String_Lorg_xml_sax_helpers_DefaultHandler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/lang/String;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_lang_String_Lorg_xml_sax_helpers_DefaultHandler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="uri">The location of the content to be parsed.</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <summary>Parse the content described by the giving Uniform Resource
            Identifier (URI) as XML using the specified
            <c>org.xml.sax.helpers.DefaultHandler</c>.</summary>
        <remarks>
          <para>Parse the content described by the giving Uniform Resource
            Identifier (URI) as XML using the specified
            <c>org.xml.sax.helpers.DefaultHandler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(java.lang.String,%20org.xml.sax.helpers.DefaultHandler)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(java.lang.String, org.xml.sax.helpers.DefaultHandler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the uri is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (is As Stream, hb As HandlerBase, systemId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(System::IO::Stream ^ is, Org::Xml::Sax::HandlerBase ^ hb, System::String ^ systemId);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.Stream? is, Org.Xml.Sax.HandlerBase? hb, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.Stream is, class Org.Xml.Sax.HandlerBase hb, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(System.IO.Stream,Org.Xml.Sax.HandlerBase,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.Stream * Org.Xml.Sax.HandlerBase * string -&gt; unit&#xA;override this.Parse : System.IO.Stream * Org.Xml.Sax.HandlerBase * string -&gt; unit" Usage="sAXParser.Parse (is, hb, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/HandlerBase;Ljava/lang/String;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_HandlerBase_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/HandlerBase;Ljava/lang/String;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_HandlerBase_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <param name="systemId">The systemId which is needed for resolving relative URIs.</param>
        <summary>Parse the content of the given <c>java.io.InputStream</c>
            instance as XML using the specified <c>org.xml.sax.HandlerBase</c>.</summary>
        <remarks>
          <para>Parse the content of the given <c>java.io.InputStream</c>
            instance as XML using the specified <c>org.xml.sax.HandlerBase</c>.
            <i> Use of the DefaultHandler version of this method is recommended as
            the HandlerBase class has been deprecated in SAX 2.0</i>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(java.io.InputStream,%20org.xml.sax.HandlerBase,%20java.lang.String)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(java.io.InputStream, org.xml.sax.HandlerBase, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the given <c>InputStream</c> is
   <c>null</c>.</exception>
        <exception cref="T:Java.IO.IOException">If any IO error occurs interacting with the
   <c>InputStream</c>.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (is As Stream, dh As DefaultHandler, systemId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(System::IO::Stream ^ is, Org::Xml::Sax::Helpers::DefaultHandler ^ dh, System::String ^ systemId);" />
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.Stream? is, Org.Xml.Sax.Helpers.DefaultHandler? dh, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.Stream is, class Org.Xml.Sax.Helpers.DefaultHandler dh, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Parse(System.IO.Stream,Org.Xml.Sax.Helpers.DefaultHandler,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.Stream * Org.Xml.Sax.Helpers.DefaultHandler * string -&gt; unit&#xA;override this.Parse : System.IO.Stream * Org.Xml.Sax.Helpers.DefaultHandler * string -&gt; unit" Usage="sAXParser.Parse (is, dh, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;Ljava/lang/String;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_helpers_DefaultHandler_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;Ljava/lang/String;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_helpers_DefaultHandler_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <param name="systemId">The systemId which is needed for resolving relative URIs.</param>
        <summary>Parse the content of the given <c>java.io.InputStream</c>
            instance as XML using the specified
            <c>org.xml.sax.helpers.DefaultHandler</c>.</summary>
        <remarks>
          <para>Parse the content of the given <c>java.io.InputStream</c>
            instance as XML using the specified
            <c>org.xml.sax.helpers.DefaultHandler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#parse(java.io.InputStream,%20org.xml.sax.helpers.DefaultHandler,%20java.lang.String)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.parse(java.io.InputStream, org.xml.sax.helpers.DefaultHandler, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the given InputStream is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (f As File, hb As HandlerBase) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(Java::IO::File ^ f, Org::Xml::Sax::HandlerBase ^ hb);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (Java.IO.File? f, Org.Xml.Sax.HandlerBase? hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class Java.IO.File f, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(Java.IO.File,Org.Xml.Sax.HandlerBase)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : Java.IO.File * Org.Xml.Sax.HandlerBase -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (f, hb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="Java.IO.File" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="hb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (f As File, dh As DefaultHandler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(Java::IO::File ^ f, Org::Xml::Sax::Helpers::DefaultHandler ^ dh);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (Java.IO.File? f, Org.Xml.Sax.Helpers.DefaultHandler? dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class Java.IO.File f, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(Java.IO.File,Org.Xml.Sax.Helpers.DefaultHandler)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : Java.IO.File * Org.Xml.Sax.Helpers.DefaultHandler -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (f, dh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="Java.IO.File" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="dh">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (is As InputSource, hb As HandlerBase) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(Org::Xml::Sax::InputSource ^ is, Org::Xml::Sax::HandlerBase ^ hb);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (Org.Xml.Sax.InputSource? is, Org.Xml.Sax.HandlerBase? hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class Org.Xml.Sax.InputSource is, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(Org.Xml.Sax.InputSource,Org.Xml.Sax.HandlerBase)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : Org.Xml.Sax.InputSource * Org.Xml.Sax.HandlerBase -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (is, hb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="Org.Xml.Sax.InputSource" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="hb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (is As InputSource, dh As DefaultHandler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(Org::Xml::Sax::InputSource ^ is, Org::Xml::Sax::Helpers::DefaultHandler ^ dh);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (Org.Xml.Sax.InputSource? is, Org.Xml.Sax.Helpers.DefaultHandler? dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class Org.Xml.Sax.InputSource is, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(Org.Xml.Sax.InputSource,Org.Xml.Sax.Helpers.DefaultHandler)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : Org.Xml.Sax.InputSource * Org.Xml.Sax.Helpers.DefaultHandler -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (is, dh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="Org.Xml.Sax.InputSource" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="dh">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (is As Stream, hb As HandlerBase) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(System::IO::Stream ^ is, Org::Xml::Sax::HandlerBase ^ hb);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (System.IO.Stream? is, Org.Xml.Sax.HandlerBase? hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class System.IO.Stream is, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(System.IO.Stream,Org.Xml.Sax.HandlerBase)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : System.IO.Stream * Org.Xml.Sax.HandlerBase -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (is, hb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="hb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (is As Stream, dh As DefaultHandler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(System::IO::Stream ^ is, Org::Xml::Sax::Helpers::DefaultHandler ^ dh);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (System.IO.Stream? is, Org.Xml.Sax.Helpers.DefaultHandler? dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class System.IO.Stream is, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(System.IO.Stream,Org.Xml.Sax.Helpers.DefaultHandler)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : System.IO.Stream * Org.Xml.Sax.Helpers.DefaultHandler -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (is, dh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="dh">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (uri As String, hb As HandlerBase) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(System::String ^ uri, Org::Xml::Sax::HandlerBase ^ hb);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (string? uri, Org.Xml.Sax.HandlerBase? hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(string uri, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(System.String,Org.Xml.Sax.HandlerBase)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : string * Org.Xml.Sax.HandlerBase -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (uri, hb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="hb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (uri As String, dh As DefaultHandler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(System::String ^ uri, Org::Xml::Sax::Helpers::DefaultHandler ^ dh);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (string? uri, Org.Xml.Sax.Helpers.DefaultHandler? dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(string uri, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(System.String,Org.Xml.Sax.Helpers.DefaultHandler)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : string * Org.Xml.Sax.Helpers.DefaultHandler -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (uri, dh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="dh">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (is As Stream, hb As HandlerBase, systemId As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(System::IO::Stream ^ is, Org::Xml::Sax::HandlerBase ^ hb, System::String ^ systemId);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (System.IO.Stream? is, Org.Xml.Sax.HandlerBase? hb, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class System.IO.Stream is, class Org.Xml.Sax.HandlerBase hb, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(System.IO.Stream,Org.Xml.Sax.HandlerBase,System.String)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : System.IO.Stream * Org.Xml.Sax.HandlerBase * string -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (is, hb, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="hb" Type="Org.Xml.Sax.HandlerBase" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="hb">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ParseAsync (is As Stream, dh As DefaultHandler, systemId As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ParseAsync(System::IO::Stream ^ is, Org::Xml::Sax::Helpers::DefaultHandler ^ dh, System::String ^ systemId);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (System.IO.Stream? is, Org.Xml.Sax.Helpers.DefaultHandler? dh, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class System.IO.Stream is, class Org.Xml.Sax.Helpers.DefaultHandler dh, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.ParseAsync(System.IO.Stream,Org.Xml.Sax.Helpers.DefaultHandler,System.String)" />
      <MemberSignature Language="F#" Value="member this.ParseAsync : System.IO.Stream * Org.Xml.Sax.Helpers.DefaultHandler * string -&gt; System.Threading.Tasks.Task" Usage="sAXParser.ParseAsync (is, dh, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="dh" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="dh">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parser">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parser As IParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Org::Xml::Sax::IParser ^ Parser { Org::Xml::Sax::IParser ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IParser? Parser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IParser Parser" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.Parser" />
      <MemberSignature Language="F#" Value="member this.Parser : Org.Xml.Sax.IParser" Usage="Javax.Xml.Parsers.SAXParser.Parser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParser", "()Lorg/xml/sax/Parser;", "GetGetParserHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParser", "()Lorg/xml/sax/Parser;", "GetGetParserHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IParser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the SAX parser that is encapsulated by the
 implementation of this class.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="sAXParser.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "GetResetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "GetResetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset this <c>SAXParser</c> to its original configuration.</summary>
        <remarks>
          <para>Reset this <c>SAXParser</c> to its original configuration.</para>
          <para>
            <c>SAXParser</c> is reset to the same state as when it was created with
            <c>SAXParserFactory#newSAXParser()</c>.
            <c>reset()</c> is designed to allow the reuse of existing <c>SAXParser</c>s
            thus saving resources associated with the creation of new <c>SAXParser</c>s.</para>
          <para>The reset <c>SAXParser</c> is not guaranteed to have the same <c>Schema</c><c>Object</c>, e.g. <c>Object#equals(Object obj)</c>.  It is guaranteed to have a functionally equal
            <c>Schema</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#reset()" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Schema As Schema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Javax::Xml::Validation::Schema ^ Schema { Javax::Xml::Validation::Schema ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Validation.Schema? Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Validation.Schema Schema" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.Schema" />
      <MemberSignature Language="F#" Value="member this.Schema : Javax.Xml.Validation.Schema" Usage="Javax.Xml.Parsers.SAXParser.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSchema", "()Ljavax/xml/validation/Schema;", "GetGetSchemaHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSchema", "()Ljavax/xml/validation/Schema;", "GetGetSchemaHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a reference to the the <c>Schema</c> being used by
            the XML processor.</summary>
        <value>
          <c>Schema</c> being used or <c>null</c>
             if none in use</value>
        <remarks>
          <para>Get a reference to the the <c>Schema</c> being used by
            the XML processor.</para>
          <para>If no schema is being used, <c>null</c> is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#getSchema()" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.getSchema()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetProperty(System::String ^ name, Java::Lang::Object ^ value);" />
      <MemberSignature Language="C#" Value="public abstract void SetProperty (string? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Parsers.SAXParser.SetProperty(System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : string * Java.Lang.Object -&gt; unit" Usage="sAXParser.SetProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the property to be set.</param>
        <param name="value">The value of the property to be set.</param>
        <summary>Sets the particular property in the underlying implementation of
            <c>org.xml.sax.XMLReader</c>.</summary>
        <remarks>
          <para>Sets the particular property in the underlying implementation of
            <c>org.xml.sax.XMLReader</c>.
            A list of the core features and properties can be found at
            
            http://sax.sourceforge.net/?selected=get-set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/parsers/SAXParser#setProperty(java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>javax.xml.parsers.SAXParser.setProperty(java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">When the underlying XMLReader does
   not recognize the property name.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the underlying XMLReader
  recognizes the property name but doesn't support the property.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.SetProperty(System.String, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Xml.Parsers.SAXParser.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Xml.Parsers.SAXParser.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLReader">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XMLReader As IXMLReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Org::Xml::Sax::IXMLReader ^ XMLReader { Org::Xml::Sax::IXMLReader ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IXMLReader? XMLReader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IXMLReader XMLReader" />
      <MemberSignature Language="DocId" Value="P:Javax.Xml.Parsers.SAXParser.XMLReader" />
      <MemberSignature Language="F#" Value="member this.XMLReader : Org.Xml.Sax.IXMLReader" Usage="Javax.Xml.Parsers.SAXParser.XMLReader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getXMLReader", "()Lorg/xml/sax/XMLReader;", "GetGetXMLReaderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getXMLReader", "()Lorg/xml/sax/XMLReader;", "GetGetXMLReaderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IXMLReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <see cref="T:Org.Xml.Sax.IXMLReader" /> that is encapsulated by the
 implementation of this class.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
