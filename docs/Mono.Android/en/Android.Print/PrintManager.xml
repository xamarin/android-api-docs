<Type Name="PrintManager" FullName="Android.Print.PrintManager">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrintManager&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintManager sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class PrintManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PrintManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Print.PrintManager" />
  <TypeSignature Language="F#" Value="type PrintManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/print/PrintManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/print/PrintManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>System level service for accessing the printing capabilities of the platform.</summary>
    <remarks>
      <para>System level service for accessing the printing capabilities of the platform.
            
            &lt;h3&gt;Print mechanics&lt;/h3&gt;</para>
      <para>The key idea behind printing on the platform is that the content to be printed
            should be laid out for the currently selected print options resulting in an
            optimized output and higher user satisfaction. To achieve this goal the platform
            declares a contract that the printing application has to follow which is defined
            by the <c>PrintDocumentAdapter</c> class. At a higher level the contract is that
            when the user selects some options from the print UI that may affect the way
            content is laid out, for example page size, the application receives a callback
            allowing it to layout the content to better fit these new constraints. After a
            layout pass the system may ask the application to render one or more pages one
            or more times. For example, an application may produce a single column list for
            smaller page sizes and a multi-column table for larger page sizes.</para>
      <para>&lt;h3&gt;Print jobs&lt;/h3&gt;</para>
      <para>Print jobs are started by calling the <c>#print(String, PrintDocumentAdapter,
            PrintAttributes)</c> from an activity which results in bringing up the system print
            UI. Once the print UI is up, when the user changes a selected print option that
            affects the way content is laid out the system starts to interact with the
            application following the mechanics described the section above.</para>
      <para>Print jobs can be in <c>PrintJobInfo#STATE_CREATED created</c>, <c>PrintJobInfo#STATE_QUEUED queued</c>, <c>PrintJobInfo#STATE_STARTED started</c>,
            <c>PrintJobInfo#STATE_BLOCKED blocked</c>, <c>PrintJobInfo#STATE_COMPLETED
            completed</c>, <c>PrintJobInfo#STATE_FAILED failed</c>, and <c>PrintJobInfo#STATE_CANCELED canceled</c> state. Print jobs are stored in dedicated
            system spooler until they are handled which is they are cancelled or completed.
            Active print jobs, ones that are not cancelled or completed, are considered failed
            if the device reboots as the new boot may be after a very long time. The user may
            choose to restart such print jobs. Once a print job is queued all relevant content
            is stored in the system spooler and its lifecycle becomes detached from this of
            the application that created it.</para>
      <para>An applications can query the print spooler for current print jobs it created
            but not print jobs created by other applications.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/print/PrintManager" title="Reference documentation">Java documentation for <code>android.print.PrintManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsPrintServiceEnabled">
      <MemberSignature Language="VB.NET" Value="Public Function IsPrintServiceEnabled (service As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPrintServiceEnabled(Android::Content::ComponentName ^ service);" />
      <MemberSignature Language="C#" Value="public bool IsPrintServiceEnabled (Android.Content.ComponentName service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPrintServiceEnabled(class Android.Content.ComponentName service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Print.PrintManager.IsPrintServiceEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.IsPrintServiceEnabled : Android.Content.ComponentName -&gt; bool" Usage="printManager.IsPrintServiceEnabled service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isPrintServiceEnabled", "(Landroid/content/ComponentName;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isPrintServiceEnabled", "(Landroid/content/ComponentName;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>Checks whether a given print service is enabled.</summary>
        <returns>true if the given print service is enabled</returns>
        <remarks>
          <para>Checks whether a given print service is enabled. The provided service must share UID
            with the calling package, otherwise a <c>SecurityException</c> is thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/print/PrintManager#isPrintServiceEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.print.PrintManager.isPrintServiceEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Print.PrintManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Print.PrintManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="VB.NET" Value="Public Function Print (printJobName As String, documentAdapter As PrintDocumentAdapter, attributes As PrintAttributes) As PrintJob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Print::PrintJob ^ Print(System::String ^ printJobName, Android::Print::PrintDocumentAdapter ^ documentAdapter, Android::Print::PrintAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public Android.Print.PrintJob Print (string printJobName, Android.Print.PrintDocumentAdapter documentAdapter, Android.Print.PrintAttributes? attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Print.PrintJob Print(string printJobName, class Android.Print.PrintDocumentAdapter documentAdapter, class Android.Print.PrintAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Print.PrintManager.Print(System.String,Android.Print.PrintDocumentAdapter,Android.Print.PrintAttributes)" />
      <MemberSignature Language="F#" Value="member this.Print : string * Android.Print.PrintDocumentAdapter * Android.Print.PrintAttributes -&gt; Android.Print.PrintJob" Usage="printManager.Print (printJobName, documentAdapter, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("print", "(Ljava/lang/String;Landroid/print/PrintDocumentAdapter;Landroid/print/PrintAttributes;)Landroid/print/PrintJob;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("print", "(Ljava/lang/String;Landroid/print/PrintDocumentAdapter;Landroid/print/PrintAttributes;)Landroid/print/PrintJob;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Print.PrintJob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printJobName" Type="System.String" />
        <Parameter Name="documentAdapter" Type="Android.Print.PrintDocumentAdapter" />
        <Parameter Name="attributes" Type="Android.Print.PrintAttributes">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="printJobName">A name for the new print job which is shown to the user.</param>
        <param name="documentAdapter">An adapter that emits the document to print.</param>
        <param name="attributes">The default print job attributes or <c>null</c>.</param>
        <summary>Creates a print job for printing a <c>PrintDocumentAdapter</c> with
            default print attributes.</summary>
        <returns>The created print job on success or null on failure.</returns>
        <remarks>
          <para>Creates a print job for printing a <c>PrintDocumentAdapter</c> with
            default print attributes.</para>
          <para>Calling this method brings the print UI allowing the user to customize
            the print job and returns a <c>PrintJob</c> object without waiting for the
            user to customize or confirm the print job. The returned print job instance
            is in a <c>PrintJobInfo#STATE_CREATED created</c> state.</para>
          <para>This method can be called only from an <c>Activity</c>. The rationale is that
            printing from a service will create an inconsistent user experience as the print
            UI would appear without any context.</para>
          <para>Also the passed in <c>PrintDocumentAdapter</c> will be considered invalid if
            your activity is finished. The rationale is that once the activity that
            initiated printing is finished, the provided adapter may be in an inconsistent
            state as it may depend on the UI presented by the activity.</para>
          <para>The default print attributes are a hint to the system how the data is to
            be printed. For example, a photo editor may look at the photo aspect ratio
            to determine the default orientation and provide a hint whether the printing
            should be in portrait or landscape. The system will do a best effort to
            selected the hinted options in the print dialog, given the current printer
            supports them.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Calling this method will bring the print dialog and
            the system will connect to the provided <c>PrintDocumentAdapter</c>. If a
            configuration change occurs that you application does not handle, for example
            a rotation change, the system will drop the connection to the adapter as the
            activity has to be recreated and the old adapter may be invalid in this context,
            hence a new adapter instance is required. As a consequence, if your activity
            does not handle configuration changes (default behavior), you have to save the
            state that you were printing and call this method again when your activity
            is recreated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/print/PrintManager#print(java.lang.String,%20android.print.PrintDocumentAdapter,%20android.print.PrintAttributes)" title="Reference documentation">Java documentation for <code>android.print.PrintManager.print(java.lang.String, android.print.PrintDocumentAdapter, android.print.PrintAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">If not called from an <see cref="T:Android.App.Activity" />.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If the print job name is empty or the
 document adapter is null.</exception>
        <altmember cref="T:Android.Print.PrintJob" />
      </Docs>
    </Member>
    <Member MemberName="PrintJobs">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintJobs As IList(Of PrintJob)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Android::Print::PrintJob ^&gt; ^ PrintJobs { System::Collections::Generic::IList&lt;Android::Print::PrintJob ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Print.PrintJob&gt; PrintJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Print.PrintJob&gt; PrintJobs" />
      <MemberSignature Language="DocId" Value="P:Android.Print.PrintManager.PrintJobs" />
      <MemberSignature Language="F#" Value="member this.PrintJobs : System.Collections.Generic.IList&lt;Android.Print.PrintJob&gt;" Usage="Android.Print.PrintManager.PrintJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPrintJobs", "()Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPrintJobs", "()Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Print.PrintJob&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the print jobs for this application.</summary>
        <value>The print job list.</value>
        <remarks>
          <para>Gets the print jobs for this application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/print/PrintManager#getPrintJobs()" title="Reference documentation">Java documentation for <code>android.print.PrintManager.getPrintJobs()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Print.PrintJob" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Print.PrintManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Print.PrintManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Print.PrintManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Print.PrintManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
