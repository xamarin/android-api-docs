<Type Name="ITagTechnology" FullName="Android.Nfc.Tech.ITagTechnology">
  <TypeSignature Language="VB.NET" Value="Public Interface ITagTechnology&#xA;Implements ICloseable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITagTechnology : IDisposable, Java::Interop::IJavaPeerable, Java::IO::ICloseable" />
  <TypeSignature Language="C#" Value="public interface ITagTechnology : IDisposable, Java.Interop.IJavaPeerable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITagTechnology implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Nfc.Tech.ITagTechnology" />
  <TypeSignature Language="F#" Value="type ITagTechnology = interface&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/nfc/tech/TagTechnology", "", "Android.Nfc.Tech.ITagTechnologyInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/nfc/tech/TagTechnology", "", "Android.Nfc.Tech.ITagTechnologyInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="10">
    <summary>
      <c>TagTechnology</c> is an interface to a technology in a <c>Tag</c>.</summary>
    <remarks>
      <para>
        <c>TagTechnology</c> is an interface to a technology in a <c>Tag</c>.</para>
      <para>Obtain a <c>TagTechnology</c> implementation by calling the static method <c>get()</c>
            on the implementation class.</para>
      <para>NFC tags are based on a number of independently developed technologies and offer a
            wide range of capabilities. The
            <c>TagTechnology</c> implementations provide access to these different
            technologies and capabilities. Some sub-classes map to technology
            specification (for example <c>NfcA</c>, <c>IsoDep</c>, others map to
            pseudo-technologies or capabilities (for example <c>Ndef</c>, <c>NdefFormatable</c>).</para>
      <para>It is mandatory for all Android NFC devices to provide the following
            <c>TagTechnology</c> implementations.
            &lt;ul&gt;
            &lt;li&gt;<c>NfcA</c> (also known as ISO 14443-3A)
            &lt;li&gt;<c>NfcB</c> (also known as ISO 14443-3B)
            &lt;li&gt;<c>NfcF</c> (also known as JIS 6319-4)
            &lt;li&gt;<c>NfcV</c> (also known as ISO 15693)
            &lt;li&gt;<c>IsoDep</c>&lt;li&gt;<c>Ndef</c> on NFC Forum Type 1, Type 2, Type 3 or Type 4 compliant tags
            &lt;/ul&gt;
            It is optional for Android NFC devices to provide the following
            <c>TagTechnology</c> implementations. If it is not provided, the
            Android device will never enumerate that class via <c>Tag#getTechList</c>.
            &lt;ul&gt;
            &lt;li&gt;<c>MifareClassic</c>&lt;li&gt;<c>MifareUltralight</c>&lt;li&gt;<c>NfcBarcode</c>&lt;li&gt;<c>NdefFormatable</c> must only be enumerated on tags for which this Android device
            is capable of formatting. Proprietary knowledge is often required to format a tag
            to make it NDEF compatible.
            &lt;/ul&gt;</para>
      <para>
        <c>TagTechnology</c> implementations provide methods that fall into two classes:
            &lt;em&gt;cached getters&lt;/em&gt; and &lt;em&gt;I/O operations&lt;/em&gt;.
            &lt;h4&gt;Cached getters&lt;/h4&gt;
            These methods (usually prefixed by <c>get</c> or <c>is</c>) return
            properties of the tag, as determined at discovery time. These methods will never
            block or cause RF activity, and do not require <c>#connect</c> to have been called.
            They also never update, for example if a property is changed by an I/O operation with a tag
            then the cached getter will still return the result from tag discovery time.
            &lt;h4&gt;I/O operations&lt;/h4&gt;
            I/O operations may require RF activity, and may block. They have the following semantics.
            &lt;ul&gt;
            &lt;li&gt;<c>#connect</c> must be called before using any other I/O operation.
            &lt;li&gt;<c>#close</c> must be called after completing I/O operations with a
            <c>TagTechnology</c>, and it will cancel all other blocked I/O operations on other threads
            (including <c>#connect</c> with <c>IOException</c>.
            &lt;li&gt;Only one <c>TagTechnology</c> can be connected at a time. Other calls to
            <c>#connect</c> will return <c>IOException</c>.
            &lt;li&gt;I/O operations may block, and should never be called on the main application
            thread.
            &lt;/ul&gt;
            
            &lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; Methods that perform I/O operations
            require the <c>android.Manifest.permission#NFC</c> permission.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/nfc/tech/TagTechnology" title="Reference documentation">Java documentation for <code>android.nfc.tech.TagTechnology</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 10" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.Tech.ITagTechnology.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iTagTechnology.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.ICloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler:Android.Nfc.Tech.ITagTechnologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler:Android.Nfc.Tech.ITagTechnologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disable I/O operations to the tag from this <c>TagTechnology</c> object, and release resources.</summary>
        <remarks>
          <para>Disable I/O operations to the tag from this <c>TagTechnology</c> object, and release resources.</para>
          <para>Also causes all blocked I/O operations on other thread to be canceled and
            return with <c>IOException</c>.
            
            &lt;p class="note"&gt;Requires the <c>android.Manifest.permission#NFC</c> permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/tech/TagTechnology#close()" title="Reference documentation">Java documentation for <code>android.nfc.tech.TagTechnology.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.Nfc.Tech.ITagTechnology.Connect" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="VB.NET" Value="Public Sub Connect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect();" />
      <MemberSignature Language="C#" Value="public void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.Tech.ITagTechnology.Connect" />
      <MemberSignature Language="F#" Value="abstract member Connect : unit -&gt; unit" Usage="iTagTechnology.Connect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connect", "()V", "GetConnectHandler:Android.Nfc.Tech.ITagTechnologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connect", "()V", "GetConnectHandler:Android.Nfc.Tech.ITagTechnologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enable I/O operations to the tag from this <c>TagTechnology</c> object.</summary>
        <remarks>
          <para>Enable I/O operations to the tag from this <c>TagTechnology</c> object.</para>
          <para>May cause RF activity and may block. Must not be called
            from the main application thread. A blocked call will be canceled with
            <c>IOException</c> by calling <c>#close</c> from another thread.</para>
          <para>Only one <c>TagTechnology</c> object can be connected to a <c>Tag</c> at a time.</para>
          <para>Applications must call <c>#close</c> when I/O operations are complete.
            
            &lt;p class="note"&gt;Requires the <c>android.Manifest.permission#NFC</c> permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/tech/TagTechnology#connect()" title="Reference documentation">Java documentation for <code>android.nfc.tech.TagTechnology.connect()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or connect is canceled
</exception>
        <altmember cref="M:Android.Nfc.Tech.ITagTechnology.Close" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConnected { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.Tech.ITagTechnology.IsConnected" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="Android.Nfc.Tech.ITagTechnology.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler:Android.Nfc.Tech.ITagTechnologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler:Android.Nfc.Tech.ITagTechnologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper to indicate if I/O operations should be possible.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tag As Tag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Nfc::Tag ^ Tag { Android::Nfc::Tag ^ get(); };" />
      <MemberSignature Language="C#" Value="public Android.Nfc.Tag? Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Nfc.Tag Tag" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.Tech.ITagTechnology.Tag" />
      <MemberSignature Language="F#" Value="member this.Tag : Android.Nfc.Tag" Usage="Android.Nfc.Tech.ITagTechnology.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTag", "()Landroid/nfc/Tag;", "GetGetTagHandler:Android.Nfc.Tech.ITagTechnologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTag", "()Landroid/nfc/Tag;", "GetGetTagHandler:Android.Nfc.Tech.ITagTechnologyInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the <see cref="T:Android.Nfc.Tag" /> object backing this <see cref="T:Android.Nfc.Tech.ITagTechnology" /> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
  </Members>
</Type>
