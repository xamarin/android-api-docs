<Type Name="MifareUltralight" FullName="Android.Nfc.Tech.MifareUltralight">
  <TypeSignature Language="C#" Value="public sealed class MifareUltralight : Android.Nfc.Tech.BasicTagTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MifareUltralight extends Android.Nfc.Tech.BasicTagTechnology" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Nfc.Tech.BasicTagTechnology</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/nfc/tech/MifareUltralight", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="10">
    <summary>Provides access to MIFARE Ultralight properties and I/O operations on a <c><see cref="T:Android.Nfc.Tag" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides access to MIFARE Ultralight properties and I/O operations on a <c><see cref="T:Android.Nfc.Tag" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">Acquire a <c><see cref="T:Android.Nfc.Tech.MifareUltralight" /></c> object using <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Get(Android.Nfc.Tag)" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">MIFARE Ultralight compatible tags have 4 byte pages <c><see cref="F:Android.Nfc.Tech.MifareUltralight.PageSize" /></c>.
 The primary operations on an Ultralight tag are <c><see cref="M:Android.Nfc.Tech.MifareUltralight.ReadPages(System.Int32)" /></c> and
 <c><see cref="M:Android.Nfc.Tech.MifareUltralight.WritePage(System.Int32,System.Byte[])" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">The original MIFARE Ultralight consists of a 64 byte EEPROM. The first
 4 pages are for the OTP area, manufacturer data, and locking bits. They are
 readable and some bits are writable. The final 12 pages are the user
 read/write area. For more information see the NXP data sheet MF0ICU1.

 </para>
      <para tool="javadoc-to-mdoc">The MIFARE Ultralight C consists of a 192 byte EEPROM. The first 4 pages
 are for OTP, manufacturer data, and locking bits. The next 36 pages are the
 user read/write area. The next 4 pages are additional locking bits, counters
 and authentication configuration and are readable. The final 4 pages are for
 the authentication key and are not readable. For more information see the
 NXP data sheet MF0ICU2.

 </para>
      <para tool="javadoc-to-mdoc">Implementation of this class on a Android NFC device is optional.
 If it is not implemented, then
 <c><see cref="T:Android.Nfc.Tech.MifareUltralight" /></c> will never be enumerated in <c><see cref="M:Android.Nfc.Tag.GetTechList" /></c>.
 If it is enumerated, then all <c><see cref="T:Android.Nfc.Tech.MifareUltralight" /></c> I/O operations will be supported.
 In either case, <c><see cref="T:Android.Nfc.Tech.NfcA" /></c> will also be enumerated on the tag,
 because all MIFARE Ultralight tags are also <c><see cref="T:Android.Nfc.Tech.NfcA" /></c> tags.

 </para>
      <para tool="javadoc-to-mdoc">
        <i>Note:</i> Methods that perform I/O operations
 require the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#NFC" /></c> permission.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 10" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disable I/O operations to the tag from this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object, and release resources.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Disable I/O operations to the tag from this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object, and release resources.
 </para>
          <para tool="javadoc-to-mdoc">Also causes all blocked I/O operations on other thread to be canceled and
 return with <c><see cref="T:Java.IO.IOException" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">Requires the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#NFC" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public override void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Connect() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enable I/O operations to the tag from this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Enable I/O operations to the tag from this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object.
 </para>
          <para tool="javadoc-to-mdoc">May cause RF activity and may block. Must not be called
 from the main application thread. A blocked call will be canceled with
 <c><see cref="T:Java.IO.IOException" /></c> by calling <c><see cref="M:Android.Nfc.Tech.ITagTechnology.Close" /></c> from another thread.
 </para>
          <para tool="javadoc-to-mdoc">Only one <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object can be connected to a <c><see cref="T:Android.Nfc.Tag" /></c> at a time.
 </para>
          <para tool="javadoc-to-mdoc">Applications must call <c><see cref="M:Android.Nfc.Tech.ITagTechnology.Close" /></c> when I/O operations are complete.

 </para>
          <para tool="javadoc-to-mdoc">Requires the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#NFC" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#connect()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Android.Nfc.Tech.MifareUltralight Get (Android.Nfc.Tag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.Tech.MifareUltralight Get(class Android.Nfc.Tag tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(Landroid/nfc/Tag;)Landroid/nfc/tech/MifareUltralight;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareUltralight</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.Nfc.Tag" />
      </Parameters>
      <Docs>
        <param name="tag">an MIFARE Ultralight compatible tag</param>
        <summary>Get an instance of <c><see cref="T:Android.Nfc.Tech.MifareUltralight" /></c> for the given tag.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get an instance of <c><see cref="T:Android.Nfc.Tech.MifareUltralight" /></c> for the given tag.
 </para>
          <para tool="javadoc-to-mdoc">Returns null if <c><see cref="T:Android.Nfc.Tech.MifareUltralight" /></c> was not enumerated in
 <c><see cref="M:Android.Nfc.Tag.GetTechList" /></c> - this indicates the tag is not MIFARE
 Ultralight compatible, or that this Android
 device does not implement MIFARE Ultralight.
 </para>
          <para tool="javadoc-to-mdoc">Does not cause any RF activity and does not block.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#get(android.nfc.Tag)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public override bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper to indicate if I/O operations should be possible.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Helper to indicate if I/O operations should be possible.

 </para>
          <para tool="javadoc-to-mdoc">Returns true if <c><see cref="M:Android.Nfc.Tech.ITagTechnology.Connect" /></c> has completed, and <c><see cref="M:Android.Nfc.Tech.ITagTechnology.Close" /></c> has not been
 called, and the <c><see cref="T:Android.Nfc.Tag" /></c> is not known to be out of range.
 </para>
          <para tool="javadoc-to-mdoc">Does not cause RF activity, and does not block.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#isConnected()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="MaxTransceiveLength">
      <MemberSignature Language="C#" Value="public int MaxTransceiveLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTransceiveLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxTransceiveLength", "()I", "GetGetMaxTransceiveLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the maximum number of bytes that can be sent with <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Transceive(System.Byte[])" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the maximum number of bytes that can be sent with <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Transceive(System.Byte[])" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#getMaxTransceiveLength()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public const int PageSize = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 PageSize = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PAGE_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Size of a MIFARE Ultralight page in bytes </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Size of a MIFARE Ultralight page in bytes </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#PAGE_SIZE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="ReadPages">
      <MemberSignature Language="C#" Value="public byte[] ReadPages (int pageOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ReadPages(int32 pageOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readPages", "(I)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageOffset">index of first page to read, starting from 0</param>
        <summary>Read 4 pages (16 bytes).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Read 4 pages (16 bytes).

 </para>
          <para tool="javadoc-to-mdoc">The MIFARE Ultralight protocol always reads 4 pages at a time, to
 reduce the number of commands required to read an entire tag.
 </para>
          <para tool="javadoc-to-mdoc">If a read spans past the last readable block, then the tag will
 return pages that have been wrapped back to the first blocks. MIFARE
 Ultralight tags have readable blocks 0x00 through 0x0F. So a read to
 block offset 0x0E would return blocks 0x0E, 0x0F, 0x00, 0x01. MIFARE
 Ultralight C tags have readable blocks 0x00 through 0x2B. So a read to
 block 0x2A would return blocks 0x2A, 0x2B, 0x00, 0x01.

 </para>
          <para tool="javadoc-to-mdoc">This is an I/O operation and will block until complete. It must
 not be called from the main application thread. A blocked call will be canceled with
 <c><see cref="T:Java.IO.IOException" /></c> if <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Close" /></c> is called from another thread.

 </para>
          <para tool="javadoc-to-mdoc">Requires the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#NFC" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#readPages(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadPagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; ReadPagesAsync (int pageOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadPagesAsync(int32 pageOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageOffset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public override Android.Nfc.Tag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Nfc.Tag Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTag", "()Landroid/nfc/Tag;", "GetGetTagHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the <c><see cref="T:Android.Nfc.Tag" /></c> object backing this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the <c><see cref="T:Android.Nfc.Tag" /></c> object backing this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#getTag()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTimeout", "()I", "GetGetTimeoutHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTimeout", "(I)V", "GetSetTimeout_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Transceive(System.Byte[])" /></c> timeout in milliseconds.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#getTimeout()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the current <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Transceive(System.Byte[])" /></c> timeout in milliseconds.

 Requires the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#NFC" /></c> permission.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#setTimeout(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Transceive(System.Byte[])" /></c> timeout in milliseconds.

 The timeout only applies to <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Transceive(System.Byte[])" /></c> on this object,
 and is reset to a default value when <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Close" /></c> is called.

 Setting a longer timeout may be useful when performing
 transactions that require a long processing time on the tag
 such as key generation.

 Requires the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#NFC" /></c> permission.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Transceive">
      <MemberSignature Language="C#" Value="public byte[] Transceive (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Transceive(unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transceive", "([B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>Send raw NfcA data to a tag and receive the response.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Send raw NfcA data to a tag and receive the response.

 </para>
          <para tool="javadoc-to-mdoc">This is equivalent to connecting to this tag via <c><see cref="T:Android.Nfc.Tech.NfcA" /></c>
 and calling <c><see cref="M:Android.Nfc.Tech.NfcA.Transceive(System.Byte[])" /></c>. Note that all MIFARE Classic
 tags are based on <c><see cref="T:Android.Nfc.Tech.NfcA" /></c> technology.

 </para>
          <para tool="javadoc-to-mdoc">Use <c><see cref="P:Android.Nfc.Tech.MifareUltralight.MaxTransceiveLength" /></c> to retrieve the maximum number of bytes
 that can be sent with <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Transceive(System.Byte[])" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">This is an I/O operation and will block until complete. It must
 not be called from the main application thread. A blocked call will be canceled with
 <c><see cref="T:Java.IO.IOException" /></c> if <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Close" /></c> is called from another thread.

 </para>
          <para tool="javadoc-to-mdoc">Requires the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#NFC" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#transceive(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.Nfc.Tech.NfcA.Transceive(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="TransceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; TransceiveAsync (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; TransceiveAsync(unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Android.Nfc.Tech.MifareUltralightType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Nfc.Tech.MifareUltralightType Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getType", "()I", "GetGetTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareUltralightType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the MIFARE Ultralight type of the tag.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the MIFARE Ultralight type of the tag.
 </para>
          <para tool="javadoc-to-mdoc">One of <c><see cref="F:Android.Nfc.Tech.MifareUltralight.TypeUltralight" /></c> or <c><see cref="F:Android.Nfc.Tech.MifareUltralight.TypeUltralightC" /></c> or
 <c><see cref="F:Android.Nfc.Tech.MifareUltralight.TypeUnknown" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">Depending on how the tag has been formatted, it can be impossible
 to accurately classify between original MIFARE Ultralight and
 Ultralight C. So treat this method as a hint.
 </para>
          <para tool="javadoc-to-mdoc">Does not cause any RF activity and does not block.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#getType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="TypeUltralight">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareUltralightType TypeUltralight = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareUltralightType TypeUltralight = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_ULTRALIGHT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareUltralightType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareUltralightType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A MIFARE Ultralight tag </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A MIFARE Ultralight tag </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#TYPE_ULTRALIGHT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="TypeUltralightC">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareUltralightType TypeUltralightC = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareUltralightType TypeUltralightC = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_ULTRALIGHT_C")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareUltralightType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareUltralightType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>A MIFARE Ultralight C tag </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A MIFARE Ultralight C tag </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#TYPE_ULTRALIGHT_C" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="TypeUnknown">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareUltralightType TypeUnknown = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareUltralightType TypeUnknown = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_UNKNOWN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareUltralightType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareUltralightType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>A MIFARE Ultralight compatible tag of unknown type </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A MIFARE Ultralight compatible tag of unknown type </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#TYPE_UNKNOWN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="WritePage">
      <MemberSignature Language="C#" Value="public void WritePage (int pageOffset, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePage(int32 pageOffset, unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writePage", "(I[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pageOffset">index of page to write, starting from 0</param>
        <param name="data">4 bytes to write</param>
        <summary>Write 1 page (4 bytes).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Write 1 page (4 bytes).

 </para>
          <para tool="javadoc-to-mdoc">The MIFARE Ultralight protocol always writes 1 page at a time, to
 minimize EEPROM write cycles.

 </para>
          <para tool="javadoc-to-mdoc">This is an I/O operation and will block until complete. It must
 not be called from the main application thread. A blocked call will be canceled with
 <c><see cref="T:Java.IO.IOException" /></c> if <c><see cref="M:Android.Nfc.Tech.MifareUltralight.Close" /></c> is called from another thread.

 </para>
          <para tool="javadoc-to-mdoc">Requires the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#NFC" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/tech/MifareUltralight.html#writePage(int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="WritePageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WritePageAsync (int pageOffset, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WritePageAsync(int32 pageOffset, unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pageOffset">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
