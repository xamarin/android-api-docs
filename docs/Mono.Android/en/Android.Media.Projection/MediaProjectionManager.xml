<Type Name="MediaProjectionManager" FullName="Android.Media.Projection.MediaProjectionManager">
  <TypeSignature Language="C#" Value="public sealed class MediaProjectionManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaProjectionManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/projection/MediaProjectionManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Manages the retrieval of certain types of <c><see cref="T:Android.Media.Projection.MediaProjection" /></c> tokens.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Manages the retrieval of certain types of <c><see cref="T:Android.Media.Projection.MediaProjection" /></c> tokens.

 </para>
      <para tool="javadoc-to-mdoc">
 Get an instance of this class by calling <c><see cref="M:Android.Content.Context.GetSystemService(System.String)" /></c> with the argument <c><see cref="F:Android.Content.Context.MediaProjectionService" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/projection/MediaProjectionManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateScreenCaptureIntent">
      <MemberSignature Language="C#" Value="public Android.Content.Intent CreateScreenCaptureIntent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Intent CreateScreenCaptureIntent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createScreenCaptureIntent", "()Landroid/content/Intent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an Intent that <format type="text/html"><b>must</b></format> passed to startActivityForResult()
 in order to start screen capture.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an Intent that <format type="text/html"><b>must</b></format> passed to startActivityForResult()
 in order to start screen capture. The activity will prompt
 the user whether to allow screen capture.  The result of this
 activity should be passed to getMediaProjection.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/projection/MediaProjectionManager.html#createScreenCaptureIntent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaProjection">
      <MemberSignature Language="C#" Value="public Android.Media.Projection.MediaProjection GetMediaProjection (int resultCode, Android.Content.Intent resultData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.Projection.MediaProjection GetMediaProjection(int32 resultCode, class Android.Content.Intent resultData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMediaProjection", "(ILandroid/content/Intent;)Landroid/media/projection/MediaProjection;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Projection.MediaProjection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultCode" Type="System.Int32" />
        <Parameter Name="resultData" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="resultCode">The result code from <c><see cref="M:Android.App.Activity.OnActivityResult(System.Int32,Android.App.Result,Android.App.Result)" /></c></param>
        <param name="resultData">The resulting data from <c><see cref="M:Android.App.Activity.OnActivityResult(System.Int32,Android.App.Result,Android.App.Result)" /></c></param>
        <summary>Retrieve the MediaProjection obtained from a succesful screen
 capture request.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the MediaProjection obtained from a succesful screen
 capture request. Will be null if the result from the
 startActivityForResult() is anything other than RESULT_OK.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/projection/MediaProjectionManager.html#getMediaProjection(int, android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
