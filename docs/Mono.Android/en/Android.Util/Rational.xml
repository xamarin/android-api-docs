<Type Name="Rational" FullName="Android.Util.Rational">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Rational&#xA;Inherits Number&#xA;Implements IComparable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rational sealed : Java::Lang::Number, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IComparable" />
  <TypeSignature Language="C#" Value="public sealed class Rational : Java.Lang.Number, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Rational extends Java.Lang.Number implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IComparable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Util.Rational" />
  <TypeSignature Language="F#" Value="type Rational = class&#xA;    inherit Number&#xA;    interface IComparable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Number</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/util/Rational", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/util/Rational", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>An immutable data type representation a rational number.</summary>
    <remarks>
      <para>An immutable data type representation a rational number.</para>
      <para>Contains a pair of <c>int</c>s representing the numerator and denominator of a
            Rational number.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/util/Rational" title="Reference documentation">Java documentation for <code>android.util.Rational</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (numerator As Integer, denominator As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rational(int numerator, int denominator);" />
      <MemberSignature Language="C#" Value="public Rational (int numerator, int denominator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 numerator, int32 denominator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Util.Rational.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Util.Rational : int * int -&gt; Android.Util.Rational" Usage="new Android.Util.Rational (numerator, denominator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="numerator" Type="System.Int32" />
        <Parameter Name="denominator" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numerator">the numerator of the rational</param>
        <param name="denominator">the denominator of the rational</param>
        <summary>Create a <c>Rational</c> with a given numerator and denominator.</summary>
        <remarks>
          <para>Create a <c>Rational</c> with a given numerator and denominator.</para>
          <para>The signs of the numerator and the denominator may be flipped such that the denominator
            is always positive. Both the numerator and denominator will be converted to their reduced
            forms (see <c>#equals</c> for more details).</para>
          <para>For example,
            &lt;ul&gt;
            &lt;li&gt;a rational of <c>2/4</c> will be reduced to <c>1/2</c>.
            &lt;li&gt;a rational of <c>1/-1</c> will be flipped to <c>-1/1</c>&lt;li&gt;a rational of <c>5/0</c> will be reduced to <c>1/0</c>&lt;li&gt;a rational of <c>0/5</c> will be reduced to <c>0/1</c>&lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#Rational(int,%20int)" title="Reference documentation">Java documentation for <code>android.util.Rational.Rational(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (another As Rational) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(Android::Util::Rational ^ another);" />
      <MemberSignature Language="C#" Value="public int CompareTo (Android.Util.Rational? another);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class Android.Util.Rational another) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Util.Rational.CompareTo(Android.Util.Rational)" />
      <MemberSignature Language="F#" Value="member this.CompareTo : Android.Util.Rational -&gt; int" Usage="rational.CompareTo another" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Landroid/util/Rational;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Landroid/util/Rational;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="another" Type="Android.Util.Rational" />
      </Parameters>
      <Docs>
        <param name="another">the rational to be compared</param>
        <summary>Compare this rational to the specified rational to determine their natural order.</summary>
        <returns>a negative integer, zero, or a positive integer as this object is less than,
                    equal to, or greater than the specified rational.</returns>
        <remarks>
          <para>Compare this rational to the specified rational to determine their natural order.</para>
          <para>
            <c>#NaN</c> is considered to be equal to itself and greater than all other
            <c>Rational</c> values. Otherwise, if the objects are not <c>#equals equal</c>, then
            the following rules apply:</para>
          <para>&lt;ul&gt;
            &lt;li&gt;Positive infinity is greater than any other finite number (or negative infinity)
            &lt;li&gt;Negative infinity is less than any other finite number (or positive infinity)
            &lt;li&gt;The finite number represented by this rational is checked numerically
            against the other finite number by converting both rationals to a common denominator multiple
            and comparing their numerators.
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#compareTo(android.util.Rational)" title="Reference documentation">Java documentation for <code>android.util.Rational.compareTo(android.util.Rational)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.NullPointerException">if <c>another</c> was <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="Denominator">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Denominator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Denominator { int get(); };" />
      <MemberSignature Language="C#" Value="public int Denominator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Denominator" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.Denominator" />
      <MemberSignature Language="F#" Value="member this.Denominator : int" Usage="Android.Util.Rational.Denominator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDenominator", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDenominator", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the denominator of the rational</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the denominator of the rational</para>
          <para>The denominator may return <c>0</c>, in which case the rational may represent
            positive infinity (if the numerator was positive), negative infinity (if the numerator
            was negative), or <c>NaN</c> (if the numerator was <c>0</c>).</para>
          <para>The denominator will always return <c>1</c> if the numerator is <c>0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#getDenominator()" title="Reference documentation">Java documentation for <code>android.util.Rational.getDenominator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DoubleValue () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double DoubleValue();" />
      <MemberSignature Language="C#" Value="public override double DoubleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 DoubleValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Util.Rational.DoubleValue" />
      <MemberSignature Language="F#" Value="override this.DoubleValue : unit -&gt; double" Usage="rational.DoubleValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doubleValue", "()D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doubleValue", "()D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of the specified number as a <c>double</c>.</summary>
        <returns>the divided value of the numerator and denominator as a <c>double</c>.</returns>
        <remarks>
          <para>Returns the value of the specified number as a <c>double</c>.</para>
          <para>The <c>double</c> is calculated by converting both the numerator and denominator
            to a <c>double</c>; then returning the result of dividing the numerator by the
            denominator.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#doubleValue()" title="Reference documentation">Java documentation for <code>android.util.Rational.doubleValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FloatValue () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float FloatValue();" />
      <MemberSignature Language="C#" Value="public override float FloatValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 FloatValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Util.Rational.FloatValue" />
      <MemberSignature Language="F#" Value="override this.FloatValue : unit -&gt; single" Usage="rational.FloatValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("floatValue", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("floatValue", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of the specified number as a <c>float</c>.</summary>
        <returns>the divided value of the numerator and denominator as a <c>float</c>.</returns>
        <remarks>
          <para>Returns the value of the specified number as a <c>float</c>.</para>
          <para>The <c>float</c> is calculated by converting both the numerator and denominator
            to a <c>float</c>; then returning the result of dividing the numerator by the
            denominator.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#floatValue()" title="Reference documentation">Java documentation for <code>android.util.Rational.floatValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IntValue () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IntValue();" />
      <MemberSignature Language="C#" Value="public override int IntValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IntValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Util.Rational.IntValue" />
      <MemberSignature Language="F#" Value="override this.IntValue : unit -&gt; int" Usage="rational.IntValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("intValue", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("intValue", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of the specified number as a <c>int</c>.</summary>
        <returns>the divided value of the numerator and denominator as a <c>int</c>.</returns>
        <remarks>
          <para>Returns the value of the specified number as a <c>int</c>.</para>
          <para>
            <c>#isInfinite Finite</c> rationals are converted to an <c>int</c> value
            by dividing the numerator by the denominator; conversion for non-finite values happens
            identically to casting a floating point value to an <c>int</c>, in particular:</para>
          <para>&lt;ul&gt;
            &lt;li&gt;Positive infinity saturates to the largest maximum integer
            <c>Integer#MAX_VALUE</c>&lt;/li&gt;
            &lt;li&gt;Negative infinity saturates to the smallest maximum integer
            <c>Integer#MIN_VALUE</c>&lt;/li&gt;
            &lt;li&gt;&lt;em&gt;Not-A-Number (NaN)&lt;/em&gt; returns <c>0</c>.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#intValue()" title="Reference documentation">Java documentation for <code>android.util.Rational.intValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFinite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFinite { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsFinite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFinite" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.IsFinite" />
      <MemberSignature Language="F#" Value="member this.IsFinite : bool" Usage="Android.Util.Rational.IsFinite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFinite", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFinite", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this rational represents a finite value.</summary>
        <value>
          <c>true</c> if this rational is a (positive or negative) infinite value;
                    <c>false</c> if this is a finite number value (or <c>NaN</c>)</value>
        <remarks>
          <para>Indicates whether this rational represents a finite value.</para>
          <para>A finite value occurs when the denominator is not <c>0</c>; in other words
            the rational is neither infinity or <c>NaN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#isFinite()" title="Reference documentation">Java documentation for <code>android.util.Rational.isFinite()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinite">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInfinite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInfinite { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsInfinite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInfinite" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.IsInfinite" />
      <MemberSignature Language="F#" Value="member this.IsInfinite : bool" Usage="Android.Util.Rational.IsInfinite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInfinite", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInfinite", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this rational represents an infinite value.</summary>
        <value>
          <c>true</c> if this rational is a (positive or negative) infinite value;
                    <c>false</c> if this is a finite number value (or <c>NaN</c>)</value>
        <remarks>
          <para>Indicates whether this rational represents an infinite value.</para>
          <para>An infinite value occurs when the denominator is <c>0</c> (but the numerator is not).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#isInfinite()" title="Reference documentation">Java documentation for <code>android.util.Rational.isInfinite()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNaN As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNaN { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsNaN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNaN" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.IsNaN" />
      <MemberSignature Language="F#" Value="member this.IsNaN : bool" Usage="Android.Util.Rational.IsNaN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isNaN", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isNaN", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this rational is a &lt;em&gt;Not-a-Number (NaN)&lt;/em&gt; value.</summary>
        <value>
          <c>true</c> if this rational is a &lt;em&gt;Not-a-Number (NaN)&lt;/em&gt; value;
                    <c>false</c> if this is a (potentially infinite) number value</value>
        <remarks>
          <para>Indicates whether this rational is a &lt;em&gt;Not-a-Number (NaN)&lt;/em&gt; value.</para>
          <para>A <c>NaN</c> value occurs when both the numerator and the denominator are <c>0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#isNaN()" title="Reference documentation">Java documentation for <code>android.util.Rational.isNaN()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsZero { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.IsZero" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="Android.Util.Rational.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isZero", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isZero", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this rational represents a zero value.</summary>
        <value>
          <c>true</c> if this rational is finite zero value;
                    <c>false</c> otherwise</value>
        <remarks>
          <para>Indicates whether this rational represents a zero value.</para>
          <para>A zero value is a <c>#isFinite finite</c> rational with a numerator of <c>0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#isZero()" title="Reference documentation">Java documentation for <code>android.util.Rational.isZero()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="VB.NET" Value="Function CompareTo (o As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Java.Lang.IComparable.CompareTo(Java::Lang::Object ^ o) = Java::Lang::IComparable::CompareTo;" />
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Util.Rational.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="rational.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Util.Rational.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LongValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LongValue () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long LongValue();" />
      <MemberSignature Language="C#" Value="public override long LongValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 LongValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Util.Rational.LongValue" />
      <MemberSignature Language="F#" Value="override this.LongValue : unit -&gt; int64" Usage="rational.LongValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("longValue", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("longValue", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of the specified number as a <c>long</c>.</summary>
        <returns>the divided value of the numerator and denominator as a <c>long</c>.</returns>
        <remarks>
          <para>Returns the value of the specified number as a <c>long</c>.</para>
          <para>
            <c>#isInfinite Finite</c> rationals are converted to an <c>long</c> value
            by dividing the numerator by the denominator; conversion for non-finite values happens
            identically to casting a floating point value to a <c>long</c>, in particular:</para>
          <para>&lt;ul&gt;
            &lt;li&gt;Positive infinity saturates to the largest maximum long
            <c>Long#MAX_VALUE</c>&lt;/li&gt;
            &lt;li&gt;Negative infinity saturates to the smallest maximum long
            <c>Long#MIN_VALUE</c>&lt;/li&gt;
            &lt;li&gt;&lt;em&gt;Not-A-Number (NaN)&lt;/em&gt; returns <c>0</c>.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#longValue()" title="Reference documentation">Java documentation for <code>android.util.Rational.longValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NaN As Rational" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Rational ^ NaN { Android::Util::Rational ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Rational? NaN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Rational NaN" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.NaN" />
      <MemberSignature Language="F#" Value="member this.NaN : Android.Util.Rational" Usage="Android.Util.Rational.NaN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NaN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NaN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Rational</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant for the &lt;em&gt;Not-a-Number (NaN)&lt;/em&gt; value of the <c>Rational</c> type.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Constant for the &lt;em&gt;Not-a-Number (NaN)&lt;/em&gt; value of the <c>Rational</c> type.</para>
          <para>A <c>NaN</c> value is considered to be equal to itself (that is <c>NaN.equals(NaN)</c>
            will return <c>true</c>; it is always greater than any non-<c>NaN</c> value (that is
            <c>NaN.compareTo(notNaN)</c> will return a number greater than <c>0</c>).</para>
          <para>Equivalent to constructing a new rational with both the numerator and denominator
            equal to <c>0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#NaN" title="Reference documentation">Java documentation for <code>android.util.Rational.NaN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NegativeInfinity As Rational" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Rational ^ NegativeInfinity { Android::Util::Rational ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Rational? NegativeInfinity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Rational NegativeInfinity" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.NegativeInfinity" />
      <MemberSignature Language="F#" Value="member this.NegativeInfinity : Android.Util.Rational" Usage="Android.Util.Rational.NegativeInfinity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NEGATIVE_INFINITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NEGATIVE_INFINITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Rational</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant for the negative infinity value of the <c>Rational</c> type.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Constant for the negative infinity value of the <c>Rational</c> type.</para>
          <para>Equivalent to constructing a new rational with a negative numerator and a denominator
            equal to <c>0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#NEGATIVE_INFINITY" title="Reference documentation">Java documentation for <code>android.util.Rational.NEGATIVE_INFINITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Numerator">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Numerator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Numerator { int get(); };" />
      <MemberSignature Language="C#" Value="public int Numerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Numerator" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.Numerator" />
      <MemberSignature Language="F#" Value="member this.Numerator : int" Usage="Android.Util.Rational.Numerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNumerator", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNumerator", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the numerator of the rational.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the numerator of the rational.</para>
          <para>The numerator will always return <c>1</c> if this rational represents
            infinity (that is, the denominator is <c>0</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#getNumerator()" title="Reference documentation">Java documentation for <code>android.util.Rational.getNumerator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseRational">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseRational (string As String) As Rational" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Util::Rational ^ ParseRational(System::String ^ string);" />
      <MemberSignature Language="C#" Value="public static Android.Util.Rational? ParseRational (string? string);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Util.Rational ParseRational(string string) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Util.Rational.ParseRational(System.String)" />
      <MemberSignature Language="F#" Value="static member ParseRational : string -&gt; Android.Util.Rational" Usage="Android.Util.Rational.ParseRational string" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parseRational", "(Ljava/lang/String;)Landroid/util/Rational;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parseRational", "(Ljava/lang/String;)Landroid/util/Rational;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Rational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string">the string representation of a rational value.</param>
        <summary>Parses the specified string as a rational value.</summary>
        <returns>the rational value represented by <c>string</c>.</returns>
        <remarks>
          <para>Parses the specified string as a rational value.</para>
          <para>The ASCII characters <c>\</c><c>u003a</c> (':') and
            <c>\</c><c>u002f</c> ('/') are recognized as separators between
            the numerator and denumerator.</para>
          <para>For any <c>Rational r</c>: <c>Rational.parseRational(r.toString()).equals(r)</c>.
            However, the method also handles rational numbers expressed in the
            following forms:</para>
          <para>"<i>num</i><c>/</c><i>den</i>" or
            "<i>num</i><c>:</c><i>den</i>" <c>=&gt; new Rational(num, den);</c>,
            where <i>num</i> and <i>den</i> are string integers potentially
            containing a sign, such as "-10", "+7" or "5".</para>
          <code lang="text/java">{@code
            Rational.parseRational("3:+6").equals(new Rational(1, 2)) == true
            Rational.parseRational("-3/-6").equals(new Rational(1, 2)) == true
            Rational.parseRational("4.56") =&gt; throws NumberFormatException
            }</code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#parseRational(java.lang.String)" title="Reference documentation">Java documentation for <code>android.util.Rational.parseRational(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.NumberFormatException">if <c>string</c> cannot be parsed
 as a rational value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>string</c> was <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PositiveInfinity As Rational" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Rational ^ PositiveInfinity { Android::Util::Rational ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Rational? PositiveInfinity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Rational PositiveInfinity" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.PositiveInfinity" />
      <MemberSignature Language="F#" Value="member this.PositiveInfinity : Android.Util.Rational" Usage="Android.Util.Rational.PositiveInfinity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("POSITIVE_INFINITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("POSITIVE_INFINITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Rational</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant for the positive infinity value of the <c>Rational</c> type.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Constant for the positive infinity value of the <c>Rational</c> type.</para>
          <para>Equivalent to constructing a new rational with a positive numerator and a denominator
            equal to <c>0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#POSITIVE_INFINITY" title="Reference documentation">Java documentation for <code>android.util.Rational.POSITIVE_INFINITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Util.Rational.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Util.Rational.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As Rational" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Rational ^ Zero { Android::Util::Rational ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Rational? Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Rational Zero" />
      <MemberSignature Language="DocId" Value="P:Android.Util.Rational.Zero" />
      <MemberSignature Language="F#" Value="member this.Zero : Android.Util.Rational" Usage="Android.Util.Rational.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ZERO")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ZERO")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Rational</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant for the zero value of the <c>Rational</c> type.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Constant for the zero value of the <c>Rational</c> type.</para>
          <para>Equivalent to constructing a new rational with a numerator equal to <c>0</c> and
            any non-zero denominator.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/util/Rational#ZERO" title="Reference documentation">Java documentation for <code>android.util.Rational.ZERO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
