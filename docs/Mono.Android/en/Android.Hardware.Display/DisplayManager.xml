<Type Name="DisplayManager" FullName="Android.Hardware.Display.DisplayManager">
  <TypeSignature Language="F#" Value="type DisplayManager = class&#xA;    inherit Object" />
  <TypeSignature Language="C#" Value="public sealed class DisplayManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DisplayManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Hardware.Display.DisplayManager" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/hardware/display/DisplayManager", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="17">
    <summary>Manages the properties of attached displays.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 17" />
  </Docs>
  <Members>
    <Member MemberName="CreateVirtualDisplay">
      <MemberSignature Language="F#" Value="member this.CreateVirtualDisplay : string * int * int * int * Android.Views.Surface * Android.Hardware.Display.VirtualDisplayFlags -&gt; Android.Hardware.Display.VirtualDisplay" Usage="displayManager.CreateVirtualDisplay (name, width, height, densityDpi, surface, flags)" />
      <MemberSignature Language="C#" Value="public Android.Hardware.Display.VirtualDisplay? CreateVirtualDisplay (string name, int width, int height, int densityDpi, Android.Views.Surface? surface, Android.Hardware.Display.VirtualDisplayFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Hardware.Display.VirtualDisplay CreateVirtualDisplay(string name, int32 width, int32 height, int32 densityDpi, class Android.Views.Surface surface, valuetype Android.Hardware.Display.VirtualDisplayFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String,System.Int32,System.Int32,System.Int32,Android.Views.Surface,Android.Hardware.Display.VirtualDisplayFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createVirtualDisplay", "(Ljava/lang/String;IIILandroid/view/Surface;I)Landroid/hardware/display/VirtualDisplay;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.VirtualDisplay</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="densityDpi" Type="System.Int32" />
        <Parameter Name="surface" Type="Android.Views.Surface" />
        <Parameter Name="flags" Type="Android.Hardware.Display.VirtualDisplayFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="densityDpi">To be added.</param>
        <param name="surface">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Creates a virtual display.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualDisplay">
      <MemberSignature Language="F#" Value="member this.CreateVirtualDisplay : string * int * int * int * Android.Views.Surface * Android.Hardware.Display.VirtualDisplayFlags * Android.Hardware.Display.VirtualDisplay.Callback * Android.OS.Handler -&gt; Android.Hardware.Display.VirtualDisplay" Usage="displayManager.CreateVirtualDisplay (name, width, height, densityDpi, surface, flags, callback, handler)" />
      <MemberSignature Language="C#" Value="public Android.Hardware.Display.VirtualDisplay? CreateVirtualDisplay (string name, int width, int height, int densityDpi, Android.Views.Surface? surface, Android.Hardware.Display.VirtualDisplayFlags flags, Android.Hardware.Display.VirtualDisplay.Callback? callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Hardware.Display.VirtualDisplay CreateVirtualDisplay(string name, int32 width, int32 height, int32 densityDpi, class Android.Views.Surface surface, valuetype Android.Hardware.Display.VirtualDisplayFlags flags, class Android.Hardware.Display.VirtualDisplay/Callback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String,System.Int32,System.Int32,System.Int32,Android.Views.Surface,Android.Hardware.Display.VirtualDisplayFlags,Android.Hardware.Display.VirtualDisplay.Callback,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createVirtualDisplay", "(Ljava/lang/String;IIILandroid/view/Surface;ILandroid/hardware/display/VirtualDisplay$Callback;Landroid/os/Handler;)Landroid/hardware/display/VirtualDisplay;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.VirtualDisplay</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="densityDpi" Type="System.Int32" />
        <Parameter Name="surface" Type="Android.Views.Surface" />
        <Parameter Name="flags" Type="Android.Hardware.Display.VirtualDisplayFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="callback" Type="Android.Hardware.Display.VirtualDisplay+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="name">The name of the virtual display, must be non-empty.</param>
        <param name="width">The width of the virtual display in pixels, must be greater than 0.</param>
        <param name="height">The height of the virtual display in pixels, must be greater than 0.</param>
        <param name="densityDpi">The density of the virtual display in dpi, must be greater than 0.</param>
        <param name="surface">The surface to which the content of the virtual display should
 be rendered, or null if there is none initially.</param>
        <param name="flags">A combination of virtual display flags:
 <see cref="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagPublic" />, <see cref="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagPresentation" />,
 <see cref="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagSecure" />, <see cref="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagOwnContentOnly" />,
 or <see cref="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagAutoMirror" />.</param>
        <param name="callback">Callback to call when the state of the <see cref="T:Android.Hardware.Display.VirtualDisplay" /> changes</param>
        <param name="handler">The handler on which the listener should be invoked, or null
 if the listener should be invoked on the calling thread's looper.</param>
        <summary>Creates a virtual display.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException">if the caller does not have permission to create
 a virtual display with the specified flags.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DisplayCategoryPresentation">
      <MemberSignature Language="F#" Value="val mutable DisplayCategoryPresentation : string" Usage="Android.Hardware.Display.DisplayManager.DisplayCategoryPresentation" />
      <MemberSignature Language="C#" Value="public const string DisplayCategoryPresentation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DisplayCategoryPresentation" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.DisplayCategoryPresentation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DISPLAY_CATEGORY_PRESENTATION")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display category: Presentation displays.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#DISPLAY_CATEGORY_PRESENTATION" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.DISPLAY_CATEGORY_PRESENTATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="T:Android.App.Presentation" />
        <altmember cref="F:Android.Views.Display.FlagPresentation" />
        <altmember cref="M:Android.Hardware.Display.DisplayManager.GetDisplays(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplay">
      <MemberSignature Language="F#" Value="member this.GetDisplay : int -&gt; Android.Views.Display" Usage="displayManager.GetDisplay displayId" />
      <MemberSignature Language="C#" Value="public Android.Views.Display? GetDisplay (int displayId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Display GetDisplay(int32 displayId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Display.DisplayManager.GetDisplay(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDisplay", "(I)Landroid/view/Display;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="displayId">The logical display id.</param>
        <summary>Gets information about a logical display.</summary>
        <returns>The display object, or null if there is no valid display with the given id.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#getDisplay(int)" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.getDisplay(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplays">
      <MemberSignature Language="F#" Value="member this.GetDisplays : unit -&gt; Android.Views.Display[]" Usage="displayManager.GetDisplays " />
      <MemberSignature Language="C#" Value="public Android.Views.Display[]? GetDisplays ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Display[] GetDisplays() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Display.DisplayManager.GetDisplays" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDisplays", "()[Landroid/view/Display;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets all currently valid logical displays.</summary>
        <returns>An array containing all displays.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#getDisplays()" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.getDisplays()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplays">
      <MemberSignature Language="F#" Value="member this.GetDisplays : string -&gt; Android.Views.Display[]" Usage="displayManager.GetDisplays category" />
      <MemberSignature Language="C#" Value="public Android.Views.Display[]? GetDisplays (string? category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Display[] GetDisplays(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Display.DisplayManager.GetDisplays(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDisplays", "(Ljava/lang/String;)[Landroid/view/Display;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">The requested display category or null to return all displays.</param>
        <summary>Gets all currently valid logical displays.</summary>
        <returns>An array containing all displays.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#getDisplays()" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.getDisplays()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="F:Android.Hardware.Display.DisplayManager.DisplayCategoryPresentation" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Hardware.Display.DisplayManager.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Display.DisplayManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchContentFramerateAlways">
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.MatchContentFramerate MatchContentFramerateAlways = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.MatchContentFramerate MatchContentFramerateAlways = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.MatchContentFramerateAlways" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATCH_CONTENT_FRAMERATE_ALWAYS", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.MatchContentFramerate enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.MatchContentFramerate</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Refresh rate switches between all refresh rates are allowed even if they have visual
            interruptions for the user.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#MATCH_CONTENT_FRAMERATE_ALWAYS" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.MATCH_CONTENT_FRAMERATE_ALWAYS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchContentFramerateNever">
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.MatchContentFramerate MatchContentFramerateNever = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.MatchContentFramerate MatchContentFramerateNever = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.MatchContentFramerateNever" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATCH_CONTENT_FRAMERATE_NEVER", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.MatchContentFramerate enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.MatchContentFramerate</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>No mode switching is allowed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#MATCH_CONTENT_FRAMERATE_NEVER" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.MATCH_CONTENT_FRAMERATE_NEVER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchContentFramerateSeamlesssOnly">
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.MatchContentFramerate MatchContentFramerateSeamlesssOnly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.MatchContentFramerate MatchContentFramerateSeamlesssOnly = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.MatchContentFramerateSeamlesssOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATCH_CONTENT_FRAMERATE_SEAMLESSS_ONLY", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.MatchContentFramerate enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.MatchContentFramerate</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Only refresh rate switches without visual interruptions are allowed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#MATCH_CONTENT_FRAMERATE_SEAMLESSS_ONLY" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.MATCH_CONTENT_FRAMERATE_SEAMLESSS_ONLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchContentFramerateUnknown">
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.MatchContentFramerate MatchContentFramerateUnknown = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.MatchContentFramerate MatchContentFramerateUnknown = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.MatchContentFramerateUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATCH_CONTENT_FRAMERATE_UNKNOWN", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.MatchContentFramerate enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.MatchContentFramerate</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Match content frame rate user preference is unknown.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#MATCH_CONTENT_FRAMERATE_UNKNOWN" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.MATCH_CONTENT_FRAMERATE_UNKNOWN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchContentFrameRateUserPreference">
      <MemberSignature Language="C#" Value="public int MatchContentFrameRateUserPreference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchContentFrameRateUserPreference" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Display.DisplayManager.MatchContentFrameRateUserPreference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMatchContentFrameRateUserPreference", "()I", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the user preference for "Match content frame rate".</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#getMatchContentFrameRateUserPreference()" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.getMatchContentFrameRateUserPreference()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDisplayListener">
      <MemberSignature Language="F#" Value="member this.RegisterDisplayListener : Android.Hardware.Display.DisplayManager.IDisplayListener * Android.OS.Handler -&gt; unit" Usage="displayManager.RegisterDisplayListener (listener, handler)" />
      <MemberSignature Language="C#" Value="public void RegisterDisplayListener (Android.Hardware.Display.DisplayManager.IDisplayListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDisplayListener(class Android.Hardware.Display.DisplayManager/IDisplayListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Display.DisplayManager.RegisterDisplayListener(Android.Hardware.Display.DisplayManager.IDisplayListener,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerDisplayListener", "(Landroid/hardware/display/DisplayManager$DisplayListener;Landroid/os/Handler;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.Display.DisplayManager+IDisplayListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to register.</param>
        <param name="handler">The handler on which the listener should be invoked, or null
            if the listener should be invoked on the calling thread's looper.</param>
        <summary>Registers a display listener to receive notifications about when
            displays are added, removed or changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#registerDisplayListener(android.hardware.display.DisplayListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.registerDisplayListener(android.hardware.display.DisplayListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Hardware.Display.DisplayManager.UnregisterDisplayListener(.IDisplayListener)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Hardware.Display.DisplayManager.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Display.DisplayManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Hardware.Display.DisplayManager.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Display.DisplayManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDisplayListener">
      <MemberSignature Language="F#" Value="member this.UnregisterDisplayListener : Android.Hardware.Display.DisplayManager.IDisplayListener -&gt; unit" Usage="displayManager.UnregisterDisplayListener listener" />
      <MemberSignature Language="C#" Value="public void UnregisterDisplayListener (Android.Hardware.Display.DisplayManager.IDisplayListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterDisplayListener(class Android.Hardware.Display.DisplayManager/IDisplayListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Display.DisplayManager.UnregisterDisplayListener(Android.Hardware.Display.DisplayManager.IDisplayListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterDisplayListener", "(Landroid/hardware/display/DisplayManager$DisplayListener;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.Display.DisplayManager+IDisplayListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to unregister.</param>
        <summary>Unregisters a display listener.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#unregisterDisplayListener(android.hardware.display.DisplayListener)" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.unregisterDisplayListener(android.hardware.display.DisplayListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Hardware.Display.DisplayManager.RegisterDisplayListener(.IDisplayListener, Android.OS.Handler)" />
      </Docs>
    </Member>
    <Member MemberName="VirtualDisplayFlagAutoMirror">
      <MemberSignature Language="F#" Value="val mutable VirtualDisplayFlagAutoMirror : Android.Hardware.Display.VirtualDisplayFlags" Usage="Android.Hardware.Display.DisplayManager.VirtualDisplayFlagAutoMirror" />
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagAutoMirror = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagAutoMirror = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagAutoMirror" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.VirtualDisplayFlags enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.VirtualDisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Virtual display flag: Allows content to be mirrored on private displays when no content is
            being shown.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="VirtualDisplayFlagOwnContentOnly">
      <MemberSignature Language="F#" Value="val mutable VirtualDisplayFlagOwnContentOnly : Android.Hardware.Display.VirtualDisplayFlags" Usage="Android.Hardware.Display.DisplayManager.VirtualDisplayFlagOwnContentOnly" />
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagOwnContentOnly = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagOwnContentOnly = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagOwnContentOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.VirtualDisplayFlags enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.VirtualDisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Virtual display flag: Only show this display's own content; do not mirror
            the content of another display.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="VirtualDisplayFlagPresentation">
      <MemberSignature Language="F#" Value="val mutable VirtualDisplayFlagPresentation : Android.Hardware.Display.VirtualDisplayFlags" Usage="Android.Hardware.Display.DisplayManager.VirtualDisplayFlagPresentation" />
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagPresentation = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagPresentation = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagPresentation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIRTUAL_DISPLAY_FLAG_PRESENTATION")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.VirtualDisplayFlags enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.VirtualDisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Virtual display flag: Create a presentation display.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#VIRTUAL_DISPLAY_FLAG_PRESENTATION" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_PRESENTATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.App.Presentation" />
        <altmember cref="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="F:Android.Hardware.Display.DisplayManager.DisplayCategoryPresentation" />
        <altmember cref="F:Android.Views.Display.FlagPresentation" />
      </Docs>
    </Member>
    <Member MemberName="VirtualDisplayFlagPublic">
      <MemberSignature Language="F#" Value="val mutable VirtualDisplayFlagPublic : Android.Hardware.Display.VirtualDisplayFlags" Usage="Android.Hardware.Display.DisplayManager.VirtualDisplayFlagPublic" />
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagPublic = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagPublic = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagPublic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIRTUAL_DISPLAY_FLAG_PUBLIC")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.VirtualDisplayFlags enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.VirtualDisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Virtual display flag: Create a public display.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#VIRTUAL_DISPLAY_FLAG_PUBLIC" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_PUBLIC</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagOwnContentOnly" />
        <altmember cref="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagAutoMirror" />
      </Docs>
    </Member>
    <Member MemberName="VirtualDisplayFlagSecure">
      <MemberSignature Language="F#" Value="val mutable VirtualDisplayFlagSecure : Android.Hardware.Display.VirtualDisplayFlags" Usage="Android.Hardware.Display.DisplayManager.VirtualDisplayFlagSecure" />
      <MemberSignature Language="C#" Value="public const Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagSecure = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Display.VirtualDisplayFlags VirtualDisplayFlagSecure = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Display.DisplayManager.VirtualDisplayFlagSecure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIRTUAL_DISPLAY_FLAG_SECURE")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Display.VirtualDisplayFlags enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.VirtualDisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Virtual display flag: Create a secure display.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/display/DisplayManager#VIRTUAL_DISPLAY_FLAG_SECURE" title="Reference documentation">Java documentation for <code>android.hardware.display.DisplayManager.VIRTUAL_DISPLAY_FLAG_SECURE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="F:Android.Views.Display.FlagSecure" />
        <altmember cref="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
