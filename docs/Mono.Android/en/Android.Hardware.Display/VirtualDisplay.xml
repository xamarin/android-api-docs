<Type Name="VirtualDisplay" FullName="Android.Hardware.Display.VirtualDisplay">
  <TypeSignature Language="C#" Value="public sealed class VirtualDisplay : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VirtualDisplay extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/display/VirtualDisplay", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>Represents a virtual display.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Represents a virtual display. The content of a virtual display is rendered to a
 <c><see cref="T:Android.Views.Surface" /></c> that you must provide to <c><see cref="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 Because a virtual display renders to a surface provided by the application, it will be
 released automatically when the process terminates and all remaining windows on it will
 be forcibly removed.  However, you should also explicitly call <c><see cref="M:Android.Hardware.Display.VirtualDisplay.Release" /></c> when
 you're done with it.
 </para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="M:Android.Hardware.Display.DisplayManager.CreateVirtualDisplay(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/hardware/display/VirtualDisplay.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public Android.Views.Display Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Display Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDisplay", "()Landroid/view/Display;", "GetGetDisplayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the virtual display.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the virtual display.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/VirtualDisplay.html#getDisplay()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the virtual display and destroys its underlying surface.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Releases the virtual display and destroys its underlying surface.
 </para>
          <para tool="javadoc-to-mdoc">
 All remaining windows on the virtual display will be forcibly removed
 as part of releasing the virtual display.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/VirtualDisplay.html#release()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (int width, int height, int densityDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resize(int32 width, int32 height, int32 densityDpi) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resize", "(III)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="densityDpi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="densityDpi">To be added.</param>
        <summary>Asks the virtual display to resize.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Asks the virtual display to resize.
</para>
          <para tool="javadoc-to-mdoc">
 This is really just a convenience to allow applications using
 virtual displays to adapt to changing conditions without having
 to tear down and recreate the display.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/VirtualDisplay.html#resize(int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Surface">
      <MemberSignature Language="C#" Value="public Android.Views.Surface Surface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Surface Surface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "GetSetSurface_Landroid_view_Surface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the surface that backs the virtual display.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/hardware/display/VirtualDisplay.html#getSurface()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the surface that backs the virtual display.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/hardware/display/VirtualDisplay.html#setSurface(android.view.Surface)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the surface that backs the virtual display.
 </para>
          <para tool="javadoc-to-mdoc">
 Detaching the surface that backs a virtual display has a similar effect to
 turning off the screen.
 </para>
          <para tool="javadoc-to-mdoc">
 It is still the caller's responsibility to destroy the surface after it has
 been detached.
 </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
