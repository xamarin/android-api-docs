<Type Name="StorageManager" FullName="Android.OS.Storage.StorageManager">
  <TypeSignature Language="VB.NET" Value="Public Class StorageManager&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class StorageManager : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class StorageManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StorageManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.Storage.StorageManager" />
  <TypeSignature Language="F#" Value="type StorageManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/os/storage/StorageManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/os/storage/StorageManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>StorageManager is the interface to the systems storage service.</summary>
    <remarks>
      <para>StorageManager is the interface to the systems storage service. The storage
            manager handles storage-related items such as Opaque Binary Blobs (OBBs).</para>
      <para>OBBs contain a filesystem that maybe be encrypted on disk and mounted
            on-demand from an application. OBBs are a good way of providing large amounts
            of binary assets without packaging them into APKs as they may be multiple
            gigabytes in size. However, due to their size, they're most likely stored in
            a shared storage pool accessible from all programs. The system does not
            guarantee the security of the OBB file itself: if any program modifies the
            OBB, there is no guarantee that a read from that OBB will produce the
            expected output.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/storage/StorageManager" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StorageManager(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected StorageManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.Storage.StorageManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.Storage.StorageManager" Usage="new Android.OS.Storage.StorageManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionClearAppCache">
      <MemberSignature Language="VB.NET" Value="Public Const ActionClearAppCache As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionClearAppCache;" />
      <MemberSignature Language="C#" Value="public const string ActionClearAppCache;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionClearAppCache" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Storage.StorageManager.ActionClearAppCache" />
      <MemberSignature Language="F#" Value="val mutable ActionClearAppCache : string" Usage="Android.OS.Storage.StorageManager.ActionClearAppCache" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_CLEAR_APP_CACHE", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_CLEAR_APP_CACHE", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_EXTERNAL_STORAGE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_EXTERNAL_STORAGE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Allows the user to free up space by clearing app external cache directories.</summary>
        <remarks>
          <para>Activity Action: Allows the user to free up space by clearing app external cache directories.
            The intent doesn't automatically clear cache, but shows a dialog and lets the user decide.</para>
          <para>This intent should be launched using
            <c>Activity#startActivityForResult(Intent, int)</c> so that the user
            knows which app is requesting to clear cache. The returned result will be:
            <c>Activity#RESULT_OK</c> if the activity was launched and all cache was cleared,
            <c>OsConstants#EIO</c> if an error occurred while clearing the cache or
            <c>Activity#RESULT_CANCELED</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#ACTION_CLEAR_APP_CACHE" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.ACTION_CLEAR_APP_CACHE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionManageStorage">
      <MemberSignature Language="VB.NET" Value="Public Const ActionManageStorage As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionManageStorage;" />
      <MemberSignature Language="C#" Value="public const string ActionManageStorage;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionManageStorage" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Storage.StorageManager.ActionManageStorage" />
      <MemberSignature Language="F#" Value="val mutable ActionManageStorage : string" Usage="Android.OS.Storage.StorageManager.ActionManageStorage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_MANAGE_STORAGE", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_MANAGE_STORAGE", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android25.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android25.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Allows the user to manage their storage.</summary>
        <remarks>
          <para>Activity Action: Allows the user to manage their storage. This activity
            provides the ability to free up space on the device by deleting data such
            as apps.</para>
          <para>If the sending application has a specific storage device or allocation
            size in mind, they can optionally define <c>#EXTRA_UUID</c> or
            <c>#EXTRA_REQUESTED_BYTES</c>, respectively.</para>
          <para>This intent should be launched using
            <c>Activity#startActivityForResult(Intent, int)</c> so that the user
            knows which app is requesting the storage space. The returned result will
            be <c>Activity#RESULT_OK</c> if the requested space was made available,
            or <c>Activity#RESULT_CANCELED</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#ACTION_MANAGE_STORAGE" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.ACTION_MANAGE_STORAGE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateBytes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AllocateBytes (fd As FileDescriptor, bytes As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AllocateBytes(Java::IO::FileDescriptor ^ fd, long bytes);" />
      <MemberSignature Language="C#" Value="public virtual void AllocateBytes (Java.IO.FileDescriptor? fd, long bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateBytes(class Java.IO.FileDescriptor fd, int64 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.AllocateBytes(Java.IO.FileDescriptor,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member AllocateBytes : Java.IO.FileDescriptor * int64 -&gt; unit&#xA;override this.AllocateBytes : Java.IO.FileDescriptor * int64 -&gt; unit" Usage="storageManager.AllocateBytes (fd, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("allocateBytes", "(Ljava/io/FileDescriptor;J)V", "GetAllocateBytes_Ljava_io_FileDescriptor_JHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("allocateBytes", "(Ljava/io/FileDescriptor;J)V", "GetAllocateBytes_Ljava_io_FileDescriptor_JHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="bytes" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fd">the open file that you'd like to allocate disk space for.</param>
        <param name="bytes">the number of bytes to allocate. This is the desired final
                       size of the open file. If the open file is smaller than this
                       requested size, it will be extended without modifying any
                       existing contents. If the open file is larger than this
                       requested size, it will be truncated.</param>
        <summary>Allocate the requested number of bytes for your application to use in the
            given open file.</summary>
        <remarks>
          <para>Allocate the requested number of bytes for your application to use in the
            given open file. This will cause the system to delete any cached files
            necessary to satisfy your request.</para>
          <para>Attempts to allocate disk space beyond the value returned by
            <c>#getAllocatableBytes(UUID)</c> will fail.</para>
          <para>This method guarantees that bytes have been allocated to the opened file,
            otherwise it will throw if fast allocation is not possible. Fast
            allocation is typically only supported in private app data directories,
            and on shared/external storage devices which are emulated.</para>
          <para>If you're progressively allocating an unbounded amount of storage space
            (such as when recording a video) you should avoid calling this method
            more than once every 60 seconds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#allocateBytes(java.io.FileDescriptor,%20long)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.allocateBytes(java.io.FileDescriptor, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateBytes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AllocateBytes (storageUuid As UUID, bytes As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AllocateBytes(Java::Util::UUID ^ storageUuid, long bytes);" />
      <MemberSignature Language="C#" Value="public virtual void AllocateBytes (Java.Util.UUID storageUuid, long bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateBytes(class Java.Util.UUID storageUuid, int64 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.AllocateBytes(Java.Util.UUID,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member AllocateBytes : Java.Util.UUID * int64 -&gt; unit&#xA;override this.AllocateBytes : Java.Util.UUID * int64 -&gt; unit" Usage="storageManager.AllocateBytes (storageUuid, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("allocateBytes", "(Ljava/util/UUID;J)V", "GetAllocateBytes_Ljava_util_UUID_JHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("allocateBytes", "(Ljava/util/UUID;J)V", "GetAllocateBytes_Ljava_util_UUID_JHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageUuid" Type="Java.Util.UUID" />
        <Parameter Name="bytes" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="storageUuid">the UUID of the storage volume where you'd like to
                       allocate disk space. The UUID for a specific path can be
                       obtained using <c>#getUuidForPath(File)</c>.</param>
        <param name="bytes">the number of bytes to allocate.</param>
        <summary>Allocate the requested number of bytes for your application to use on the
            given storage volume.</summary>
        <remarks>
          <para>Allocate the requested number of bytes for your application to use on the
            given storage volume. This will cause the system to delete any cached
            files necessary to satisfy your request.</para>
          <para>Attempts to allocate disk space beyond the value returned by
            <c>#getAllocatableBytes(UUID)</c> will fail.</para>
          <para>Since multiple apps can be running simultaneously, this method may be
            subject to race conditions. If possible, consider using
            <c>#allocateBytes(FileDescriptor, long)</c> which will guarantee
            that bytes are allocated to an opened file.</para>
          <para>If you're progressively allocating an unbounded amount of storage space
            (such as when recording a video) you should avoid calling this method
            more than once every 60 seconds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#allocateBytes(java.util.UUID,%20long)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.allocateBytes(java.util.UUID, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraRequestedBytes">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraRequestedBytes As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraRequestedBytes;" />
      <MemberSignature Language="C#" Value="public const string ExtraRequestedBytes;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraRequestedBytes" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Storage.StorageManager.ExtraRequestedBytes" />
      <MemberSignature Language="F#" Value="val mutable ExtraRequestedBytes : string" Usage="Android.OS.Storage.StorageManager.ExtraRequestedBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_REQUESTED_BYTES", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_REQUESTED_BYTES", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used to indicate the total size (in bytes) that an application is
            interested in allocating.</summary>
        <remarks>
          <para>Extra used to indicate the total size (in bytes) that an application is
            interested in allocating.</para>
          <para>When defined, the management UI will help guide the user to free up
            enough disk space to reach this requested value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#EXTRA_REQUESTED_BYTES" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.EXTRA_REQUESTED_BYTES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraUuid">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraUuid As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraUuid;" />
      <MemberSignature Language="C#" Value="public const string ExtraUuid;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraUuid" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Storage.StorageManager.ExtraUuid" />
      <MemberSignature Language="F#" Value="val mutable ExtraUuid : string" Usage="Android.OS.Storage.StorageManager.ExtraUuid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_UUID", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_UUID", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra <c>UUID</c> used to indicate the storage volume where an
            application is interested in allocating or managing disk space.</summary>
        <remarks>
          <para>Extra <c>UUID</c> used to indicate the storage volume where an
            application is interested in allocating or managing disk space.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#EXTRA_UUID" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.EXTRA_UUID</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromContext (context As Context) As StorageManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::OS::Storage::StorageManager ^ FromContext(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public static Android.OS.Storage.StorageManager? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.Storage.StorageManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.OS.Storage.StorageManager" Usage="Android.OS.Storage.StorageManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.OS.Storage.StorageManager</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllocatableBytes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllocatableBytes (storageUuid As UUID) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetAllocatableBytes(Java::Util::UUID ^ storageUuid);" />
      <MemberSignature Language="C#" Value="public virtual long GetAllocatableBytes (Java.Util.UUID storageUuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetAllocatableBytes(class Java.Util.UUID storageUuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.GetAllocatableBytes(Java.Util.UUID)" />
      <MemberSignature Language="F#" Value="abstract member GetAllocatableBytes : Java.Util.UUID -&gt; int64&#xA;override this.GetAllocatableBytes : Java.Util.UUID -&gt; int64" Usage="storageManager.GetAllocatableBytes storageUuid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAllocatableBytes", "(Ljava/util/UUID;)J", "GetGetAllocatableBytes_Ljava_util_UUID_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAllocatableBytes", "(Ljava/util/UUID;)J", "GetGetAllocatableBytes_Ljava_util_UUID_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageUuid" Type="Java.Util.UUID" />
      </Parameters>
      <Docs>
        <param name="storageUuid">the UUID of the storage volume where you're
                       considering allocating disk space, since allocatable space can
                       vary widely depending on the underlying storage device. The
                       UUID for a specific path can be obtained using
                       <c>#getUuidForPath(File)</c>.</param>
        <summary>Return the maximum number of new bytes that your app can allocate for
            itself on the given storage volume.</summary>
        <returns>the maximum number of new bytes that the calling app can allocate
                    using <c>#allocateBytes(UUID, long)</c> or
                    <c>#allocateBytes(FileDescriptor, long)</c>.</returns>
        <remarks>
          <para>Return the maximum number of new bytes that your app can allocate for
            itself on the given storage volume. This value is typically larger than
            <c>File#getUsableSpace()</c>, since the system may be willing to delete
            cached files to satisfy an allocation request. You can then allocate
            space for yourself using <c>#allocateBytes(UUID, long)</c> or
            <c>#allocateBytes(FileDescriptor, long)</c>.</para>
          <para>This method is best used as a pre-flight check, such as deciding if there
            is enough space to store an entire music album before you allocate space
            for each audio file in the album. Attempts to allocate disk space beyond
            the returned value will fail.</para>
          <para>If the returned value is not large enough for the data you'd like to
            persist, you can launch <c>#ACTION_MANAGE_STORAGE</c> with the
            <c>#EXTRA_UUID</c> and <c>#EXTRA_REQUESTED_BYTES</c> options to help
            involve the user in freeing up disk space.</para>
          <para>If you're progressively allocating an unbounded amount of storage space
            (such as when recording a video) you should avoid calling this method
            more than once every 30 seconds.
            &lt;p class="note"&gt;
            Note: if your app uses the <c>android:sharedUserId</c> manifest feature,
            then allocatable space for all packages in your shared UID is tracked
            together as a single unit.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getAllocatableBytes(java.util.UUID)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getAllocatableBytes(java.util.UUID)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheQuotaBytes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheQuotaBytes (storageUuid As UUID) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetCacheQuotaBytes(Java::Util::UUID ^ storageUuid);" />
      <MemberSignature Language="C#" Value="public virtual long GetCacheQuotaBytes (Java.Util.UUID storageUuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCacheQuotaBytes(class Java.Util.UUID storageUuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.GetCacheQuotaBytes(Java.Util.UUID)" />
      <MemberSignature Language="F#" Value="abstract member GetCacheQuotaBytes : Java.Util.UUID -&gt; int64&#xA;override this.GetCacheQuotaBytes : Java.Util.UUID -&gt; int64" Usage="storageManager.GetCacheQuotaBytes storageUuid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCacheQuotaBytes", "(Ljava/util/UUID;)J", "GetGetCacheQuotaBytes_Ljava_util_UUID_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCacheQuotaBytes", "(Ljava/util/UUID;)J", "GetGetCacheQuotaBytes_Ljava_util_UUID_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageUuid" Type="Java.Util.UUID" />
      </Parameters>
      <Docs>
        <param name="storageUuid">the UUID of the storage volume that you're interested
                       in. The UUID for a specific path can be obtained using
                       <c>#getUuidForPath(File)</c>.</param>
        <summary>Return quota size in bytes for all cached data belonging to the calling
            app on the given storage volume.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return quota size in bytes for all cached data belonging to the calling
            app on the given storage volume.</para>
          <para>If your app goes above this quota, your cached files will be some of the
            first to be deleted when additional disk space is needed. Conversely, if
            your app stays under this quota, your cached files will be some of the
            last to be deleted when additional disk space is needed.</para>
          <para>This quota will change over time depending on how frequently the user
            interacts with your app, and depending on how much system-wide disk space
            is used.
            &lt;p class="note"&gt;
            Note: if your app uses the <c>android:sharedUserId</c> manifest feature,
            then cached data for all packages in your shared UID is tracked together
            as a single unit.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getCacheQuotaBytes(java.util.UUID)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getCacheQuotaBytes(java.util.UUID)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheSizeBytes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheSizeBytes (storageUuid As UUID) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetCacheSizeBytes(Java::Util::UUID ^ storageUuid);" />
      <MemberSignature Language="C#" Value="public virtual long GetCacheSizeBytes (Java.Util.UUID storageUuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCacheSizeBytes(class Java.Util.UUID storageUuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.GetCacheSizeBytes(Java.Util.UUID)" />
      <MemberSignature Language="F#" Value="abstract member GetCacheSizeBytes : Java.Util.UUID -&gt; int64&#xA;override this.GetCacheSizeBytes : Java.Util.UUID -&gt; int64" Usage="storageManager.GetCacheSizeBytes storageUuid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCacheSizeBytes", "(Ljava/util/UUID;)J", "GetGetCacheSizeBytes_Ljava_util_UUID_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCacheSizeBytes", "(Ljava/util/UUID;)J", "GetGetCacheSizeBytes_Ljava_util_UUID_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageUuid" Type="Java.Util.UUID" />
      </Parameters>
      <Docs>
        <param name="storageUuid">the UUID of the storage volume that you're interested
                       in. The UUID for a specific path can be obtained using
                       <c>#getUuidForPath(File)</c>.</param>
        <summary>Return total size in bytes of all cached data belonging to the calling
            app on the given storage volume.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return total size in bytes of all cached data belonging to the calling
            app on the given storage volume.</para>
          <para>Cached data tracked by this method always includes
            <c>Context#getCacheDir()</c> and <c>Context#getCodeCacheDir()</c>, and
            it also includes <c>Context#getExternalCacheDir()</c> if the primary
            shared/external storage is hosted on the same storage device as your
            private data.
            &lt;p class="note"&gt;
            Note: if your app uses the <c>android:sharedUserId</c> manifest feature,
            then cached data for all packages in your shared UID is tracked together
            as a single unit.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getCacheSizeBytes(java.util.UUID)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getCacheSizeBytes(java.util.UUID)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManageSpaceActivityIntent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManageSpaceActivityIntent (packageName As String, requestCode As Integer) As PendingIntent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::PendingIntent ^ GetManageSpaceActivityIntent(System::String ^ packageName, int requestCode);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent? GetManageSpaceActivityIntent (string packageName, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent GetManageSpaceActivityIntent(string packageName, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.GetManageSpaceActivityIntent(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetManageSpaceActivityIntent : string * int -&gt; Android.App.PendingIntent&#xA;override this.GetManageSpaceActivityIntent : string * int -&gt; Android.App.PendingIntent" Usage="storageManager.GetManageSpaceActivityIntent (packageName, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getManageSpaceActivityIntent", "(Ljava/lang/String;I)Landroid/app/PendingIntent;", "GetGetManageSpaceActivityIntent_Ljava_lang_String_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getManageSpaceActivityIntent", "(Ljava/lang/String;I)Landroid/app/PendingIntent;", "GetGetManageSpaceActivityIntent_Ljava_lang_String_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_EXTERNAL_STORAGE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_EXTERNAL_STORAGE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="packageName">package name for the App for which manageSpaceActivity is to be launched</param>
        <param name="requestCode">for launching the activity</param>
        <summary>Returns a <c>PendingIntent</c> that can be used by Apps with
            <c>android.Manifest.permission#MANAGE_EXTERNAL_STORAGE</c> permission
            to launch the manageSpaceActivity for any App that implements it, irrespective of its
            exported status.</summary>
        <returns>PendingIntent to launch the manageSpaceActivity if successful, null if the
            packageName doesn't have a manageSpaceActivity.</returns>
        <remarks>
          <para>Returns a <c>PendingIntent</c> that can be used by Apps with
            <c>android.Manifest.permission#MANAGE_EXTERNAL_STORAGE</c> permission
            to launch the manageSpaceActivity for any App that implements it, irrespective of its
            exported status.</para>
          <para>Caller has the responsibility of supplying a valid packageName which has
            manageSpaceActivity implemented.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getManageSpaceActivityIntent(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getManageSpaceActivityIntent(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMountedObbPath">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMountedObbPath (rawPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetMountedObbPath(System::String ^ rawPath);" />
      <MemberSignature Language="C#" Value="public virtual string? GetMountedObbPath (string? rawPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetMountedObbPath(string rawPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.GetMountedObbPath(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetMountedObbPath : string -&gt; string&#xA;override this.GetMountedObbPath : string -&gt; string" Usage="storageManager.GetMountedObbPath rawPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMountedObbPath", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetMountedObbPath_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMountedObbPath", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetMountedObbPath_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPath">path to OBB image</param>
        <summary>Check the mounted path of an Opaque Binary Blob (OBB) file.</summary>
        <returns>absolute path to mounted OBB image data or <c>null</c> if
                    not mounted or exception encountered trying to read status</returns>
        <remarks>
          <para>Check the mounted path of an Opaque Binary Blob (OBB) file. This will
            give you the path to where you can obtain access to the internals of the
            OBB.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getMountedObbPath(java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getMountedObbPath(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetStorageVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageVolume (uri As Uri) As StorageVolume" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::Storage::StorageVolume ^ GetStorageVolume(Android::Net::Uri ^ uri);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.Storage.StorageVolume GetStorageVolume (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Storage.StorageVolume GetStorageVolume(class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.GetStorageVolume(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageVolume : Android.Net.Uri -&gt; Android.OS.Storage.StorageVolume&#xA;override this.GetStorageVolume : Android.Net.Uri -&gt; Android.OS.Storage.StorageVolume" Usage="storageManager.GetStorageVolume uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStorageVolume", "(Landroid/net/Uri;)Landroid/os/storage/StorageVolume;", "GetGetStorageVolume_Landroid_net_Uri_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStorageVolume", "(Landroid/net/Uri;)Landroid/os/storage/StorageVolume;", "GetGetStorageVolume_Landroid_net_Uri_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Storage.StorageVolume</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Return the <c>StorageVolume</c> that contains the given
            <c>MediaStore</c> item.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the <c>StorageVolume</c> that contains the given
            <c>MediaStore</c> item.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getStorageVolume(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getStorageVolume(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageVolume (file As File) As StorageVolume" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::Storage::StorageVolume ^ GetStorageVolume(Java::IO::File ^ file);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.Storage.StorageVolume? GetStorageVolume (Java.IO.File file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Storage.StorageVolume GetStorageVolume(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.GetStorageVolume(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageVolume : Java.IO.File -&gt; Android.OS.Storage.StorageVolume&#xA;override this.GetStorageVolume : Java.IO.File -&gt; Android.OS.Storage.StorageVolume" Usage="storageManager.GetStorageVolume file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStorageVolume", "(Ljava/io/File;)Landroid/os/storage/StorageVolume;", "GetGetStorageVolume_Ljava_io_File_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStorageVolume", "(Ljava/io/File;)Landroid/os/storage/StorageVolume;", "GetGetStorageVolume_Ljava_io_File_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Storage.StorageVolume</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>Return the <c>StorageVolume</c> that contains the given file, or
            <c>null</c> if none.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the <c>StorageVolume</c> that contains the given file, or
            <c>null</c> if none.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getStorageVolume(java.io.File)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getStorageVolume(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUuidForPath">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUuidForPath (path As File) As UUID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Util::UUID ^ GetUuidForPath(Java::IO::File ^ path);" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.UUID GetUuidForPath (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.UUID GetUuidForPath(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.GetUuidForPath(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member GetUuidForPath : Java.IO.File -&gt; Java.Util.UUID&#xA;override this.GetUuidForPath : Java.IO.File -&gt; Java.Util.UUID" Usage="storageManager.GetUuidForPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getUuidForPath", "(Ljava/io/File;)Ljava/util/UUID;", "GetGetUuidForPath_Ljava_io_File_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getUuidForPath", "(Ljava/io/File;)Ljava/util/UUID;", "GetGetUuidForPath_Ljava_io_File_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.UUID</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Return a UUID identifying the storage volume that hosts the given
            filesystem path.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return a UUID identifying the storage volume that hosts the given
            filesystem path.</para>
          <para>If this path is hosted by the default internal storage of the device at
            <c>Environment#getDataDirectory()</c>, the returned value will be
            <c>#UUID_DEFAULT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getUuidForPath(java.io.File)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getUuidForPath(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAllocationSupported">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAllocationSupported (fd As FileDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAllocationSupported(Java::IO::FileDescriptor ^ fd);" />
      <MemberSignature Language="C#" Value="public virtual bool IsAllocationSupported (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAllocationSupported(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.IsAllocationSupported(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member IsAllocationSupported : Java.IO.FileDescriptor -&gt; bool&#xA;override this.IsAllocationSupported : Java.IO.FileDescriptor -&gt; bool" Usage="storageManager.IsAllocationSupported fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isAllocationSupported", "(Ljava/io/FileDescriptor;)Z", "GetIsAllocationSupported_Ljava_io_FileDescriptor_Handler", ApiSince=27)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isAllocationSupported", "(Ljava/io/FileDescriptor;)Z", "GetIsAllocationSupported_Ljava_io_FileDescriptor_Handler", ApiSince=27)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android27.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android27.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <summary>Test if the given file descriptor supports allocation of disk space using
            <c>#allocateBytes(FileDescriptor, long)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Test if the given file descriptor supports allocation of disk space using
            <c>#allocateBytes(FileDescriptor, long)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#isAllocationSupported(java.io.FileDescriptor)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.isAllocationSupported(java.io.FileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCacheBehaviorGroup">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCacheBehaviorGroup (path As File) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCacheBehaviorGroup(Java::IO::File ^ path);" />
      <MemberSignature Language="C#" Value="public virtual bool IsCacheBehaviorGroup (Java.IO.File? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCacheBehaviorGroup(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.IsCacheBehaviorGroup(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member IsCacheBehaviorGroup : Java.IO.File -&gt; bool&#xA;override this.IsCacheBehaviorGroup : Java.IO.File -&gt; bool" Usage="storageManager.IsCacheBehaviorGroup path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isCacheBehaviorGroup", "(Ljava/io/File;)Z", "GetIsCacheBehaviorGroup_Ljava_io_File_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isCacheBehaviorGroup", "(Ljava/io/File;)Z", "GetIsCacheBehaviorGroup_Ljava_io_File_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Read the current value set by
            <c>#setCacheBehaviorGroup(File, boolean)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Read the current value set by
            <c>#setCacheBehaviorGroup(File, boolean)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#isCacheBehaviorGroup(java.io.File)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.isCacheBehaviorGroup(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCacheBehaviorTombstone">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCacheBehaviorTombstone (path As File) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCacheBehaviorTombstone(Java::IO::File ^ path);" />
      <MemberSignature Language="C#" Value="public virtual bool IsCacheBehaviorTombstone (Java.IO.File? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCacheBehaviorTombstone(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.IsCacheBehaviorTombstone(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member IsCacheBehaviorTombstone : Java.IO.File -&gt; bool&#xA;override this.IsCacheBehaviorTombstone : Java.IO.File -&gt; bool" Usage="storageManager.IsCacheBehaviorTombstone path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isCacheBehaviorTombstone", "(Ljava/io/File;)Z", "GetIsCacheBehaviorTombstone_Ljava_io_File_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isCacheBehaviorTombstone", "(Ljava/io/File;)Z", "GetIsCacheBehaviorTombstone_Ljava_io_File_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Read the current value set by
            <c>#setCacheBehaviorTombstone(File, boolean)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Read the current value set by
            <c>#setCacheBehaviorTombstone(File, boolean)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#isCacheBehaviorTombstone(java.io.File)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.isCacheBehaviorTombstone(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckpointSupported">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCheckpointSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCheckpointSupported { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsCheckpointSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCheckpointSupported" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.IsCheckpointSupported" />
      <MemberSignature Language="F#" Value="member this.IsCheckpointSupported : bool" Usage="Android.OS.Storage.StorageManager.IsCheckpointSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCheckpointSupported", "()Z", "GetIsCheckpointSupportedHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isCheckpointSupported", "()Z", "GetIsCheckpointSupportedHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check whether the device supports filesystem checkpoint.</summary>
        <value>true if the device supports filesystem checkpoint, false otherwise.</value>
        <remarks>
          <para>Check whether the device supports filesystem checkpoint.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#isCheckpointSupported()" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.isCheckpointSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncrypted (file As File) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncrypted(Java::IO::File ^ file);" />
      <MemberSignature Language="C#" Value="public virtual bool IsEncrypted (Java.IO.File? file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncrypted(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.IsEncrypted(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member IsEncrypted : Java.IO.File -&gt; bool&#xA;override this.IsEncrypted : Java.IO.File -&gt; bool" Usage="storageManager.IsEncrypted file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isEncrypted", "(Ljava/io/File;)Z", "GetIsEncrypted_Ljava_io_File_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isEncrypted", "(Ljava/io/File;)Z", "GetIsEncrypted_Ljava_io_File_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>Return if data stored at or under the given path will be encrypted while
            at rest.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return if data stored at or under the given path will be encrypted while
            at rest. This can help apps avoid the overhead of double-encrypting data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#isEncrypted(java.io.File)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.isEncrypted(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsObbMounted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsObbMounted (rawPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsObbMounted(System::String ^ rawPath);" />
      <MemberSignature Language="C#" Value="public virtual bool IsObbMounted (string? rawPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsObbMounted(string rawPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.IsObbMounted(System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsObbMounted : string -&gt; bool&#xA;override this.IsObbMounted : string -&gt; bool" Usage="storageManager.IsObbMounted rawPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isObbMounted", "(Ljava/lang/String;)Z", "GetIsObbMounted_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isObbMounted", "(Ljava/lang/String;)Z", "GetIsObbMounted_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPath">path to OBB image</param>
        <summary>Check whether an Opaque Binary Blob (OBB) is mounted or not.</summary>
        <returns>true if OBB is mounted; false if not mounted or on error</returns>
        <remarks>
          <para>Check whether an Opaque Binary Blob (OBB) is mounted or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#isObbMounted(java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.isObbMounted(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.Storage.StorageManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MountObb">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MountObb (rawPath As String, key As String, listener As OnObbStateChangeListener) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MountObb(System::String ^ rawPath, System::String ^ key, Android::OS::Storage::OnObbStateChangeListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual bool MountObb (string? rawPath, string? key, Android.OS.Storage.OnObbStateChangeListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MountObb(string rawPath, string key, class Android.OS.Storage.OnObbStateChangeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.MountObb(System.String,System.String,Android.OS.Storage.OnObbStateChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member MountObb : string * string * Android.OS.Storage.OnObbStateChangeListener -&gt; bool&#xA;override this.MountObb : string * string * Android.OS.Storage.OnObbStateChangeListener -&gt; bool" Usage="storageManager.MountObb (rawPath, key, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mountObb", "(Ljava/lang/String;Ljava/lang/String;Landroid/os/storage/OnObbStateChangeListener;)Z", "GetMountObb_Ljava_lang_String_Ljava_lang_String_Landroid_os_storage_OnObbStateChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mountObb", "(Ljava/lang/String;Ljava/lang/String;Landroid/os/storage/OnObbStateChangeListener;)Z", "GetMountObb_Ljava_lang_String_Ljava_lang_String_Landroid_os_storage_OnObbStateChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPath" Type="System.String" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="listener" Type="Android.OS.Storage.OnObbStateChangeListener" />
      </Parameters>
      <Docs>
        <param name="rawPath">the path to the OBB file</param>
        <param name="key">must be <c>null</c>. Previously, some Android device
                       implementations accepted a non-<c>null</c> key to mount
                       an encrypted OBB file. However, this never worked reliably and
                       is no longer supported.</param>
        <param name="listener">will receive the success or failure of the operation</param>
        <summary>Mount an Opaque Binary Blob (OBB) file.</summary>
        <returns>whether the mount call was successfully queued or not</returns>
        <remarks>
          <para>Mount an Opaque Binary Blob (OBB) file.</para>
          <para>The OBB will remain mounted for as long as the StorageManager reference
            is held by the application. As soon as this reference is lost, the OBBs
            in use will be unmounted. The <c>OnObbStateChangeListener</c> registered
            with this call will receive the success or failure of this operation.</para>
          <para>&lt;em&gt;Note:&lt;/em&gt; you can only mount OBB files for which the OBB tag on the
            file matches a package ID that is owned by the calling program's UID.
            That is, shared UID applications can attempt to mount any other
            application's OBB that shares its UID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#mountObb(java.lang.String,%20java.lang.String,%20android.os.storage.OnObbStateChangeListener)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.mountObb(java.lang.String, java.lang.String, android.os.storage.OnObbStateChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OpenProxyFileDescriptor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenProxyFileDescriptor (mode As ParcelFileMode, callback As ProxyFileDescriptorCallback, handler As Handler) As ParcelFileDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::ParcelFileDescriptor ^ OpenProxyFileDescriptor(Android::OS::ParcelFileMode mode, Android::OS::ProxyFileDescriptorCallback ^ callback, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.ParcelFileDescriptor OpenProxyFileDescriptor (Android.OS.ParcelFileMode mode, Android.OS.ProxyFileDescriptorCallback? callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.ParcelFileDescriptor OpenProxyFileDescriptor(valuetype Android.OS.ParcelFileMode mode, class Android.OS.ProxyFileDescriptorCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.OpenProxyFileDescriptor(Android.OS.ParcelFileMode,Android.OS.ProxyFileDescriptorCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member OpenProxyFileDescriptor : Android.OS.ParcelFileMode * Android.OS.ProxyFileDescriptorCallback * Android.OS.Handler -&gt; Android.OS.ParcelFileDescriptor&#xA;override this.OpenProxyFileDescriptor : Android.OS.ParcelFileMode * Android.OS.ProxyFileDescriptorCallback * Android.OS.Handler -&gt; Android.OS.ParcelFileDescriptor" Usage="storageManager.OpenProxyFileDescriptor (mode, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openProxyFileDescriptor", "(ILandroid/os/ProxyFileDescriptorCallback;Landroid/os/Handler;)Landroid/os/ParcelFileDescriptor;", "GetOpenProxyFileDescriptor_ILandroid_os_ProxyFileDescriptorCallback_Landroid_os_Handler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openProxyFileDescriptor", "(ILandroid/os/ProxyFileDescriptorCallback;Landroid/os/Handler;)Landroid/os/ParcelFileDescriptor;", "GetOpenProxyFileDescriptor_ILandroid_os_ProxyFileDescriptorCallback_Landroid_os_Handler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.OS.ParcelFileMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="callback" Type="Android.OS.ProxyFileDescriptorCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="mode">The desired access mode, must be one of
                       <c>ParcelFileDescriptor#MODE_READ_ONLY</c>,
                       <c>ParcelFileDescriptor#MODE_WRITE_ONLY</c>, or
                       <c>ParcelFileDescriptor#MODE_READ_WRITE</c></param>
        <param name="callback">Callback to process file operation requests issued on
                       returned file descriptor.</param>
        <param name="handler">Handler that invokes callback methods.</param>
        <summary>Opens a seekable <c>ParcelFileDescriptor</c> that proxies all low-level
            I/O requests back to the given <c>ProxyFileDescriptorCallback</c>.</summary>
        <returns>Seekable ParcelFileDescriptor.</returns>
        <remarks>
          <para>Opens a seekable <c>ParcelFileDescriptor</c> that proxies all low-level
            I/O requests back to the given <c>ProxyFileDescriptorCallback</c>.</para>
          <para>This can be useful when you want to provide quick access to a large file
            that isn't backed by a real file on disk, such as a file on a network
            share, cloud storage service, etc. As an example, you could respond to a
            <c>ContentResolver#openFileDescriptor(android.net.Uri, String)</c>
            request by returning a <c>ParcelFileDescriptor</c> created with this
            method, and then stream the content on-demand as requested.</para>
          <para>Another useful example might be where you have an encrypted file that
            you're willing to decrypt on-demand, but where you want to avoid
            persisting the cleartext version.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#openProxyFileDescriptor(int,%20android.os.ProxyFileDescriptorCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.openProxyFileDescriptor(int, android.os.ProxyFileDescriptorCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryStorageVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PrimaryStorageVolume As StorageVolume" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::OS::Storage::StorageVolume ^ PrimaryStorageVolume { Android::OS::Storage::StorageVolume ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.Storage.StorageVolume PrimaryStorageVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Storage.StorageVolume PrimaryStorageVolume" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.PrimaryStorageVolume" />
      <MemberSignature Language="F#" Value="member this.PrimaryStorageVolume : Android.OS.Storage.StorageVolume" Usage="Android.OS.Storage.StorageManager.PrimaryStorageVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPrimaryStorageVolume", "()Landroid/os/storage/StorageVolume;", "GetGetPrimaryStorageVolumeHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPrimaryStorageVolume", "()Landroid/os/storage/StorageVolume;", "GetGetPrimaryStorageVolumeHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Storage.StorageVolume</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the primary shared/external storage volume available to the
            current user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the primary shared/external storage volume available to the
            current user. This volume is the same storage device returned by
            <c>Environment#getExternalStorageDirectory()</c> and
            <c>Context#getExternalFilesDir(String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getPrimaryStorageVolume()" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getPrimaryStorageVolume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentStorageVolumes">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RecentStorageVolumes As IList(Of StorageVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::OS::Storage::StorageVolume ^&gt; ^ RecentStorageVolumes { System::Collections::Generic::IList&lt;Android::OS::Storage::StorageVolume ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt; RecentStorageVolumes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.OS.Storage.StorageVolume&gt; RecentStorageVolumes" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.RecentStorageVolumes" />
      <MemberSignature Language="F#" Value="member this.RecentStorageVolumes : System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt;" Usage="Android.OS.Storage.StorageManager.RecentStorageVolumes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRecentStorageVolumes", "()Ljava/util/List;", "GetGetRecentStorageVolumesHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRecentStorageVolumes", "()Ljava/util/List;", "GetGetRecentStorageVolumesHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the list of shared/external storage volumes both currently and
            recently available to the calling user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the list of shared/external storage volumes both currently and
            recently available to the calling user.</para>
          <para>Recently available storage volumes are likely to reappear in the future,
            so apps are encouraged to preserve any indexed metadata related to these
            volumes to optimize user experiences.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getRecentStorageVolumes()" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getRecentStorageVolumes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStorageVolumeCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterStorageVolumeCallback (executor As IExecutor, callback As StorageManager.StorageVolumeCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterStorageVolumeCallback(Java::Util::Concurrent::IExecutor ^ executor, Android::OS::Storage::StorageManager::StorageVolumeCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterStorageVolumeCallback (Java.Util.Concurrent.IExecutor executor, Android.OS.Storage.StorageManager.StorageVolumeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStorageVolumeCallback(class Java.Util.Concurrent.IExecutor executor, class Android.OS.Storage.StorageManager/StorageVolumeCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.RegisterStorageVolumeCallback(Java.Util.Concurrent.IExecutor,Android.OS.Storage.StorageManager.StorageVolumeCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterStorageVolumeCallback : Java.Util.Concurrent.IExecutor * Android.OS.Storage.StorageManager.StorageVolumeCallback -&gt; unit&#xA;override this.RegisterStorageVolumeCallback : Java.Util.Concurrent.IExecutor * Android.OS.Storage.StorageManager.StorageVolumeCallback -&gt; unit" Usage="storageManager.RegisterStorageVolumeCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerStorageVolumeCallback", "(Ljava/util/concurrent/Executor;Landroid/os/storage/StorageManager$StorageVolumeCallback;)V", "GetRegisterStorageVolumeCallback_Ljava_util_concurrent_Executor_Landroid_os_storage_StorageManager_StorageVolumeCallback_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerStorageVolumeCallback", "(Ljava/util/concurrent/Executor;Landroid/os/storage/StorageManager$StorageVolumeCallback;)V", "GetRegisterStorageVolumeCallback_Ljava_util_concurrent_Executor_Landroid_os_storage_StorageManager_StorageVolumeCallback_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.Storage.StorageManager+StorageVolumeCallback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>Registers the given callback to listen for <c>StorageVolume</c> changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#registerStorageVolumeCallback(java.util.concurrent.Executor,%20android.os.storage.StorageVolumeCallback)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.registerStorageVolumeCallback(java.util.concurrent.Executor, android.os.storage.StorageVolumeCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCacheBehaviorGroup">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCacheBehaviorGroup (path As File, group As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCacheBehaviorGroup(Java::IO::File ^ path, bool group);" />
      <MemberSignature Language="C#" Value="public virtual void SetCacheBehaviorGroup (Java.IO.File? path, bool group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCacheBehaviorGroup(class Java.IO.File path, bool group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.SetCacheBehaviorGroup(Java.IO.File,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetCacheBehaviorGroup : Java.IO.File * bool -&gt; unit&#xA;override this.SetCacheBehaviorGroup : Java.IO.File * bool -&gt; unit" Usage="storageManager.SetCacheBehaviorGroup (path, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCacheBehaviorGroup", "(Ljava/io/File;Z)V", "GetSetCacheBehaviorGroup_Ljava_io_File_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCacheBehaviorGroup", "(Ljava/io/File;Z)V", "GetSetCacheBehaviorGroup_Ljava_io_File_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
        <Parameter Name="group" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="group">To be added.</param>
        <summary>Enable or disable special cache behavior that treats this directory and
            its contents as an entire group.</summary>
        <remarks>
          <para>Enable or disable special cache behavior that treats this directory and
            its contents as an entire group.</para>
          <para>When enabled and this directory is considered for automatic deletion by
            the OS, all contained files will either be deleted together, or not at
            all. This is useful when you have a directory that contains several
            related metadata files that depend on each other, such as movie file and
            a subtitle file.</para>
          <para>When enabled, the &lt;em&gt;newest&lt;/em&gt; <c>File#lastModified()</c> value of
            any contained files is considered the modified time of the entire
            directory.</para>
          <para>This behavior can only be set on a directory, and it applies recursively
            to all contained files and directories.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#setCacheBehaviorGroup(java.io.File,%20boolean)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.setCacheBehaviorGroup(java.io.File, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCacheBehaviorTombstone">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCacheBehaviorTombstone (path As File, tombstone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCacheBehaviorTombstone(Java::IO::File ^ path, bool tombstone);" />
      <MemberSignature Language="C#" Value="public virtual void SetCacheBehaviorTombstone (Java.IO.File? path, bool tombstone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCacheBehaviorTombstone(class Java.IO.File path, bool tombstone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.SetCacheBehaviorTombstone(Java.IO.File,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetCacheBehaviorTombstone : Java.IO.File * bool -&gt; unit&#xA;override this.SetCacheBehaviorTombstone : Java.IO.File * bool -&gt; unit" Usage="storageManager.SetCacheBehaviorTombstone (path, tombstone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCacheBehaviorTombstone", "(Ljava/io/File;Z)V", "GetSetCacheBehaviorTombstone_Ljava_io_File_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCacheBehaviorTombstone", "(Ljava/io/File;Z)V", "GetSetCacheBehaviorTombstone_Ljava_io_File_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
        <Parameter Name="tombstone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="tombstone">To be added.</param>
        <summary>Enable or disable special cache behavior that leaves deleted cache files
            intact as tombstones.</summary>
        <remarks>
          <para>Enable or disable special cache behavior that leaves deleted cache files
            intact as tombstones.</para>
          <para>When enabled and a file contained in this directory is automatically
            deleted by the OS, the file will be truncated to have a length of 0 bytes
            instead of being fully deleted. This is useful if you need to distinguish
            between a file that was deleted versus one that never existed.</para>
          <para>This behavior can only be set on a directory, and it applies recursively
            to all contained files and directories.
            &lt;p class="note"&gt;
            Note: this behavior is ignored completely if the user explicitly requests
            that all cached data be cleared.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#setCacheBehaviorTombstone(java.io.File,%20boolean)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.setCacheBehaviorTombstone(java.io.File, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageVolumes">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StorageVolumes As IList(Of StorageVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::OS::Storage::StorageVolume ^&gt; ^ StorageVolumes { System::Collections::Generic::IList&lt;Android::OS::Storage::StorageVolume ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt; StorageVolumes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.OS.Storage.StorageVolume&gt; StorageVolumes" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.StorageVolumes" />
      <MemberSignature Language="F#" Value="member this.StorageVolumes : System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt;" Usage="Android.OS.Storage.StorageManager.StorageVolumes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStorageVolumes", "()Ljava/util/List;", "GetGetStorageVolumesHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStorageVolumes", "()Ljava/util/List;", "GetGetStorageVolumesHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the list of shared/external storage volumes currently available to
            the calling user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the list of shared/external storage volumes currently available to
            the calling user.</para>
          <para>These storage volumes are actively attached to the device, but may be in
            any mount state, as returned by <c>StorageVolume#getState()</c>. Returns
            both the primary shared storage device and any attached external volumes,
            including SD cards and USB drives.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getStorageVolumes()" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getStorageVolumes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageVolumesIncludingSharedProfiles">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StorageVolumesIncludingSharedProfiles As IList(Of StorageVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::OS::Storage::StorageVolume ^&gt; ^ StorageVolumesIncludingSharedProfiles { System::Collections::Generic::IList&lt;Android::OS::Storage::StorageVolume ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt; StorageVolumesIncludingSharedProfiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.OS.Storage.StorageVolume&gt; StorageVolumesIncludingSharedProfiles" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.StorageVolumesIncludingSharedProfiles" />
      <MemberSignature Language="F#" Value="member this.StorageVolumesIncludingSharedProfiles : System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt;" Usage="Android.OS.Storage.StorageManager.StorageVolumesIncludingSharedProfiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStorageVolumesIncludingSharedProfiles", "()Ljava/util/List;", "GetGetStorageVolumesIncludingSharedProfilesHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStorageVolumesIncludingSharedProfiles", "()Ljava/util/List;", "GetGetStorageVolumesIncludingSharedProfilesHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.MANAGE_EXTERNAL_STORAGE")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.MANAGE_EXTERNAL_STORAGE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.Storage.StorageVolume&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the list of shared/external storage volumes currently available to
            the calling user and the user it shares media with.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the list of shared/external storage volumes currently available to
            the calling user and the user it shares media with. Please refer to
            <see href="https://source.android.com/compatibility/12/android-12-cdd#95_multi-user_support">
                multi-user support</see> for more details.</para>
          <para>This is similar to <c>StorageManager#getStorageVolumes()</c> except that the result also
            includes the volumes belonging to any user it shares media with</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#getStorageVolumesIncludingSharedProfiles()" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.getStorageVolumesIncludingSharedProfiles()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.Storage.StorageManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.Storage.StorageManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmountObb">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnmountObb (rawPath As String, force As Boolean, listener As OnObbStateChangeListener) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool UnmountObb(System::String ^ rawPath, bool force, Android::OS::Storage::OnObbStateChangeListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual bool UnmountObb (string? rawPath, bool force, Android.OS.Storage.OnObbStateChangeListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnmountObb(string rawPath, bool force, class Android.OS.Storage.OnObbStateChangeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.UnmountObb(System.String,System.Boolean,Android.OS.Storage.OnObbStateChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member UnmountObb : string * bool * Android.OS.Storage.OnObbStateChangeListener -&gt; bool&#xA;override this.UnmountObb : string * bool * Android.OS.Storage.OnObbStateChangeListener -&gt; bool" Usage="storageManager.UnmountObb (rawPath, force, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unmountObb", "(Ljava/lang/String;ZLandroid/os/storage/OnObbStateChangeListener;)Z", "GetUnmountObb_Ljava_lang_String_ZLandroid_os_storage_OnObbStateChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unmountObb", "(Ljava/lang/String;ZLandroid/os/storage/OnObbStateChangeListener;)Z", "GetUnmountObb_Ljava_lang_String_ZLandroid_os_storage_OnObbStateChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPath" Type="System.String" />
        <Parameter Name="force" Type="System.Boolean" />
        <Parameter Name="listener" Type="Android.OS.Storage.OnObbStateChangeListener" />
      </Parameters>
      <Docs>
        <param name="rawPath">path to the OBB file</param>
        <param name="force">whether to kill any programs using this in order to unmount
                       it</param>
        <param name="listener">will receive the success or failure of the operation</param>
        <summary>Unmount an Opaque Binary Blob (OBB) file asynchronously.</summary>
        <returns>whether the unmount call was successfully queued or not</returns>
        <remarks>
          <para>Unmount an Opaque Binary Blob (OBB) file asynchronously. If the
            <c>force</c> flag is true, it will kill any application needed to
            unmount the given OBB (even the calling application).</para>
          <para>The <c>OnObbStateChangeListener</c> registered with this call will
            receive the success or failure of this operation.</para>
          <para>&lt;em&gt;Note:&lt;/em&gt; you can only mount OBB files for which the OBB tag on the
            file matches a package ID that is owned by the calling program's UID.
            That is, shared UID applications can obtain access to any other
            application's OBB that shares its UID.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#unmountObb(java.lang.String,%20boolean,%20android.os.storage.OnObbStateChangeListener)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.unmountObb(java.lang.String, boolean, android.os.storage.OnObbStateChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterStorageVolumeCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterStorageVolumeCallback (callback As StorageManager.StorageVolumeCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterStorageVolumeCallback(Android::OS::Storage::StorageManager::StorageVolumeCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterStorageVolumeCallback (Android.OS.Storage.StorageManager.StorageVolumeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterStorageVolumeCallback(class Android.OS.Storage.StorageManager/StorageVolumeCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Storage.StorageManager.UnregisterStorageVolumeCallback(Android.OS.Storage.StorageManager.StorageVolumeCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterStorageVolumeCallback : Android.OS.Storage.StorageManager.StorageVolumeCallback -&gt; unit&#xA;override this.UnregisterStorageVolumeCallback : Android.OS.Storage.StorageManager.StorageVolumeCallback -&gt; unit" Usage="storageManager.UnregisterStorageVolumeCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterStorageVolumeCallback", "(Landroid/os/storage/StorageManager$StorageVolumeCallback;)V", "GetUnregisterStorageVolumeCallback_Landroid_os_storage_StorageManager_StorageVolumeCallback_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterStorageVolumeCallback", "(Landroid/os/storage/StorageManager$StorageVolumeCallback;)V", "GetUnregisterStorageVolumeCallback_Landroid_os_storage_StorageManager_StorageVolumeCallback_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.OS.Storage.StorageManager+StorageVolumeCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Unregisters the given callback from listening for <c>StorageVolume</c>
            changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#unregisterStorageVolumeCallback(android.os.storage.StorageVolumeCallback)" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.unregisterStorageVolumeCallback(android.os.storage.StorageVolumeCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UuidDefault">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UuidDefault As UUID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Util::UUID ^ UuidDefault { Java::Util::UUID ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Util.UUID? UuidDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.UUID UuidDefault" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Storage.StorageManager.UuidDefault" />
      <MemberSignature Language="F#" Value="member this.UuidDefault : Java.Util.UUID" Usage="Android.OS.Storage.StorageManager.UuidDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("UUID_DEFAULT", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("UUID_DEFAULT", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.UUID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UUID representing the default internal storage of this device which
            provides <c>Environment#getDataDirectory()</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>UUID representing the default internal storage of this device which
            provides <c>Environment#getDataDirectory()</c>.</para>
          <para>This value is constant across all devices and it will never change, and
            thus it cannot be used to uniquely identify a particular physical device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/storage/StorageManager#UUID_DEFAULT" title="Reference documentation">Java documentation for <code>android.os.storage.StorageManager.UUID_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
