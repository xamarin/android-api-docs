<Type Name="TextRunShaper" FullName="Android.Graphics.Text.TextRunShaper">
  <TypeSignature Language="C#" Value="public class TextRunShaper : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextRunShaper extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Text.TextRunShaper" />
  <TypeSignature Language="F#" Value="type TextRunShaper = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/text/TextRunShaper", ApiSince=31, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/text/TextRunShaper", ApiSince=31, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides conversion from a text into glyph array.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/text/TextRunShaper" title="Reference documentation">Java documentation for <code>android.graphics.text.TextRunShaper</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextRunShaper (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Text.TextRunShaper.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Text.TextRunShaper : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.Text.TextRunShaper" Usage="new Android.Graphics.Text.TextRunShaper (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Text.TextRunShaper.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Text.TextRunShaper.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeTextRun">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Text.PositionedGlyphs ShapeTextRun (Java.Lang.ICharSequence text, int start, int count, int contextStart, int contextCount, float xOffset, float yOffset, bool isRtl, Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Text.PositionedGlyphs ShapeTextRun(class Java.Lang.ICharSequence text, int32 start, int32 count, int32 contextStart, int32 contextCount, float32 xOffset, float32 yOffset, bool isRtl, class Android.Graphics.Paint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Text.TextRunShaper.ShapeTextRun(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Boolean,Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="static member ShapeTextRun : Java.Lang.ICharSequence * int * int * int * int * single * single * bool * Android.Graphics.Paint -&gt; Android.Graphics.Text.PositionedGlyphs" Usage="Android.Graphics.Text.TextRunShaper.ShapeTextRun (text, start, count, contextStart, contextCount, xOffset, yOffset, isRtl, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shapeTextRun", "(Ljava/lang/CharSequence;IIIIFFZLandroid/graphics/Paint;)Landroid/graphics/text/PositionedGlyphs;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shapeTextRun", "(Ljava/lang/CharSequence;IIIIFFZLandroid/graphics/Paint;)Landroid/graphics/text/PositionedGlyphs;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Text.PositionedGlyphs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextCount" Type="System.Int32" />
        <Parameter Name="xOffset" Type="System.Single" />
        <Parameter Name="yOffset" Type="System.Single" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="text">a text buffer to be shaped. Any styled spans stored in this text are ignored.</param>
        <param name="start">a start index of shaping target in the buffer.</param>
        <param name="count">a length of shaping target in the buffer.</param>
        <param name="contextStart">a start index of context used for shaping in the buffer.</param>
        <param name="contextCount">a length of context used for shaping in the buffer.</param>
        <param name="xOffset">an additional amount of x offset of the result glyphs.</param>
        <param name="yOffset">an additional amount of y offset of the result glyphs.</param>
        <param name="isRtl">true if this text is shaped for RTL direction, false otherwise.</param>
        <param name="paint">a paint used for shaping text.</param>
        <summary>Shape non-styled text.</summary>
        <returns>a shape result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/text/TextRunShaper#shapeTextRun(java.lang.CharSequence,%20int,%20int,%20int,%20int,%20float,%20float,%20boolean,%20android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.graphics.text.TextRunShaper.shapeTextRun(java.lang.CharSequence, int, int, int, int, float, float, boolean, android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeTextRun">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Text.PositionedGlyphs ShapeTextRun (char[] text, int start, int count, int contextStart, int contextCount, float xOffset, float yOffset, bool isRtl, Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Text.PositionedGlyphs ShapeTextRun(char[] text, int32 start, int32 count, int32 contextStart, int32 contextCount, float32 xOffset, float32 yOffset, bool isRtl, class Android.Graphics.Paint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Text.TextRunShaper.ShapeTextRun(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Boolean,Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="static member ShapeTextRun : char[] * int * int * int * int * single * single * bool * Android.Graphics.Paint -&gt; Android.Graphics.Text.PositionedGlyphs" Usage="Android.Graphics.Text.TextRunShaper.ShapeTextRun (text, start, count, contextStart, contextCount, xOffset, yOffset, isRtl, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shapeTextRun", "([CIIIIFFZLandroid/graphics/Paint;)Landroid/graphics/text/PositionedGlyphs;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shapeTextRun", "([CIIIIFFZLandroid/graphics/Paint;)Landroid/graphics/text/PositionedGlyphs;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Text.PositionedGlyphs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextCount" Type="System.Int32" />
        <Parameter Name="xOffset" Type="System.Single" />
        <Parameter Name="yOffset" Type="System.Single" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="text">a text buffer to be shaped</param>
        <param name="start">a start index of shaping target in the buffer.</param>
        <param name="count">a length of shaping target in the buffer.</param>
        <param name="contextStart">a start index of context used for shaping in the buffer.</param>
        <param name="contextCount">a length of context used for shaping in the buffer.</param>
        <param name="xOffset">an additional amount of x offset of the result glyphs.</param>
        <param name="yOffset">an additional amount of y offset of the result glyphs.</param>
        <param name="isRtl">true if this text is shaped for RTL direction, false otherwise.</param>
        <param name="paint">a paint used for shaping text.</param>
        <summary>Shape non-styled text.</summary>
        <returns>a shape result.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/text/TextRunShaper#shapeTextRun(char[],%20int,%20int,%20int,%20int,%20float,%20float,%20boolean,%20android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.graphics.text.TextRunShaper.shapeTextRun(char[], int, int, int, int, float, float, boolean, android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeTextRun">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Text.PositionedGlyphs ShapeTextRun (string text, int start, int count, int contextStart, int contextCount, float xOffset, float yOffset, bool isRtl, Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Text.PositionedGlyphs ShapeTextRun(string text, int32 start, int32 count, int32 contextStart, int32 contextCount, float32 xOffset, float32 yOffset, bool isRtl, class Android.Graphics.Paint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Text.TextRunShaper.ShapeTextRun(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Boolean,Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="static member ShapeTextRun : string * int * int * int * int * single * single * bool * Android.Graphics.Paint -&gt; Android.Graphics.Text.PositionedGlyphs" Usage="Android.Graphics.Text.TextRunShaper.ShapeTextRun (text, start, count, contextStart, contextCount, xOffset, yOffset, isRtl, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Graphics.Text.PositionedGlyphs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextCount" Type="System.Int32" />
        <Parameter Name="xOffset" Type="System.Single" />
        <Parameter Name="yOffset" Type="System.Single" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="text">a text buffer to be shaped. Any styled spans stored in this text are ignored.</param>
        <param name="start">a start index of shaping target in the buffer.</param>
        <param name="count">a length of shaping target in the buffer.</param>
        <param name="contextStart">a start index of context used for shaping in the buffer.</param>
        <param name="contextCount">a length of context used for shaping in the buffer.</param>
        <param name="xOffset">an additional amount of x offset of the result glyphs.</param>
        <param name="yOffset">an additional amount of y offset of the result glyphs.</param>
        <param name="isRtl">true if this text is shaped for RTL direction, false otherwise.</param>
        <param name="paint">a paint used for shaping text.</param>
        <summary>Shape non-styled text.</summary>
        <returns>a shape result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/text/TextRunShaper#shapeTextRun(java.lang.CharSequence,%20int,%20int,%20int,%20int,%20float,%20float,%20boolean,%20android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.graphics.text.TextRunShaper.shapeTextRun(java.lang.CharSequence, int, int, int, int, float, float, boolean, android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Text.TextRunShaper.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Text.TextRunShaper.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Text.TextRunShaper.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Text.TextRunShaper.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
