<Type Name="Transformer" FullName="Javax.Xml.Transform.Transformer">
  <TypeSignature Language="C#" Value="public abstract class Transformer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Transformer extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/transform/Transformer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>An instance of this abstract class can transform a
 source tree into a result tree.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An instance of this abstract class can transform a
 source tree into a result tree.

 </para>
      <para tool="javadoc-to-mdoc">An instance of this class can be obtained with the
 <c><see cref="M:Javax.Xml.Transform.TransformerFactory.NewTransformer" /></c>
 method. This instance may then be used to process XML from a
 variety of sources and write the transformation output to a
 variety of sinks.</para>
      <para tool="javadoc-to-mdoc">An object of this class may not be used in multiple threads
 running concurrently.  Different Transformers may be used
 concurrently by different threads.</para>
      <para tool="javadoc-to-mdoc">A <c>Transformer</c> may be used multiple times.  Parameters and
 output properties are preserved across transformations.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Transformer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor is protected on purpose.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Default constructor is protected on purpose.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#Transformer()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Transformer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearParameters">
      <MemberSignature Language="C#" Value="public abstract void ClearParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearParameters() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearParameters", "()V", "GetClearParametersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear all parameters set with setParameter.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clear all parameters set with setParameter.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#clearParameters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Javax.Xml.Transform.ErrorEventArgs&gt; Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Javax.Xml.Transform.ErrorEventArgs&gt; Error" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Javax.Xml.Transform.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorListener">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.IErrorListener ErrorListener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Transform.IErrorListener ErrorListener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getErrorListener", "()Ljavax/xml/transform/ErrorListener;", "GetGetErrorListenerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setErrorListener", "(Ljavax/xml/transform/ErrorListener;)V", "GetSetErrorListener_Ljavax_xml_transform_ErrorListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.IErrorListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the error event handler in effect for the transformation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#getErrorListener()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the error event handler in effect for the transformation.
 Implementations must provide a default error listener.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#setErrorListener(javax.xml.transform.ErrorListener)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the error event listener in effect for the transformation.</para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FatalError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Javax.Xml.Transform.FatalErrorEventArgs&gt; FatalError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Javax.Xml.Transform.FatalErrorEventArgs&gt; FatalError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Javax.Xml.Transform.FatalErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputProperty">
      <MemberSignature Language="C#" Value="public abstract string GetOutputProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetOutputProperty(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOutputProperty", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetOutputProperty_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A non-null String that specifies an output
 property name, which may be namespace qualified.</param>
        <summary>Get an output property that is in effect for the
 transformer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get an output property that is in effect for the
 transformer.  The property specified may be a property
 that was set with setOutputProperty, or it may be a
 property specified in the stylesheet.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#getOutputProperty(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the property is not supported.</exception>
        <altmember cref="T:Javax.Xml.Transform.OutputKeys" />
      </Docs>
    </Member>
    <Member MemberName="GetParameter">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object GetParameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetParameter(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParameter", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetParameter_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">of <c>Object</c> to get</param>
        <summary>Get a parameter that was explicitly set with setParameter.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a parameter that was explicitly set with setParameter.

 </para>
          <para tool="javadoc-to-mdoc">This method does not return a default parameter value, which
 cannot be determined until the node context is evaluated during
 the transformation process.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#getParameter(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OutputProperties">
      <MemberSignature Language="C#" Value="public abstract Java.Util.Properties OutputProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Properties OutputProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOutputProperties", "()Ljava/util/Properties;", "GetGetOutputPropertiesHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOutputProperties", "(Ljava/util/Properties;)V", "GetSetOutputProperties_Ljava_util_Properties_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Properties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#getOutputProperties()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Get a copy of the output properties for the transformation.</para>
          <para tool="javadoc-to-mdoc">The properties returned should contain properties set by the user,
 and properties set by the stylesheet, and these properties
 are "defaulted" by default properties specified by
 .  The properties that
 were specifically set by the user or the stylesheet should be in the base
 Properties list, while the XSLT default properties that were not
 specifically set should be the default Properties list.  Thus,
 getOutputProperties().getProperty(String key) will obtain any
 property in that was set by <c><see cref="M:Javax.Xml.Transform.Transformer.SetOutputProperty(System.String,System.String)" /></c>,
 <c><see cref="P:Javax.Xml.Transform.Transformer.OutputProperties" /></c>, in the stylesheet, <i>or</i> the default
 properties, while
 getOutputProperties().get(String key) will only retrieve properties
 that were explicitly set by <c><see cref="M:Javax.Xml.Transform.Transformer.SetOutputProperty(System.String,System.String)" /></c>,
 <c><see cref="P:Javax.Xml.Transform.Transformer.OutputProperties" /></c>, or in the stylesheet.</para>
          <para tool="javadoc-to-mdoc">Note that mutation of the Properties object returned will not
 effect the properties that the transformer contains.</para>
          <para tool="javadoc-to-mdoc">If any of the argument keys are not recognized and are not
 namespace qualified, the property will be ignored and not returned.
 In other words the behavior is not orthogonal with
 <c><see cref="P:Javax.Xml.Transform.Transformer.OutputProperties" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#setOutputProperties(java.util.Properties)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the output properties for the transformation.  These
 properties will override properties set in the Templates
 with xsl:output.

 
 An <c>IllegalArgumentException</c> is thrown  if any of the
 argument keys are not recognized and are not namespace qualified.</para>
          <para tool="javadoc-to-mdoc">If argument to this function is null, any properties
 previously set are removed, and the value will revert to the value
 defined in the templates object.</para>
          <para tool="javadoc-to-mdoc">Pass a qualified property key name as a two-part string, the namespace
 URI enclosed in curly braces ({}), followed by the local name. If the
 name has a null URL, the String only contain the local name. An
 application can safely check for a non-null URI by testing to see if the
 first character of the name is a '{' character.</para>
          <para tool="javadoc-to-mdoc">For example, if a URI and local name were obtained from an element
 defined with &lt;xyz:foo
 xmlns:xyz="http://xyz.foo.com/yada/baz.html"/&gt;,
 then the qualified name would be "{http://xyz.foo.com/yada/baz.html}foo".
 Note that no prefix is used.</para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="T:Javax.Xml.Transform.OutputKeys" />
        <altmember cref="T:Java.Util.Properties" />
        <altmember cref="T:Javax.Xml.Transform.OutputKeys" />
        <altmember cref="T:Java.Util.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Reset this <c>Transformer</c> to its original configuration.</para>
          <para tool="javadoc-to-mdoc">
            <c>Transformer</c> is reset to the same state as when it was created with
 <c><see cref="M:Javax.Xml.Transform.TransformerFactory.NewTransformer" /></c>,
 <c><see cref="M:Javax.Xml.Transform.TransformerFactory.NewTransformer(Javax.Xml.Transform.ISource)" /></c> or
 <c><see cref="M:Javax.Xml.Transform.ITemplates.NewTransformer" /></c>.
 <c>reset()</c> is designed to allow the reuse of existing <c>Transformer</c>s
 thus saving resources associated with the creation of new <c>Transformer</c>s.</para>
          <para tool="javadoc-to-mdoc">The reset <c>Transformer</c> is not guaranteed to have the same <c><see cref="T:Javax.Xml.Transform.IURIResolver" /></c>
 or <c><see cref="T:Javax.Xml.Transform.IErrorListener" /></c><c>Object</c>s, e.g. <c><see cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" /></c>.
 It is guaranteed to have a functionally equal <c>URIResolver</c>
 and <c>ErrorListener</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputProperty">
      <MemberSignature Language="C#" Value="public abstract void SetOutputProperty (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputProperty(string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutputProperty", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetOutputProperty_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A non-null String that specifies an output
 property name, which may be namespace qualified.</param>
        <param name="value">The non-null string value of the output property.</param>
        <summary>Set an output property that will be in effect for the
 transformation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set an output property that will be in effect for the
 transformation.

 </para>
          <para tool="javadoc-to-mdoc">Pass a qualified property name as a two-part string, the namespace URI
 enclosed in curly braces ({}), followed by the local name. If the
 name has a null URL, the String only contain the local name. An
 application can safely check for a non-null URI by testing to see if the
 first character of the name is a '{' character.</para>
          <para tool="javadoc-to-mdoc">For example, if a URI and local name were obtained from an element
 defined with &lt;xyz:foo
 xmlns:xyz="http://xyz.foo.com/yada/baz.html"/&gt;,
 then the qualified name would be "{http://xyz.foo.com/yada/baz.html}foo".
 Note that no prefix is used.</para>
          <para tool="javadoc-to-mdoc">The Properties object that was passed to <c><see cref="P:Javax.Xml.Transform.Transformer.OutputProperties" /></c>
 won't be effected by calling this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#setOutputProperty(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the property is not supported, and is
 not qualified with a namespace.</exception>
        <altmember cref="T:Javax.Xml.Transform.OutputKeys" />
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="C#" Value="public abstract void SetParameter (string name, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParameter(string name, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setParameter", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetParameter_Ljava_lang_String_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the parameter, which may begin with a
 namespace URI in curly braces ({}).</param>
        <param name="value">The value object.  This can be any valid Java object. It is
 up to the processor to provide the proper object coercion or to simply
 pass the object on for use in an extension.</param>
        <summary>Add a parameter for the transformation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a parameter for the transformation.

 </para>
          <para tool="javadoc-to-mdoc">Pass a qualified name as a two-part string, the namespace URI
 enclosed in curly braces ({}), followed by the local name. If the
 name has a null URL, the String only contain the local name. An
 application can safely check for a non-null URI by testing to see if the
 first character of the name is a '{' character.</para>
          <para tool="javadoc-to-mdoc">For example, if a URI and local name were obtained from an element
 defined with &lt;xyz:foo
 xmlns:xyz="http://xyz.foo.com/yada/baz.html"/&gt;,
 then the qualified name would be "{http://xyz.foo.com/yada/baz.html}foo".
 Note that no prefix is used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#setParameter(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">If value is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public abstract void Transform (Javax.Xml.Transform.ISource xmlSource, Javax.Xml.Transform.IResult outputTarget);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transform(class Javax.Xml.Transform.ISource xmlSource, class Javax.Xml.Transform.IResult outputTarget) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transform", "(Ljavax/xml/transform/Source;Ljavax/xml/transform/Result;)V", "GetTransform_Ljavax_xml_transform_Source_Ljavax_xml_transform_Result_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlSource" Type="Javax.Xml.Transform.ISource" />
        <Parameter Name="outputTarget" Type="Javax.Xml.Transform.IResult" />
      </Parameters>
      <Docs>
        <param name="xmlSource">The XML input to transform.</param>
        <param name="outputTarget">The <c>Result</c> of transforming the
   <c>xmlSource</c>.</param>
        <summary tool="true">
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Transform the XML <c>Source</c> to a <c>Result</c>.
 Specific transformation behavior is determined by the settings of the
 <c>TransformerFactory</c> in effect when the
 <c>Transformer</c> was instantiated and any modifications made to
 the <c>Transformer</c> instance.</para>
          <para tool="javadoc-to-mdoc">An empty <c>Source</c> is represented as an empty document
 as constructed by <c><see cref="M:Javax.Xml.Parsers.DocumentBuilder.NewDocument" /></c>.
 The result of transforming an empty <c>Source</c> depends on
 the transformation behavior; it is not always an empty
 <c>Result</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#transform(javax.xml.transform.Source, javax.xml.transform.Result)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerException">If an unrecoverable error occurs
   during the course of the transformation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="TransformAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TransformAsync (Javax.Xml.Transform.ISource xmlSource, Javax.Xml.Transform.IResult outputTarget);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task TransformAsync(class Javax.Xml.Transform.ISource xmlSource, class Javax.Xml.Transform.IResult outputTarget) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlSource" Type="Javax.Xml.Transform.ISource" />
        <Parameter Name="outputTarget" Type="Javax.Xml.Transform.IResult" />
      </Parameters>
      <Docs>
        <param name="xmlSource">To be added.</param>
        <param name="outputTarget">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="URIResolver">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.IURIResolver URIResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Transform.IURIResolver URIResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getURIResolver", "()Ljavax/xml/transform/URIResolver;", "GetGetURIResolverHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setURIResolver", "(Ljavax/xml/transform/URIResolver;)V", "GetSetURIResolver_Ljavax_xml_transform_URIResolver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.IURIResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get an object that will be used to resolve URIs used in
 document().</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#getURIResolver()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get an object that will be used to resolve URIs used in
 document().</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/Transformer.html#setURIResolver(javax.xml.transform.URIResolver)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set an object that will be used to resolve URIs used in
 document().

 </para>
          <para tool="javadoc-to-mdoc">If the resolver argument is null, the URIResolver value will
 be cleared and the transformer will no longer have a resolver.</para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Warning">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Javax.Xml.Transform.WarningEventArgs&gt; Warning;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Javax.Xml.Transform.WarningEventArgs&gt; Warning" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Javax.Xml.Transform.WarningEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
