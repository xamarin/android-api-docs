<Type Name="OutputKeys" FullName="Javax.Xml.Transform.OutputKeys">
  <TypeSignature Language="C#" Value="public class OutputKeys : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OutputKeys extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/transform/OutputKeys", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Provides string constants that can be used to set
 output properties for a Transformer, or to retrieve
 output properties from a Transformer or Templates object.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides string constants that can be used to set
 output properties for a Transformer, or to retrieve
 output properties from a Transformer or Templates object.
 </para>
      <para tool="javadoc-to-mdoc">All the fields in this class are read-only.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutputKeys (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CdataSectionElements">
      <MemberSignature Language="C#" Value="public const string CdataSectionElements;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CdataSectionElements" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CDATA_SECTION_ELEMENTS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>cdata-section-elements = <format type="text/html"><var>expanded names</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">cdata-section-elements = <format type="text/html"><var>expanded names</var></format>.

 </para>
          <para tool="javadoc-to-mdoc">
            <c>cdata-section-elements</c> specifies a whitespace delimited
 list of the names of elements whose text node children should be output
 using CDATA sections. Note that these names must use the format
 described in the section Qualfied Name Representation in
 <c><see cref="N:Javax.Xml.Transform" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#CDATA_SECTION_ELEMENTS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DoctypePublic">
      <MemberSignature Language="C#" Value="public const string DoctypePublic;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DoctypePublic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DOCTYPE_PUBLIC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>doctype-public = <format type="text/html"><var>string</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">doctype-public = <format type="text/html"><var>string</var></format>.
 </para>
          <para tool="javadoc-to-mdoc">See the documentation for the <c><see cref="F:Javax.Xml.Transform.OutputKeys.DoctypeSystem" /></c> property
 for a description of what the value of the key should be.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#DOCTYPE_PUBLIC" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DoctypeSystem">
      <MemberSignature Language="C#" Value="public const string DoctypeSystem;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DoctypeSystem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DOCTYPE_SYSTEM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>doctype-system = <format type="text/html"><var>string</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">doctype-system = <format type="text/html"><var>string</var></format>.
 </para>
          <para tool="javadoc-to-mdoc">
            <c>doctype-system</c> specifies the system identifier
 to be used in the document type declaration.</para>
          <para tool="javadoc-to-mdoc">If the doctype-system property is specified, the xml output method
 should output a document type declaration immediately before the first
 element. The name following &lt;!DOCTYPE should be the name of the first
 element. If doctype-public property is also specified, then the xml
 output method should output PUBLIC followed by the public identifier
 and then the system identifier; otherwise, it should output SYSTEM
 followed by the system identifier. The internal subset should be empty.
 The value of the doctype-public property should be ignored unless the doctype-system
 property is specified.</para>
          <para tool="javadoc-to-mdoc">If the doctype-public or doctype-system properties are specified,
 then the html output method should output a document type declaration
 immediately before the first element. The name following &lt;!DOCTYPE
 should be HTML or html. If the doctype-public property is specified,
 then the output method should output PUBLIC followed by the specified
 public identifier; if the doctype-system property is also specified,
 it should also output the specified system identifier following the
 public identifier. If the doctype-system property is specified but
 the doctype-public property is not specified, then the output method
 should output SYSTEM followed by the specified system identifier.</para>
          <para tool="javadoc-to-mdoc">
            <c>doctype-system</c> specifies the system identifier
 to be used in the document type declaration.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#DOCTYPE_SYSTEM" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public const string Encoding;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Encoding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENCODING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>encoding = <format type="text/html"><var>string</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">encoding = <format type="text/html"><var>string</var></format>.

 </para>
          <para tool="javadoc-to-mdoc">
            <c>encoding</c> specifies the preferred character
 encoding that the Transformer should use to encode sequences of
 characters as sequences of bytes. The value of the encoding property should be
 treated case-insensitively. The value must only contain characters in
 the range #x21 to #x7E (i.e., printable ASCII characters). The value
 should either be a <c>charset</c> registered with the Internet
 Assigned Numbers Authority ,
  or start with <c>X-</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#ENCODING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public const string Indent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Indent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INDENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>indent = "yes" | "no".</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">indent = "yes" | "no".

 </para>
          <para tool="javadoc-to-mdoc">
            <c>indent</c> specifies whether the Transformer may
 add additional whitespace when outputting the result tree; the value
 must be <c>yes</c> or <c>no</c>.  </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#INDENT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public const string MediaType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>media-type = <format type="text/html"><var>string</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">media-type = <format type="text/html"><var>string</var></format>.

 </para>
          <para tool="javadoc-to-mdoc">
            <c>media-type</c> specifies the media type (MIME
 content type) of the data that results from outputting the result
 tree. The <c>charset</c> parameter should not be specified
 explicitly; instead, when the top-level media type is
 <c>text</c>, a <c>charset</c> parameter should be added
 according to the character encoding actually used by the output
 method.  </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#MEDIA_TYPE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public const string Method;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Method" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("METHOD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>method = "xml" | "html" | "text" | <format type="text/html"><var>expanded name</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">method = "xml" | "html" | "text" | <format type="text/html"><var>expanded name</var></format>.

 </para>
          <para tool="javadoc-to-mdoc">The value of the method property identifies the overall method that
 should be used for outputting the result tree.  Other non-namespaced
 values may be used, such as "xhtml", but, if accepted, the handling
 of such values is implementation defined.  If any of the method values
 are not accepted and are not namespace qualified,
 then <c><see cref="M:Javax.Xml.Transform.Transformer.SetOutputProperty(System.String,System.String)" /></c>
 or <c><see cref="P:Javax.Xml.Transform.Transformer.OutputProperties" /></c> will
 throw a <c><see cref="T:Java.Lang.IllegalArgumentException" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#METHOD" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public const string OmitXmlDeclaration;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string OmitXmlDeclaration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OMIT_XML_DECLARATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>omit-xml-declaration = "yes" | "no".</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">omit-xml-declaration = "yes" | "no".

 </para>
          <para tool="javadoc-to-mdoc">
            <c>omit-xml-declaration</c> specifies whether the XSLT
 processor should output an XML declaration; the value must be
 <c>yes</c> or <c>no</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#OMIT_XML_DECLARATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Standalone">
      <MemberSignature Language="C#" Value="public const string Standalone;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Standalone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STANDALONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>standalone = "yes" | "no".</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">standalone = "yes" | "no".

 </para>
          <para tool="javadoc-to-mdoc">
            <c>standalone</c> specifies whether the Transformer
 should output a standalone document declaration; the value must be
 <c>yes</c> or <c>no</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#STANDALONE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public const string Version;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Version" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VERSION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>version = <format type="text/html"><var>nmtoken</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">version = <format type="text/html"><var>nmtoken</var></format>.

 </para>
          <para tool="javadoc-to-mdoc">
            <c>version</c> specifies the version of the output
 method.</para>
          <para tool="javadoc-to-mdoc">When the output method is "xml", the version value specifies the
 version of XML to be used for outputting the result tree. The default
 value for the xml output method is 1.0. When the output method is
 "html", the version value indicates the version of the HTML.
 The default value for the xml output method is 4.0, which specifies
 that the result should be output as HTML conforming to the HTML 4.0
 Recommendation [HTML].  If the output method is "text", the version
 property is ignored.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/OutputKeys.html#VERSION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
