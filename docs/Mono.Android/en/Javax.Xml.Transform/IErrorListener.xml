<Type Name="IErrorListener" FullName="Javax.Xml.Transform.IErrorListener">
  <TypeSignature Language="VB.NET" Value="Public Interface IErrorListener&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IErrorListener : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface IErrorListener : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IErrorListener implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Javax.Xml.Transform.IErrorListener" />
  <TypeSignature Language="F#" Value="type IErrorListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/xml/transform/ErrorListener", "", "Javax.Xml.Transform.IErrorListenerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/xml/transform/ErrorListener", "", "Javax.Xml.Transform.IErrorListenerInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>To provide customized error handling, implement this interface and
            use the <c>setErrorListener</c> method to register an instance of the
            implementation with the <c>javax.xml.transform.Transformer</c>.</summary>
    <remarks>
      <para>To provide customized error handling, implement this interface and
            use the <c>setErrorListener</c> method to register an instance of the
            implementation with the <c>javax.xml.transform.Transformer</c>.  The
            <c>Transformer</c> then reports all errors and warnings through this
            interface.</para>
      <para>If an application does &lt;em&gt;not&lt;/em&gt; register its own custom
            <c>ErrorListener</c>, the default <c>ErrorListener</c>
            is used which reports all warnings and errors to <c>System.err</c>
            and does not throw any <c>Exception</c>s.
            Applications are &lt;em&gt;strongly&lt;/em&gt; encouraged to register and use
            <c>ErrorListener</c>s that insure proper behavior for warnings and
            errors.</para>
      <para>For transformation errors, a <c>Transformer</c> must use this
            interface instead of throwing an <c>Exception</c>: it is up to the
            application to decide whether to throw an <c>Exception</c> for
            different types of errors and warnings.  Note however that the
            <c>Transformer</c> is not required to continue with the transformation
            after a call to <c>#fatalError(TransformerException exception)</c>.</para>
      <para>
        <c>Transformer</c>s may use this mechanism to report XML parsing
            errors as well as transformation errors.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/xml/transform/ErrorListener" title="Reference documentation">Java documentation for <code>javax.xml.transform.ErrorListener</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="Error">
      <MemberSignature Language="VB.NET" Value="Public Sub Error (exception As TransformerException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Error(Javax::Xml::Transform::TransformerException ^ exception);" />
      <MemberSignature Language="C#" Value="public void Error (Javax.Xml.Transform.TransformerException? exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Error(class Javax.Xml.Transform.TransformerException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Transform.IErrorListener.Error(Javax.Xml.Transform.TransformerException)" />
      <MemberSignature Language="F#" Value="abstract member Error : Javax.Xml.Transform.TransformerException -&gt; unit" Usage="iErrorListener.Error exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("error", "(Ljavax/xml/transform/TransformerException;)V", "GetError_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("error", "(Ljavax/xml/transform/TransformerException;)V", "GetError_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="Javax.Xml.Transform.TransformerException" />
      </Parameters>
      <Docs>
        <param name="exception">The error information encapsulated in a
                             transformer exception.</param>
        <summary>Receive notification of a recoverable error.</summary>
        <remarks>
          <para>Receive notification of a recoverable error.</para>
          <para>The transformer must continue to try and provide normal transformation
            after invoking this method.  It should still be possible for the
            application to process the document through to the end if no other errors
            are encountered.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/transform/ErrorListener#error(javax.xml.transform.TransformerException)" title="Reference documentation">Java documentation for <code>javax.xml.transform.ErrorListener.error(javax.xml.transform.TransformerException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerException">if the application
 chooses to discontinue the transformation.</exception>
        <altmember cref="T:Javax.Xml.Transform.TransformerException" />
      </Docs>
    </Member>
    <Member MemberName="FatalError">
      <MemberSignature Language="VB.NET" Value="Public Sub FatalError (exception As TransformerException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FatalError(Javax::Xml::Transform::TransformerException ^ exception);" />
      <MemberSignature Language="C#" Value="public void FatalError (Javax.Xml.Transform.TransformerException? exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FatalError(class Javax.Xml.Transform.TransformerException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Transform.IErrorListener.FatalError(Javax.Xml.Transform.TransformerException)" />
      <MemberSignature Language="F#" Value="abstract member FatalError : Javax.Xml.Transform.TransformerException -&gt; unit" Usage="iErrorListener.FatalError exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fatalError", "(Ljavax/xml/transform/TransformerException;)V", "GetFatalError_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fatalError", "(Ljavax/xml/transform/TransformerException;)V", "GetFatalError_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="Javax.Xml.Transform.TransformerException" />
      </Parameters>
      <Docs>
        <param name="exception">The error information encapsulated in a
               <c>TransformerException</c>.</param>
        <summary>Receive notification of a non-recoverable error.</summary>
        <remarks>
          <para>Receive notification of a non-recoverable error.</para>
          <para>The <c>Transformer</c> must continue to try and provide normal
            transformation after invoking this method.  It should still be possible for the
            application to process the document through to the end if no other errors
            are encountered, but there is no guarantee that the output will be
            useable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/transform/ErrorListener#fatalError(javax.xml.transform.TransformerException)" title="Reference documentation">Java documentation for <code>javax.xml.transform.ErrorListener.fatalError(javax.xml.transform.TransformerException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerException">if the application
 chooses to discontinue the transformation.</exception>
        <altmember cref="T:Javax.Xml.Transform.TransformerException" />
      </Docs>
    </Member>
    <Member MemberName="Warning">
      <MemberSignature Language="VB.NET" Value="Public Sub Warning (exception As TransformerException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warning(Javax::Xml::Transform::TransformerException ^ exception);" />
      <MemberSignature Language="C#" Value="public void Warning (Javax.Xml.Transform.TransformerException? exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Warning(class Javax.Xml.Transform.TransformerException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Xml.Transform.IErrorListener.Warning(Javax.Xml.Transform.TransformerException)" />
      <MemberSignature Language="F#" Value="abstract member Warning : Javax.Xml.Transform.TransformerException -&gt; unit" Usage="iErrorListener.Warning exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("warning", "(Ljavax/xml/transform/TransformerException;)V", "GetWarning_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("warning", "(Ljavax/xml/transform/TransformerException;)V", "GetWarning_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="Javax.Xml.Transform.TransformerException" />
      </Parameters>
      <Docs>
        <param name="exception">The warning information encapsulated in a
                             transformer exception.</param>
        <summary>Receive notification of a warning.</summary>
        <remarks>
          <para>Receive notification of a warning.</para>
          <para>
            <c>javax.xml.transform.Transformer</c> can use this method to report
            conditions that are not errors or fatal errors.  The default behavior
            is to take no action.</para>
          <para>After invoking this method, the Transformer must continue with
            the transformation. It should still be possible for the
            application to process the document through to the end.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/xml/transform/ErrorListener#warning(javax.xml.transform.TransformerException)" title="Reference documentation">Java documentation for <code>javax.xml.transform.ErrorListener.warning(javax.xml.transform.TransformerException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerException">if the application
 chooses to discontinue the transformation.</exception>
        <altmember cref="T:Javax.Xml.Transform.TransformerException" />
      </Docs>
    </Member>
  </Members>
</Type>
