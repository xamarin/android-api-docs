<Type Name="Animation" FullName="Android.Views.Animations.Animation">
  <TypeSignature Language="C#" Value="public abstract class Animation : Java.Lang.Object, IDisposable, Java.Lang.ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Animation extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Lang.ICloneable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/animation/Animation", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Abstraction for an Animation that can be applied to Views, Surfaces, or
 other objects.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Abstraction for an Animation that can be applied to Views, Surfaces, or
 other objects. See the <c><see cref="N:Android.View.Animation" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/animation/Animation.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Animation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new animation with a duration of 0ms, the default interpolator, with
 fillBefore set to true and fillAfter set to false
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new animation with a duration of 0ms, the default interpolator, with
 fillBefore set to true and fillAfter set to false
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#Animation()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Animation (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Creates a new animation whose parameters come from the specified context and
 attributes set.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new animation whose parameters come from the specified context and
 attributes set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#Animation(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Animation (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationEnd">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.Animations.Animation.AnimationEndEventArgs&gt; AnimationEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.Animations.Animation/AnimationEndEventArgs&gt; AnimationEnd" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.Animations.Animation+AnimationEndEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationRepeat">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.Animations.Animation.AnimationRepeatEventArgs&gt; AnimationRepeat;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.Animations.Animation/AnimationRepeatEventArgs&gt; AnimationRepeat" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.Animations.Animation+AnimationRepeatEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationStart">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.Animations.Animation.AnimationStartEventArgs&gt; AnimationStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.Animations.Animation/AnimationStartEventArgs&gt; AnimationStart" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.Animations.Animation+AnimationStartEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransformation">
      <MemberSignature Language="C#" Value="protected virtual void ApplyTransformation (float interpolatedTime, Android.Views.Animations.Transformation t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyTransformation(float32 interpolatedTime, class Android.Views.Animations.Transformation t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyTransformation", "(FLandroid/view/animation/Transformation;)V", "GetApplyTransformation_FLandroid_view_animation_Transformation_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interpolatedTime" Type="System.Single" />
        <Parameter Name="t" Type="Android.Views.Animations.Transformation" />
      </Parameters>
      <Docs>
        <param name="interpolatedTime">The value of the normalized time (0.0 to 1.0)
        after it has been run through the interpolation function.</param>
        <param name="t">The Transformation object to fill in with the current
        transforms.
</param>
        <summary>Helper for getTransformation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Helper for getTransformation. Subclasses should implement this to apply
 their transforms given an interpolation value.  Implementations of this
 method should always replace the specified Transformation or document
 they are doing otherwise.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#applyTransformation(float, android.view.animation.Transformation)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBackgroundColor", "()I", "GetGetBackgroundColorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBackgroundColor", "(I)V", "GetSetBackgroundColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the background color behind the animation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getBackgroundColor()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the background color behind the animation.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setBackgroundColor(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set background behind animation.</para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancel", "()V", "GetCancelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancel the animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancel the animation. Cancelling an animation invokes the animation
 listener, if set, to notify the end of the animation.
 
 If you cancel an animation manually, you must call <c><see cref="M:Android.Views.Animations.Animation.Reset" /></c>
 before starting the animation again.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#cancel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Views.Animations.Animation.Reset" />
        <altmember cref="M:Android.Views.Animations.Animation.Start" />
        <altmember cref="M:Android.Views.Animations.Animation.StartNow" />
      </Docs>
    </Member>
    <Member MemberName="ComputeDurationHint">
      <MemberSignature Language="C#" Value="public virtual long ComputeDurationHint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ComputeDurationHint() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeDurationHint", "()J", "GetComputeDurationHintHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compute a hint at how long the entire animation may last, in milliseconds.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Compute a hint at how long the entire animation may last, in milliseconds.
 Animations can be written to cause themselves to run for a different
 duration than what is computed here, but generally this should be
 accurate.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#computeDurationHint()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DetachWallpaper">
      <MemberSignature Language="C#" Value="public virtual bool DetachWallpaper { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DetachWallpaper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDetachWallpaper", "()Z", "GetGetDetachWallpaperHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDetachWallpaper", "(Z)V", "GetSetDetachWallpaper_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return value of <c><see cref="P:Android.Views.Animations.Animation.DetachWallpaper" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getDetachWallpaper()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return value of <c><see cref="P:Android.Views.Animations.Animation.DetachWallpaper" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setDetachWallpaper(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>If detachWallpaper is true, and this is a window animation of a window
 that has a wallpaper background, then the window will be detached from
 the wallpaper while it runs.  That is, the animation will only be applied
 to the window, and the wallpaper behind it will remain static.</para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual long Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDuration", "()J", "GetGetDurationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDuration", "(J)V", "GetSetDuration_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>How long this animation should last</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getDuration()" target="_blank">[Android Documentation]</a>
              <br />
            </format>How long this animation should last</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setDuration(long)" target="_blank">[Android Documentation]</a>
              <br />
            </format>How long this animation should last. The duration cannot be negative.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the duration is </exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the duration is </exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the duration is </exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the duration is </exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the duration is </exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the duration is </exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureInterpolator">
      <MemberSignature Language="C#" Value="protected virtual void EnsureInterpolator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInterpolator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ensureInterpolator", "()V", "GetEnsureInterpolatorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gurantees that this animation has an interpolator.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Gurantees that this animation has an interpolator. Will use
 a AccelerateDecelerateInterpolator is nothing else was specified.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#ensureInterpolator()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FillAfter">
      <MemberSignature Language="C#" Value="public virtual bool FillAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FillAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFillAfter", "()Z", "GetGetFillAfterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFillAfter", "(Z)V", "GetSetFillAfter_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If fillAfter is true, this animation will apply its transformation
 after the end time of the animation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getFillAfter()" target="_blank">[Android Documentation]</a>
              <br />
            </format>If fillAfter is true, this animation will apply its transformation
 after the end time of the animation.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setFillAfter(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>If fillAfter is true, the transformation that this animation performed
 will persist when it is finished. Defaults to false if not set.
 Note that this applies to individual animations and when using an <c><see cref="T:Android.Views.Animations.AnimationSet" /></c> to chain
 animations.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.Animation.FillEnabled" />
      </Docs>
    </Member>
    <Member MemberName="FillBefore">
      <MemberSignature Language="C#" Value="public virtual bool FillBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FillBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFillBefore", "()Z", "GetGetFillBeforeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFillBefore", "(Z)V", "GetSetFillBefore_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If fillBefore is true, this animation will apply its transformation
 before the start time of the animation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getFillBefore()" target="_blank">[Android Documentation]</a>
              <br />
            </format>If fillBefore is true, this animation will apply its transformation
 before the start time of the animation. If fillBefore is false and
 <c><see cref="P:Android.Views.Animations.Animation.FillEnabled" /></c> is true, the transformation will not be applied until
 the start time of the animation.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setFillBefore(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>If fillBefore is true, this animation will apply its transformation
 before the start time of the animation. Defaults to true if
 <c><see cref="P:Android.Views.Animations.Animation.FillEnabled" /></c> is not set to true.
 Note that this applies when using an <c><see cref="T:Android.Views.Animations.AnimationSet" /></c> to chain
 animations. The transformation is not applied before the AnimationSet
 itself starts.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.Animation.FillEnabled" />
      </Docs>
    </Member>
    <Member MemberName="FillEnabled">
      <MemberSignature Language="C#" Value="public virtual bool FillEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FillEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFillEnabled", "()Z", "GetIsFillEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFillEnabled", "(Z)V", "GetSetFillEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If fillEnabled is true, this animation will apply the value of fillBefore.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#isFillEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>If fillEnabled is true, this animation will apply the value of fillBefore.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setFillEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>If fillEnabled is true, the animation will apply the value of fillBefore.
 Otherwise, fillBefore is ignored and the animation
 transformation is always applied until the animation ends.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Views.Animations.Animation.FillBefore" />
        <altmember cref="P:Android.Views.Animations.Animation.FillAfter" />
      </Docs>
    </Member>
    <Member MemberName="GetTransformation">
      <MemberSignature Language="C#" Value="public virtual bool GetTransformation (long currentTime, Android.Views.Animations.Transformation outTransformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetTransformation(int64 currentTime, class Android.Views.Animations.Transformation outTransformation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransformation", "(JLandroid/view/animation/Transformation;)Z", "GetGetTransformation_JLandroid_view_animation_Transformation_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentTime" Type="System.Int64" />
        <Parameter Name="outTransformation" Type="Android.Views.Animations.Transformation" />
      </Parameters>
      <Docs>
        <param name="currentTime">Where we are in the animation. This is wall clock time.</param>
        <param name="outTransformation">A transformation object that is provided by the
        caller and will be filled in by the animation.</param>
        <summary>Gets the transformation to apply at a specified point in time.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the transformation to apply at a specified point in time. Implementations of this
 method should always replace the specified Transformation or document they are doing
 otherwise.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getTransformation(long, android.view.animation.Transformation)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetTransformation">
      <MemberSignature Language="C#" Value="public virtual bool GetTransformation (long currentTime, Android.Views.Animations.Transformation outTransformation, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetTransformation(int64 currentTime, class Android.Views.Animations.Transformation outTransformation, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransformation", "(JLandroid/view/animation/Transformation;F)Z", "GetGetTransformation_JLandroid_view_animation_Transformation_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentTime" Type="System.Int64" />
        <Parameter Name="outTransformation" Type="Android.Views.Animations.Transformation" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="currentTime">Where we are in the animation. This is wall clock time.</param>
        <param name="outTransformation">A transformation object that is provided by the
        caller and will be filled in by the animation.</param>
        <param name="scale">Scaling factor to apply to any inputs to the transform operation, such
        pivot points being rotated or scaled around.</param>
        <summary>Gets the transformation to apply at a specified point in time.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the transformation to apply at a specified point in time. Implementations of this
 method should always replace the specified Transformation or document they are doing
 otherwise.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getTransformation(long, android.view.animation.Transformation, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasEnded">
      <MemberSignature Language="C#" Value="public virtual bool HasEnded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEnded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasEnded", "()Z", "GetHasEndedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Indicates whether this animation has ended or not.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#hasEnded()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasStarted">
      <MemberSignature Language="C#" Value="public virtual bool HasStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasStarted", "()Z", "GetHasStartedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Indicates whether this animation has started or not.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#hasStarted()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Infinite">
      <MemberSignature Language="C#" Value="public const int Infinite = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Infinite = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INFINITE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Repeat the animation indefinitely.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Repeat the animation indefinitely.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#INFINITE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (int width, int height, int parentWidth, int parentHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(int32 width, int32 height, int32 parentWidth, int32 parentHeight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initialize", "(IIII)V", "GetInitialize_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="parentWidth" Type="System.Int32" />
        <Parameter Name="parentHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Width of the object being animated</param>
        <param name="height">Height of the object being animated</param>
        <param name="parentWidth">Width of the animated object's parent</param>
        <param name="parentHeight">Height of the animated object's parent
</param>
        <summary>Initialize this animation with the dimensions of the object being
 animated as well as the objects parents.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initialize this animation with the dimensions of the object being
 animated as well as the objects parents. (This is to support animation
 sizes being specified relative to these dimensions.)

 </para>
          <para tool="javadoc-to-mdoc">Objects that interpret Animations should call this method when
 the sizes of the object being animated and its parent are known, and
 before calling <c><see cref="M:Android.Views.Animations.Animation.GetTransformation(System.Int64,Android.Views.Animations.Transformation)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#initialize(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Interpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.IInterpolator Interpolator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.IInterpolator Interpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInterpolator", "()Landroid/view/animation/Interpolator;", "GetGetInterpolatorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setInterpolator", "(Landroid/view/animation/Interpolator;)V", "GetSetInterpolator_Landroid_view_animation_Interpolator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.IInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the acceleration curve type for this animation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getInterpolator()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the acceleration curve type for this animation.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setInterpolator(android.view.animation.Interpolator)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the acceleration curve for this animation. Defaults to a linear
 interpolation.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public virtual bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInitialized", "()Z", "GetIsInitializedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether or not the animation has been initialized.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Whether or not the animation has been initialized.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#isInitialized()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Animations.Animation.Initialize(System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RepeatCount">
      <MemberSignature Language="C#" Value="public virtual int RepeatCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRepeatCount", "()I", "GetGetRepeatCountHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRepeatCount", "(I)V", "GetSetRepeatCount_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines how many times the animation should repeat.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getRepeatCount()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Defines how many times the animation should repeat. The default value
 is 0.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setRepeatCount(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets how many times the animation should be repeated. If the repeat
 count is 0, the animation is never repeated. If the repeat count is
 greater than 0 or <c><see cref="F:Android.Views.Animations.Animation.Infinite" /></c>, the repeat mode will be taken
 into account. The repeat count is 0 by default.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RepeatMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.RepeatMode RepeatMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.Animations.RepeatMode RepeatMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRepeatMode", "()I", "GetGetRepeatModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.RepeatMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines what this animation should do when it reaches the end.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getRepeatMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Defines what this animation should do when it reaches the end.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setRepeatMode(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Defines what this animation should do when it reaches the end. This
 setting is applied only when the repeat count is either greater than
 0 or <c><see cref="F:Android.Views.Animations.Animation.Infinite" /></c>. Defaults to <c><see cref="!:Android.Views.Animations.Animation.RESTART" /></c>.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset the initialization state of this animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Reset the initialization state of this animation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Animations.Animation.Initialize(System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveSize">
      <MemberSignature Language="C#" Value="protected virtual float ResolveSize (Android.Views.Animations.Dimension type, float value, int size, int parentSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float32 ResolveSize(valuetype Android.Views.Animations.Dimension type, float32 value, int32 size, int32 parentSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveSize", "(IFII)F", "GetResolveSize_IFIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Views.Animations.Dimension">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="parentSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">One of Animation.ABSOLUTE, Animation.RELATIVE_TO_SELF, or
             Animation.RELATIVE_TO_PARENT.</param>
        <param name="value">The dimension associated with the type parameter</param>
        <param name="size">The size of the object being animated</param>
        <param name="parentSize">The size of the parent of the object being animated</param>
        <summary>Convert the information in the description of a size to an actual
 dimension</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Convert the information in the description of a size to an actual
 dimension</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#resolveSize(int, float, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestrictDuration">
      <MemberSignature Language="C#" Value="public virtual void RestrictDuration (long durationMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestrictDuration(int64 durationMillis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restrictDuration", "(J)V", "GetRestrictDuration_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="durationMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="durationMillis">The maximum duration the animation is allowed
 to run.
</param>
        <summary>Ensure that the duration that this animation will run is not longer
 than <format type="text/html"><var>durationMillis</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Ensure that the duration that this animation will run is not longer
 than <format type="text/html"><var>durationMillis</var></format>.  In addition to adjusting the duration
 itself, this ensures that the repeat count also will not make it run
 longer than the given time.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#restrictDuration(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScaleCurrentDuration">
      <MemberSignature Language="C#" Value="public virtual void ScaleCurrentDuration (float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleCurrentDuration(float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scaleCurrentDuration", "(F)V", "GetScaleCurrentDuration_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scale">The amount to scale the duration.
</param>
        <summary>How much to scale the duration by.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">How much to scale the duration by.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#scaleCurrentDuration(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScaleFactor">
      <MemberSignature Language="C#" Value="protected virtual float ScaleFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScaleFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScaleFactor", "()F", "GetGetScaleFactorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The scale factor is set by the call to <c>getTransformation</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The scale factor is set by the call to <c>getTransformation</c>. Overrides of 
 <c><see cref="M:Android.Views.Animations.Animation.GetTransformation(System.Int64,Android.Views.Animations.Transformation,Android.Views.Animations.Transformation)" /></c> will get this value
 directly. Overrides of <c><see cref="M:Android.Views.Animations.Animation.ApplyTransformation(System.Single,Android.Views.Animations.Transformation)" /></c> can
 call this method to get the value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getScaleFactor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetAnimationListener">
      <MemberSignature Language="C#" Value="public virtual void SetAnimationListener (Android.Views.Animations.Animation.IAnimationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAnimationListener(class Android.Views.Animations.Animation/IAnimationListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAnimationListener", "(Landroid/view/animation/Animation$AnimationListener;)V", "GetSetAnimationListener_Landroid_view_animation_Animation_AnimationListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.Animations.Animation+IAnimationListener" />
      </Parameters>
      <Docs>
        <param name="listener">the animation listener to be notified
</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Binds an animation listener to this animation. The animation listener
 is notified of animation events such as the end of the animation or the
 repetition of the animation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setAnimationListener(android.view.animation.Animation.AnimationListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="C#" Value="public virtual void SetInterpolator (Android.Content.Context context, int resID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInterpolator(class Android.Content.Context context, int32 resID) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInterpolator", "(Landroid/content/Context;I)V", "GetSetInterpolator_Landroid_content_Context_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">The application environment</param>
        <param name="resID">The resource identifier of the interpolator to load</param>
        <summary>Sets the acceleration curve for this animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the acceleration curve for this animation. The interpolator is loaded as
 a resource from the specified context.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setInterpolator(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("start", "()V", "GetStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convenience method to start the animation the first time
 <c><see cref="M:Android.Views.Animations.Animation.GetTransformation(System.Int64,Android.Views.Animations.Transformation)" /></c> is invoked.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method to start the animation the first time
 <c><see cref="M:Android.Views.Animations.Animation.GetTransformation(System.Int64,Android.Views.Animations.Transformation)" /></c> is invoked.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#start()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartNow">
      <MemberSignature Language="C#" Value="public virtual void StartNow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartNow() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startNow", "()V", "GetStartNowHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convenience method to start the animation at the current time in
 milliseconds.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method to start the animation at the current time in
 milliseconds.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#startNow()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartOffset">
      <MemberSignature Language="C#" Value="public virtual long StartOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StartOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStartOffset", "()J", "GetGetStartOffsetHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStartOffset", "(J)V", "GetSetStartOffset_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When this animation should start, relative to StartTime</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getStartOffset()" target="_blank">[Android Documentation]</a>
              <br />
            </format>When this animation should start, relative to StartTime</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setStartOffset(long)" target="_blank">[Android Documentation]</a>
              <br />
            </format>When this animation should start relative to the start time. This is most
 useful when composing complex animations using an <c><see cref="T:Android.Views.Animations.AnimationSet" /></c>
 where some of the animations components start at different times.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartOnFirstFrame">
      <MemberSignature Language="C#" Value="public const int StartOnFirstFrame = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 StartOnFirstFrame = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("START_ON_FIRST_FRAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Can be used as the start time to indicate the start time should be the current
 time when <c><see cref="M:Android.Views.Animations.Animation.GetTransformation(System.Int64,Android.Views.Animations.Transformation)" /></c> is invoked for the
 first animation frame.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Can be used as the start time to indicate the start time should be the current
 time when <c><see cref="M:Android.Views.Animations.Animation.GetTransformation(System.Int64,Android.Views.Animations.Transformation)" /></c> is invoked for the
 first animation frame. This can is useful for short animations.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#START_ON_FIRST_FRAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartTime">
      <MemberSignature Language="C#" Value="public virtual long StartTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStartTime", "()J", "GetGetStartTimeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStartTime", "(J)V", "GetSetStartTime_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When this animation should start.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getStartTime()" target="_blank">[Android Documentation]</a>
              <br />
            </format>When this animation should start. If the animation has not startet yet,
 this method might return <c><see cref="F:Android.Views.Animations.Animation.StartOnFirstFrame" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setStartTime(long)" target="_blank">[Android Documentation]</a>
              <br />
            </format>When this animation should start. When the start time is set to
 <c><see cref="F:Android.Views.Animations.Animation.StartOnFirstFrame" /></c>, the animation will start the first time
 <c><see cref="M:Android.Views.Animations.Animation.GetTransformation(System.Int64,Android.Views.Animations.Transformation)" /></c> is invoked. The time passed
 to this method should be obtained by calling
 <c><see cref="M:Android.Views.Animations.AnimationUtils.CurrentAnimationTimeMillis" /></c> instead of
 <c><see cref="M:Java.Lang.JavaSystem.CurrentTimeMillis" /></c>.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeBounds">
      <MemberSignature Language="C#" Value="public virtual bool WillChangeBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillChangeBounds() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("willChangeBounds", "()Z", "GetWillChangeBoundsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Indicates whether or not this animation will affect the bounds of the
 animated view. For instance, a fade animation will not affect the bounds
 whereas a 200% scale animation will.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#willChangeBounds()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WillChangeTransformationMatrix">
      <MemberSignature Language="C#" Value="public virtual bool WillChangeTransformationMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillChangeTransformationMatrix() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("willChangeTransformationMatrix", "()Z", "GetWillChangeTransformationMatrixHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Indicates whether or not this animation will affect the transformation
 matrix. For instance, a fade animation will not affect the matrix whereas
 a scale animation will.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#willChangeTransformationMatrix()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ZAdjustment">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.ContentZorder ZAdjustment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.Animations.ContentZorder ZAdjustment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getZAdjustment", "()I", "GetGetZAdjustmentHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setZAdjustment", "(I)V", "GetSetZAdjustment_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.ContentZorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Z ordering mode to use while running the animation as
 previously set by <c><see cref="P:Android.Views.Animations.Animation.ZAdjustment" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#getZAdjustment()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the Z ordering mode to use while running the animation as
 previously set by <c><see cref="P:Android.Views.Animations.Animation.ZAdjustment" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/Animation.html#setZAdjustment(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the Z ordering mode to use while running the animation.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
