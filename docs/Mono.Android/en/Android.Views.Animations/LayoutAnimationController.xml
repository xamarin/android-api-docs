<Type Name="LayoutAnimationController" FullName="Android.Views.Animations.LayoutAnimationController">
  <TypeSignature Language="VB.NET" Value="Public Class LayoutAnimationController&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutAnimationController : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class LayoutAnimationController : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LayoutAnimationController extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.Animations.LayoutAnimationController" />
  <TypeSignature Language="F#" Value="type LayoutAnimationController = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/animation/LayoutAnimationController", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/animation/LayoutAnimationController", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A layout animation controller is used to animate the children of a layout or a view
            group.</summary>
    <remarks>
      <para>A layout animation controller is used to animate the children of a layout or a view
            group. Each child uses the same animation but for every one of
            them, the animation starts at a different time. A layout animation controller
            is used by <c>android.view.ViewGroup</c> to compute the delay by which each
            child's animation start must be offset. The delay is computed by using
            characteristics of each child, like its index in the view group.
            
            This standard implementation computes the delay by multiplying a fixed
            amount of miliseconds by the index of the child in its parent view group.
            Subclasses are supposed to override
            <c>#getDelayForView(android.view.View)</c> to implement a different way
            of computing the delay. For instance, a
            <c>android.view.animation.GridLayoutAnimationController</c> will compute the
            delay based on the column and row indices of the child in its parent view
            group.
            
            Information used to compute the animation delay of each child are stored
            in an instance of
            <c>android.view.animation.LayoutAnimationController.AnimationParameters</c>,
            itself stored in the <c>android.view.ViewGroup.LayoutParams</c> of the view.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (animation As Animation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LayoutAnimationController(Android::Views::Animations::Animation ^ animation);" />
      <MemberSignature Language="C#" Value="public LayoutAnimationController (Android.Views.Animations.Animation? animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.Animations.Animation animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.#ctor(Android.Views.Animations.Animation)" />
      <MemberSignature Language="F#" Value="new Android.Views.Animations.LayoutAnimationController : Android.Views.Animations.Animation -&gt; Android.Views.Animations.LayoutAnimationController" Usage="new Android.Views.Animations.LayoutAnimationController animation" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/view/animation/Animation;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/view/animation/Animation;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.Animations.Animation" />
      </Parameters>
      <Docs>
        <param name="animation">the animation to use on each child of the view group</param>
        <summary>Creates a new layout animation controller with a delay of 50%
            and the specified animation.</summary>
        <remarks>
          <para>Creates a new layout animation controller with a delay of 50%
            and the specified animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#LayoutAnimationController(android.view.animation.Animation)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.LayoutAnimationController(android.view.animation.Animation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context, attrs As IAttributeSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LayoutAnimationController(Android::Content::Context ^ context, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public LayoutAnimationController (Android.Content.Context? context, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.#ctor(Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="new Android.Views.Animations.LayoutAnimationController : Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Views.Animations.LayoutAnimationController" Usage="new Android.Views.Animations.LayoutAnimationController (context, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">the Context the view  group is running in, through which
                   it can access the resources</param>
        <param name="attrs">the attributes of the XML tag that is inflating the
                   layout animation controller</param>
        <summary>Creates a new layout animation controller from external resources.</summary>
        <remarks>
          <para>Creates a new layout animation controller from external resources.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#LayoutAnimationController(android.content.Context,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.LayoutAnimationController(android.content.Context, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (animation As Animation, delay As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LayoutAnimationController(Android::Views::Animations::Animation ^ animation, float delay);" />
      <MemberSignature Language="C#" Value="public LayoutAnimationController (Android.Views.Animations.Animation? animation, float delay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.Animations.Animation animation, float32 delay) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.#ctor(Android.Views.Animations.Animation,System.Single)" />
      <MemberSignature Language="F#" Value="new Android.Views.Animations.LayoutAnimationController : Android.Views.Animations.Animation * single -&gt; Android.Views.Animations.LayoutAnimationController" Usage="new Android.Views.Animations.LayoutAnimationController (animation, delay)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/view/animation/Animation;F)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/view/animation/Animation;F)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.Animations.Animation" />
        <Parameter Name="delay" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="animation">the animation to use on each child of the view group</param>
        <param name="delay">the delay by which each child's animation must be offset</param>
        <summary>Creates a new layout animation controller with the specified delay
            and the specified animation.</summary>
        <remarks>
          <para>Creates a new layout animation controller with the specified delay
            and the specified animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#LayoutAnimationController(android.view.animation.Animation,%20float)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.LayoutAnimationController(android.view.animation.Animation, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutAnimationController(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected LayoutAnimationController (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.Animations.LayoutAnimationController : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.Animations.LayoutAnimationController" Usage="new Android.Views.Animations.LayoutAnimationController (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Animation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Animation As Animation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Animations::Animation ^ Animation { Android::Views::Animations::Animation ^ get(); void set(Android::Views::Animations::Animation ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.Animation? Animation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.Animation Animation" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.Animation" />
      <MemberSignature Language="F#" Value="member this.Animation : Android.Views.Animations.Animation with get, set" Usage="Android.Views.Animations.LayoutAnimationController.Animation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAnimation", "()Landroid/view/animation/Animation;", "GetGetAnimationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAnimation", "()Landroid/view/animation/Animation;", "GetGetAnimationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAnimation", "(Landroid/view/animation/Animation;)V", "GetSetAnimation_Landroid_view_animation_Animation_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAnimation", "(Landroid/view/animation/Animation;)V", "GetSetAnimation_Landroid_view_animation_Animation_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="animation">the animation to run on each child of the view group</param>
        <summary>Returns the animation applied to each child of the view group on which
            this controller is set. -or- Sets the animation to be run on each child of the view group on which
            this layout animation controller is .</summary>
        <value>an <c>android.view.animation.Animation</c> instance</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the animation applied to each child of the view group on which
            this controller is set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#getAnimation()" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.getAnimation()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the animation to be run on each child of the view group on which
            this layout animation controller is .</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#setAnimation(android.view.animation.Animation)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.setAnimation(android.view.animation.Animation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.SetAnimation(Android.Content.Context, System.Int32)" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Animation" />
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Delay As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float Delay { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Delay" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.Delay" />
      <MemberSignature Language="F#" Value="member this.Delay : single with get, set" Usage="Android.Views.Animations.LayoutAnimationController.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDelay", "()F", "GetGetDelayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDelay", "()F", "GetGetDelayHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDelay", "(F)V", "GetSetDelay_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDelay", "(F)V", "GetSetDelay_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="delay">a fraction of the animation duration</param>
        <summary>Returns the delay by which the children's animation are offset. -or- Sets the delay, as a fraction of the animation duration, by which the
            children's animations are offset.</summary>
        <value>a fraction of the animation duration</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the delay by which the children's animation are offset. The
            delay is expressed as a fraction of the animation duration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#getDelay()" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.getDelay()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the delay, as a fraction of the animation duration, by which the
            children's animations are offset. The general formula is:</para>
          <code lang="text/java">child animation delay = child index * delay * animation duration
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#setDelay(float)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.setDelay(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Delay" />
      </Docs>
    </Member>
    <Member MemberName="GetAnimationForView">
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationForView (view As View) As Animation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Views::Animations::Animation ^ GetAnimationForView(Android::Views::View ^ view);" />
      <MemberSignature Language="C#" Value="public Android.Views.Animations.Animation? GetAnimationForView (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Animations.Animation GetAnimationForView(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.GetAnimationForView(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.GetAnimationForView : Android.Views.View -&gt; Android.Views.Animations.Animation" Usage="layoutAnimationController.GetAnimationForView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAnimationForView", "(Landroid/view/View;)Landroid/view/animation/Animation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAnimationForView", "(Landroid/view/View;)Landroid/view/animation/Animation;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">the view to animate</param>
        <summary>Returns the animation to be applied to the specified view.</summary>
        <returns>an animation delayed by the number of milliseconds returned by
                    <c>#getDelayForView(android.view.View)</c></returns>
        <remarks>
          <para>Returns the animation to be applied to the specified view. The returned
            animation is delayed by an offset computed according to the information
            provided by
            <c>android.view.animation.LayoutAnimationController.AnimationParameters</c>.
            This method is called by view groups to obtain the animation to set on
            a specific child.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#getAnimationForView(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.getAnimationForView(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Delay" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.GetDelayForView(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelayForView">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDelayForView (view As View) As Long" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual long GetDelayForView(Android::Views::View ^ view);" />
      <MemberSignature Language="C#" Value="protected virtual long GetDelayForView (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int64 GetDelayForView(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.GetDelayForView(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member GetDelayForView : Android.Views.View -&gt; int64&#xA;override this.GetDelayForView : Android.Views.View -&gt; int64" Usage="layoutAnimationController.GetDelayForView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDelayForView", "(Landroid/view/View;)J", "GetGetDelayForView_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDelayForView", "(Landroid/view/View;)J", "GetGetDelayForView_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">the view for which to obtain the animation's delay</param>
        <summary>Returns the amount of milliseconds by which the specified view's
            animation must be delayed or offset.</summary>
        <returns>a delay in milliseconds</returns>
        <remarks>
          <para>Returns the amount of milliseconds by which the specified view's
            animation must be delayed or offset. Subclasses should override this
            method to return a suitable value.
            
            This implementation returns <c>child animation delay</c>
            milliseconds where:</para>
          <code lang="text/java">child animation delay = child index * delay
            </code>
          <para>The index is retrieved from the
            <c>android.view.animation.LayoutAnimationController.AnimationParameters</c>
            found in the view's <c>android.view.ViewGroup.LayoutParams</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#getDelayForView(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.getDelayForView(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.GetAnimationForView(Android.Views.View)" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Delay" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.GetTransformedIndex(.AnimationParameters)" />
      </Docs>
    </Member>
    <Member MemberName="GetTransformedIndex">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTransformedIndex (params As LayoutAnimationController.AnimationParameters) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int GetTransformedIndex(Android::Views::Animations::LayoutAnimationController::AnimationParameters ^ params);" />
      <MemberSignature Language="C#" Value="protected virtual int GetTransformedIndex (Android.Views.Animations.LayoutAnimationController.AnimationParameters? params);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetTransformedIndex(class Android.Views.Animations.LayoutAnimationController/AnimationParameters params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.GetTransformedIndex(Android.Views.Animations.LayoutAnimationController.AnimationParameters)" />
      <MemberSignature Language="F#" Value="abstract member GetTransformedIndex : Android.Views.Animations.LayoutAnimationController.AnimationParameters -&gt; int&#xA;override this.GetTransformedIndex : Android.Views.Animations.LayoutAnimationController.AnimationParameters -&gt; int" Usage="layoutAnimationController.GetTransformedIndex params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTransformedIndex", "(Landroid/view/animation/LayoutAnimationController$AnimationParameters;)I", "GetGetTransformedIndex_Landroid_view_animation_LayoutAnimationController_AnimationParameters_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTransformedIndex", "(Landroid/view/animation/LayoutAnimationController$AnimationParameters;)I", "GetGetTransformedIndex_Landroid_view_animation_LayoutAnimationController_AnimationParameters_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.Views.Animations.LayoutAnimationController+AnimationParameters" />
      </Parameters>
      <Docs>
        <param name="params">the animation parameters containing the index</param>
        <summary>Transforms the index stored in
            <c>android.view.animation.LayoutAnimationController.AnimationParameters</c>
            by the order returned by <c>#getOrder()</c>.</summary>
        <returns>a transformed index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#getTransformedIndex(android.view.animation.AnimationParameters)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.getTransformedIndex(android.view.animation.AnimationParameters)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Interpolator">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Interpolator As IInterpolator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Animations::IInterpolator ^ Interpolator { Android::Views::Animations::IInterpolator ^ get(); void set(Android::Views::Animations::IInterpolator ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.IInterpolator? Interpolator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.IInterpolator Interpolator" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.Interpolator" />
      <MemberSignature Language="F#" Value="member this.Interpolator : Android.Views.Animations.IInterpolator with get, set" Usage="Android.Views.Animations.LayoutAnimationController.Interpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInterpolator", "()Landroid/view/animation/Interpolator;", "GetGetInterpolatorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInterpolator", "()Landroid/view/animation/Interpolator;", "GetGetInterpolatorHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setInterpolator", "(Landroid/view/animation/Interpolator;)V", "GetSetInterpolator_Landroid_view_animation_Interpolator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setInterpolator", "(Landroid/view/animation/Interpolator;)V", "GetSetInterpolator_Landroid_view_animation_Interpolator_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.IInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="interpolator">the interpolator</param>
        <summary>Returns the interpolator used to interpolate the delays between the
            children. -or- Sets the interpolator used to interpolate the delays between the
            children.</summary>
        <value>an <c>android.view.animation.Interpolator</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the interpolator used to interpolate the delays between the
            children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#getInterpolator()" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.getInterpolator()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the interpolator used to interpolate the delays between the
            children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#setInterpolator(android.view.animation.Interpolator)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.setInterpolator(android.view.animation.Interpolator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Interpolator" />
      </Docs>
    </Member>
    <Member MemberName="IsDone">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDone { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsDone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDone" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.IsDone" />
      <MemberSignature Language="F#" Value="member this.IsDone : bool" Usage="Android.Views.Animations.LayoutAnimationController.IsDone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDone", "()Z", "GetIsDoneHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDone", "()Z", "GetIsDoneHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the layout animation is over or not.</summary>
        <value>true if all of the children's animations are over, false otherwise</value>
        <remarks>
          <para>Indicates whether the layout animation is over or not. A layout animation
            is considered done when the animation with the longest delay is done.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#isDone()" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.isDone()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.Animations.LayoutAnimationController.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MAnimation">
      <MemberSignature Language="VB.NET" Value="Protected Property MAnimation As Animation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Android::Views::Animations::Animation ^ MAnimation { Android::Views::Animations::Animation ^ get(); void set(Android::Views::Animations::Animation ^ value); };" />
      <MemberSignature Language="C#" Value="protected Android.Views.Animations.Animation? MAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.Animation MAnimation" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.MAnimation" />
      <MemberSignature Language="F#" Value="member this.MAnimation : Android.Views.Animations.Animation with get, set" Usage="Android.Views.Animations.LayoutAnimationController.MAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mAnimation")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mAnimation")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The animation applied on each child of the view group on which this
            layout animation controller is set.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The animation applied on each child of the view group on which this
            layout animation controller is set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#mAnimation" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.mAnimation</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MInterpolator">
      <MemberSignature Language="VB.NET" Value="Protected Property MInterpolator As IInterpolator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Android::Views::Animations::IInterpolator ^ MInterpolator { Android::Views::Animations::IInterpolator ^ get(); void set(Android::Views::Animations::IInterpolator ^ value); };" />
      <MemberSignature Language="C#" Value="protected Android.Views.Animations.IInterpolator? MInterpolator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.IInterpolator MInterpolator" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.MInterpolator" />
      <MemberSignature Language="F#" Value="member this.MInterpolator : Android.Views.Animations.IInterpolator with get, set" Usage="Android.Views.Animations.LayoutAnimationController.MInterpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mInterpolator")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mInterpolator")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.IInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The interpolator used to interpolate the delays.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The interpolator used to interpolate the delays.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#mInterpolator" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.mInterpolator</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MRandomizer">
      <MemberSignature Language="VB.NET" Value="Protected Property MRandomizer As Random" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Java::Util::Random ^ MRandomizer { Java::Util::Random ^ get(); void set(Java::Util::Random ^ value); };" />
      <MemberSignature Language="C#" Value="protected Java.Util.Random? MRandomizer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Random MRandomizer" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.MRandomizer" />
      <MemberSignature Language="F#" Value="member this.MRandomizer : Java.Util.Random with get, set" Usage="Android.Views.Animations.LayoutAnimationController.MRandomizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mRandomizer")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mRandomizer")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Random</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The randomizer used when the order is set to random.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The randomizer used when the order is set to random. Subclasses should
            use this object to avoid creating their own.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#mRandomizer" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.mRandomizer</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Order As DelayOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Animations::DelayOrder Order { Android::Views::Animations::DelayOrder get(); void set(Android::Views::Animations::DelayOrder value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.DelayOrder Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.Animations.DelayOrder Order" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.Order" />
      <MemberSignature Language="F#" Value="member this.Order : Android.Views.Animations.DelayOrder with get, set" Usage="Android.Views.Animations.LayoutAnimationController.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOrder", "()I", "GetGetOrderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOrder", "()I", "GetGetOrderHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOrder", "(I)V", "GetSetOrder_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOrder", "(I)V", "GetSetOrder_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.DelayOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="order">one of <c>#ORDER_NORMAL</c>, <c>#ORDER_REVERSE</c> or
                   <c>#ORDER_RANDOM</c></param>
        <summary>Returns the order used to compute the delay of each child's animation. -or- Sets the order used to compute the delay of each child's animation.</summary>
        <value>one of <c>#ORDER_NORMAL</c>, <c>#ORDER_REVERSE</c> or
                    <c>#ORDER_RANDOM</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the order used to compute the delay of each child's animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#getOrder()" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.getOrder()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the order used to compute the delay of each child's animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#setOrder(int)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.setOrder(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetAnimation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAnimation (context As Context, resourceID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAnimation(Android::Content::Context ^ context, int resourceID);" />
      <MemberSignature Language="C#" Value="public virtual void SetAnimation (Android.Content.Context? context, int resourceID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAnimation(class Android.Content.Context context, int32 resourceID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.SetAnimation(Android.Content.Context,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAnimation : Android.Content.Context * int -&gt; unit&#xA;override this.SetAnimation : Android.Content.Context * int -&gt; unit" Usage="layoutAnimationController.SetAnimation (context, resourceID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAnimation", "(Landroid/content/Context;I)V", "GetSetAnimation_Landroid_content_Context_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAnimation", "(Landroid/content/Context;I)V", "GetSetAnimation_Landroid_content_Context_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resourceID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">the context from which the animation must be inflated</param>
        <param name="resourceID">the resource identifier of the animation</param>
        <summary>Sets the animation to be run on each child of the view group on which
            this layout animation controller is .</summary>
        <remarks>
          <para>Sets the animation to be run on each child of the view group on which
            this layout animation controller is .</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#setAnimation(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.setAnimation(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Animation" />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetInterpolator (context As Context, resourceID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetInterpolator(Android::Content::Context ^ context, int resourceID);" />
      <MemberSignature Language="C#" Value="public virtual void SetInterpolator (Android.Content.Context? context, int resourceID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInterpolator(class Android.Content.Context context, int32 resourceID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.SetInterpolator(Android.Content.Context,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetInterpolator : Android.Content.Context * int -&gt; unit&#xA;override this.SetInterpolator : Android.Content.Context * int -&gt; unit" Usage="layoutAnimationController.SetInterpolator (context, resourceID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInterpolator", "(Landroid/content/Context;I)V", "GetSetInterpolator_Landroid_content_Context_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInterpolator", "(Landroid/content/Context;I)V", "GetSetInterpolator_Landroid_content_Context_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resourceID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">the context from which the interpolator must be inflated</param>
        <param name="resourceID">the resource identifier of the interpolator</param>
        <summary>Sets the interpolator used to interpolate the delays between the
            children.</summary>
        <remarks>
          <para>Sets the interpolator used to interpolate the delays between the
            children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#setInterpolator(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.setInterpolator(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Interpolator" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Start();" />
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="layoutAnimationController.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the animation.</summary>
        <remarks>
          <para>Starts the animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#start()" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.Animations.LayoutAnimationController.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Animations.LayoutAnimationController.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.Animations.LayoutAnimationController.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillOverlap">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WillOverlap () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WillOverlap();" />
      <MemberSignature Language="C#" Value="public virtual bool WillOverlap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillOverlap() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Animations.LayoutAnimationController.WillOverlap" />
      <MemberSignature Language="F#" Value="abstract member WillOverlap : unit -&gt; bool&#xA;override this.WillOverlap : unit -&gt; bool" Usage="layoutAnimationController.WillOverlap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("willOverlap", "()Z", "GetWillOverlapHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("willOverlap", "()Z", "GetWillOverlapHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether two children's animations will overlap.</summary>
        <returns>true if animations will overlap, false otherwise</returns>
        <remarks>
          <para>Indicates whether two children's animations will overlap. Animations
            overlap when the delay is lower than 100% (or 1.0).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/animation/LayoutAnimationController#willOverlap()" title="Reference documentation">Java documentation for <code>android.view.animation.LayoutAnimationController.willOverlap()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
