<Type Name="Linkify+IMatchFilter" FullName="Android.Text.Util.Linkify+IMatchFilter">
  <TypeSignature Language="VB.NET" Value="Public Interface Linkify.IMatchFilter&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public: interface class Linkify::IMatchFilter : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface Linkify.IMatchFilter : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit Linkify/IMatchFilter implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.Util.Linkify.IMatchFilter" />
  <TypeSignature Language="F#" Value="type Linkify.IMatchFilter = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/util/Linkify$MatchFilter", "", "Android.Text.Util.Linkify/IMatchFilterInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/text/util/Linkify$MatchFilter", "", "Android.Text.Util.Linkify/IMatchFilterInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>MatchFilter enables client code to have more control over
             what is allowed to match and become a link, and what is not.</summary>
    <remarks>
      <para>MatchFilter enables client code to have more control over
             what is allowed to match and become a link, and what is not.</para>
      <para>For example:  when matching web URLs you would like things like
             http://www.example.com to match, as well as just example.com itelf.
             However, you would not want to match against the domain in
             support</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/util/Linkify.MatchFilter" title="Reference documentation">Java documentation for <code>android.text.util.Linkify.MatchFilter</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="AcceptMatch">
      <MemberSignature Language="VB.NET" Value="Public Function AcceptMatch (s As ICharSequence, start As Integer, end As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AcceptMatch(Java::Lang::ICharSequence ^ s, int start, int end);" />
      <MemberSignature Language="C#" Value="public bool AcceptMatch (Java.Lang.ICharSequence? s, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AcceptMatch(class Java.Lang.ICharSequence s, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Util.Linkify.IMatchFilter.AcceptMatch(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member AcceptMatch : Java.Lang.ICharSequence * int * int -&gt; bool" Usage="iMatchFilter.AcceptMatch (s, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptMatch", "(Ljava/lang/CharSequence;II)Z", "GetAcceptMatch_Ljava_lang_CharSequence_IIHandler:Android.Text.Util.Linkify/IMatchFilterInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acceptMatch", "(Ljava/lang/CharSequence;II)Z", "GetAcceptMatch_Ljava_lang_CharSequence_IIHandler:Android.Text.Util.Linkify/IMatchFilterInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">The body of text against which the pattern
                             was matched</param>
        <param name="start">The index of the first character in s that was
                             matched by the pattern - inclusive</param>
        <param name="end">The index of the last character in s that was
                             matched - exclusive</param>
        <summary>Examines the character span matched by the pattern and determines
             if the match should be turned into an actionable link.</summary>
        <returns>Whether this match should be turned into a link</returns>
        <remarks>
          <para>Examines the character span matched by the pattern and determines
             if the match should be turned into an actionable link.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/util/Linkify.MatchFilter#acceptMatch(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.util.Linkify.MatchFilter.acceptMatch(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
