<Type Name="IHttpClientConnection" FullName="Org.Apache.Http.IHttpClientConnection">
  <TypeSignature Language="F#" Value="type IHttpClientConnection = interface&#xA;    interface IHttpConnection&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <TypeSignature Language="C#" Value="public interface IHttpClientConnection : IDisposable, Java.Interop.IJavaPeerable, Org.Apache.Http.IHttpConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpClientConnection implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.Apache.Http.IHttpConnection, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Apache.Http.IHttpClientConnection" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Apache.Http.IHttpConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/apache/http/HttpClientConnection", "", "Org.Apache.Http.IHttpClientConnectionInvoker")]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("This class is obsoleted in this android platform")]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An HTTP connection for use on the client side.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/apache/http/HttpClientConnection" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="iHttpClientConnection.Flush " />
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.IHttpClientConnection.Flush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "()V", "GetFlushHandler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes out all pending buffered data over the open connection.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="IsResponseAvailable">
      <MemberSignature Language="F#" Value="abstract member IsResponseAvailable : int -&gt; bool" Usage="iHttpClientConnection.IsResponseAvailable timeout" />
      <MemberSignature Language="C#" Value="public bool IsResponseAvailable (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsResponseAvailable(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.IHttpClientConnection.IsResponseAvailable(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isResponseAvailable", "(I)Z", "GetIsResponseAvailable_IHandler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">the maximum time in milliseconds to wait for data</param>
        <summary>Checks if response data is available from the connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error happens on the connection
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveResponseEntity">
      <MemberSignature Language="F#" Value="abstract member ReceiveResponseEntity : Org.Apache.Http.IHttpResponse -&gt; unit" Usage="iHttpClientConnection.ReceiveResponseEntity response" />
      <MemberSignature Language="C#" Value="public void ReceiveResponseEntity (Org.Apache.Http.IHttpResponse? response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveResponseEntity(class Org.Apache.Http.IHttpResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.IHttpClientConnection.ReceiveResponseEntity(Org.Apache.Http.IHttpResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("receiveResponseEntity", "(Lorg/apache/http/HttpResponse;)V", "GetReceiveResponseEntity_Lorg_apache_http_HttpResponse_Handler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Org.Apache.Http.IHttpResponse" />
      </Parameters>
      <Docs>
        <param name="response">the response to attach the entity to</param>
        <summary>Receives the next response entity available from this connection and
 attaches it to an existing HttpResponse object.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveResponseHeader">
      <MemberSignature Language="F#" Value="abstract member ReceiveResponseHeader : unit -&gt; Org.Apache.Http.IHttpResponse" Usage="iHttpClientConnection.ReceiveResponseHeader " />
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IHttpResponse? ReceiveResponseHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IHttpResponse ReceiveResponseHeader() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.IHttpClientConnection.ReceiveResponseHeader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("receiveResponseHeader", "()Lorg/apache/http/HttpResponse;", "GetReceiveResponseHeaderHandler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receives the request line and headers of the next response available from
 this connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="SendRequestEntity">
      <MemberSignature Language="F#" Value="abstract member SendRequestEntity : Org.Apache.Http.IHttpEntityEnclosingRequest -&gt; unit" Usage="iHttpClientConnection.SendRequestEntity request" />
      <MemberSignature Language="C#" Value="public void SendRequestEntity (Org.Apache.Http.IHttpEntityEnclosingRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendRequestEntity(class Org.Apache.Http.IHttpEntityEnclosingRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.IHttpClientConnection.SendRequestEntity(Org.Apache.Http.IHttpEntityEnclosingRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendRequestEntity", "(Lorg/apache/http/HttpEntityEnclosingRequest;)V", "GetSendRequestEntity_Lorg_apache_http_HttpEntityEnclosingRequest_Handler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpEntityEnclosingRequest" />
      </Parameters>
      <Docs>
        <param name="request">the request whose entity to send.</param>
        <summary>Sends the request entity over the connection.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="SendRequestHeader">
      <MemberSignature Language="F#" Value="abstract member SendRequestHeader : Org.Apache.Http.IHttpRequest -&gt; unit" Usage="iHttpClientConnection.SendRequestHeader request" />
      <MemberSignature Language="C#" Value="public void SendRequestHeader (Org.Apache.Http.IHttpRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendRequestHeader(class Org.Apache.Http.IHttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.IHttpClientConnection.SendRequestHeader(Org.Apache.Http.IHttpRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendRequestHeader", "(Lorg/apache/http/HttpRequest;)V", "GetSendRequestHeader_Lorg_apache_http_HttpRequest_Handler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
      </Parameters>
      <Docs>
        <param name="request">the request whose headers to send.</param>
        <summary>Sends the request line and all headers over the connection.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
  </Members>
</Type>
