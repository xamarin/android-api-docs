<Type Name="CameraManager" FullName="Android.Hardware.Camera2.CameraManager">
  <TypeSignature Language="F#" Value="type CameraManager = class&#xA;    inherit Object" />
  <TypeSignature Language="C#" Value="public sealed class CameraManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CameraManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Hardware.Camera2.CameraManager" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/hardware/camera2/CameraManager", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>A system service manager for detecting, characterizing, and connecting to
            <c>CameraDevice CameraDevices</c>.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConcurrentCameraIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Collections.Generic.ICollection&lt;string&gt;&gt; ConcurrentCameraIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Collections.Generic.ICollection`1&lt;string&gt;&gt; ConcurrentCameraIds" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraManager.ConcurrentCameraIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getConcurrentCameraIds", "()Ljava/util/Set;", "", ApiSince=30)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Collections.Generic.ICollection&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the set of combinations of currently connected camera device identifiers, which
            support configuring camera device sessions concurrently.</summary>
        <value>The set of combinations of currently connected camera devices, that may have
                    sessions configured concurrently. The set of combinations will be empty if no such
                    combinations are supported by the camera subsystem.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getConcurrentCameraIds()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getConcurrentCameraIds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCameraCharacteristics">
      <MemberSignature Language="F#" Value="member this.GetCameraCharacteristics : string -&gt; Android.Hardware.Camera2.CameraCharacteristics" Usage="cameraManager.GetCameraCharacteristics cameraId" />
      <MemberSignature Language="C#" Value="public Android.Hardware.Camera2.CameraCharacteristics GetCameraCharacteristics (string cameraId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Hardware.Camera2.CameraCharacteristics GetCameraCharacteristics(string cameraId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.GetCameraCharacteristics(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCameraCharacteristics", "(Ljava/lang/String;)Landroid/hardware/camera2/CameraCharacteristics;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CameraCharacteristics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cameraId">The id of the camera device to query. This could be either a standalone
            camera ID which can be directly opened by <c>#openCamera</c>, or a physical camera ID that
            can only used as part of a logical multi-camera.</param>
        <summary>Query the capabilities of a camera device.</summary>
        <returns>The properties of the given camera</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getCameraCharacteristics(java.lang.String)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getCameraCharacteristics(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the cameraId does not match any
         known camera device.</exception>
        <exception cref="T:Android.Hardware.Camera2.CameraAccessException">if the camera device has been disconnected.</exception>
        <altmember cref="M:Android.Hardware.Camera2.CameraManager.GetCameraIdList" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.SetCameraDisabled(Android.Content.ComponentName, System.Boolean)" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="GetCameraExtensionCharacteristics">
      <MemberSignature Language="C#" Value="public Android.Hardware.Camera2.CameraExtensionCharacteristics GetCameraExtensionCharacteristics (string cameraId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Hardware.Camera2.CameraExtensionCharacteristics GetCameraExtensionCharacteristics(string cameraId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.GetCameraExtensionCharacteristics(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCameraExtensionCharacteristics", "(Ljava/lang/String;)Landroid/hardware/camera2/CameraExtensionCharacteristics;", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CameraExtensionCharacteristics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cameraId">The id of the camera device to query. This must be a standalone
            camera ID which can be directly opened by <c>#openCamera</c>.</param>
        <summary>Query the camera extension capabilities of a camera device.</summary>
        <returns>The properties of the given camera</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getCameraExtensionCharacteristics(java.lang.String)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getCameraExtensionCharacteristics(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCameraIdList">
      <MemberSignature Language="F#" Value="member this.GetCameraIdList : unit -&gt; string[]" Usage="cameraManager.GetCameraIdList " />
      <MemberSignature Language="C#" Value="public string[] GetCameraIdList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetCameraIdList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.GetCameraIdList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCameraIdList", "()[Ljava/lang/String;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the list of currently connected camera devices by identifier, including
            cameras that may be in use by other camera API clients.</summary>
        <returns>The list of currently connected camera devices.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getCameraIdList()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getCameraIdList()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Hardware.Camera2.CameraAccessException" />
      </Docs>
    </Member>
    <Member MemberName="IsConcurrentSessionConfigurationSupported">
      <MemberSignature Language="C#" Value="public bool IsConcurrentSessionConfigurationSupported (System.Collections.Generic.IDictionary&lt;string,Android.Hardware.Camera2.Params.SessionConfiguration&gt; cameraIdAndSessionConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsConcurrentSessionConfigurationSupported(class System.Collections.Generic.IDictionary`2&lt;string, class Android.Hardware.Camera2.Params.SessionConfiguration&gt; cameraIdAndSessionConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.IsConcurrentSessionConfigurationSupported(System.Collections.Generic.IDictionary{System.String,Android.Hardware.Camera2.Params.SessionConfiguration})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isConcurrentSessionConfigurationSupported", "(Ljava/util/Map;)Z", "", ApiSince=30)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.CAMERA")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraIdAndSessionConfig" Type="System.Collections.Generic.IDictionary&lt;System.String,Android.Hardware.Camera2.Params.SessionConfiguration&gt;" />
      </Parameters>
      <Docs>
        <param name="cameraIdAndSessionConfig">To be added.</param>
        <summary>Checks whether the provided set of camera devices and their corresponding
            <c>SessionConfiguration</c> can be configured concurrently.</summary>
        <returns>
          <c>true</c> if the given combination of session configurations and corresponding
                                 camera ids are concurrently supported by the camera sub-system,
                    <c>false</c> otherwise OR if the set of camera devices provided is not a subset of
                                  those returned by <c>#getConcurrentCameraIds</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#isConcurrentSessionConfigurationSupported(java.util.Map)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.isConcurrentSessionConfigurationSupported(java.util.Map)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Hardware.Camera2.CameraManager.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenCamera">
      <MemberSignature Language="F#" Value="member this.OpenCamera : string * Android.Hardware.Camera2.CameraDevice.StateCallback * Android.OS.Handler -&gt; unit" Usage="cameraManager.OpenCamera (cameraId, callback, handler)" />
      <MemberSignature Language="C#" Value="public void OpenCamera (string cameraId, Android.Hardware.Camera2.CameraDevice.StateCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenCamera(string cameraId, class Android.Hardware.Camera2.CameraDevice/StateCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.OpenCamera(System.String,Android.Hardware.Camera2.CameraDevice.StateCallback,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openCamera", "(Ljava/lang/String;Landroid/hardware/camera2/CameraDevice$StateCallback;Landroid/os/Handler;)V", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.CAMERA")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraDevice+StateCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="cameraId">The unique identifier of the camera device to open</param>
        <param name="callback">The callback which is invoked once the camera is opened</param>
        <param name="handler">The handler on which the callback should be invoked, or
             <c>null</c> to use the current thread's <see cref="T:Android.OS.Looper" />.</param>
        <summary>Open a connection to a camera with the given ID.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Hardware.Camera2.CameraAccessException">if the camera is disabled by device policy,
 has been disconnected, or is being used by a higher-priority camera API client.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if cameraId or the callback was null,
 or the cameraId does not match any currently or previously available
 camera device.</exception>
        <exception cref="T:Java.Lang.SecurityException">if the application does not have permission to
 access the camera</exception>
        <altmember cref="M:Android.Hardware.Camera2.CameraManager.GetCameraIdList" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.SetCameraDisabled(Android.Content.ComponentName, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OpenCamera">
      <MemberSignature Language="C#" Value="public void OpenCamera (string cameraId, Java.Util.Concurrent.IExecutor executor, Android.Hardware.Camera2.CameraDevice.StateCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenCamera(string cameraId, class Java.Util.Concurrent.IExecutor executor, class Android.Hardware.Camera2.CameraDevice/StateCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.OpenCamera(System.String,Java.Util.Concurrent.IExecutor,Android.Hardware.Camera2.CameraDevice.StateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openCamera", "(Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraDevice$StateCallback;)V", "", ApiSince=28)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.CAMERA")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraDevice+StateCallback" />
      </Parameters>
      <Docs>
        <param name="cameraId">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAvailabilityCallback">
      <MemberSignature Language="F#" Value="member this.RegisterAvailabilityCallback : Android.Hardware.Camera2.CameraManager.AvailabilityCallback * Android.OS.Handler -&gt; unit" Usage="cameraManager.RegisterAvailabilityCallback (callback, handler)" />
      <MemberSignature Language="C#" Value="public void RegisterAvailabilityCallback (Android.Hardware.Camera2.CameraManager.AvailabilityCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAvailabilityCallback(class Android.Hardware.Camera2.CameraManager/AvailabilityCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.RegisterAvailabilityCallback(Android.Hardware.Camera2.CameraManager.AvailabilityCallback,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAvailabilityCallback", "(Landroid/hardware/camera2/CameraManager$AvailabilityCallback;Landroid/os/Handler;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+AvailabilityCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">the new callback to send camera availability notices to</param>
        <param name="handler">The handler on which the callback should be invoked, or <c>null</c> to use
                        the current thread's <c>android.os.Looper looper</c>.</param>
        <summary>Register a callback to be notified about camera device availability.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the handler is <c>null</c> but the current thread has
             no looper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterAvailabilityCallback">
      <MemberSignature Language="C#" Value="public void RegisterAvailabilityCallback (Java.Util.Concurrent.IExecutor executor, Android.Hardware.Camera2.CameraManager.AvailabilityCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAvailabilityCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Hardware.Camera2.CameraManager/AvailabilityCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.RegisterAvailabilityCallback(Java.Util.Concurrent.IExecutor,Android.Hardware.Camera2.CameraManager.AvailabilityCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAvailabilityCallback", "(Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraManager$AvailabilityCallback;)V", "", ApiSince=28)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+AvailabilityCallback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">the new callback to send camera availability notices to</param>
        <param name="handler">The handler on which the callback should be invoked, or <c>null</c> to use
                        the current thread's <c>android.os.Looper looper</c>.</param>
        <summary>Register a callback to be notified about camera device availability.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterTorchCallback">
      <MemberSignature Language="F#" Value="member this.RegisterTorchCallback : Android.Hardware.Camera2.CameraManager.TorchCallback * Android.OS.Handler -&gt; unit" Usage="cameraManager.RegisterTorchCallback (callback, handler)" />
      <MemberSignature Language="C#" Value="public void RegisterTorchCallback (Android.Hardware.Camera2.CameraManager.TorchCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterTorchCallback(class Android.Hardware.Camera2.CameraManager/TorchCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.RegisterTorchCallback(Android.Hardware.Camera2.CameraManager.TorchCallback,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerTorchCallback", "(Landroid/hardware/camera2/CameraManager$TorchCallback;Landroid/os/Handler;)V", "", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+TorchCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">The new callback to send torch mode status to</param>
        <param name="handler">The handler on which the callback should be invoked, or <c>null</c> to use
                        the current thread's <c>android.os.Looper looper</c>.</param>
        <summary>Register a callback to be notified about torch mode status.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#registerTorchCallback(android.hardware.camera2.TorchCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.registerTorchCallback(android.hardware.camera2.TorchCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterTorchCallback">
      <MemberSignature Language="C#" Value="public void RegisterTorchCallback (Java.Util.Concurrent.IExecutor executor, Android.Hardware.Camera2.CameraManager.TorchCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterTorchCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Hardware.Camera2.CameraManager/TorchCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.RegisterTorchCallback(Java.Util.Concurrent.IExecutor,Android.Hardware.Camera2.CameraManager.TorchCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerTorchCallback", "(Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraManager$TorchCallback;)V", "", ApiSince=28)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+TorchCallback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">The new callback to send torch mode status to</param>
        <param name="handler">The handler on which the callback should be invoked, or <c>null</c> to use
                        the current thread's <c>android.os.Looper looper</c>.</param>
        <summary>Register a callback to be notified about torch mode status.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#registerTorchCallback(android.hardware.camera2.TorchCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.registerTorchCallback(android.hardware.camera2.TorchCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTorchMode">
      <MemberSignature Language="F#" Value="member this.SetTorchMode : string * bool -&gt; unit" Usage="cameraManager.SetTorchMode (cameraId, enabled)" />
      <MemberSignature Language="C#" Value="public void SetTorchMode (string cameraId, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTorchMode(string cameraId, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.SetTorchMode(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTorchMode", "(Ljava/lang/String;Z)V", "", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cameraId">The unique identifier of the camera device that the flash unit belongs to.</param>
        <param name="enabled">The desired state of the torch mode for the target camera device. Set to
                        <c>true</c> to turn on the torch mode. Set to <c>false</c> to turn off the
                        torch mode.</param>
        <summary>Set the flash unit's torch mode of the camera of the given ID without opening the camera
            device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#setTorchMode(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.setTorchMode(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Hardware.Camera2.CameraManager.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Hardware.Camera2.CameraManager.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAvailabilityCallback">
      <MemberSignature Language="F#" Value="member this.UnregisterAvailabilityCallback : Android.Hardware.Camera2.CameraManager.AvailabilityCallback -&gt; unit" Usage="cameraManager.UnregisterAvailabilityCallback callback" />
      <MemberSignature Language="C#" Value="public void UnregisterAvailabilityCallback (Android.Hardware.Camera2.CameraManager.AvailabilityCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterAvailabilityCallback(class Android.Hardware.Camera2.CameraManager/AvailabilityCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.UnregisterAvailabilityCallback(Android.Hardware.Camera2.CameraManager.AvailabilityCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAvailabilityCallback", "(Landroid/hardware/camera2/CameraManager$AvailabilityCallback;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+AvailabilityCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to remove from the notification list</param>
        <summary>Remove a previously-added callback; the callback will no longer receive connection and
            disconnection callbacks.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#unregisterAvailabilityCallback(android.hardware.camera2.AvailabilityCallback)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.unregisterAvailabilityCallback(android.hardware.camera2.AvailabilityCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterTorchCallback">
      <MemberSignature Language="F#" Value="member this.UnregisterTorchCallback : Android.Hardware.Camera2.CameraManager.TorchCallback -&gt; unit" Usage="cameraManager.UnregisterTorchCallback callback" />
      <MemberSignature Language="C#" Value="public void UnregisterTorchCallback (Android.Hardware.Camera2.CameraManager.TorchCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterTorchCallback(class Android.Hardware.Camera2.CameraManager/TorchCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.UnregisterTorchCallback(Android.Hardware.Camera2.CameraManager.TorchCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterTorchCallback", "(Landroid/hardware/camera2/CameraManager$TorchCallback;)V", "", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+TorchCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to remove from the notification list</param>
        <summary>Remove a previously-added callback; the callback will no longer receive torch mode status
            callbacks.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#unregisterTorchCallback(android.hardware.camera2.TorchCallback)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.unregisterTorchCallback(android.hardware.camera2.TorchCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
