<Type Name="CameraManager" FullName="Android.Hardware.Camera2.CameraManager">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CameraManager&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class CameraManager sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class CameraManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CameraManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Hardware.Camera2.CameraManager" />
  <TypeSignature Language="F#" Value="type CameraManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/hardware/camera2/CameraManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/hardware/camera2/CameraManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>A system service manager for detecting, characterizing, and connecting to
            <c>CameraDevice CameraDevices</c>.</summary>
    <remarks>
      <para>A system service manager for detecting, characterizing, and connecting to
            <c>CameraDevice CameraDevices</c>.</para>
      <para>For more details about communicating with camera devices, read the Camera
            developer guide or the <c>android.hardware.camera2 camera2</c>
            package documentation.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConcurrentCameraIds">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConcurrentCameraIds As ICollection(Of ICollection(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Collections::Generic::ICollection&lt;System::String ^&gt; ^&gt; ^ ConcurrentCameraIds { System::Collections::Generic::ICollection&lt;System::Collections::Generic::ICollection&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Collections.Generic.ICollection&lt;string&gt;&gt; ConcurrentCameraIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Collections.Generic.ICollection`1&lt;string&gt;&gt; ConcurrentCameraIds" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraManager.ConcurrentCameraIds" />
      <MemberSignature Language="F#" Value="member this.ConcurrentCameraIds : System.Collections.Generic.ICollection&lt;System.Collections.Generic.ICollection&lt;string&gt;&gt;" Usage="Android.Hardware.Camera2.CameraManager.ConcurrentCameraIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getConcurrentCameraIds", "()Ljava/util/Set;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getConcurrentCameraIds", "()Ljava/util/Set;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Collections.Generic.ICollection&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the set of combinations of currently connected camera device identifiers, which
            support configuring camera device sessions concurrently.</summary>
        <value>The set of combinations of currently connected camera devices, that may have
                    sessions configured concurrently. The set of combinations will be empty if no such
                    combinations are supported by the camera subsystem.</value>
        <remarks>
          <para>Return the set of combinations of currently connected camera device identifiers, which
            support configuring camera device sessions concurrently.</para>
          <para>The devices in these combinations can be concurrently configured by the same
            client camera application. Using these camera devices concurrently by two different
            applications is not guaranteed to be supported, however.</para>
          <para>For concurrent operation, in chronological order :
            &lt;ul&gt;
            &lt;li&gt; Applications must first close any open cameras that have sessions configured, using
              <c>CameraDevice#close</c>. &lt;/li&gt;
            &lt;li&gt; All camera devices intended to be operated concurrently, must be opened using
              <c>#openCamera</c>, before configuring sessions on any of the camera devices.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Each device in a combination, is guaranteed to support stream combinations which may be
            obtained by querying <c>#getCameraCharacteristics</c> for the key
            <c>android.hardware.camera2.CameraCharacteristics#SCALER_MANDATORY_CONCURRENT_STREAM_COMBINATIONS</c>.</para>
          <para>For concurrent operation, if a camera device has a non null zoom ratio range as specified
            by
            <c>android.hardware.camera2.CameraCharacteristics#CONTROL_ZOOM_RATIO_RANGE</c>,
            its complete zoom ratio range may not apply. Applications can use
            <c>android.hardware.camera2.CaptureRequest#CONTROL_ZOOM_RATIO</c> &gt;=1 and  &lt;=
            <c>android.hardware.camera2.CameraCharacteristics#SCALER_AVAILABLE_MAX_DIGITAL_ZOOM</c>
            during concurrent operation.</para>
          <para />
          <para>The set of combinations may include camera devices that may be in use by other camera API
            clients.</para>
          <para>Concurrent camera extension sessions <c>CameraExtensionSession</c> are not currently
            supported.</para>
          <para>The set of combinations doesn't contain physical cameras that can only be used as
            part of a logical multi-camera device.</para>
          <para>If a new camera id becomes available through
            <c>AvailabilityCallback#onCameraUnavailable(String)</c>, clients can call
            this method to check if new combinations of camera ids which can stream concurrently are
            available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getConcurrentCameraIds()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getConcurrentCameraIds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCameraCharacteristics">
      <MemberSignature Language="VB.NET" Value="Public Function GetCameraCharacteristics (cameraId As String) As CameraCharacteristics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Hardware::Camera2::CameraCharacteristics ^ GetCameraCharacteristics(System::String ^ cameraId);" />
      <MemberSignature Language="C#" Value="public Android.Hardware.Camera2.CameraCharacteristics GetCameraCharacteristics (string cameraId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Hardware.Camera2.CameraCharacteristics GetCameraCharacteristics(string cameraId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.GetCameraCharacteristics(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetCameraCharacteristics : string -&gt; Android.Hardware.Camera2.CameraCharacteristics" Usage="cameraManager.GetCameraCharacteristics cameraId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCameraCharacteristics", "(Ljava/lang/String;)Landroid/hardware/camera2/CameraCharacteristics;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCameraCharacteristics", "(Ljava/lang/String;)Landroid/hardware/camera2/CameraCharacteristics;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CameraCharacteristics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cameraId">The id of the camera device to query. This could be either a standalone
            camera ID which can be directly opened by <c>#openCamera</c>, or a physical camera ID that
            can only used as part of a logical multi-camera.</param>
        <summary>Query the capabilities of a camera device.</summary>
        <returns>The properties of the given camera</returns>
        <remarks>
          <para>Query the capabilities of a camera device. These capabilities are
            immutable for a given camera.</para>
          <para>From API level 29, this function can also be used to query the capabilities of physical
            cameras that can only be used as part of logical multi-camera. These cameras cannot be
            opened directly via <c>#openCamera</c></para>
          <para>Also starting with API level 29, while most basic camera information is still available
            even without the CAMERA permission, some values are not available to apps that do not hold
            that permission. The keys not available are listed by
            <c>CameraCharacteristics#getKeysNeedingPermission</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getCameraCharacteristics(java.lang.String)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getCameraCharacteristics(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the cameraId does not match any
         known camera device.</exception>
        <exception cref="T:Android.Hardware.Camera2.CameraAccessException">if the camera device has been disconnected.</exception>
        <altmember cref="M:Android.Hardware.Camera2.CameraManager.GetCameraIdList" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.SetCameraDisabled(Android.Content.ComponentName, System.Boolean)" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="GetCameraExtensionCharacteristics">
      <MemberSignature Language="VB.NET" Value="Public Function GetCameraExtensionCharacteristics (cameraId As String) As CameraExtensionCharacteristics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Hardware::Camera2::CameraExtensionCharacteristics ^ GetCameraExtensionCharacteristics(System::String ^ cameraId);" />
      <MemberSignature Language="C#" Value="public Android.Hardware.Camera2.CameraExtensionCharacteristics GetCameraExtensionCharacteristics (string cameraId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Hardware.Camera2.CameraExtensionCharacteristics GetCameraExtensionCharacteristics(string cameraId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.GetCameraExtensionCharacteristics(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetCameraExtensionCharacteristics : string -&gt; Android.Hardware.Camera2.CameraExtensionCharacteristics" Usage="cameraManager.GetCameraExtensionCharacteristics cameraId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCameraExtensionCharacteristics", "(Ljava/lang/String;)Landroid/hardware/camera2/CameraExtensionCharacteristics;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCameraExtensionCharacteristics", "(Ljava/lang/String;)Landroid/hardware/camera2/CameraExtensionCharacteristics;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CameraExtensionCharacteristics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cameraId">The id of the camera device to query. This must be a standalone
            camera ID which can be directly opened by <c>#openCamera</c>.</param>
        <summary>Query the camera extension capabilities of a camera device.</summary>
        <returns>The properties of the given camera</returns>
        <remarks>
          <para>Query the camera extension capabilities of a camera device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getCameraExtensionCharacteristics(java.lang.String)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getCameraExtensionCharacteristics(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCameraIdList">
      <MemberSignature Language="VB.NET" Value="Public Function GetCameraIdList () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetCameraIdList();" />
      <MemberSignature Language="C#" Value="public string[] GetCameraIdList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetCameraIdList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.GetCameraIdList" />
      <MemberSignature Language="F#" Value="member this.GetCameraIdList : unit -&gt; string[]" Usage="cameraManager.GetCameraIdList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCameraIdList", "()[Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCameraIdList", "()[Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the list of currently connected camera devices by identifier, including
            cameras that may be in use by other camera API clients.</summary>
        <returns>The list of currently connected camera devices.</returns>
        <remarks>
          <para>Return the list of currently connected camera devices by identifier, including
            cameras that may be in use by other camera API clients.</para>
          <para>Non-removable cameras use integers starting at 0 for their
            identifiers, while removable cameras have a unique identifier for each
            individual device, even if they are the same model.</para>
          <para>This list doesn't contain physical cameras that can only be used as part of a logical
            multi-camera device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getCameraIdList()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getCameraIdList()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Hardware.Camera2.CameraAccessException" />
      </Docs>
    </Member>
    <Member MemberName="GetTorchStrengthLevel">
      <MemberSignature Language="VB.NET" Value="Public Function GetTorchStrengthLevel (cameraId As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTorchStrengthLevel(System::String ^ cameraId);" />
      <MemberSignature Language="C#" Value="public int GetTorchStrengthLevel (string cameraId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTorchStrengthLevel(string cameraId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.GetTorchStrengthLevel(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetTorchStrengthLevel : string -&gt; int" Usage="cameraManager.GetTorchStrengthLevel cameraId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTorchStrengthLevel", "(Ljava/lang/String;)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTorchStrengthLevel", "(Ljava/lang/String;)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cameraId">The unique identifier of the camera device that the flash unit belongs to.</param>
        <summary>Returns the brightness level of the flash unit associated with the cameraId.</summary>
        <returns>The brightness level of the flash unit associated with cameraId.
                    When the torch is turned OFF, the strength level will reset to a default level
                    <c>android.hardware.camera2.CameraCharacteristics#FLASH_INFO_STRENGTH_DEFAULT_LEVEL</c>.
                    In this case the return value will be
                    <c>android.hardware.camera2.CameraCharacteristics#FLASH_INFO_STRENGTH_DEFAULT_LEVEL</c>
                    rather than 0.</returns>
        <remarks>
          <para>Returns the brightness level of the flash unit associated with the cameraId.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#getTorchStrengthLevel(java.lang.String)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.getTorchStrengthLevel(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConcurrentSessionConfigurationSupported">
      <MemberSignature Language="VB.NET" Value="Public Function IsConcurrentSessionConfigurationSupported (cameraIdAndSessionConfig As IDictionary(Of String, SessionConfiguration)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsConcurrentSessionConfigurationSupported(System::Collections::Generic::IDictionary&lt;System::String ^, Android::Hardware::Camera2::Params::SessionConfiguration ^&gt; ^ cameraIdAndSessionConfig);" />
      <MemberSignature Language="C#" Value="public bool IsConcurrentSessionConfigurationSupported (System.Collections.Generic.IDictionary&lt;string,Android.Hardware.Camera2.Params.SessionConfiguration&gt; cameraIdAndSessionConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsConcurrentSessionConfigurationSupported(class System.Collections.Generic.IDictionary`2&lt;string, class Android.Hardware.Camera2.Params.SessionConfiguration&gt; cameraIdAndSessionConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.IsConcurrentSessionConfigurationSupported(System.Collections.Generic.IDictionary{System.String,Android.Hardware.Camera2.Params.SessionConfiguration})" />
      <MemberSignature Language="F#" Value="member this.IsConcurrentSessionConfigurationSupported : System.Collections.Generic.IDictionary&lt;string, Android.Hardware.Camera2.Params.SessionConfiguration&gt; -&gt; bool" Usage="cameraManager.IsConcurrentSessionConfigurationSupported cameraIdAndSessionConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isConcurrentSessionConfigurationSupported", "(Ljava/util/Map;)Z", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isConcurrentSessionConfigurationSupported", "(Ljava/util/Map;)Z", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.CAMERA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.CAMERA")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraIdAndSessionConfig" Type="System.Collections.Generic.IDictionary&lt;System.String,Android.Hardware.Camera2.Params.SessionConfiguration&gt;" />
      </Parameters>
      <Docs>
        <param name="cameraIdAndSessionConfig">To be added.</param>
        <summary>Checks whether the provided set of camera devices and their corresponding
            <c>SessionConfiguration</c> can be configured concurrently.</summary>
        <returns>
          <c>true</c> if the given combination of session configurations and corresponding
                                 camera ids are concurrently supported by the camera sub-system,
                    <c>false</c> otherwise OR if the set of camera devices provided is not a subset of
                                  those returned by <c>#getConcurrentCameraIds</c>.</returns>
        <remarks>
          <para>Checks whether the provided set of camera devices and their corresponding
            <c>SessionConfiguration</c> can be configured concurrently.</para>
          <para>This method performs a runtime check of the given <c>SessionConfiguration</c> and camera
            id combinations. The result confirms whether or not the passed session configurations can be
            successfully used to create camera capture sessions concurrently, on the given camera
            devices using <c>CameraDevice#createCaptureSession(SessionConfiguration)</c>.</para>
          <para>The method can be called at any point before, during and after active capture sessions.
            It will not impact normal camera behavior in any way and must complete significantly
            faster than creating a regular or constrained capture session.</para>
          <para>Although this method is faster than creating a new capture session, it is not intended
            to be used for exploring the entire space of supported concurrent stream combinations. The
            available mandatory concurrent stream combinations may be obtained by querying
            <c>#getCameraCharacteristics</c> for the key
            <c>android.hardware.camera2.CameraCharacteristics#SCALER_MANDATORY_CONCURRENT_STREAM_COMBINATIONS</c>.</para>
          <para>Note that session parameters will be ignored and calls to
            <c>SessionConfiguration#setSessionParameters</c> are not required.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#isConcurrentSessionConfigurationSupported(java.util.Map%3Cjava.lang.String,%20android.hardware.camera2.params.SessionConfiguration%3E)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.isConcurrentSessionConfigurationSupported(java.util.Map&lt;java.lang.String, android.hardware.camera2.params.SessionConfiguration&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Hardware.Camera2.CameraManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenCamera">
      <MemberSignature Language="VB.NET" Value="Public Sub OpenCamera (cameraId As String, callback As CameraDevice.StateCallback, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenCamera(System::String ^ cameraId, Android::Hardware::Camera2::CameraDevice::StateCallback ^ callback, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public void OpenCamera (string cameraId, Android.Hardware.Camera2.CameraDevice.StateCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenCamera(string cameraId, class Android.Hardware.Camera2.CameraDevice/StateCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.OpenCamera(System.String,Android.Hardware.Camera2.CameraDevice.StateCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.OpenCamera : string * Android.Hardware.Camera2.CameraDevice.StateCallback * Android.OS.Handler -&gt; unit" Usage="cameraManager.OpenCamera (cameraId, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openCamera", "(Ljava/lang/String;Landroid/hardware/camera2/CameraDevice$StateCallback;Landroid/os/Handler;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openCamera", "(Ljava/lang/String;Landroid/hardware/camera2/CameraDevice$StateCallback;Landroid/os/Handler;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.CAMERA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.CAMERA")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraDevice+StateCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cameraId">The unique identifier of the camera device to open</param>
        <param name="callback">The callback which is invoked once the camera is opened</param>
        <param name="handler">The handler on which the callback should be invoked, or
             <c>null</c> to use the current thread's <see cref="T:Android.OS.Looper" />.</param>
        <summary>Open a connection to a camera with the given ID.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Hardware.Camera2.CameraAccessException">if the camera is disabled by device policy,
 has been disconnected, or is being used by a higher-priority camera API client.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if cameraId or the callback was null,
 or the cameraId does not match any currently or previously available
 camera device.</exception>
        <exception cref="T:Java.Lang.SecurityException">if the application does not have permission to
 access the camera</exception>
        <altmember cref="M:Android.Hardware.Camera2.CameraManager.GetCameraIdList" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.SetCameraDisabled(Android.Content.ComponentName, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OpenCamera">
      <MemberSignature Language="VB.NET" Value="Public Sub OpenCamera (cameraId As String, executor As IExecutor, callback As CameraDevice.StateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenCamera(System::String ^ cameraId, Java::Util::Concurrent::IExecutor ^ executor, Android::Hardware::Camera2::CameraDevice::StateCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void OpenCamera (string cameraId, Java.Util.Concurrent.IExecutor executor, Android.Hardware.Camera2.CameraDevice.StateCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenCamera(string cameraId, class Java.Util.Concurrent.IExecutor executor, class Android.Hardware.Camera2.CameraDevice/StateCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.OpenCamera(System.String,Java.Util.Concurrent.IExecutor,Android.Hardware.Camera2.CameraDevice.StateCallback)" />
      <MemberSignature Language="F#" Value="member this.OpenCamera : string * Java.Util.Concurrent.IExecutor * Android.Hardware.Camera2.CameraDevice.StateCallback -&gt; unit" Usage="cameraManager.OpenCamera (cameraId, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openCamera", "(Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraDevice$StateCallback;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openCamera", "(Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraDevice$StateCallback;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.CAMERA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.CAMERA")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraDevice+StateCallback" />
      </Parameters>
      <Docs>
        <param name="cameraId">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAvailabilityCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAvailabilityCallback (callback As CameraManager.AvailabilityCallback, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterAvailabilityCallback(Android::Hardware::Camera2::CameraManager::AvailabilityCallback ^ callback, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public void RegisterAvailabilityCallback (Android.Hardware.Camera2.CameraManager.AvailabilityCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAvailabilityCallback(class Android.Hardware.Camera2.CameraManager/AvailabilityCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.RegisterAvailabilityCallback(Android.Hardware.Camera2.CameraManager.AvailabilityCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.RegisterAvailabilityCallback : Android.Hardware.Camera2.CameraManager.AvailabilityCallback * Android.OS.Handler -&gt; unit" Usage="cameraManager.RegisterAvailabilityCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAvailabilityCallback", "(Landroid/hardware/camera2/CameraManager$AvailabilityCallback;Landroid/os/Handler;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAvailabilityCallback", "(Landroid/hardware/camera2/CameraManager$AvailabilityCallback;Landroid/os/Handler;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+AvailabilityCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">the new callback to send camera availability notices to</param>
        <param name="handler">The handler on which the callback should be invoked, or <c>null</c> to use
                        the current thread's <c>android.os.Looper looper</c>.</param>
        <summary>Register a callback to be notified about camera device availability.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the handler is <c>null</c> but the current thread has
             no looper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterAvailabilityCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAvailabilityCallback (executor As IExecutor, callback As CameraManager.AvailabilityCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterAvailabilityCallback(Java::Util::Concurrent::IExecutor ^ executor, Android::Hardware::Camera2::CameraManager::AvailabilityCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void RegisterAvailabilityCallback (Java.Util.Concurrent.IExecutor executor, Android.Hardware.Camera2.CameraManager.AvailabilityCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAvailabilityCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Hardware.Camera2.CameraManager/AvailabilityCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.RegisterAvailabilityCallback(Java.Util.Concurrent.IExecutor,Android.Hardware.Camera2.CameraManager.AvailabilityCallback)" />
      <MemberSignature Language="F#" Value="member this.RegisterAvailabilityCallback : Java.Util.Concurrent.IExecutor * Android.Hardware.Camera2.CameraManager.AvailabilityCallback -&gt; unit" Usage="cameraManager.RegisterAvailabilityCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAvailabilityCallback", "(Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraManager$AvailabilityCallback;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAvailabilityCallback", "(Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraManager$AvailabilityCallback;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+AvailabilityCallback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">the new callback to send camera availability notices to</param>
        <summary>Register a callback to be notified about camera device availability.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.registerAvailabilityCallback(android.hardware.camera2.AvailabilityCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterTorchCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterTorchCallback (callback As CameraManager.TorchCallback, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterTorchCallback(Android::Hardware::Camera2::CameraManager::TorchCallback ^ callback, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public void RegisterTorchCallback (Android.Hardware.Camera2.CameraManager.TorchCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterTorchCallback(class Android.Hardware.Camera2.CameraManager/TorchCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.RegisterTorchCallback(Android.Hardware.Camera2.CameraManager.TorchCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.RegisterTorchCallback : Android.Hardware.Camera2.CameraManager.TorchCallback * Android.OS.Handler -&gt; unit" Usage="cameraManager.RegisterTorchCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerTorchCallback", "(Landroid/hardware/camera2/CameraManager$TorchCallback;Landroid/os/Handler;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerTorchCallback", "(Landroid/hardware/camera2/CameraManager$TorchCallback;Landroid/os/Handler;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+TorchCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">The new callback to send torch mode status to</param>
        <param name="handler">The handler on which the callback should be invoked, or <c>null</c> to use
                        the current thread's <c>android.os.Looper looper</c>.</param>
        <summary>Register a callback to be notified about torch mode status.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#registerTorchCallback(android.hardware.camera2.TorchCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.registerTorchCallback(android.hardware.camera2.TorchCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterTorchCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterTorchCallback (executor As IExecutor, callback As CameraManager.TorchCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterTorchCallback(Java::Util::Concurrent::IExecutor ^ executor, Android::Hardware::Camera2::CameraManager::TorchCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void RegisterTorchCallback (Java.Util.Concurrent.IExecutor executor, Android.Hardware.Camera2.CameraManager.TorchCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterTorchCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Hardware.Camera2.CameraManager/TorchCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.RegisterTorchCallback(Java.Util.Concurrent.IExecutor,Android.Hardware.Camera2.CameraManager.TorchCallback)" />
      <MemberSignature Language="F#" Value="member this.RegisterTorchCallback : Java.Util.Concurrent.IExecutor * Android.Hardware.Camera2.CameraManager.TorchCallback -&gt; unit" Usage="cameraManager.RegisterTorchCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerTorchCallback", "(Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraManager$TorchCallback;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerTorchCallback", "(Ljava/util/concurrent/Executor;Landroid/hardware/camera2/CameraManager$TorchCallback;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+TorchCallback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">The new callback to send torch mode status to</param>
        <summary>Register a callback to be notified about torch mode status.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#registerTorchCallback(android.hardware.camera2.TorchCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.registerTorchCallback(android.hardware.camera2.TorchCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTorchMode">
      <MemberSignature Language="VB.NET" Value="Public Sub SetTorchMode (cameraId As String, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTorchMode(System::String ^ cameraId, bool enabled);" />
      <MemberSignature Language="C#" Value="public void SetTorchMode (string cameraId, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTorchMode(string cameraId, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.SetTorchMode(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetTorchMode : string * bool -&gt; unit" Usage="cameraManager.SetTorchMode (cameraId, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTorchMode", "(Ljava/lang/String;Z)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTorchMode", "(Ljava/lang/String;Z)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cameraId">The unique identifier of the camera device that the flash unit belongs to.</param>
        <param name="enabled">The desired state of the torch mode for the target camera device. Set to
                        <c>true</c> to turn on the torch mode. Set to <c>false</c> to turn off the
                        torch mode.</param>
        <summary>Set the flash unit's torch mode of the camera of the given ID without opening the camera
            device.</summary>
        <remarks>
          <para>Set the flash unit's torch mode of the camera of the given ID without opening the camera
            device.</para>
          <para>Use <c>#getCameraIdList</c> to get the list of available camera devices and use
            <c>#getCameraCharacteristics</c> to check whether the camera device has a flash unit.
            Note that even if a camera device has a flash unit, turning on the torch mode may fail
            if the camera device or other camera resources needed to turn on the torch mode are in use.</para>
          <para>If <c>#setTorchMode</c> is called to turn on or off the torch mode successfully,
            <c>CameraManager.TorchCallback#onTorchModeChanged</c> will be invoked.
            However, even if turning on the torch mode is successful, the application does not have the
            exclusive ownership of the flash unit or the camera device. The torch mode will be turned
            off and becomes unavailable when the camera device that the flash unit belongs to becomes
            unavailable or when other camera resources to keep the torch on become unavailable (
            <c>CameraManager.TorchCallback#onTorchModeUnavailable</c> will be invoked). Also,
            other applications are free to call <c>#setTorchMode</c> to turn off the torch mode (
            <c>CameraManager.TorchCallback#onTorchModeChanged</c> will be invoked). If the latest
            application that turned on the torch mode exits, the torch mode will be turned off.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#setTorchMode(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.setTorchMode(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Hardware.Camera2.CameraManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Hardware.Camera2.CameraManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnOnTorchWithStrengthLevel">
      <MemberSignature Language="VB.NET" Value="Public Sub TurnOnTorchWithStrengthLevel (cameraId As String, torchStrength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TurnOnTorchWithStrengthLevel(System::String ^ cameraId, int torchStrength);" />
      <MemberSignature Language="C#" Value="public void TurnOnTorchWithStrengthLevel (string cameraId, int torchStrength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TurnOnTorchWithStrengthLevel(string cameraId, int32 torchStrength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.TurnOnTorchWithStrengthLevel(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.TurnOnTorchWithStrengthLevel : string * int -&gt; unit" Usage="cameraManager.TurnOnTorchWithStrengthLevel (cameraId, torchStrength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("turnOnTorchWithStrengthLevel", "(Ljava/lang/String;I)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("turnOnTorchWithStrengthLevel", "(Ljava/lang/String;I)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraId" Type="System.String" />
        <Parameter Name="torchStrength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cameraId">The unique identifier of the camera device that the flash unit belongs to.</param>
        <param name="torchStrength">The desired brightness level to be set for the flash unit in the range 1 to
                        <c>android.hardware.camera2.CameraCharacteristics#FLASH_INFO_STRENGTH_MAXIMUM_LEVEL</c>.</param>
        <summary>Set the brightness level of the flashlight associated with the given cameraId in torch
            mode.</summary>
        <remarks>
          <para>Set the brightness level of the flashlight associated with the given cameraId in torch
            mode. If the torch is OFF and torchStrength is &gt;= 1, torch will turn ON with the
            strength level specified in torchStrength.</para>
          <para>Use
            <c>android.hardware.camera2.CameraCharacteristics#FLASH_INFO_STRENGTH_MAXIMUM_LEVEL</c>
            to check whether the camera device supports flash unit strength control or not. If this value
            is greater than 1, applications can call this API to control the flashlight brightness level.</para>
          <para>If <c>#turnOnTorchWithStrengthLevel</c> is called to change the brightness level of the
            flash unit <c>CameraManager.TorchCallback#onTorchStrengthLevelChanged</c> will be invoked.
            If the new desired strength level is same as previously set level, then this callback will
            not be invoked.
            If the torch is OFF and <c>#turnOnTorchWithStrengthLevel</c> is called with level &gt;= 1,
            the torch will be turned ON with that brightness level. In this case
            <c>CameraManager.TorchCallback#onTorchModeChanged</c> will also be invoked.</para>
          <para>When the torch is turned OFF via <c>#setTorchMode</c>, the flashlight brightness level
            will reset to default value
            <c>android.hardware.camera2.CameraCharacteristics#FLASH_INFO_STRENGTH_DEFAULT_LEVEL</c>
            In this case the <c>CameraManager.TorchCallback#onTorchStrengthLevelChanged</c> will not be
            invoked.</para>
          <para>If torch is enabled via <c>#setTorchMode</c> after calling
            <c>#turnOnTorchWithStrengthLevel</c> with level N then the flash unit will have the
            brightness level N.
            Since multiple applications are free to call <c>#setTorchMode</c>, when the latest
            application that turned ON the torch mode exits, the torch mode will be turned OFF
            and in this case the brightness level will reset to default level.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#turnOnTorchWithStrengthLevel(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.turnOnTorchWithStrengthLevel(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAvailabilityCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterAvailabilityCallback (callback As CameraManager.AvailabilityCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterAvailabilityCallback(Android::Hardware::Camera2::CameraManager::AvailabilityCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void UnregisterAvailabilityCallback (Android.Hardware.Camera2.CameraManager.AvailabilityCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterAvailabilityCallback(class Android.Hardware.Camera2.CameraManager/AvailabilityCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.UnregisterAvailabilityCallback(Android.Hardware.Camera2.CameraManager.AvailabilityCallback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterAvailabilityCallback : Android.Hardware.Camera2.CameraManager.AvailabilityCallback -&gt; unit" Usage="cameraManager.UnregisterAvailabilityCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAvailabilityCallback", "(Landroid/hardware/camera2/CameraManager$AvailabilityCallback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAvailabilityCallback", "(Landroid/hardware/camera2/CameraManager$AvailabilityCallback;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+AvailabilityCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to remove from the notification list</param>
        <summary>Remove a previously-added callback; the callback will no longer receive connection and
            disconnection callbacks.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#unregisterAvailabilityCallback(android.hardware.camera2.AvailabilityCallback)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.unregisterAvailabilityCallback(android.hardware.camera2.AvailabilityCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterTorchCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterTorchCallback (callback As CameraManager.TorchCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterTorchCallback(Android::Hardware::Camera2::CameraManager::TorchCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void UnregisterTorchCallback (Android.Hardware.Camera2.CameraManager.TorchCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterTorchCallback(class Android.Hardware.Camera2.CameraManager/TorchCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraManager.UnregisterTorchCallback(Android.Hardware.Camera2.CameraManager.TorchCallback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterTorchCallback : Android.Hardware.Camera2.CameraManager.TorchCallback -&gt; unit" Usage="cameraManager.UnregisterTorchCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterTorchCallback", "(Landroid/hardware/camera2/CameraManager$TorchCallback;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterTorchCallback", "(Landroid/hardware/camera2/CameraManager$TorchCallback;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraManager+TorchCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to remove from the notification list</param>
        <summary>Remove a previously-added callback; the callback will no longer receive torch mode status
            callbacks.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraManager#unregisterTorchCallback(android.hardware.camera2.TorchCallback)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraManager.unregisterTorchCallback(android.hardware.camera2.TorchCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
