<Type Name="CaptureRequest" FullName="Android.Hardware.Camera2.CaptureRequest">
  <TypeSignature Language="C#" Value="public sealed class CaptureRequest : Android.Hardware.Camera2.CameraMetadata, Android.OS.IParcelable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CaptureRequest extends Android.Hardware.Camera2.CameraMetadata implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Hardware.Camera2.CameraMetadata</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/camera2/CaptureRequest", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary tool="true">
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">An immutable package of settings and outputs needed to capture a single
 image from the camera device.</para>
      <para tool="javadoc-to-mdoc">Contains the configuration for the capture hardware (sensor, lens, flash),
 the processing pipeline, the control algorithms, and the output buffers. Also
 contains the list of target Surfaces to send image data to for this
 capture.</para>
      <para tool="javadoc-to-mdoc">CaptureRequests can be created by using a <c><see cref="!:NoType:android/hardware/camera2/CaptureRequest$Builder;Href=../../../../reference/android/hardware/camera2/CaptureRequest.Builder.html" /></c> instance,
 obtained by calling <c><see cref="M:Android.Hardware.Camera2.CameraDevice.CreateCaptureRequest(Android.Hardware.Camera2.CameraTemplate)" /></c></para>
      <para tool="javadoc-to-mdoc">CaptureRequests are given to <c><see cref="M:Android.Hardware.Camera2.CameraCaptureSession.Capture(Android.Hardware.Camera2.CaptureRequest,.CaptureCallback,.CaptureCallback)" /></c> or
 <c><see cref="M:Android.Hardware.Camera2.CameraCaptureSession.SetRepeatingRequest(Android.Hardware.Camera2.CaptureRequest,.CaptureCallback,.CaptureCallback)" /></c> to capture images from a camera.</para>
      <para tool="javadoc-to-mdoc">Each request can specify a different subset of target Surfaces for the
 camera to send the captured data to. All the surfaces used in a request must
 be part of the surface list given to the last call to
 <c><see cref="android.hardware.camera2.CameraCaptureSession.StateCallback," tool="ReplaceLinkValue" /></c>, when the request is submitted to the
 session.</para>
      <para tool="javadoc-to-mdoc">For example, a request meant for repeating preview might only include the
 Surface for the preview SurfaceView or SurfaceTexture, while a
 high-resolution still capture would also include a Surface from a ImageReader
 configured for high-resolution JPEG images.</para>
      <para tool="javadoc-to-mdoc">A reprocess capture request allows a previously-captured image from the camera device to be
 sent back to the device for further processing. It can be created with
 <c><see cref="M:Android.Hardware.Camera2.CameraDevice.CreateReprocessCaptureRequest(Android.Hardware.Camera2.TotalCaptureResult)" /></c>, and used with a reprocessable capture session
 created with <c><see cref="!:Android.Hardware.Camera2.CameraDevice.createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration,java.util.List&lt;android.view.Surface&gt;,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)" /></c>.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="M:Android.Hardware.Camera2.CameraCaptureSession.Capture(Android.Hardware.Camera2.CaptureRequest,.CaptureCallback,.CaptureCallback)" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="M:Android.Hardware.Camera2.CameraCaptureSession.SetRepeatingRequest(Android.Hardware.Camera2.CaptureRequest,.CaptureCallback,.CaptureCallback)" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="!:Android.Hardware.Camera2.CameraCaptureSession.captureBurst(java.util.List&lt;android.hardware.camera2.CaptureRequest&gt;,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="!:Android.Hardware.Camera2.CameraCaptureSession.setRepeatingBurst(java.util.List&lt;android.hardware.camera2.CaptureRequest&gt;,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="M:Android.Hardware.Camera2.CameraDevice.CreateCaptureRequest(Android.Hardware.Camera2.CameraTemplate)" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="M:Android.Hardware.Camera2.CameraDevice.CreateReprocessCaptureRequest(Android.Hardware.Camera2.TotalCaptureResult)" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlackLevelLock">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key BlackLevelLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key BlackLevelLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BLACK_LEVEL_LOCK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="bullet">
            <item>
              <term>Request 1: Exposure = 10ms, Black level lock = OFF</term>
            </item>
            <item>
              <term>Request 2: Exposure = 10ms, Black level lock = ON</term>
            </item>
            <item>
              <term>Request 3: Exposure = 10ms, Black level lock = ON</term>
            </item>
            <item>
              <term>Request 4: Exposure = 20ms, Black level lock = ON</term>
            </item>
            <item>
              <term>Request 5: Exposure = 20ms, Black level lock = ON</term>
            </item>
            <item>
              <term>Request 6: Exposure = 20ms, Black level lock = ON</term>
            </item>
          </list>
          <list type="bullet">
            <item>
              <term>Result 1: Exposure = 10ms, Black level lock = OFF</term>
            </item>
            <item>
              <term>Result 2: Exposure = 10ms, Black level lock = ON</term>
            </item>
            <item>
              <term>Result 3: Exposure = 10ms, Black level lock = ON</term>
            </item>
            <item>
              <term>Result 4: Exposure = 20ms, Black level lock = OFF</term>
            </item>
            <item>
              <term>Result 5: Exposure = 20ms, Black level lock = ON</term>
            </item>
            <item>
              <term>Result 6: Exposure = 20ms, Black level lock = ON</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="bullet">
              <item>
                <term>Request 1: Exposure = 10ms, Black level lock = OFF</term>
              </item>
              <item>
                <term>Request 2: Exposure = 10ms, Black level lock = ON</term>
              </item>
              <item>
                <term>Request 3: Exposure = 10ms, Black level lock = ON</term>
              </item>
              <item>
                <term>Request 4: Exposure = 20ms, Black level lock = ON</term>
              </item>
              <item>
                <term>Request 5: Exposure = 20ms, Black level lock = ON</term>
              </item>
              <item>
                <term>Request 6: Exposure = 20ms, Black level lock = ON</term>
              </item>
            </list>
            <list type="bullet">
              <item>
                <term>Result 1: Exposure = 10ms, Black level lock = OFF</term>
              </item>
              <item>
                <term>Result 2: Exposure = 10ms, Black level lock = ON</term>
              </item>
              <item>
                <term>Result 3: Exposure = 10ms, Black level lock = ON</term>
              </item>
              <item>
                <term>Result 4: Exposure = 20ms, Black level lock = OFF</term>
              </item>
              <item>
                <term>Result 5: Exposure = 20ms, Black level lock = ON</term>
              </item>
              <item>
                <term>Result 6: Exposure = 20ms, Black level lock = ON</term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Whether black-level compensation is locked
 to its current values, or is free to vary.</para>
          <para tool="javadoc-to-mdoc">When set to <c>true</c> (ON), the values used for black-level
 compensation will not change until the lock is set to
 <c>false</c> (OFF).</para>
          <para tool="javadoc-to-mdoc">Since changes to certain capture parameters (such as
 exposure time) may require resetting of black level
 compensation, the camera device must report whether setting
 the black level lock was successful in the output result
 metadata.</para>
          <para tool="javadoc-to-mdoc">For example, if a sequence of requests is as follows:</para>
          <para tool="javadoc-to-mdoc">And the exposure change in Request 4 requires the camera
 device to reset the black level offsets, then the output
 result metadata is expected to be:</para>
          <para tool="javadoc-to-mdoc">This indicates to the application that on frame 4, black
 levels were reset due to exposure value changes, and pixel
 values may not be consistent across captures.</para>
          <para tool="javadoc-to-mdoc">The camera device will maintain the lock to the extent
 possible, only overriding the lock to OFF when changes to
 other request parameters require a black level recalculation
 or reset.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#BLACK_LEVEL_LOCK" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ColorCorrectionAberrationMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ColorCorrectionAberrationMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ColorCorrectionAberrationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COLOR_CORRECTION_ABERRATION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Mode of operation for the chromatic aberration correction algorithm.</para>
          <para tool="javadoc-to-mdoc">Chromatic (color) aberration is caused by the fact that different wavelengths of light
 can not focus on the same point after exiting from the lens. This metadata defines
 the high level control of chromatic aberration correction algorithm, which aims to
 minimize the chromatic artifacts that may occur along the object boundaries in an
 image.</para>
          <para tool="javadoc-to-mdoc">FAST/HIGH_QUALITY both mean that camera device determined aberration
 correction will be applied. HIGH_QUALITY mode indicates that the camera device will
 use the highest-quality aberration correction algorithms, even if it slows down
 capture rate. FAST means the camera device will not slow down capture rate when
 applying aberration correction.</para>
          <para tool="javadoc-to-mdoc">LEGACY devices will always be in FAST mode.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.COLOR_CORRECTION_ABERRATION_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.COLOR_CORRECTION_ABERRATION_MODE_FAST" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.COLOR_CORRECTION_ABERRATION_MODE_HIGH_QUALITY" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ColorCorrectionAvailableAberrationModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#COLOR_CORRECTION_ABERRATION_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ColorCorrectionAvailableAberrationModes" />
      </Docs>
    </Member>
    <Member MemberName="ColorCorrectionGains">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ColorCorrectionGains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ColorCorrectionGains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COLOR_CORRECTION_GAINS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Gains applying to Bayer raw color channels for
 white-balance.</para>
          <para tool="javadoc-to-mdoc">These per-channel gains are either set by the camera device
 when the request <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" /></c> is not
 TRANSFORM_MATRIX, or directly by the application in the
 request when the <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" /></c> is
 TRANSFORM_MATRIX.</para>
          <para tool="javadoc-to-mdoc">The gains in the result metadata are the gains actually
 applied by the camera device to the current frame.</para>
          <para tool="javadoc-to-mdoc">The valid range of gains varies on different devices, but gains
 between [1.0, 3.0] are guaranteed not to be clipped. Even if a given
 device allows gains below 1.0, this is usually not recommended because
 this can create color artifacts.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Unitless gain factors</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#COLOR_CORRECTION_GAINS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ColorCorrectionMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ColorCorrectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ColorCorrectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COLOR_CORRECTION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <sample external-id="E3E4951327C7DCF69B84BE9EFA736A42" />
          <sample external-id="07BF032986D4D1AA1F594BB5CAA25AE3" />
          <sample external-id="618A170E6BC2B8AEFE30B06768857EA0" />
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <sample external-id="E3E4951327C7DCF69B84BE9EFA736A42" />
            <sample external-id="07BF032986D4D1AA1F594BB5CAA25AE3" />
            <sample external-id="618A170E6BC2B8AEFE30B06768857EA0" />
          </para>
          <para tool="javadoc-to-mdoc">The mode control selects how the image data is converted from the
 sensor's native color into linear sRGB color.</para>
          <para tool="javadoc-to-mdoc">When auto-white balance (AWB) is enabled with <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" /></c>, this
 control is overridden by the AWB routine. When AWB is disabled, the
 application controls how the color mapping is performed.</para>
          <para tool="javadoc-to-mdoc">We define the expected processing pipeline below. For consistency
 across devices, this is always the case with TRANSFORM_MATRIX.</para>
          <para tool="javadoc-to-mdoc">When either FULL or HIGH_QUALITY is used, the camera device may
 do additional processing but <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionGains" /></c> and
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionTransform" /></c> will still be provided by the
 camera device (in the results) and be roughly correct.</para>
          <para tool="javadoc-to-mdoc">Switching to TRANSFORM_MATRIX and using the data provided from
 FAST or HIGH_QUALITY will yield a picture with the same white point
 as what was produced by the camera device in the earlier frame.</para>
          <para tool="javadoc-to-mdoc">The expected processing pipeline is as follows:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <img alt="White balance processing pipeline" src="../../../../images/camera2/metadata/android.colorCorrection.mode/processing_pipeline.png" />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">The white balance is encoded by two values, a 4-channel white-balance
 gain vector (applied in the Bayer domain), and a 3x3 color transform
 matrix (applied after demosaic).</para>
          <para tool="javadoc-to-mdoc">The 4-channel white-balance gains are defined as:</para>
          <para tool="javadoc-to-mdoc">where <c>G_even</c> is the gain for green pixels on even rows of the
 output, and <c>G_odd</c> is the gain for green pixels on the odd rows.
 These may be identical for a given camera device implementation; if
 the camera device does not support a separate gain for even/odd green
 channels, it will use the <c>G_even</c> value, and write <c>G_odd</c> equal to
 <c>G_even</c> in the output result metadata.</para>
          <para tool="javadoc-to-mdoc">The matrices for color transforms are defined as a 9-entry vector:</para>
          <para tool="javadoc-to-mdoc">which define a transform from input sensor colors, <c>P_in = [ r g b ]</c>,
 to output linear sRGB, <c>P_out = [ r' g' b' ]</c>,</para>
          <para tool="javadoc-to-mdoc">with colors as follows:</para>
          <para tool="javadoc-to-mdoc">Both the input and output value ranges must match. Overflow/underflow
 values are clipped to fit within the range.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.COLOR_CORRECTION_MODE_TRANSFORM_MATRIX" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.COLOR_CORRECTION_MODE_FAST" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.COLOR_CORRECTION_MODE_HIGH_QUALITY" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#COLOR_CORRECTION_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionGains" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionTransform" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ColorCorrectionTransform">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ColorCorrectionTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ColorCorrectionTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COLOR_CORRECTION_TRANSFORM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">A color transform matrix to use to transform
 from sensor RGB color space to output linear sRGB color space.</para>
          <para tool="javadoc-to-mdoc">This matrix is either set by the camera device when the request
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" /></c> is not TRANSFORM_MATRIX, or
 directly by the application in the request when the
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" /></c> is TRANSFORM_MATRIX.</para>
          <para tool="javadoc-to-mdoc">In the latter case, the camera device may round the matrix to account
 for precision issues; the final rounded matrix should be reported back
 in this matrix result metadata. The transform should keep the magnitude
 of the output color values within <c>[0, 1.0]</c> (assuming input color
 values is within the normalized range <c>[0, 1.0]</c>), or clipping may occur.</para>
          <para tool="javadoc-to-mdoc">The valid range of each matrix element varies on different devices, but
 values within [-1.5, 3.0] are guaranteed not to be clipped.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Unitless scale factors</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#COLOR_CORRECTION_TRANSFORM" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeAntibandingMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAeAntibandingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAeAntibandingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_ANTIBANDING_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">The desired setting for the camera device's auto-exposure
 algorithm's antibanding compensation.</para>
          <para tool="javadoc-to-mdoc">Some kinds of lighting fixtures, such as some fluorescent
 lights, flicker at the rate of the power supply frequency
 (60Hz or 50Hz, depending on country). While this is
 typically not noticeable to a person, it can be visible to
 a camera device. If a camera sets its exposure time to the
 wrong value, the flicker may become visible in the
 viewfinder as flicker or in a final captured image, as a
 set of variable-brightness bands across the image.</para>
          <para tool="javadoc-to-mdoc">Therefore, the auto-exposure routines of camera devices
 include antibanding routines that ensure that the chosen
 exposure value will not cause such banding. The choice of
 exposure time depends on the rate of flicker, which the
 camera device can detect automatically, or the expected
 rate can be selected by the application using this
 control.</para>
          <para tool="javadoc-to-mdoc">A given camera device may not support all of the possible
 options for the antibanding mode. The
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableAntibandingModes" /></c> key contains
 the available modes for a given camera device.</para>
          <para tool="javadoc-to-mdoc">AUTO mode is the default if it is available on given
 camera device. When AUTO mode is not available, the
 default will be either 50HZ or 60HZ, and both 50HZ
 and 60HZ will be available.</para>
          <para tool="javadoc-to-mdoc">If manual exposure control is enabled (by setting
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> or <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" /></c> to OFF),
 then this setting has no effect, and the application must
 ensure it selects exposure times that do not cause banding
 issues. The <c><see cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsSceneFlicker" /></c> key can assist
 the application in this.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_ANTIBANDING_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_ANTIBANDING_MODE_50HZ" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_ANTIBANDING_MODE_60HZ" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_ANTIBANDING_MODE_AUTO" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableAntibandingModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_ANTIBANDING_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableAntibandingModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsSceneFlicker" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeExposureCompensation">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAeExposureCompensation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAeExposureCompensation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_EXPOSURE_COMPENSATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Adjustment to auto-exposure (AE) target image
 brightness.</para>
          <para tool="javadoc-to-mdoc">The adjustment is measured as a count of steps, with the
 step size defined by <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeCompensationStep" /></c> and the
 allowed range by <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeCompensationRange" /></c>.</para>
          <para tool="javadoc-to-mdoc">For example, if the exposure value (EV) step is 0.333, '6'
 will mean an exposure compensation of +2 EV; -3 will mean an
 exposure compensation of -1 EV. One EV represents a doubling
 of image brightness. Note that this control will only be
 effective if <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c><c>!=</c> OFF. This control
 will take effect even when <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" /></c><c>== true</c>.</para>
          <para tool="javadoc-to-mdoc">In the event of exposure compensation value being changed, camera device
 may take several frames to reach the newly requested exposure target.
 During that time, <c><see cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" /></c> field will be in the SEARCHING
 state. Once the new exposure target is reached, <c><see cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" /></c> will
 change from SEARCHING to either CONVERGED, LOCKED (if AE lock is enabled), or
 FLASH_REQUIRED (if the scene is too dark for still capture).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Compensation steps</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeCompensationRange" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_EXPOSURE_COMPENSATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeCompensationRange" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeCompensationStep" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeLock">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAeLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAeLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_LOCK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="number">
            <item>
              <term>Starting in auto-AE mode:</term>
            </item>
            <item>
              <term>Lock AE</term>
            </item>
            <item>
              <term>Wait for the first result to be output that has the AE locked</term>
            </item>
            <item>
              <term>Copy exposure settings from that result into a request, set the request to manual AE</term>
            </item>
            <item>
              <term>Submit the capture request, proceed to run manual AE as desired.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="number">
              <item>
                <term>Starting in auto-AE mode:</term>
              </item>
              <item>
                <term>Lock AE</term>
              </item>
              <item>
                <term>Wait for the first result to be output that has the AE locked</term>
              </item>
              <item>
                <term>Copy exposure settings from that result into a request, set the request to manual AE</term>
              </item>
              <item>
                <term>Submit the capture request, proceed to run manual AE as desired.</term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Whether auto-exposure (AE) is currently locked to its latest
 calculated values.</para>
          <para tool="javadoc-to-mdoc">When set to <c>true</c> (ON), the AE algorithm is locked to its latest parameters,
 and will not change exposure settings until the lock is set to <c>false</c> (OFF).</para>
          <para tool="javadoc-to-mdoc">Note that even when AE is locked, the flash may be fired if
 the <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> is ON_AUTO_FLASH /
 ON_ALWAYS_FLASH / ON_AUTO_FLASH_REDEYE.</para>
          <para tool="javadoc-to-mdoc">When <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeExposureCompensation" /></c> is changed, even if the AE lock
 is ON, the camera device will still adjust its exposure value.</para>
          <para tool="javadoc-to-mdoc">If AE precapture is triggered (see <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" /></c>)
 when AE is already locked, the camera device will not change the exposure time
 (<c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" /></c>) and sensitivity (<c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" /></c>)
 parameters. The flash may be fired if the <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c>
 is ON_AUTO_FLASH/ON_AUTO_FLASH_REDEYE and the scene is too dark. If the
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> is ON_ALWAYS_FLASH, the scene may become overexposed.
 Similarly, AE precapture trigger CANCEL has no effect when AE is already locked.</para>
          <para tool="javadoc-to-mdoc">When an AE precapture sequence is triggered, AE unlock will not be able to unlock
 the AE if AE is locked by the camera device internally during precapture metering
 sequence In other words, submitting requests with AE unlock has no effect for an
 ongoing precapture metering sequence. Otherwise, the precapture metering sequence
 will never succeed in a sequence of preview requests where AE lock is always set
 to <c>false</c>.</para>
          <para tool="javadoc-to-mdoc">Since the camera device has a pipeline of in-flight requests, the settings that
 get locked do not necessarily correspond to the settings that were present in the
 latest capture result received from the camera device, since additional captures
 and AE updates may have occurred even before the result was sent out. If an
 application is switching between automatic and manual control and wishes to eliminate
 any flicker during the switch, the following procedure is recommended:</para>
          <para tool="javadoc-to-mdoc">See <c><see cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" /></c> for AE lock related state transition details.</para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_LOCK" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeExposureCompensation" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">The desired mode for the camera device's
 auto-exposure routine.</para>
          <para tool="javadoc-to-mdoc">This control is only effective if <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" /></c> is
 AUTO.</para>
          <para tool="javadoc-to-mdoc">When set to any of the ON modes, the camera device's
 auto-exposure routine is enabled, overriding the
 application's selected exposure time, sensor sensitivity,
 and frame duration (<c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" /></c>,
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" /></c>, and
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" /></c>). If one of the FLASH modes
 is selected, the camera device's flash unit controls are
 also overridden.</para>
          <para tool="javadoc-to-mdoc">The FLASH modes are only available if the camera device
 has a flash unit (<c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.FlashInfoAvailable" /></c> is <c>true</c>).</para>
          <para tool="javadoc-to-mdoc">If flash TORCH mode is desired, this field must be set to
 ON or OFF, and <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.FlashMode" /></c> set to TORCH.</para>
          <para tool="javadoc-to-mdoc">When set to any of the ON modes, the values chosen by the
 camera device auto-exposure routine for the overridden
 fields for a given capture will be available in its
 CaptureResult.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_MODE_ON" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_MODE_ON_AUTO_FLASH" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_MODE_ON_ALWAYS_FLASH" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_MODE_ON_AUTO_FLASH_REDEYE" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.FlashInfoAvailable" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.FlashMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" />
      </Docs>
    </Member>
    <Member MemberName="ControlAePrecaptureTrigger">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAePrecaptureTrigger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAePrecaptureTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_PRECAPTURE_TRIGGER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Whether the camera device will trigger a precapture
 metering sequence when it processes this request.</para>
          <para tool="javadoc-to-mdoc">This entry is normally set to IDLE, or is not
 included at all in the request settings. When included and
 set to START, the camera device will trigger the auto-exposure (AE)
 precapture metering sequence.</para>
          <para tool="javadoc-to-mdoc">When set to CANCEL, the camera device will cancel any active
 precapture metering trigger, and return to its initial AE state.
 If a precapture metering sequence is already completed, and the camera
 device has implicitly locked the AE for subsequent still capture, the
 CANCEL trigger will unlock the AE and return to its initial AE state.</para>
          <para tool="javadoc-to-mdoc">The precapture sequence should be triggered before starting a
 high-quality still capture for final metering decisions to
 be made, and for firing pre-capture flash pulses to estimate
 scene brightness and required final capture flash power, when
 the flash is enabled.</para>
          <para tool="javadoc-to-mdoc">Normally, this entry should be set to START for only a
 single request, and the application should wait until the
 sequence completes before starting a new one.</para>
          <para tool="javadoc-to-mdoc">When a precapture metering sequence is finished, the camera device
 may lock the auto-exposure routine internally to be able to accurately expose the
 subsequent still capture image (<c><c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlCaptureIntent" /></c> == STILL_CAPTURE</c>).
 For this case, the AE may not resume normal scan if no subsequent still capture is
 submitted. To ensure that the AE routine restarts normal scan, the application should
 submit a request with <c><c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" /></c> == true</c>, followed by a request
 with <c><c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" /></c> == false</c>, if the application decides not to submit a
 still capture request after the precapture sequence completes. Alternatively, for
 API level 23 or newer devices, the CANCEL can be used to unlock the camera device
 internally locked AE if the application doesn't submit a still capture request after
 the AE precapture trigger. Note that, the CANCEL was added in API level 23, and must not
 be used in devices that have earlier API levels.</para>
          <para tool="javadoc-to-mdoc">The exact effect of auto-exposure (AE) precapture trigger
 depends on the current AE mode and state; see
 <c><see cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" /></c> for AE precapture state transition
 details.</para>
          <para tool="javadoc-to-mdoc">On LEGACY-level devices, the precapture trigger is not supported;
 capturing a high-resolution JPEG image will automatically trigger a
 precapture sequence before the high-resolution capture, including
 potentially firing a pre-capture flash.</para>
          <para tool="javadoc-to-mdoc">Using the precapture trigger and the auto-focus trigger <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfTrigger" /></c>
 simultaneously is allowed. However, since these triggers often require cooperation between
 the auto-focus and auto-exposure routines (for example, the may need to be enabled for a
 focus sweep), the camera device may delay acting on a later trigger until the previous
 trigger has been fully handled. This may lead to longer intervals between the trigger and
 changes to <c><see cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" /></c> indicating the start of the precapture sequence, for
 example.</para>
          <para tool="javadoc-to-mdoc">If both the precapture and the auto-focus trigger are activated on the same request, then
 the camera device will complete them in the optimal order for that device.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_PRECAPTURE_TRIGGER_IDLE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_PRECAPTURE_TRIGGER_START" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AE_PRECAPTURE_TRIGGER_CANCEL" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Limited capability</b>
            </format> -
 Present on all camera devices that report being at least <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHawareLevel.Limited" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_PRECAPTURE_TRIGGER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlCaptureIntent" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeRegions">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAeRegions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAeRegions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_REGIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">List of metering areas to use for auto-exposure adjustment.</para>
          <para tool="javadoc-to-mdoc">Not available if <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAe" /></c> is 0.
 Otherwise will always be present.</para>
          <para tool="javadoc-to-mdoc">The maximum number of regions supported by the device is determined by the value
 of <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAe" /></c>.</para>
          <para tool="javadoc-to-mdoc">The coordinate system is based on the active pixel array,
 with (0,0) being the top-left pixel in the active pixel array, and
 (<c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c>.width - 1,
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c>.height - 1) being the
 bottom-right pixel in the active pixel array.</para>
          <para tool="javadoc-to-mdoc">The weight must be within <c>[0, 1000]</c>, and represents a weight
 for every pixel in the area. This means that a large metering area
 with the same weight as a smaller area will have more effect in
 the metering result. Metering areas can partially overlap and the
 camera device will add the weights in the overlap region.</para>
          <para tool="javadoc-to-mdoc">The weights are relative to weights of other exposure metering regions, so if only one
 region is used, all non-zero weights will have the same effect. A region with 0
 weight is ignored.</para>
          <para tool="javadoc-to-mdoc">If all regions have 0 weight, then no specific metering area needs to be used by the
 camera device.</para>
          <para tool="javadoc-to-mdoc">If the metering region is outside the used <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" /></c> returned in
 capture result metadata, the camera device will ignore the sections outside the crop
 region and output only the intersection rectangle as the metering region in the result
 metadata.  If the region is entirely outside the crop region, it will be ignored and
 not reported in the result metadata.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Pixel coordinates within <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 Coordinates must be between <c>[(0,0), (width, height))</c> of
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_REGIONS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAe" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeTargetFpsRange">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAeTargetFpsRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAeTargetFpsRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_TARGET_FPS_RANGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Range over which the auto-exposure routine can
 adjust the capture frame rate to maintain good
 exposure.</para>
          <para tool="javadoc-to-mdoc">Only constrains auto-exposure (AE) algorithm, not
 manual control of <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" /></c> and
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Frames per second (FPS)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 Any of the entries in <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableTargetFpsRanges" /></c></para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AE_TARGET_FPS_RANGE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableTargetFpsRanges" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" />
      </Docs>
    </Member>
    <Member MemberName="ControlAfMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAfMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAfMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AF_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Whether auto-focus (AF) is currently enabled, and what
 mode it is set to.</para>
          <para tool="javadoc-to-mdoc">Only effective if <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" /></c> = AUTO and the lens is not fixed focus
 (i.e. <c><c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoMinimumFocusDistance" /></c> &gt; 0</c>). Also note that
 when <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> is OFF, the behavior of AF is device
 dependent. It is recommended to lock AF by using <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfTrigger" /></c> before
 setting <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> to OFF, or set AF mode to OFF when AE is OFF.</para>
          <para tool="javadoc-to-mdoc">If the lens is controlled by the camera device auto-focus algorithm,
 the camera device will report the current AF status in <c><see cref="P:Android.Hardware.Camera2.CaptureResult.ControlAfState" /></c>
 in result metadata.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_MODE_AUTO" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_MODE_MACRO" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_MODE_CONTINUOUS_VIDEO" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_MODE_CONTINUOUS_PICTURE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_MODE_EDOF" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAfAvailableModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AF_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAfAvailableModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAfState" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoMinimumFocusDistance" />
      </Docs>
    </Member>
    <Member MemberName="ControlAfRegions">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAfRegions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAfRegions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AF_REGIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">List of metering areas to use for auto-focus.</para>
          <para tool="javadoc-to-mdoc">Not available if <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAf" /></c> is 0.
 Otherwise will always be present.</para>
          <para tool="javadoc-to-mdoc">The maximum number of focus areas supported by the device is determined by the value
 of <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAf" /></c>.</para>
          <para tool="javadoc-to-mdoc">The coordinate system is based on the active pixel array,
 with (0,0) being the top-left pixel in the active pixel array, and
 (<c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c>.width - 1,
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c>.height - 1) being the
 bottom-right pixel in the active pixel array.</para>
          <para tool="javadoc-to-mdoc">The weight must be within <c>[0, 1000]</c>, and represents a weight
 for every pixel in the area. This means that a large metering area
 with the same weight as a smaller area will have more effect in
 the metering result. Metering areas can partially overlap and the
 camera device will add the weights in the overlap region.</para>
          <para tool="javadoc-to-mdoc">The weights are relative to weights of other metering regions, so if only one region
 is used, all non-zero weights will have the same effect. A region with 0 weight is
 ignored.</para>
          <para tool="javadoc-to-mdoc">If all regions have 0 weight, then no specific metering area needs to be used by the
 camera device.</para>
          <para tool="javadoc-to-mdoc">If the metering region is outside the used <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" /></c> returned in
 capture result metadata, the camera device will ignore the sections outside the crop
 region and output only the intersection rectangle as the metering region in the result
 metadata. If the region is entirely outside the crop region, it will be ignored and
 not reported in the result metadata.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Pixel coordinates within <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 Coordinates must be between <c>[(0,0), (width, height))</c> of
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AF_REGIONS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAf" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="ControlAfTrigger">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAfTrigger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAfTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AF_TRIGGER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Whether the camera device will trigger autofocus for this request.</para>
          <para tool="javadoc-to-mdoc">This entry is normally set to IDLE, or is not
 included at all in the request settings.</para>
          <para tool="javadoc-to-mdoc">When included and set to START, the camera device will trigger the
 autofocus algorithm. If autofocus is disabled, this trigger has no effect.</para>
          <para tool="javadoc-to-mdoc">When set to CANCEL, the camera device will cancel any active trigger,
 and return to its initial AF state.</para>
          <para tool="javadoc-to-mdoc">Generally, applications should set this entry to START or CANCEL for only a
 single capture, and then return it to IDLE (or not set at all). Specifying
 START for multiple captures in a row means restarting the AF operation over
 and over again.</para>
          <para tool="javadoc-to-mdoc">See <c><see cref="P:Android.Hardware.Camera2.CaptureResult.ControlAfState" /></c> for what the trigger means for each AF mode.</para>
          <para tool="javadoc-to-mdoc">Using the autofocus trigger and the precapture trigger <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" /></c>
 simultaneously is allowed. However, since these triggers often require cooperation between
 the auto-focus and auto-exposure routines (for example, the may need to be enabled for a
 focus sweep), the camera device may delay acting on a later trigger until the previous
 trigger has been fully handled. This may lead to longer intervals between the trigger and
 changes to <c><see cref="P:Android.Hardware.Camera2.CaptureResult.ControlAfState" /></c>, for example.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_TRIGGER_IDLE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_TRIGGER_START" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AF_TRIGGER_CANCEL" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AF_TRIGGER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAfState" />
      </Docs>
    </Member>
    <Member MemberName="ControlAwbLock">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAwbLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAwbLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AWB_LOCK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="number">
            <item>
              <term>Starting in auto-AWB mode:</term>
            </item>
            <item>
              <term>Lock AWB</term>
            </item>
            <item>
              <term>Wait for the first result to be output that has the AWB locked</term>
            </item>
            <item>
              <term>Copy AWB settings from that result into a request, set the request to manual AWB</term>
            </item>
            <item>
              <term>Submit the capture request, proceed to run manual AWB as desired.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="number">
              <item>
                <term>Starting in auto-AWB mode:</term>
              </item>
              <item>
                <term>Lock AWB</term>
              </item>
              <item>
                <term>Wait for the first result to be output that has the AWB locked</term>
              </item>
              <item>
                <term>Copy AWB settings from that result into a request, set the request to manual AWB</term>
              </item>
              <item>
                <term>Submit the capture request, proceed to run manual AWB as desired.</term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Whether auto-white balance (AWB) is currently locked to its
 latest calculated values.</para>
          <para tool="javadoc-to-mdoc">When set to <c>true</c> (ON), the AWB algorithm is locked to its latest parameters,
 and will not change color balance settings until the lock is set to <c>false</c> (OFF).</para>
          <para tool="javadoc-to-mdoc">Since the camera device has a pipeline of in-flight requests, the settings that
 get locked do not necessarily correspond to the settings that were present in the
 latest capture result received from the camera device, since additional captures
 and AWB updates may have occurred even before the result was sent out. If an
 application is switching between automatic and manual control and wishes to eliminate
 any flicker during the switch, the following procedure is recommended:</para>
          <para tool="javadoc-to-mdoc">Note that AWB lock is only meaningful when
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" /></c> is in the AUTO mode; in other modes,
 AWB is already fixed to a specific setting.</para>
          <para tool="javadoc-to-mdoc">Some LEGACY devices may not support ON; the value is then overridden to OFF.</para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AWB_LOCK" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlAwbMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAwbMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAwbMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AWB_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Whether auto-white balance (AWB) is currently setting the color
 transform fields, and what its illumination target
 is.</para>
          <para tool="javadoc-to-mdoc">This control is only effective if <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" /></c> is AUTO.</para>
          <para tool="javadoc-to-mdoc">When set to the ON mode, the camera device's auto-white balance
 routine is enabled, overriding the application's selected
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionTransform" /></c>, <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionGains" /></c> and
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" /></c>. Note that when <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c>
 is OFF, the behavior of AWB is device dependent. It is recommened to
 also set AWB mode to OFF or lock AWB by using <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" /></c> before
 setting AE mode to OFF.</para>
          <para tool="javadoc-to-mdoc">When set to the OFF mode, the camera device's auto-white balance
 routine is disabled. The application manually controls the white
 balance by <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionTransform" /></c>, <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionGains" /></c>
 and <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" /></c>.</para>
          <para tool="javadoc-to-mdoc">When set to any other modes, the camera device's auto-white
 balance routine is disabled. The camera device uses each
 particular illumination target for white balance
 adjustment. The application's values for
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionTransform" /></c>,
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionGains" /></c> and
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" /></c> are ignored.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_AUTO" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_INCANDESCENT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_FLUORESCENT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_WARM_FLUORESCENT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_DAYLIGHT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_CLOUDY_DAYLIGHT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_TWILIGHT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_AWB_MODE_SHADE" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAwbAvailableModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AWB_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionGains" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionTransform" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAwbAvailableModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlAwbRegions">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlAwbRegions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlAwbRegions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AWB_REGIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">List of metering areas to use for auto-white-balance illuminant
 estimation.</para>
          <para tool="javadoc-to-mdoc">Not available if <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAwb" /></c> is 0.
 Otherwise will always be present.</para>
          <para tool="javadoc-to-mdoc">The maximum number of regions supported by the device is determined by the value
 of <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAwb" /></c>.</para>
          <para tool="javadoc-to-mdoc">The coordinate system is based on the active pixel array,
 with (0,0) being the top-left pixel in the active pixel array, and
 (<c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c>.width - 1,
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c>.height - 1) being the
 bottom-right pixel in the active pixel array.</para>
          <para tool="javadoc-to-mdoc">The weight must range from 0 to 1000, and represents a weight
 for every pixel in the area. This means that a large metering area
 with the same weight as a smaller area will have more effect in
 the metering result. Metering areas can partially overlap and the
 camera device will add the weights in the overlap region.</para>
          <para tool="javadoc-to-mdoc">The weights are relative to weights of other white balance metering regions, so if
 only one region is used, all non-zero weights will have the same effect. A region with
 0 weight is ignored.</para>
          <para tool="javadoc-to-mdoc">If all regions have 0 weight, then no specific metering area needs to be used by the
 camera device.</para>
          <para tool="javadoc-to-mdoc">If the metering region is outside the used <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" /></c> returned in
 capture result metadata, the camera device will ignore the sections outside the crop
 region and output only the intersection rectangle as the metering region in the result
 metadata.  If the region is entirely outside the crop region, it will be ignored and
 not reported in the result metadata.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Pixel coordinates within <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 Coordinates must be between <c>[(0,0), (width, height))</c> of
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_AWB_REGIONS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAwb" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="ControlCaptureIntent">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlCaptureIntent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlCaptureIntent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_CAPTURE_INTENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Information to the camera device 3A (auto-exposure,
 auto-focus, auto-white balance) routines about the purpose
 of this capture, to help the camera device to decide optimal 3A
 strategy.</para>
          <para tool="javadoc-to-mdoc">This control (except for MANUAL) is only effective if
 <c><c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" /></c> != OFF</c> and any 3A routine is active.</para>
          <para tool="javadoc-to-mdoc">ZERO_SHUTTER_LAG will be supported if <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.RequestAvailableCapabilities" /></c>
 contains PRIVATE_REPROCESSING or YUV_REPROCESSING. MANUAL will be supported if
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.RequestAvailableCapabilities" /></c> contains MANUAL_SENSOR. Other intent values are
 always supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_CAPTURE_INTENT_CUSTOM" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_CAPTURE_INTENT_PREVIEW" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_CAPTURE_INTENT_STILL_CAPTURE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_CAPTURE_INTENT_VIDEO_RECORD" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_CAPTURE_INTENT_VIDEO_SNAPSHOT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_CAPTURE_INTENT_ZERO_SHUTTER_LAG" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_CAPTURE_INTENT_MANUAL" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_CAPTURE_INTENT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.RequestAvailableCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="ControlEffectMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlEffectMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlEffectMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_EFFECT_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">A special color effect to apply.</para>
          <para tool="javadoc-to-mdoc">When this mode is set, a color effect will be applied
 to images produced by the camera device. The interpretation
 and implementation of these color effects is left to the
 implementor of the camera device, and should not be
 depended on to be consistent (or present) across all
 devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_MONO" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_NEGATIVE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_SOLARIZE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_SEPIA" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_POSTERIZE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_WHITEBOARD" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_BLACKBOARD" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_EFFECT_MODE_AQUA" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableEffects" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_EFFECT_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableEffects" />
      </Docs>
    </Member>
    <Member MemberName="ControlMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Overall mode of 3A (auto-exposure, auto-white-balance, auto-focus) control
 routines.</para>
          <para tool="javadoc-to-mdoc">This is a top-level 3A control switch. When set to OFF, all 3A control
 by the camera device is disabled. The application must set the fields for
 capture parameters itself.</para>
          <para tool="javadoc-to-mdoc">When set to AUTO, the individual algorithm controls in
 android.control.* are in effect, such as <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfMode" /></c>.</para>
          <para tool="javadoc-to-mdoc">When set to USE_SCENE_MODE, the individual controls in
 android.control.* are mostly disabled, and the camera device implements
 one of the scene mode settings (such as ACTION, SUNSET, or PARTY)
 as it wishes. The camera device scene mode 3A settings are provided by
 <c><see cref="T:Android.Hardware.Camera2.CaptureResult" /></c>.</para>
          <para tool="javadoc-to-mdoc">When set to OFF_KEEP_STATE, it is similar to OFF mode, the only difference
 is that this frame will not be used by camera device background 3A statistics
 update, as if this frame is never captured. This mode can be used in the scenario
 where the application doesn't want a 3A manual control capture to affect
 the subsequent auto 3A capture results.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_MODE_AUTO" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_MODE_USE_SCENE_MODE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_MODE_OFF_KEEP_STATE" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableModes" />
      </Docs>
    </Member>
    <Member MemberName="ControlSceneMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlSceneMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlSceneMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_SCENE_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Control for which scene mode is currently active.</para>
          <para tool="javadoc-to-mdoc">Scene modes are custom camera modes optimized for a certain set of conditions and
 capture settings.</para>
          <para tool="javadoc-to-mdoc">This is the mode that that is active when
 <c><c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" /></c> == USE_SCENE_MODE</c>. Aside from FACE_PRIORITY, these modes will
 disable <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c>, <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" /></c>, and <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfMode" /></c>
 while in use.</para>
          <para tool="javadoc-to-mdoc">The interpretation and implementation of these scene modes is left
 to the implementor of the camera device. Their behavior will not be
 consistent across all devices, and any given device may only implement
 a subset of these modes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_DISABLED" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_FACE_PRIORITY" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_ACTION" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_PORTRAIT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_LANDSCAPE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_NIGHT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_NIGHT_PORTRAIT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_THEATRE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_BEACH" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_SNOW" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_SUNSET" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_STEADYPHOTO" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_FIREWORKS" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_SPORTS" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_PARTY" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_CANDLELIGHT" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_BARCODE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_HIGH_SPEED_VIDEO" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_SCENE_MODE_HDR" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableSceneModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_SCENE_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableSceneModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlVideoStabilizationMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ControlVideoStabilizationMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ControlVideoStabilizationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_VIDEO_STABILIZATION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Whether video stabilization is
 active.</para>
          <para tool="javadoc-to-mdoc">Video stabilization automatically translates and scales images from
 the camera in order to stabilize motion between consecutive frames.</para>
          <para tool="javadoc-to-mdoc">If enabled, video stabilization can modify the
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" /></c> to keep the video stream stabilized.</para>
          <para tool="javadoc-to-mdoc">Switching between different video stabilization modes may take several
 frames to initialize, the camera device will report the current mode
 in capture result metadata. For example, When "ON" mode is requested,
 the video stabilization modes in the first several capture results may
 still be "OFF", and it will become "ON" when the initialization is
 done.</para>
          <para tool="javadoc-to-mdoc">If a camera device supports both this mode and OIS
 (<c><see cref="P:Android.Hardware.Camera2.CaptureRequest.LensOpticalStabilizationMode" /></c>), turning both modes on may
 produce undesirable interaction, so it is recommended not to enable
 both at the same time.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_VIDEO_STABILIZATION_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.CONTROL_VIDEO_STABILIZATION_MODE_ON" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CONTROL_VIDEO_STABILIZATION_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensOpticalStabilizationMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CREATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#CREATOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#describeContents()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key EdgeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key EdgeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EDGE_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Operation mode for edge
 enhancement.</para>
          <para tool="javadoc-to-mdoc">Edge enhancement improves sharpness and details in the captured image. OFF means
 no enhancement will be applied by the camera device.</para>
          <para tool="javadoc-to-mdoc">FAST/HIGH_QUALITY both mean camera device determined enhancement
 will be applied. HIGH_QUALITY mode indicates that the
 camera device will use the highest-quality enhancement algorithms,
 even if it slows down capture rate. FAST means the camera device will
 not slow down capture rate when applying edge enhancement. FAST may be the same as OFF if
 edge enhancement will slow down capture rate. Every output stream will have a similar
 amount of enhancement applied.</para>
          <para tool="javadoc-to-mdoc">ZERO_SHUTTER_LAG is meant to be used by applications that maintain a continuous circular
 buffer of high-resolution images during preview and reprocess image(s) from that buffer
 into a final capture when triggered by the user. In this mode, the camera device applies
 edge enhancement to low-resolution streams (below maximum recording resolution) to
 maximize preview quality, but does not apply edge enhancement to high-resolution streams,
 since those will be reprocessed later if necessary.</para>
          <para tool="javadoc-to-mdoc">For YUV_REPROCESSING, these FAST/HIGH_QUALITY modes both mean that the camera
 device will apply FAST/HIGH_QUALITY YUV-domain edge enhancement, respectively.
 The camera device may adjust its internal edge enhancement parameters for best
 image quality based on the <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ReprocessEffectiveExposureFactor" /></c>, if it is set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.EDGE_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.EDGE_MODE_FAST" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.EDGE_MODE_HIGH_QUALITY" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.EDGE_MODE_ZERO_SHUTTER_LAG" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.EdgeAvailableEdgeModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#EDGE_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.EdgeAvailableEdgeModes" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ReprocessEffectiveExposureFactor" />
      </Docs>
    </Member>
    <Member MemberName="FlashMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key FlashMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key FlashMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLASH_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">The desired mode for for the camera device's flash control.</para>
          <para tool="javadoc-to-mdoc">This control is only effective when flash unit is available
 (<c><c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.FlashInfoAvailable" /></c> == true</c>).</para>
          <para tool="javadoc-to-mdoc">When this control is used, the <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> must be set to ON or OFF.
 Otherwise, the camera device auto-exposure related flash control (ON_AUTO_FLASH,
 ON_ALWAYS_FLASH, or ON_AUTO_FLASH_REDEYE) will override this control.</para>
          <para tool="javadoc-to-mdoc">When set to OFF, the camera device will not fire flash for this capture.</para>
          <para tool="javadoc-to-mdoc">When set to SINGLE, the camera device will fire flash regardless of the camera
 device's auto-exposure routine's result. When used in still capture case, this
 control should be used along with auto-exposure (AE) precapture metering sequence
 (<c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" /></c>), otherwise, the image may be incorrectly exposed.</para>
          <para tool="javadoc-to-mdoc">When set to TORCH, the flash will be on continuously. This mode can be used
 for use cases such as preview, auto-focus assist, still capture, or video recording.</para>
          <para tool="javadoc-to-mdoc">The flash status will be reported by <c><see cref="P:Android.Hardware.Camera2.CaptureResult.FlashState" /></c> in the capture result metadata.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.FLASH_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.FLASH_MODE_SINGLE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.FLASH_MODE_TORCH" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#FLASH_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.FlashInfoAvailable" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.FlashState" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public Java.Lang.Object Get (Android.Hardware.Camera2.CaptureRequest.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Get(class Android.Hardware.Camera2.CaptureRequest/Key key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(Landroid/hardware/camera2/CaptureRequest$Key;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Android.Hardware.Camera2.CaptureRequest+Key" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HotPixelMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key HotPixelMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key HotPixelMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("HOT_PIXEL_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Operational mode for hot pixel correction.</para>
          <para tool="javadoc-to-mdoc">Hotpixel correction interpolates out, or otherwise removes, pixels
 that do not accurately measure the incoming light (i.e. pixels that
 are stuck at an arbitrary value or are oversensitive).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.HOT_PIXEL_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.HOT_PIXEL_MODE_FAST" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.HOT_PIXEL_MODE_HIGH_QUALITY" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.HotPixelAvailableHotPixelModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#HOT_PIXEL_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.HotPixelAvailableHotPixelModes" />
      </Docs>
    </Member>
    <Member MemberName="JpegGpsLocation">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key JpegGpsLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key JpegGpsLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_GPS_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">A location object to use when generating image GPS metadata.</para>
          <para tool="javadoc-to-mdoc">Setting a location object in a request will include the GPS coordinates of the location
 into any JPEG images captured based on the request. These coordinates can then be
 viewed by anyone who receives the JPEG image.</para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_GPS_LOCATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JpegOrientation">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key JpegOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key JpegOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_ORIENTATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <sample external-id="ED7F14786522EE91B4E8E55FCCB78522" />
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <sample external-id="ED7F14786522EE91B4E8E55FCCB78522" />
          </para>
          <para tool="javadoc-to-mdoc">The orientation for a JPEG image.</para>
          <para tool="javadoc-to-mdoc">The clockwise rotation angle in degrees, relative to the orientation
 to the camera, that the JPEG picture needs to be rotated by, to be viewed
 upright.</para>
          <para tool="javadoc-to-mdoc">Camera devices may either encode this value into the JPEG EXIF header, or
 rotate the image data to match this orientation. When the image data is rotated,
 the thumbnail data will also be rotated.</para>
          <para tool="javadoc-to-mdoc">Note that this orientation is relative to the orientation of the camera sensor, given
 by <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorOrientation" /></c>.</para>
          <para tool="javadoc-to-mdoc">To translate from the device orientation given by the Android sensor APIs, the following
 sample code may be used:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Degrees in multiples of 90</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 0, 90, 180, 270</para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_ORIENTATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorOrientation" />
      </Docs>
    </Member>
    <Member MemberName="JpegQuality">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key JpegQuality { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key JpegQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_QUALITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Compression quality of the final JPEG
 image.</para>
          <para tool="javadoc-to-mdoc">85-95 is typical usage range.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 1-100; larger is higher quality</para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_QUALITY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JpegThumbnailQuality">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key JpegThumbnailQuality { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key JpegThumbnailQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_THUMBNAIL_QUALITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Compression quality of JPEG
 thumbnail.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 1-100; larger is higher quality</para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_THUMBNAIL_QUALITY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JpegThumbnailSize">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key JpegThumbnailSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key JpegThumbnailSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_THUMBNAIL_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="bullet">
            <item>
              <term>Set the <c><see cref="F:Android.Media.ExifInterface.TagOrientation" /></c>
   and keep jpeg and thumbnail image data unrotated.</term>
            </item>
            <item>
              <term>Rotate the jpeg and thumbnail image data and not set
   <c><see cref="F:Android.Media.ExifInterface.TagOrientation" /></c>. In this
   case, LIMITED or FULL hardware level devices will report rotated thumnail size in
   capture result, so the width and height will be interchanged if 90 or 270 degree
   orientation is requested. LEGACY device will always report unrotated thumbnail
   size.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="bullet">
              <item>
                <term>Set the <c><see cref="F:Android.Media.ExifInterface.TagOrientation" /></c>
   and keep jpeg and thumbnail image data unrotated.</term>
              </item>
              <item>
                <term>Rotate the jpeg and thumbnail image data and not set
   <c><see cref="F:Android.Media.ExifInterface.TagOrientation" /></c>. In this
   case, LIMITED or FULL hardware level devices will report rotated thumnail size in
   capture result, so the width and height will be interchanged if 90 or 270 degree
   orientation is requested. LEGACY device will always report unrotated thumbnail
   size.</term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Resolution of embedded JPEG thumbnail.</para>
          <para tool="javadoc-to-mdoc">When set to (0, 0) value, the JPEG EXIF will not contain thumbnail,
 but the captured JPEG will still be a valid image.</para>
          <para tool="javadoc-to-mdoc">For best results, when issuing a request for a JPEG image, the thumbnail size selected
 should have the same aspect ratio as the main JPEG output.</para>
          <para tool="javadoc-to-mdoc">If the thumbnail image aspect ratio differs from the JPEG primary image aspect
 ratio, the camera device creates the thumbnail by cropping it from the primary image.
 For example, if the primary image has 4:3 aspect ratio, the thumbnail image has
 16:9 aspect ratio, the primary image will be cropped vertically (letterbox) to
 generate the thumbnail image. The thumbnail image will always have a smaller Field
 Of View (FOV) than the primary image when aspect ratios differ.</para>
          <para tool="javadoc-to-mdoc">When an <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.JpegOrientation" /></c> of non-zero degree is requested,
 the camera device will handle thumbnail rotation in one of the following ways:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.JpegAvailableThumbnailSizes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#JPEG_THUMBNAIL_SIZE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.JpegAvailableThumbnailSizes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.JpegOrientation" />
      </Docs>
    </Member>
    <Member MemberName="LensAperture">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key LensAperture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key LensAperture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_APERTURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">The desired lens aperture size, as a ratio of lens focal length to the
 effective aperture diameter.</para>
          <para tool="javadoc-to-mdoc">Setting this value is only supported on the camera devices that have a variable
 aperture lens.</para>
          <para tool="javadoc-to-mdoc">When this is supported and <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> is OFF,
 this can be set along with <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" /></c>,
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" /></c>, and <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" /></c>
 to achieve manual exposure control.</para>
          <para tool="javadoc-to-mdoc">The requested aperture value may take several frames to reach the
 requested value; the camera device will report the current (intermediate)
 aperture size in capture result metadata while the aperture is changing.
 While the aperture is still changing, <c><see cref="P:Android.Hardware.Camera2.CaptureResult.LensState" /></c> will be set to MOVING.</para>
          <para tool="javadoc-to-mdoc">When this is supported and <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> is one of
 the ON modes, this will be overridden by the camera device
 auto-exposure algorithm, the overridden values are then provided
 back to the user in the corresponding result.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: The f-number (f/N)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableApertures" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_APERTURE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableApertures" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.LensState" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" />
      </Docs>
    </Member>
    <Member MemberName="LensFilterDensity">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key LensFilterDensity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key LensFilterDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_FILTER_DENSITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">The desired setting for the lens neutral density filter(s).</para>
          <para tool="javadoc-to-mdoc">This control will not be supported on most camera devices.</para>
          <para tool="javadoc-to-mdoc">Lens filters are typically used to lower the amount of light the
 sensor is exposed to (measured in steps of EV). As used here, an EV
 step is the standard logarithmic representation, which are
 non-negative, and inversely proportional to the amount of light
 hitting the sensor.  For example, setting this to 0 would result
 in no reduction of the incoming light, and setting this to 2 would
 mean that the filter is set to reduce incoming light by two stops
 (allowing 1/4 of the prior amount of light to the sensor).</para>
          <para tool="javadoc-to-mdoc">It may take several frames before the lens filter density changes
 to the requested value. While the filter density is still changing,
 <c><see cref="P:Android.Hardware.Camera2.CaptureResult.LensState" /></c> will be set to MOVING.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Exposure Value (EV)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFilterDensities" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_FILTER_DENSITY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFilterDensities" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.LensState" />
      </Docs>
    </Member>
    <Member MemberName="LensFocalLength">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key LensFocalLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key LensFocalLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_FOCAL_LENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">The desired lens focal length; used for optical zoom.</para>
          <para tool="javadoc-to-mdoc">This setting controls the physical focal length of the camera
 device's lens. Changing the focal length changes the field of
 view of the camera device, and is usually used for optical zoom.</para>
          <para tool="javadoc-to-mdoc">Like <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.LensFocusDistance" /></c> and <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.LensAperture" /></c>, this
 setting won't be applied instantaneously, and it may take several
 frames before the lens can change to the requested focal length.
 While the focal length is still changing, <c><see cref="P:Android.Hardware.Camera2.CaptureResult.LensState" /></c> will
 be set to MOVING.</para>
          <para tool="javadoc-to-mdoc">Optical zoom will not be supported on most devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Millimeters</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFocalLengths" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_FOCAL_LENGTH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensAperture" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensFocusDistance" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFocalLengths" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.LensState" />
      </Docs>
    </Member>
    <Member MemberName="LensFocusDistance">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key LensFocusDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key LensFocusDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_FOCUS_DISTANCE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Desired distance to plane of sharpest focus,
 measured from frontmost surface of the lens.</para>
          <para tool="javadoc-to-mdoc">This control can be used for setting manual focus, on devices that support
 the MANUAL_SENSOR capability and have a variable-focus lens (see
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoMinimumFocusDistance" /></c>).</para>
          <para tool="javadoc-to-mdoc">A value of <c>0.0f</c> means infinity focus. The value set will be clamped to
 <c>[0.0f, <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoMinimumFocusDistance" /></c>]</c>.</para>
          <para tool="javadoc-to-mdoc">Like <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.LensFocalLength" /></c>, this setting won't be applied
 instantaneously, and it may take several frames before the lens
 can move to the requested focus distance. While the lens is still moving,
 <c><see cref="P:Android.Hardware.Camera2.CaptureResult.LensState" /></c> will be set to MOVING.</para>
          <para tool="javadoc-to-mdoc">LEGACY devices support at most setting this to <c>0.0f</c>
 for infinity focus.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: See <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoFocusDistanceCalibration" /></c> for details</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 &gt;= 0</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_FOCUS_DISTANCE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensFocalLength" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoFocusDistanceCalibration" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoMinimumFocusDistance" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.LensState" />
      </Docs>
    </Member>
    <Member MemberName="LensOpticalStabilizationMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key LensOpticalStabilizationMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key LensOpticalStabilizationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_OPTICAL_STABILIZATION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Sets whether the camera device uses optical image stabilization (OIS)
 when capturing images.</para>
          <para tool="javadoc-to-mdoc">OIS is used to compensate for motion blur due to small
 movements of the camera during capture. Unlike digital image
 stabilization (<c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlVideoStabilizationMode" /></c>), OIS
 makes use of mechanical elements to stabilize the camera
 sensor, and thus allows for longer exposure times before
 camera shake becomes apparent.</para>
          <para tool="javadoc-to-mdoc">Switching between different optical stabilization modes may take several
 frames to initialize, the camera device will report the current mode in
 capture result metadata. For example, When "ON" mode is requested, the
 optical stabilization modes in the first several capture results may still
 be "OFF", and it will become "ON" when the initialization is done.</para>
          <para tool="javadoc-to-mdoc">If a camera device supports both OIS and digital image stabilization
 (<c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlVideoStabilizationMode" /></c>), turning both modes on may produce undesirable
 interaction, so it is recommended not to enable both at the same time.</para>
          <para tool="javadoc-to-mdoc">Not all devices will support OIS; see
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableOpticalStabilization" /></c> for
 available controls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.LENS_OPTICAL_STABILIZATION_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.LENS_OPTICAL_STABILIZATION_MODE_ON" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableOpticalStabilization" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Limited capability</b>
            </format> -
 Present on all camera devices that report being at least <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHawareLevel.Limited" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#LENS_OPTICAL_STABILIZATION_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlVideoStabilizationMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableOpticalStabilization" />
      </Docs>
    </Member>
    <Member MemberName="NoiseReductionMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key NoiseReductionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key NoiseReductionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NOISE_REDUCTION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Mode of operation for the noise reduction algorithm.</para>
          <para tool="javadoc-to-mdoc">The noise reduction algorithm attempts to improve image quality by removing
 excessive noise added by the capture process, especially in dark conditions.</para>
          <para tool="javadoc-to-mdoc">OFF means no noise reduction will be applied by the camera device, for both raw and
 YUV domain.</para>
          <para tool="javadoc-to-mdoc">MINIMAL means that only sensor raw domain basic noise reduction is enabled ,to remove
 demosaicing or other processing artifacts. For YUV_REPROCESSING, MINIMAL is same as OFF.
 This mode is optional, may not be support by all devices. The application should check
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.NoiseReductionAvailableNoiseReductionModes" /></c> before using it.</para>
          <para tool="javadoc-to-mdoc">FAST/HIGH_QUALITY both mean camera device determined noise filtering
 will be applied. HIGH_QUALITY mode indicates that the camera device
 will use the highest-quality noise filtering algorithms,
 even if it slows down capture rate. FAST means the camera device will not
 slow down capture rate when applying noise filtering. FAST may be the same as MINIMAL if
 MINIMAL is listed, or the same as OFF if any noise filtering will slow down capture rate.
 Every output stream will have a similar amount of enhancement applied.</para>
          <para tool="javadoc-to-mdoc">ZERO_SHUTTER_LAG is meant to be used by applications that maintain a continuous circular
 buffer of high-resolution images during preview and reprocess image(s) from that buffer
 into a final capture when triggered by the user. In this mode, the camera device applies
 noise reduction to low-resolution streams (below maximum recording resolution) to maximize
 preview quality, but does not apply noise reduction to high-resolution streams, since
 those will be reprocessed later if necessary.</para>
          <para tool="javadoc-to-mdoc">For YUV_REPROCESSING, these FAST/HIGH_QUALITY modes both mean that the camera device
 will apply FAST/HIGH_QUALITY YUV domain noise reduction, respectively. The camera device
 may adjust the noise reduction parameters for best image quality based on the
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ReprocessEffectiveExposureFactor" /></c> if it is set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.NOISE_REDUCTION_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.NOISE_REDUCTION_MODE_FAST" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.NOISE_REDUCTION_MODE_HIGH_QUALITY" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.NOISE_REDUCTION_MODE_MINIMAL" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.NOISE_REDUCTION_MODE_ZERO_SHUTTER_LAG" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.NoiseReductionAvailableNoiseReductionModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#NOISE_REDUCTION_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.NoiseReductionAvailableNoiseReductionModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ReprocessEffectiveExposureFactor" />
      </Docs>
    </Member>
    <Member MemberName="ScalerCropRegion">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ScalerCropRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ScalerCropRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCALER_CROP_REGION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">The desired region of the sensor to read out for this capture.</para>
          <para tool="javadoc-to-mdoc">This control can be used to implement digital zoom.</para>
          <para tool="javadoc-to-mdoc">The crop region coordinate system is based off
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c>, with <c>(0, 0)</c> being the
 top-left corner of the sensor active array.</para>
          <para tool="javadoc-to-mdoc">Output streams use this rectangle to produce their output,
 cropping to a smaller region if necessary to maintain the
 stream's aspect ratio, then scaling the sensor input to
 match the output's configured resolution.</para>
          <para tool="javadoc-to-mdoc">The crop region is applied after the RAW to other color
 space (e.g. YUV) conversion. Since raw streams
 (e.g. RAW16) don't have the conversion stage, they are not
 croppable. The crop region will be ignored by raw streams.</para>
          <para tool="javadoc-to-mdoc">For non-raw streams, any additional per-stream cropping will
 be done to maximize the final pixel area of the stream.</para>
          <para tool="javadoc-to-mdoc">For example, if the crop region is set to a 4:3 aspect
 ratio, then 4:3 streams will use the exact crop
 region. 16:9 streams will further crop vertically
 (letterbox).</para>
          <para tool="javadoc-to-mdoc">Conversely, if the crop region is set to a 16:9, then 4:3
 outputs will crop horizontally (pillarbox), and 16:9
 streams will match exactly. These additional crops will
 be centered within the crop region.</para>
          <para tool="javadoc-to-mdoc">The width and height of the crop region cannot
 be set to be smaller than
 <c>floor( activeArraySize.width / <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerAvailableMaxDigitalZoom" /></c> )</c> and
 <c>floor( activeArraySize.height / <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerAvailableMaxDigitalZoom" /></c> )</c>, respectively.</para>
          <para tool="javadoc-to-mdoc">The camera device may adjust the crop region to account
 for rounding and other hardware requirements; the final
 crop region used will be included in the output capture
 result.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Pixel coordinates relative to
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" /></c></para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SCALER_CROP_REGION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerAvailableMaxDigitalZoom" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="SensorExposureTime">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key SensorExposureTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key SensorExposureTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_EXPOSURE_TIME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Duration each pixel is exposed to
 light.</para>
          <para tool="javadoc-to-mdoc">If the sensor can't expose this exact duration, it will shorten the
 duration exposed to the nearest possible value (rather than expose longer).
 The final exposure time used will be available in the output capture result.</para>
          <para tool="javadoc-to-mdoc">This control is only effective if <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> or <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" /></c> is set to
 OFF; otherwise the auto-exposure algorithm will override this value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Nanoseconds</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoExposureTimeRange" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_EXPOSURE_TIME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoExposureTimeRange" />
      </Docs>
    </Member>
    <Member MemberName="SensorFrameDuration">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key SensorFrameDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key SensorFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_FRAME_DURATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="bullet">
            <item>
              <term>Requested resolutions of output image streams</term>
            </item>
            <item>
              <term>Availability of binning / skipping modes on the imager</term>
            </item>
            <item>
              <term>The bandwidth of the imager interface</term>
            </item>
            <item>
              <term>The bandwidth of the various ISP processing blocks</term>
            </item>
          </list>
          <list type="bullet">
            <item>
              <term>The image sensor is always configured to output the smallest
 resolution possible given the application's requested output stream
 sizes.  The smallest resolution is defined as being at least as large
 as the largest requested output stream size; the camera pipeline must
 never digitally upsample sensor data when the crop region covers the
 whole sensor. In general, this means that if only small output stream
 resolutions are configured, the sensor can provide a higher frame
 rate.</term>
            </item>
            <item>
              <term>Since any request may use any or all the currently configured
 output streams, the sensor and ISP must be configured to support
 scaling a single capture to all the streams at the same time.  This
 means the camera pipeline must be ready to produce the largest
 requested output size without any delay.  Therefore, the overall
 frame rate of a given configured stream set is governed only by the
 largest requested stream resolution.</term>
            </item>
            <item>
              <term>Using more than one output stream in a request does not affect the
 frame duration.</term>
            </item>
            <item>
              <term>Certain format-streams may need to do additional background processing
 before data is consumed/produced by that stream. These processors
 can run concurrently to the rest of the camera pipeline, but
 cannot process more than 1 capture at a time.</term>
            </item>
          </list>
          <list type="number">
            <item>
              <term>Let the set of currently configured input/output streams
 be called <c>S</c>.</term>
            </item>
            <item>
              <term>Find the minimum frame durations for each stream in <c>S</c>, by looking
 it up in <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerStreamConfigurationMap" /></c> using <c><see cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputMinFrameDuration(System.Int32,Android.Util.Size)" /></c>
 (with its respective size/format). Let this set of frame durations be
 called <c>F</c>.</term>
            </item>
            <item>
              <term>For any given request <c>R</c>, the minimum frame duration allowed
 for <c>R</c> is the maximum out of all values in <c>F</c>. Let the streams
 used in <c>R</c> be called <c>S_r</c>.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="bullet">
              <item>
                <term>Requested resolutions of output image streams</term>
              </item>
              <item>
                <term>Availability of binning / skipping modes on the imager</term>
              </item>
              <item>
                <term>The bandwidth of the imager interface</term>
              </item>
              <item>
                <term>The bandwidth of the various ISP processing blocks</term>
              </item>
            </list>
            <list type="bullet">
              <item>
                <term>The image sensor is always configured to output the smallest
 resolution possible given the application's requested output stream
 sizes.  The smallest resolution is defined as being at least as large
 as the largest requested output stream size; the camera pipeline must
 never digitally upsample sensor data when the crop region covers the
 whole sensor. In general, this means that if only small output stream
 resolutions are configured, the sensor can provide a higher frame
 rate.</term>
              </item>
              <item>
                <term>Since any request may use any or all the currently configured
 output streams, the sensor and ISP must be configured to support
 scaling a single capture to all the streams at the same time.  This
 means the camera pipeline must be ready to produce the largest
 requested output size without any delay.  Therefore, the overall
 frame rate of a given configured stream set is governed only by the
 largest requested stream resolution.</term>
              </item>
              <item>
                <term>Using more than one output stream in a request does not affect the
 frame duration.</term>
              </item>
              <item>
                <term>Certain format-streams may need to do additional background processing
 before data is consumed/produced by that stream. These processors
 can run concurrently to the rest of the camera pipeline, but
 cannot process more than 1 capture at a time.</term>
              </item>
            </list>
            <list type="number">
              <item>
                <term>Let the set of currently configured input/output streams
 be called <c>S</c>.</term>
              </item>
              <item>
                <term>Find the minimum frame durations for each stream in <c>S</c>, by looking
 it up in <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerStreamConfigurationMap" /></c> using <c><see cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputMinFrameDuration(System.Int32,Android.Util.Size)" /></c>
 (with its respective size/format). Let this set of frame durations be
 called <c>F</c>.</term>
              </item>
              <item>
                <term>For any given request <c>R</c>, the minimum frame duration allowed
 for <c>R</c> is the maximum out of all values in <c>F</c>. Let the streams
 used in <c>R</c> be called <c>S_r</c>.</term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Duration from start of frame exposure to
 start of next frame exposure.</para>
          <para tool="javadoc-to-mdoc">The maximum frame rate that can be supported by a camera subsystem is
 a function of many factors:</para>
          <para tool="javadoc-to-mdoc">Since these factors can vary greatly between different ISPs and
 sensors, the camera abstraction tries to represent the bandwidth
 restrictions with as simple a model as possible.</para>
          <para tool="javadoc-to-mdoc">The model presented has the following characteristics:</para>
          <para tool="javadoc-to-mdoc">The necessary information for the application, given the model above,
 is provided via the <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerStreamConfigurationMap" /></c> field using
 <c><see cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputMinFrameDuration(System.Int32,Android.Util.Size)" /></c>.
 These are used to determine the maximum frame rate / minimum frame
 duration that is possible for a given stream configuration.</para>
          <para tool="javadoc-to-mdoc">Specifically, the application can use the following rules to
 determine the minimum frame duration it can request from the camera
 device:</para>
          <para tool="javadoc-to-mdoc">If none of the streams in <c>S_r</c> have a stall time (listed in <c><see cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputStallDuration(System.Int32,Android.Util.Size)" /></c>
 using its respective size/format), then the frame duration in <c>F</c>
 determines the steady state frame rate that the application will get
 if it uses <c>R</c> as a repeating request. Let this special kind of
 request be called <c>Rsimple</c>.</para>
          <para tool="javadoc-to-mdoc">A repeating request <c>Rsimple</c> can be <i>occasionally</i> interleaved
 by a single capture of a new request <c>Rstall</c> (which has at least
 one in-use stream with a non-0 stall time) and if <c>Rstall</c> has the
 same minimum frame duration this will not cause a frame rate loss
 if all buffers from the previous <c>Rstall</c> have already been
 delivered.</para>
          <para tool="javadoc-to-mdoc">For more details about stalling, see
 <c><see cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputStallDuration(System.Int32,Android.Util.Size)" /></c>.</para>
          <para tool="javadoc-to-mdoc">This control is only effective if <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c> or <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" /></c> is set to
 OFF; otherwise the auto-exposure algorithm will override this value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: Nanoseconds</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
 See <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoMaxFrameDuration" /></c>,
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerStreamConfigurationMap" /></c>. The duration
 is capped to <c>max(duration, exposureTime + overhead)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_FRAME_DURATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerStreamConfigurationMap" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoMaxFrameDuration" />
      </Docs>
    </Member>
    <Member MemberName="SensorSensitivity">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key SensorSensitivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key SensorSensitivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_SENSITIVITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">The amount of gain applied to sensor data
 before processing.</para>
          <para tool="javadoc-to-mdoc">The sensitivity is the standard ISO sensitivity value,
 as defined in ISO 12232:2006.</para>
          <para tool="javadoc-to-mdoc">The sensitivity must be within <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoSensitivityRange" /></c>, and
 if if it less than <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorMaxAnalogSensitivity" /></c>, the camera device
 is guaranteed to use only analog amplification for applying the gain.</para>
          <para tool="javadoc-to-mdoc">If the camera device cannot apply the exact sensitivity
 requested, it will reduce the gain to the nearest supported
 value. The final sensitivity used will be available in the
 output capture result.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Units</b>
            </format>: ISO arithmetic units</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoSensitivityRange" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_SENSITIVITY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoSensitivityRange" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorMaxAnalogSensitivity" />
      </Docs>
    </Member>
    <Member MemberName="SensorTestPatternData">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key SensorTestPatternData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key SensorTestPatternData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_TEST_PATTERN_DATA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">A pixel <c>[R, G_even, G_odd, B]</c> that supplies the test pattern
 when <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.SensorTestPatternMode" /></c> is SOLID_COLOR.</para>
          <para tool="javadoc-to-mdoc">Each color channel is treated as an unsigned 32-bit integer.
 The camera device then uses the most significant X bits
 that correspond to how many bits are in its Bayer raw sensor
 output.</para>
          <para tool="javadoc-to-mdoc">For example, a sensor with RAW10 Bayer output would use the
 10 most significant bits from each color channel.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_TEST_PATTERN_DATA" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorTestPatternMode" />
      </Docs>
    </Member>
    <Member MemberName="SensorTestPatternMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key SensorTestPatternMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key SensorTestPatternMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_TEST_PATTERN_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">When enabled, the sensor sends a test pattern instead of
 doing a real exposure from the camera.</para>
          <para tool="javadoc-to-mdoc">When a test pattern is enabled, all manual sensor controls specified
 by android.sensor.* will be ignored. All other controls should
 work as normal.</para>
          <para tool="javadoc-to-mdoc">For example, if manual flash is enabled, flash firing should still
 occur (and that the test pattern remain unmodified, since the flash
 would not actually affect it).</para>
          <para tool="javadoc-to-mdoc">Defaults to OFF.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SENSOR_TEST_PATTERN_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SENSOR_TEST_PATTERN_MODE_SOLID_COLOR" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SENSOR_TEST_PATTERN_MODE_COLOR_BARS" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SENSOR_TEST_PATTERN_MODE_COLOR_BARS_FADE_TO_GRAY" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SENSOR_TEST_PATTERN_MODE_PN9" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SENSOR_TEST_PATTERN_MODE_CUSTOM1" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorAvailableTestPatternModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SENSOR_TEST_PATTERN_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorAvailableTestPatternModes" />
      </Docs>
    </Member>
    <Member MemberName="ShadingMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key ShadingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key ShadingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SHADING_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <sample external-id="840AEEF9BB126EF7D136C5DBE2382111" />
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <sample external-id="840AEEF9BB126EF7D136C5DBE2382111" />
          </para>
          <para tool="javadoc-to-mdoc">Quality of lens shading correction applied
 to the image data.</para>
          <para tool="javadoc-to-mdoc">When set to OFF mode, no lens shading correction will be applied by the
 camera device, and an identity lens shading map data will be provided
 if <c><c><see cref="P:Android.Hardware.Camera2.CaptureRequest.StatisticsLensShadingMapMode" /></c> == ON</c>. For example, for lens
 shading map with size of <c>[ 4, 3 ]</c>,
 the output <c><see cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsLensShadingCorrectionMap" /></c> for this case will be an identity
 map shown below:</para>
          <para tool="javadoc-to-mdoc">When set to other modes, lens shading correction will be applied by the camera
 device. Applications can request lens shading map data by setting
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.StatisticsLensShadingMapMode" /></c> to ON, and then the camera device will provide lens
 shading map data in <c><see cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsLensShadingCorrectionMap" /></c>; the returned shading map
 data will be the one applied by the camera device for this capture request.</para>
          <para tool="javadoc-to-mdoc">The shading map data may depend on the auto-exposure (AE) and AWB statistics, therefore
 the reliability of the map data may be affected by the AE and AWB algorithms. When AE and
 AWB are in AUTO modes(<c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c><c>!=</c> OFF and <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" /></c><c>!=</c>
 OFF), to get best results, it is recommended that the applications wait for the AE and AWB
 to be converged before using the returned shading map data.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SHADING_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SHADING_MODE_FAST" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.SHADING_MODE_HIGH_QUALITY" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ShadingAvailableModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#SHADING_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ShadingAvailableModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsLensShadingCorrectionMap" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.StatisticsLensShadingMapMode" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsFaceDetectMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key StatisticsFaceDetectMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key StatisticsFaceDetectMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_FACE_DETECT_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Operating mode for the face detector
 unit.</para>
          <para tool="javadoc-to-mdoc">Whether face detection is enabled, and whether it
 should output just the basic fields or the full set of
 fields.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.STATISTICS_FACE_DETECT_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.STATISTICS_FACE_DETECT_MODE_SIMPLE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.STATISTICS_FACE_DETECT_MODE_FULL" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableFaceDetectModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">This key is available on all devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#STATISTICS_FACE_DETECT_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableFaceDetectModes" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsHotPixelMapMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key StatisticsHotPixelMapMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key StatisticsHotPixelMapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_HOT_PIXEL_MAP_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Operating mode for hot pixel map generation.</para>
          <para tool="javadoc-to-mdoc">If set to <c>true</c>, a hot pixel map is returned in <c><see cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsHotPixelMap" /></c>.
 If set to <c>false</c>, no hot pixel map will be returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Range of valid values:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableHotPixelMapModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#STATISTICS_HOT_PIXEL_MAP_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsHotPixelMap" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableHotPixelMapModes" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsLensShadingMapMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key StatisticsLensShadingMapMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key StatisticsLensShadingMapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_LENS_SHADING_MAP_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Whether the camera device will output the lens
 shading map in output result metadata.</para>
          <para tool="javadoc-to-mdoc">When set to ON,
 android.statistics.lensShadingMap will be provided in
 the output result metadata.</para>
          <para tool="javadoc-to-mdoc">ON is always supported on devices with the RAW capability.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.STATISTICS_LENS_SHADING_MAP_MODE_OFF" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.STATISTICS_LENS_SHADING_MAP_MODE_ON" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableLensShadingMapModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#STATISTICS_LENS_SHADING_MAP_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableLensShadingMapModes" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public Java.Lang.Object Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTag", "()Ljava/lang/Object;", "GetGetTagHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the tag for this request, if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the tag for this request, if any.

 </para>
          <para tool="javadoc-to-mdoc">This tag is not used for anything by the camera device, but can be
 used by an application to easily identify a CaptureRequest when it is
 returned by
 <c><see cref="!:NoType:android/hardware/camera2/CameraCaptureSession$CaptureCallback;Href=../../../../reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html#onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#getTag()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TonemapCurve">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key TonemapCurve { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key TonemapCurve" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TONEMAP_CURVE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <sample external-id="2567E371A4E23A960E217F490522242A" />
          <sample external-id="6BF4D5212383D652F26F9C6E8C30B76C" />
          <sample external-id="F74CFC559547957A780F495C72D06B77" />
          <sample external-id="329A6CB6E2B040DA391CACFB4E7FA514" />
          <sample external-id="6DF332428917C49DA3FB7D0EC1152A89" />
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <sample external-id="2567E371A4E23A960E217F490522242A" />
            <sample external-id="6BF4D5212383D652F26F9C6E8C30B76C" />
            <sample external-id="F74CFC559547957A780F495C72D06B77" />
            <sample external-id="329A6CB6E2B040DA391CACFB4E7FA514" />
            <sample external-id="6DF332428917C49DA3FB7D0EC1152A89" />
          </para>
          <para tool="javadoc-to-mdoc">Tonemapping / contrast / gamma curve to use when <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapMode" /></c>
 is CONTRAST_CURVE.</para>
          <para tool="javadoc-to-mdoc">The tonemapCurve consist of three curves for each of red, green, and blue
 channels respectively. The following example uses the red channel as an
 example. The same logic applies to green and blue channel.
 Each channel's curve is defined by an array of control points:</para>
          <para tool="javadoc-to-mdoc">These are sorted in order of increasing <c>Pin</c>; it is always
 guaranteed that input values 0.0 and 1.0 are included in the list to
 define a complete mapping. For input values between control points,
 the camera device must linearly interpolate between the control
 points.</para>
          <para tool="javadoc-to-mdoc">Each curve can have an independent number of points, and the number
 of points can be less than max (that is, the request doesn't have to
 always provide a curve with number of points equivalent to
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapMaxCurvePoints" /></c>).</para>
          <para tool="javadoc-to-mdoc">A few examples, and their corresponding graphical mappings; these
 only specify the red channel and the precision is limited to 4
 digits, for conciseness.</para>
          <para tool="javadoc-to-mdoc">Linear mapping:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <img alt="Linear mapping curve" src="../../../../images/camera2/metadata/android.tonemap.curveRed/linear_tonemap.png" />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Invert mapping:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <img alt="Inverting mapping curve" src="../../../../images/camera2/metadata/android.tonemap.curveRed/inverse_tonemap.png" />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Gamma 1/2.2 mapping, with 16 control points:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <img alt="Gamma = 1/2.2 tonemapping curve" src="../../../../images/camera2/metadata/android.tonemap.curveRed/gamma_tonemap.png" />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Standard sRGB gamma mapping, per IEC 61966-2-1:1999, with 16 control points:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <img alt="sRGB tonemapping curve" src="../../../../images/camera2/metadata/android.tonemap.curveRed/srgb_tonemap.png" />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#TONEMAP_CURVE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapMaxCurvePoints" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapMode" />
      </Docs>
    </Member>
    <Member MemberName="TonemapMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureRequest.Key TonemapMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureRequest/Key TonemapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TONEMAP_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">High-level global contrast/gamma/tonemapping control.</para>
          <para tool="javadoc-to-mdoc">When switching to an application-defined contrast curve by setting
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapMode" /></c> to CONTRAST_CURVE, the curve is defined
 per-channel with a set of <c>(in, out)</c> points that specify the
 mapping from input high-bit-depth pixel value to the output
 low-bit-depth value.  Since the actual pixel ranges of both input
 and output may change depending on the camera pipeline, the values
 are specified by normalized floating-point numbers.</para>
          <para tool="javadoc-to-mdoc">More-complex color mapping operations such as 3D color look-up
 tables, selective chroma enhancement, or other non-linear color
 transforms will be disabled when <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapMode" /></c> is
 CONTRAST_CURVE.</para>
          <para tool="javadoc-to-mdoc">When using either FAST or HIGH_QUALITY, the camera device will
 emit its own tonemap curve in <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapCurve" /></c>.
 These values are always available, and as close as possible to the
 actually used nonlinear/nonglobal transforms.</para>
          <para tool="javadoc-to-mdoc">If a request is sent with CONTRAST_CURVE with the camera device's
 provided curve in FAST or HIGH_QUALITY, the image's tonemap will be
 roughly the same.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Possible values:</b>
            </format>
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.TONEMAP_MODE_CONTRAST_CURVE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.TONEMAP_MODE_FAST" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.TONEMAP_MODE_HIGH_QUALITY" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.TONEMAP_MODE_GAMMA_VALUE" />
                  </c>
                </term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="!:Android.Hardware.Camera2.CameraMetadata.TONEMAP_MODE_PRESET_CURVE" />
                  </c>
                </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Available values for this device:</b>
            </format>
            <format type="text/html">
              <br />
            </format>
            <c>
              <see cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapAvailableToneMapModes" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Optional</b>
            </format> - This value may be <c>null</c> on some devices.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Full capability</b>
            </format> -
 Present on all camera devices that report being <c><see cref="F:Android.Hardware.Camera2.InfoSupportedHardwareLevel.Full" tool="ReplaceLinkValue" /></c> devices in the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c> key</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#TONEMAP_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapAvailableToneMapModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapCurve" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapMode" />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public void WriteToParcel (Android.OS.Parcel dest, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel dest, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dest">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <c><see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" /></c>.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flatten this object in to a Parcel.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html#writeToParcel(android.os.Parcel, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
