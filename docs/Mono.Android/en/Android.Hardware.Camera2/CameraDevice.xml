<Type Name="CameraDevice" FullName="Android.Hardware.Camera2.CameraDevice">
  <TypeSignature Language="C#" Value="public abstract class CameraDevice : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAutoCloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CameraDevice extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IAutoCloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Hardware.Camera2.CameraDevice" />
  <TypeSignature Language="F#" Value="type CameraDevice = class&#xA;    inherit Object&#xA;    interface IAutoCloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAutoCloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/hardware/camera2/CameraDevice", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/hardware/camera2/CameraDevice", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>The CameraDevice class is a representation of a single camera connected to an
            Android device, allowing for fine-grain control of image capture and
            post-processing at high frame rates.</summary>
    <remarks>
      <para>The CameraDevice class is a representation of a single camera connected to an
            Android device, allowing for fine-grain control of image capture and
            post-processing at high frame rates.</para>
      <para>Your application must declare the
            <c>android.Manifest.permission#CAMERA Camera</c> permission in its manifest
            in order to access camera devices.</para>
      <para>A given camera device may provide support at one of several levels defined
            in <c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c>.
            If a device supports <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY LEGACY</c> level,
            the camera device is running in backward compatibility mode and has minimum camera2 API support.
            If a device supports the <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c>
            level, then Camera2 exposes a feature set that is roughly equivalent to the older
            <c>android.hardware.Camera Camera</c> API, although with a cleaner and more
            efficient interface.
            If a device supports the <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_EXTERNAL EXTERNAL</c>
            level, then the device is a removable camera that provides similar but slightly less features
            as the <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c> level.
            Devices that implement the <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL FULL</c> or
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_3 LEVEL3</c> level of support
            provide substantially improved capabilities over the older camera
            API. If your application requires a full-level device for
            proper operation, declare the "android.hardware.camera.level.full" feature in your
            manifest.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CameraDevice (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Hardware.Camera2.CameraDevice : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Hardware.Camera2.CameraDevice" Usage="new Android.Hardware.Camera2.CameraDevice (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioRestrictionNone">
      <MemberSignature Language="C#" Value="public const Android.Hardware.Camera2.CameraDeviceAudioRestrictionType AudioRestrictionNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Camera2.CameraDeviceAudioRestrictionType AudioRestrictionNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Camera2.CameraDevice.AudioRestrictionNone" />
      <MemberSignature Language="F#" Value="val mutable AudioRestrictionNone : Android.Hardware.Camera2.CameraDeviceAudioRestrictionType" Usage="Android.Hardware.Camera2.CameraDevice.AudioRestrictionNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIO_RESTRICTION_NONE", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIO_RESTRICTION_NONE", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Camera2.CameraDeviceAudioRestrictionType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Camera2.CameraDeviceAudioRestrictionType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CameraDeviceAudioRestrictionType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>No vibration or sound muting for this camera device.</summary>
        <remarks>
          <para>No vibration or sound muting for this camera device. This is the default
            mode for all camera devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#AUDIO_RESTRICTION_NONE" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioRestrictionVibration">
      <MemberSignature Language="C#" Value="public const Android.Hardware.Camera2.CameraDeviceAudioRestrictionType AudioRestrictionVibration = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Camera2.CameraDeviceAudioRestrictionType AudioRestrictionVibration = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Camera2.CameraDevice.AudioRestrictionVibration" />
      <MemberSignature Language="F#" Value="val mutable AudioRestrictionVibration : Android.Hardware.Camera2.CameraDeviceAudioRestrictionType" Usage="Android.Hardware.Camera2.CameraDevice.AudioRestrictionVibration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIO_RESTRICTION_VIBRATION", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIO_RESTRICTION_VIBRATION", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Camera2.CameraDeviceAudioRestrictionType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Camera2.CameraDeviceAudioRestrictionType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CameraDeviceAudioRestrictionType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Mute vibration from ringtones, alarms or notifications while this camera device is in use.</summary>
        <remarks>
          <para>Mute vibration from ringtones, alarms or notifications while this camera device is in use.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#AUDIO_RESTRICTION_VIBRATION" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_VIBRATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioRestrictionVibrationSound">
      <MemberSignature Language="C#" Value="public const Android.Hardware.Camera2.CameraDeviceAudioRestrictionType AudioRestrictionVibrationSound = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Hardware.Camera2.CameraDeviceAudioRestrictionType AudioRestrictionVibrationSound = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Camera2.CameraDevice.AudioRestrictionVibrationSound" />
      <MemberSignature Language="F#" Value="val mutable AudioRestrictionVibrationSound : Android.Hardware.Camera2.CameraDeviceAudioRestrictionType" Usage="Android.Hardware.Camera2.CameraDevice.AudioRestrictionVibrationSound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIO_RESTRICTION_VIBRATION_SOUND", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIO_RESTRICTION_VIBRATION_SOUND", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Camera2.CameraDeviceAudioRestrictionType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Hardware.Camera2.CameraDeviceAudioRestrictionType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CameraDeviceAudioRestrictionType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Mute vibration and sound from ringtones, alarms or notifications while this camera device is
            in use.</summary>
        <remarks>
          <para>Mute vibration and sound from ringtones, alarms or notifications while this camera device is
            in use.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#AUDIO_RESTRICTION_VIBRATION_SOUND" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_VIBRATION_SOUND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CameraAudioRestriction">
      <MemberSignature Language="C#" Value="public virtual int CameraAudioRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CameraAudioRestriction" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraDevice.CameraAudioRestriction" />
      <MemberSignature Language="F#" Value="member this.CameraAudioRestriction : int with get, set" Usage="Android.Hardware.Camera2.CameraDevice.CameraAudioRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCameraAudioRestriction", "()I", "GetGetCameraAudioRestrictionHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCameraAudioRestriction", "()I", "GetGetCameraAudioRestrictionHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setCameraAudioRestriction", "(I)V", "GetSetCameraAudioRestriction_IHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setCameraAudioRestriction", "(I)V", "GetSetCameraAudioRestriction_IHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="mode">An enumeration selecting the audio restriction mode for this camera device.</param>
        <summary>Get currently applied global camera audio restriction mode. -or- Set audio restriction mode when this CameraDevice is being used.</summary>
        <value>The current system-wide mute mode setting in effect</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get currently applied global camera audio restriction mode.</para>
          <para>Application can use this method to retrieve the system-wide camera audio restriction
            settings described in <c>#setCameraAudioRestriction</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#getCameraAudioRestriction()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.getCameraAudioRestriction()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set audio restriction mode when this CameraDevice is being used.</para>
          <para>Some camera hardware (e.g. devices with optical image stabilization support)
            are sensitive to device vibration and video recordings can be ruined by unexpected sounds.
            Applications can use this method to suppress vibration or sounds coming from
            ringtones, alarms or notifications.
            Other vibration or sounds (e.g. media playback or accessibility) will not be muted.</para>
          <para>The mute mode is a system-wide setting. When multiple CameraDevice objects
            are setting different modes, the system will pick a the mode that's union of
            all modes set by CameraDevice. Applications can also use
            <c>#getCameraAudioRestriction</c> to query current system-wide camera
            mute mode in effect.</para>
          <para>The mute settings from this CameraDevice will be automatically removed when the
            CameraDevice is closed or the application is disconnected from the camera.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#setCameraAudioRestriction(int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.setCameraAudioRestriction(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="cameraDevice.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAutoCloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Close the connection to this camera device as quickly as possible.</summary>
        <remarks>
          <para>Close the connection to this camera device as quickly as possible.</para>
          <para>Immediately after this call, all calls to the camera device or active session interface
            will throw a <c>IllegalStateException</c>, except for calls to close(). Once the device has
            fully shut down, the <c>StateCallback#onClosed</c> callback will be called, and the camera
            is free to be re-opened.</para>
          <para>Immediately after this call, besides the final <c>StateCallback#onClosed</c> calls, no
            further callbacks from the device or the active session will occur, and any remaining
            submitted capture requests will be discarded, as if
            <c>CameraCaptureSession#abortCaptures</c> had been called, except that no success or failure
            callbacks will be invoked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#close()" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCaptureRequest">
      <MemberSignature Language="C#" Value="public abstract Android.Hardware.Camera2.CaptureRequest.Builder CreateCaptureRequest (Android.Hardware.Camera2.CameraTemplate templateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.Camera2.CaptureRequest/Builder CreateCaptureRequest(valuetype Android.Hardware.Camera2.CameraTemplate templateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateCaptureRequest(Android.Hardware.Camera2.CameraTemplate)" />
      <MemberSignature Language="F#" Value="abstract member CreateCaptureRequest : Android.Hardware.Camera2.CameraTemplate -&gt; Android.Hardware.Camera2.CaptureRequest.Builder" Usage="cameraDevice.CreateCaptureRequest templateType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCaptureRequest", "(I)Landroid/hardware/camera2/CaptureRequest$Builder;", "GetCreateCaptureRequest_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCaptureRequest", "(I)Landroid/hardware/camera2/CaptureRequest$Builder;", "GetCreateCaptureRequest_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateType" Type="Android.Hardware.Camera2.CameraTemplate">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="templateType">An enumeration selecting the use case for this request. Not all template
            types are supported on every device. See the documentation for each template type for
            details.</param>
        <summary>Create a <c>CaptureRequest.Builder</c> for new capture requests,
            initialized with template for a target use case.</summary>
        <returns>a builder for a capture request, initialized with default
            settings for that template, and no output streams</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createCaptureRequest(int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createCaptureRequest(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the templateType is not supported by
 this device.</exception>
        <exception cref="T:Android.Hardware.Camera2.CameraAccessException">if the camera device is no longer connected or has
                               encountered a fatal error</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the camera device has been closed</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCaptureRequest">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Camera2.CaptureRequest.Builder CreateCaptureRequest (Android.Hardware.Camera2.CameraTemplate templateType, System.Collections.Generic.ICollection&lt;string&gt;? physicalCameraIdSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.Camera2.CaptureRequest/Builder CreateCaptureRequest(valuetype Android.Hardware.Camera2.CameraTemplate templateType, class System.Collections.Generic.ICollection`1&lt;string&gt; physicalCameraIdSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateCaptureRequest(Android.Hardware.Camera2.CameraTemplate,System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="F#" Value="abstract member CreateCaptureRequest : Android.Hardware.Camera2.CameraTemplate * System.Collections.Generic.ICollection&lt;string&gt; -&gt; Android.Hardware.Camera2.CaptureRequest.Builder&#xA;override this.CreateCaptureRequest : Android.Hardware.Camera2.CameraTemplate * System.Collections.Generic.ICollection&lt;string&gt; -&gt; Android.Hardware.Camera2.CaptureRequest.Builder" Usage="cameraDevice.CreateCaptureRequest (templateType, physicalCameraIdSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCaptureRequest", "(ILjava/util/Set;)Landroid/hardware/camera2/CaptureRequest$Builder;", "GetCreateCaptureRequest_ILjava_util_Set_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCaptureRequest", "(ILjava/util/Set;)Landroid/hardware/camera2/CaptureRequest$Builder;", "GetCreateCaptureRequest_ILjava_util_Set_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateType" Type="Android.Hardware.Camera2.CameraTemplate">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="physicalCameraIdSet" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="templateType">An enumeration selecting the use case for this request. Not all template
            types are supported on every device. See the documentation for each template type for
            details.</param>
        <param name="physicalCameraIdSet">To be added.</param>
        <summary>Create a <c>CaptureRequest.Builder</c> for new capture requests,
            initialized with template for a target use case.</summary>
        <returns>a builder for a capture request, initialized with default
            settings for that template, and no output streams</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createCaptureRequest(int)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createCaptureRequest(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCaptureSession">
      <MemberSignature Language="C#" Value="public virtual void CreateCaptureSession (Android.Hardware.Camera2.Params.SessionConfiguration? config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateCaptureSession(class Android.Hardware.Camera2.Params.SessionConfiguration config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateCaptureSession(Android.Hardware.Camera2.Params.SessionConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member CreateCaptureSession : Android.Hardware.Camera2.Params.SessionConfiguration -&gt; unit&#xA;override this.CreateCaptureSession : Android.Hardware.Camera2.Params.SessionConfiguration -&gt; unit" Usage="cameraDevice.CreateCaptureSession config" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCaptureSession", "(Landroid/hardware/camera2/params/SessionConfiguration;)V", "GetCreateCaptureSession_Landroid_hardware_camera2_params_SessionConfiguration_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCaptureSession", "(Landroid/hardware/camera2/params/SessionConfiguration;)V", "GetCreateCaptureSession_Landroid_hardware_camera2_params_SessionConfiguration_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Hardware.Camera2.Params.SessionConfiguration" />
      </Parameters>
      <Docs>
        <param name="config">A session configuration (see <c>SessionConfiguration</c>).</param>
        <summary>Create a new <c>CameraCaptureSession</c> using a <c>SessionConfiguration</c> helper
            object that aggregates all supported parameters.</summary>
        <remarks>
          <para>Create a new <c>CameraCaptureSession</c> using a <c>SessionConfiguration</c> helper
            object that aggregates all supported parameters.</para>
          <para>The active capture session determines the set of potential output Surfaces for
            the camera device for each capture request. A given request may use all
            or only some of the outputs. Once the CameraCaptureSession is created, requests can be
            submitted with <c>CameraCaptureSession#capture capture</c>,
            <c>CameraCaptureSession#captureBurst captureBurst</c>,
            <c>CameraCaptureSession#setRepeatingRequest setRepeatingRequest</c>, or
            <c>CameraCaptureSession#setRepeatingBurst setRepeatingBurst</c>.</para>
          <para>Surfaces suitable for inclusion as a camera output can be created for
            various use cases and targets:</para>
          <para>&lt;ul&gt;
            
            &lt;li&gt;For drawing to a <c>android.view.SurfaceView SurfaceView</c>: Once the SurfaceView's
              Surface is <c>android.view.SurfaceHolder.Callback#surfaceCreated created</c>, set the size
              of the Surface with <c>android.view.SurfaceHolder#setFixedSize</c> to be one of the sizes
              returned by <c>StreamConfigurationMap#getOutputSizes(Class)
              getOutputSizes(SurfaceHolder.class)</c> and then obtain the Surface by calling <c>android.view.SurfaceHolder#getSurface</c>. If the size is not set by the application, it will
              be rounded to the nearest supported size less than 1080p, by the camera device.&lt;/li&gt;
            
            &lt;li&gt;For accessing through an OpenGL texture via a <c>android.graphics.SurfaceTexture
              SurfaceTexture</c>: Set the size of the SurfaceTexture with <c>android.graphics.SurfaceTexture#setDefaultBufferSize</c> to be one of the sizes returned by
              <c>StreamConfigurationMap#getOutputSizes(Class) getOutputSizes(SurfaceTexture.class)</c>
              before creating a Surface from the SurfaceTexture with <c>Surface#Surface</c>. If the size
              is not set by the application, it will be set to be the smallest supported size less than
              1080p, by the camera device.&lt;/li&gt;
            
            &lt;li&gt;For recording with <c>android.media.MediaCodec</c>: Call
              <c>android.media.MediaCodec#createInputSurface</c> after configuring
              the media codec to use one of the sizes returned by
              <c>StreamConfigurationMap#getOutputSizes(Class) getOutputSizes(MediaCodec.class)</c>&lt;/li&gt;
            
            &lt;li&gt;For recording with <c>android.media.MediaRecorder</c>: Call
              <c>android.media.MediaRecorder#getSurface</c> after configuring the media recorder to use
              one of the sizes returned by
              <c>StreamConfigurationMap#getOutputSizes(Class) getOutputSizes(MediaRecorder.class)</c>,
              or configuring it to use one of the supported
              <c>android.media.CamcorderProfile CamcorderProfiles</c>.&lt;/li&gt;
            
            &lt;li&gt;For efficient YUV processing with <c>android.renderscript</c>:
              Create a RenderScript
              <c>android.renderscript.Allocation Allocation</c> with a supported YUV
              type, the IO_INPUT flag, and one of the sizes returned by
              <c>StreamConfigurationMap#getOutputSizes(Class) getOutputSizes(Allocation.class)</c>,
              Then obtain the Surface with
              <c>android.renderscript.Allocation#getSurface</c>.&lt;/li&gt;
            
            &lt;li&gt;For access to RAW, uncompressed YUV, or compressed JPEG data in the application: Create an
              <c>android.media.ImageReader</c> object with one of the supported output formats given by
              <c>StreamConfigurationMap#getOutputFormats()</c>, setting its size to one of the
              corresponding supported sizes by passing the chosen output format into
              <c>StreamConfigurationMap#getOutputSizes(int)</c>. Then obtain a
              <c>android.view.Surface</c> from it with <c>android.media.ImageReader#getSurface()</c>.
              If the ImageReader size is not set to a supported size, it will be rounded to a supported
              size less than 1080p by the camera device.
              &lt;/li&gt;
            
            &lt;/ul&gt;</para>
          <para>The camera device will query each Surface's size and formats upon this
            call, so they must be set to a valid setting at this time.</para>
          <para>It can take several hundred milliseconds for the session's configuration to complete,
            since camera hardware may need to be powered on or reconfigured. Once the configuration is
            complete and the session is ready to actually capture data, the provided
            <c>CameraCaptureSession.StateCallback</c>'s
            <c>CameraCaptureSession.StateCallback#onConfigured</c> callback will be called.</para>
          <para>If a prior CameraCaptureSession already exists when this method is called, the previous
            session will no longer be able to accept new capture requests and will be closed. Any
            in-progress capture requests made on the prior session will be completed before it's closed.
            <c>CameraCaptureSession.StateCallback#onConfigured</c> for the new session may be invoked
            before <c>CameraCaptureSession.StateCallback#onClosed</c> is invoked for the prior
            session. Once the new session is <c>CameraCaptureSession.StateCallback#onConfigured
            configured</c>, it is able to start capturing its own requests. To minimize the transition time,
            the <c>CameraCaptureSession#abortCaptures</c> call can be used to discard the remaining
            requests for the prior capture session before a new one is created. Note that once the new
            session is created, the old one can no longer have its captures aborted.</para>
          <para>Using larger resolution outputs, or more outputs, can result in slower
            output rate from the device.</para>
          <para>Configuring a session with an empty or null list will close the current session, if
            any. This can be used to release the current session's target surfaces for another use.</para>
          <para>&lt;h3&gt;Regular capture&lt;/h3&gt;</para>
          <para>While any of the sizes from <c>StreamConfigurationMap#getOutputSizes</c> can be used when
            a single output stream is configured, a given camera device may not be able to support all
            combination of sizes, formats, and targets when multiple outputs are configured at once.  The
            tables below list the maximum guaranteed resolutions for combinations of streams and targets,
            given the capabilities of the camera device. These are valid for when the
            <c>android.hardware.camera2.params.SessionConfiguration#setInputConfiguration
            input configuration</c> is not set and therefore no reprocessing is active.</para>
          <para>If an application tries to create a session using a set of targets that exceed the limits
            described in the below tables, one of three possibilities may occur. First, the session may
            be successfully created and work normally. Second, the session may be successfully created,
            but the camera device won't meet the frame rate guarantees as described in
            <c>StreamConfigurationMap#getOutputMinFrameDuration</c>. Or third, if the output set
            cannot be used at all, session creation will fail entirely, with
            <c>CameraCaptureSession.StateCallback#onConfigureFailed</c> being invoked.</para>
          <para>For the type column, <c>PRIV</c> refers to any target whose available sizes are found
            using <c>StreamConfigurationMap#getOutputSizes(Class)</c> with no direct application-visible
            format, <c>YUV</c> refers to a target Surface using the
            <c>android.graphics.ImageFormat#YUV_420_888</c> format, <c>JPEG</c> refers to the
            <c>android.graphics.ImageFormat#JPEG</c> format, and <c>RAW</c> refers to the
            <c>android.graphics.ImageFormat#RAW_SENSOR</c> format.</para>
          <para>For the maximum size column, <c>PREVIEW</c> refers to the best size match to the
            device's screen resolution, or to 1080p (<c>1920x1080</c>), whichever is
            smaller. <c>RECORD</c> refers to the camera device's maximum supported recording resolution,
            as determined by <c>android.media.CamcorderProfile</c>. And <c>MAXIMUM</c> refers to the
            camera device's maximum output resolution for that format or target from
            <c>StreamConfigurationMap#getOutputSizes</c>.</para>
          <para>To use these tables, determine the number and the formats/targets of outputs needed, and
            find the row(s) of the table with those targets. The sizes indicate the maximum set of sizes
            that can be used; it is guaranteed that for those targets, the listed sizes and anything
            smaller from the list given by <c>StreamConfigurationMap#getOutputSizes</c> can be
            successfully used to create a session.  For example, if a row indicates that a 8 megapixel
            (MP) YUV_420_888 output can be used together with a 2 MP <c>PRIV</c> output, then a session
            can be created with targets <c>[8 MP YUV, 2 MP PRIV]</c> or targets <c>[2 MP YUV, 2 MP
            PRIV]</c>; but a session with targets <c>[8 MP YUV, 4 MP PRIV]</c>, targets <c>[4 MP YUV, 4
            MP PRIV]</c>, or targets <c>[8 MP PRIV, 2 MP YUV]</c> would not be guaranteed to work, unless
            some other row of the table lists such a combination.</para>
          <para>&lt;style scoped&gt;
             #rb { border-right-width: thick; }&lt;/style&gt;</para>
          <para>Legacy devices (<c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c><c>==</c><c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY LEGACY</c>) support at
            least the following stream combinations:
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="7"&gt;LEGACY-level guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt; &lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;  &lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Simple preview, GPU video processing, or no-preview video recording.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;No-viewfinder still image capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;In-application video/image processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Standard still imaging.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;In-app processing plus still capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Standard recording.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Preview plus in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Still capture plus in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>Limited-level (<c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c><c>==</c><c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c>) devices
            support at least the following stream combinations in addition to those for
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY LEGACY</c> devices:
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="7"&gt;LIMITED-level additional guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;High-resolution video recording with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;High-resolution in-app video processing with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Two-input in-app video processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;High-resolution recording with video snapshot.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;High-resolution in-app processing with video snapshot.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Two-input in-app processing with still capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>FULL-level (<c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c><c>==</c><c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL FULL</c>) devices
            support at least the following stream combinations in addition to those for
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c> devices:
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="7"&gt;FULL-level additional guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution GPU processing with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution in-app processing with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution two-input in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Video recording with maximum-size video snapshot&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>640x480</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Standard video recording plus maximum-resolution in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>640x480</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Preview plus two-input maximum-resolution in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>RAW-capability (<c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c> includes
            <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_RAW RAW</c>) devices additionally support
            at least the following stream combinations on both
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL FULL</c> and
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c> devices:
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="7"&gt;RAW-capability additional guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;No-preview DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Standard DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;In-app processing plus DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Video recording with DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Preview with in-app processing and DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Two-input in-app processing plus DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Still capture with simultaneous JPEG and DNG.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;In-app processing with simultaneous JPEG and DNG.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>BURST-capability (<c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c> includes
            <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_BURST_CAPTURE BURST_CAPTURE</c>) devices
            support at least the below stream combinations in addition to those for
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c> devices. Note that all
            FULL-level devices support the BURST capability, and the below list is a strict subset of the
            list for FULL-level devices, so this table is only relevant for LIMITED-level devices that
            support the BURST_CAPTURE capability.
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="5"&gt;BURST-capability additional guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Maximum-resolution GPU processing with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Maximum-resolution in-app processing with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Maximum-resolution two-input in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>LEVEL-3 (<c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c><c>==</c><c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_3 LEVEL_3</c>)
            support at least the following stream combinations in addition to the combinations for
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL FULL</c> and for
            RAW capability (<c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c> includes
            <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_RAW RAW</c>):
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="11"&gt;LEVEL-3 additional guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 4&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>640x480</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;In-app viewfinder analysis with dynamic selection of output format.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>640x480</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;In-app viewfinder analysis with dynamic selection of output format.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>BACKWARD_COMPATIBLE devices capable of streaming concurrently with other devices as described by
            <c>android.hardware.camera2.CameraManager#getConcurrentCameraIds</c> have the
            following guaranteed streams (when streaming concurrently with other devices)</para>
          <para>Note: The sizes mentioned for these concurrent streams are the maximum sizes guaranteed
            to be supported. Sizes smaller than these, obtained by <c>StreamConfigurationMap#getOutputSizes</c> for a particular format, are supported as well.</para>
          <para>&lt;table&gt;
            &lt;tr&gt;&lt;th colspan="5"&gt;Concurrent stream guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;  &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;In-app video / image processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;  &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;In-app viewfinder analysis.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;  &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;No viewfinder still image capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s720p</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt; &lt;td&gt; Standard still imaging.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s720p</c>&lt;/td&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt; &lt;td&gt;In-app video / processing with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;
            &lt;/p&gt;</para>
          <para>Devices which are not backwards-compatible, support a mandatory single stream of size sVGA with image format <c>DEPTH16</c> during concurrent operation.</para>
          <para>For guaranteed concurrent stream configurations:</para>
          <para>sVGA refers to the camera device's maximum resolution for that format from <c>StreamConfigurationMap#getOutputSizes</c> or
            VGA resolution (640X480) whichever is lower.</para>
          <para>s720p refers to the camera device's maximum resolution for that format from <c>StreamConfigurationMap#getOutputSizes</c> or
            720p(1280X720) whichever is lower.</para>
          <para>s1440p refers to the camera device's maximum resolution for that format from <c>StreamConfigurationMap#getOutputSizes</c> or
            1440p(1920X1440) whichever is lower.</para>
          <para>MONOCHROME-capability (<c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c>
            includes <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_MONOCHROME MONOCHROME</c>) devices
            supporting <c>android.graphics.ImageFormat#Y8 Y8</c> support substituting <c>YUV</c>
            streams with <c>Y8</c> in all guaranteed stream combinations for the device's hardware level
            and capabilities.</para>
          <para>Clients can access the above mandatory stream combination tables via
            <c>android.hardware.camera2.params.MandatoryStreamCombination</c>.</para>
          <para>Devices capable of outputting HEIC formats (<c>StreamConfigurationMap#getOutputFormats</c>
            contains <c>android.graphics.ImageFormat#HEIC</c>) will support substituting <c>JPEG</c>
            streams with <c>HEIC</c> in all guaranteed stream combinations for the device's hardware
            level and capabilities. Calling createCaptureSession with both JPEG and HEIC outputs is not
            supported.</para>
          <para>Devices capable of multi-resolution output for a particular format (
            <c>android.hardware.camera2.params.MultiResolutionStreamConfigurationMap#getOutputInfo</c>
            returns a non-empty list) support using <c>MultiResolutionImageReader</c> for MAXIMUM
            resolution streams of that format for all mandatory stream combinations. For example,
            if a LIMITED camera device supports multi-resolution output streams for both <c>JPEG</c> and
            <c>PRIVATE</c>, in addition to the stream configurations
            in the LIMITED and Legacy table above, the camera device supports the following guaranteed
            stream combinations (<c>MULTI_RES</c> in the Max size column refers to a <c>MultiResolutionImageReader</c> created based on the variable max resolutions supported):
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="7"&gt;LEGACY-level additional guaranteed combinations with MultiResolutionoutputs&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt; &lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;  &lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Simple preview, GPU video processing, or no-preview video recording.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;No-viewfinder still image capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Standard still imaging.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;Still capture plus in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="7"&gt;LIMITED-level additional guaranteed configurations with MultiResolutionoutputs&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;Two-input in-app processing with still capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;
            The same logic applies to other hardware levels and capabilities.</para>
          <para>Devices with the ULTRA_HIGH_RESOLUTION_SENSOR capability have some additional guarantees
            which clients can take advantage of :</para>
          <para>&lt;table&gt;
            &lt;tr&gt;&lt;th colspan="10"&gt;Additional guaranteed combinations for ULTRA_HIGH_RESOLUTION sensors&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;th colspan="3" id="rb"&gt;Target 1&lt;/th&gt; &lt;th colspan="3" id="rb"&gt;Target 2&lt;/th&gt;  &lt;th colspan="3" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt; SC Map&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt; SC Map&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt; SC Map&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / JPEG / RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>DEFAULT</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Ultra high res still image capture with preview&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / JPEG / RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>DEFAULT</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>DEFAULT</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;Ultra high res still capture with preview + app based RECORD size analysis&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / JPEG / RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>DEFAULT</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>JPEG / YUV / RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>DEFAULT</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt; &lt;td&gt;Ultra high res still image capture with preview + default sensor pixel mode analysis stream&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>Here, SC Map, refers to the <c>StreamConfigurationMap</c>, the target stream sizes must
            be chosen from. <c>DEFAULT</c> refers to the default sensor pixel mode <c>StreamConfigurationMap</c> and <c>MAX_RES</c> refers to the maximum resolution <c>StreamConfigurationMap</c>. For <c>MAX_RES</c> streams, <c>MAX</c> in the <c>Max size</c> column refers to the maximum size from
            <c>StreamConfigurationMap#getOutputSizes</c> and <c>StreamConfigurationMap#getHighResolutionOutputSizes</c>.
            Note: The same capture request must not mix targets from
            <c>StreamConfigurationMap</c>s corresponding to different sensor pixel modes.</para>
          <para>10-bit output capable
            <c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_DYNAMIC_RANGE_TEN_BIT</c>
            devices support at least the following stream combinations:</para>
          <para>&lt;table&gt;
            &lt;tr&gt;&lt;th colspan="7"&gt;10-bit output additional guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; }&lt;/td&gt; &lt;td colspan="4" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Simple preview, GPU video processing, or no-preview video recording.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; }&lt;/td&gt; &lt;td colspan="4" id="rb"&gt;&lt;/td&gt; &lt;td&gt;In-application video/image processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Standard still imaging.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution in-app processing with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution two-input in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;High-resolution video recording with preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;High-resolution recording with in-app snapshot.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;High-resolution recording with video snapshot.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>Here PRIV can be either 8 or 10-bit <c>android.graphics.ImageFormat#PRIVATE</c> pixel
            format. YUV can be either <c>android.graphics.ImageFormat#YUV_420_888</c> or
            <c>android.graphics.ImageFormat#YCBCR_P010</c>.
            For the maximum size column, PREVIEW refers to the best size match to the device's screen
            resolution, or to 1080p (1920x1080), whichever is smaller. RECORD refers to the camera
            device's maximum supported recording resolution, as determined by
            <c>android.media.CamcorderProfile</c>. MAXIMUM refers to the camera device's maximum output
            resolution for that format or target from <c>StreamConfigurationMap#getOutputSizes(int)</c>.
            Do note that invalid combinations such as having a camera surface configured to use pixel
            format <c>android.graphics.ImageFormat#YUV_420_888</c> with a 10-bit profile
            will cause a capture session initialization failure.</para>
          <para>
            <c>android.graphics.ImageFormat#JPEG_R</c> may also be supported if advertised by
            <c>android.hardware.camera2.params.StreamConfigurationMap</c>. When initializing a capture
            session that includes a Jpeg/R camera output clients must consider the following items w.r.t.
            the 10-bit mandatory stream combination table:
            
            &lt;ul&gt;
                &lt;li&gt;To generate the compressed Jpeg/R image a single
                <c>android.graphics.ImageFormat#YCBCR_P010</c> output will be used internally by
                the camera device.&lt;/li&gt;
                &lt;li&gt;On camera devices that are able to support concurrent 10 and 8-bit capture requests
                see <c>android.hardware.camera2.params.DynamicRangeProfiles#getProfileCaptureRequestConstraints</c>
                an extra <c>android.graphics.ImageFormat#JPEG</c> will also
                be configured internally to help speed up the encoding process.&lt;/li&gt;
            &lt;/ul&gt;
            
            Jpeg/R camera outputs will typically be able to support the MAXIMUM device resolution.
            Clients can also call <c>StreamConfigurationMap#getOutputSizes(int)</c> for a complete list
            supported sizes.
            Camera clients that register a Jpeg/R output within a stream combination that doesn't fit
            in the mandatory stream table above can call
            <c>CameraDevice#isSessionConfigurationSupported</c> to ensure that this particular
            configuration is supported.</para>
          <para>Devices with the STREAM_USE_CASE capability (<c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c> includes <c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_STREAM_USE_CASE</c>) support below additional
            stream combinations:
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="10"&gt;STREAM_USE_CASE capability additional guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="3" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="3" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="3" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Usecase&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Usecase&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Usecase&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Simple preview or in-app image processing&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>VIDEO_RECORD</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Simple video recording or in-app video processing&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>STILL_CAPTURE</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Simple JPEG or YUV still image capture&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW_VIDEO_STILL</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Multi-purpose stream for preview, video and still image capture&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>VIDEO_CALL</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Simple video call&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV / JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>STILL_CAPTURE</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Preview with JPEG or YUV still image capture&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>VIDEO_RECORD</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Preview with video recording or in-app video processing&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Preview with in-application image processing&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>VIDEO_CALL</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Preview with video call&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW_VIDEO_STILL</c>&lt;/td&gt; &lt;td&gt;<c>YUV / JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>STILL_CAPTURE</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;MultI-purpose stream with JPEG or YUV still capture&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>STILL_CAPTURE</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>STILL_CAPTURE</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;YUV and JPEG concurrent still image capture (for testing)&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>VIDEO_RECORD</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>STILL_CAPTURE</c>&lt;/td&gt; &lt;td&gt;Preview, video record and JPEG video snapshot&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>STILL_CAPTURE</c>&lt;/td&gt; &lt;td&gt;Preview, in-application image processing, and JPEG still image capture&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>Devices that include the <c>CameraMetadata#SCALER_AVAILABLE_STREAM_USE_CASES_CROPPED_RAW</c>
            stream use-case in <c>CameraCharacteristics#SCALER_AVAILABLE_STREAM_USE_CASES</c>,
            support the additional stream combinations below:
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="10"&gt;STREAM_USE_CASE_CROPPED_RAW capability additional guaranteed configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="3" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="3" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="3" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Usecase&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Usecase&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Usecase&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>CROPPED_RAW</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Cropped RAW still capture without preview&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>CROPPED_RAW</c>&lt;/td&gt; &lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Preview with cropped RAW still capture&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV / JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>STILL_CAPTURE</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>CROPPED_RAW</c>&lt;/td&gt; &lt;td&gt;Preview with YUV / JPEG and cropped RAW still capture&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>VIDEO_RECORD / PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>CROPPED_RAW</c>&lt;/td&gt; &lt;td&gt;Video recording with preview and cropped RAW still capture&lt;/td&gt; &lt;/tr&gt;</para>
          <para>For devices where <c>CameraCharacteristics#CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES</c>
            includes <c>CameraMetadata#CONTROL_VIDEO_STABILIZATION_MODE_PREVIEW_STABILIZATION</c>,
            the following stream combinations are guaranteed,
            for CaptureRequests where <c>CaptureRequest#CONTROL_VIDEO_STABILIZATION_MODE</c> is set to
            <c>CameraMetadata#CONTROL_VIDEO_STABILIZATION_MODE_PREVIEW_STABILIZATION</c></para>
          <para>&lt;table&gt;
            &lt;tr&gt;&lt;th colspan="7"&gt;Preview stabilization guaranteed stream configurations&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;&lt;td colspan="2" id="rb"&gt;&lt;/td&gt; &lt;td&gt;Stabilized preview, GPU video processing, or no-preview stabilized video recording.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt; &lt;td&gt;<c>JPEG / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td&gt;Standard still imaging with stabilized preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>s1440p</c>&lt;/td&gt;&lt;td&gt;High-resolution recording with stabilized preview and recording stream.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>For the maximum size column, PREVIEW refers to the best size match to the device's screen
            resolution, or to 1080p (1920x1080), whichever is smaller. RECORD refers to the camera
            device's maximum supported recording resolution, as determined by
            <c>android.media.CamcorderProfile</c>. MAXIMUM refers to the camera device's maximum output
            resolution for that format or target from <c>StreamConfigurationMap#getOutputSizes(int)</c>.</para>
          <para>Since the capabilities of camera devices vary greatly, a given camera device may support
            target combinations with sizes outside of these guarantees, but this can only be tested for
            by calling <c>#isSessionConfigurationSupported</c> or attempting to create a session with
            such targets.</para>
          <para>Exception on 176x144 (QCIF) resolution:
            Camera devices usually have a fixed capability for downscaling from larger resolution to
            smaller, and the QCIF resolution sometimes is not fully supported due to this
            limitation on devices with high-resolution image sensors. Therefore, trying to configure a
            QCIF resolution stream together with any other stream larger than 1920x1080 resolution
            (either width or height) might not be supported, and capture session creation will fail if it
            is not.</para>
          <para>&lt;h3&gt;Reprocessing&lt;/h3&gt;</para>
          <para>If a camera device supports YUV reprocessing
            (<c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING</c>) or PRIVATE
            reprocessing
            (<c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING</c>), the
            application can also create a reprocessable capture session to submit reprocess capture
            requests in addition to regular capture requests, by setting an
            <c>android.hardware.camera2.params.SessionConfiguration#setInputConfiguration
            input configuration</c> for the session. A reprocess capture request takes the next available
            buffer from the
            session's input Surface, and sends it through the camera device's processing pipeline again,
            to produce buffers for the request's target output Surfaces. No new image data is captured
            for a reprocess request. However the input buffer provided by the application must be
            captured previously by the same camera device in the same session directly (e.g. for
            Zero-Shutter-Lag use case) or indirectly (e.g. combining multiple output images).</para>
          <para>The active reprocessable capture session determines an input <c>Surface</c> and the set
            of potential output Surfaces for the camera devices for each capture request. The application
            can use <c>#createCaptureRequest createCaptureRequest</c> to create regular capture requests
            to capture new images from the camera device, and use <c>#createReprocessCaptureRequest
            createReprocessCaptureRequest</c> to create reprocess capture requests to process buffers from
            the input <c>Surface</c>. Some combinations of output Surfaces in a session may not be used
            in a request simultaneously. The guaranteed combinations of output Surfaces that can be used
            in a request simultaneously are listed in the tables under <c>#createCaptureSession
            createCaptureSession</c>. All the output Surfaces in one capture request will come from the
            same source, either from a new capture by the camera device, or from the input Surface
            depending on if the request is a reprocess capture request.</para>
          <para>Input formats and sizes supported by the camera device can be queried via
            <c>StreamConfigurationMap#getInputFormats</c> and
            <c>StreamConfigurationMap#getInputSizes</c>. For each supported input format, the camera
            device supports a set of output formats and sizes for reprocessing that can be queried via
            <c>StreamConfigurationMap#getValidOutputFormatsForInput</c> and
            <c>StreamConfigurationMap#getOutputSizes</c>. While output Surfaces with formats that
            aren't valid reprocess output targets for the input configuration can be part of a session,
            they cannot be used as targets for a reprocessing request.</para>
          <para>Since the application cannot access <c>android.graphics.ImageFormat#PRIVATE</c> images
            directly, an output Surface created by <c>android.media.ImageReader#newInstance</c> with
            <c>android.graphics.ImageFormat#PRIVATE</c> as the format will be considered as intended to
            be used for reprocessing input and thus the <c>android.media.ImageReader</c> size must
            match one of the supported input sizes for <c>android.graphics.ImageFormat#PRIVATE</c>
            format. Otherwise, creating a reprocessable capture session will fail.</para>
          <para>Starting from API level 30, recreating a reprocessable capture session will flush all the
            queued but not yet processed buffers from the input surface.</para>
          <para>The configurations in the tables below are guaranteed for creating a reprocessable
            capture session if the camera device supports YUV reprocessing or PRIVATE reprocessing.
            However, not all output targets used to create a reprocessable session may be used in a
            <c>CaptureRequest</c> simultaneously. For devices that support only 1 output target in a
            reprocess <c>CaptureRequest</c>, submitting a reprocess <c>CaptureRequest</c> with multiple
            output targets will result in a <c>CaptureFailure</c>. For devices that support multiple
            output targets in a reprocess <c>CaptureRequest</c>, the guaranteed output targets that can
            be included in a <c>CaptureRequest</c> simultaneously are listed in the tables under
            <c>#createCaptureSession createCaptureSession</c>. For example, with a FULL-capability
            (<c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c><c>==</c><c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL FULL</c>) device that supports PRIVATE
            reprocessing, an application can create a reprocessable capture session with 1 input,
            (<c>PRIV</c>, <c>MAXIMUM</c>), and 3 outputs, (<c>PRIV</c>, <c>MAXIMUM</c>),
            (<c>PRIV</c>, <c>PREVIEW</c>), and (<c>YUV</c>, <c>MAXIMUM</c>). However, it's not
            guaranteed that an application can submit a regular or reprocess capture with (<c>PRIV</c>,
            <c>MAXIMUM</c>) and (<c>YUV</c>, <c>MAXIMUM</c>) outputs based on the table listed under
            <c>#createCaptureSession createCaptureSession</c>. In other words, use the tables below to
            determine the guaranteed stream configurations for creating a reprocessable capture session,
            and use the tables under <c>#createCaptureSession createCaptureSession</c> to determine the
            guaranteed output targets that can be submitted in a regular or reprocess
            <c>CaptureRequest</c> simultaneously.</para>
          <para>Reprocessing with 10-bit output targets on 10-bit capable
            <c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_DYNAMIC_RANGE_TEN_BIT</c> devices is
            not supported. Trying to initialize a repreocessable capture session with one ore more
            output configurations set <c>OutputConfiguration#setDynamicRangeProfile</c> to use
            a 10-bit dynamic range profile <c>android.hardware.camera2.params.DynamicRangeProfiles</c>
            will trigger <c>IllegalArgumentException</c>.</para>
          <para>&lt;style scoped&gt;
             #rb { border-right-width: thick; }&lt;/style&gt;</para>
          <para>LIMITED-level (<c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c><c>==</c><c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c>) devices
            support at least the following stream combinations for creating a reprocessable capture
            session in addition to those listed earlier for regular captures for
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c> devices:
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="11"&gt;LIMITED-level additional guaranteed configurations for creating a reprocessable capture session&lt;br&gt;(<c>PRIV</c> input is guaranteed only if PRIVATE reprocessing is supported. <c>YUV</c> input is guaranteed only if YUV reprocessing is supported)&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Input&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 4&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;No-viewfinder still image reprocessing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;ZSL(Zero-Shutter-Lag) still imaging.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;ZSL still and in-app processing imaging.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;ZSL in-app processing with still capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>FULL-level (<c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c><c>==</c><c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL FULL</c>) devices
            support at least the following stream combinations for creating a reprocessable capture
            session in addition to those for
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c> devices:
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="11"&gt;FULL-level additional guaranteed configurations for creating a reprocessable capture session&lt;br&gt;(<c>PRIV</c> input is guaranteed only if PRIVATE reprocessing is supported. <c>YUV</c> input is guaranteed only if YUV reprocessing is supported)&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Input&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 4&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution multi-frame image fusion in-app processing with regular preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution multi-frame image fusion two-input in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>RECORD</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;High-resolution ZSL in-app video processing with regular preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution ZSL in-app processing with regular preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution two-input ZSL in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;ZSL still capture and in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>RAW-capability (<c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c> includes
            <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_RAW RAW</c>) devices additionally support
            at least the following stream combinations for creating a reprocessable capture session
            on both <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL FULL</c> and
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED LIMITED</c> devices
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="11"&gt;RAW-capability additional guaranteed configurations for creating a reprocessable capture session&lt;br&gt;(<c>PRIV</c> input is guaranteed only if PRIVATE reprocessing is supported. <c>YUV</c> input is guaranteed only if YUV reprocessing is supported)&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Input&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 4&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;Mutually exclusive ZSL in-app processing and DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Mutually exclusive ZSL in-app processing and preview with DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Mutually exclusive ZSL two-input in-app processing and DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Mutually exclusive ZSL still capture and preview with DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Mutually exclusive ZSL in-app processing with still capture and DNG capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>LEVEL-3 (<c>CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</c><c>==</c><c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_3 LEVEL_3</c>) devices
            support at least the following stream combinations for creating a reprocessable capture
            session in addition to those for
            <c>CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL FULL</c> devices. Note that while
            the second configuration allows for configuring <c>MAXIMUM</c><c>YUV</c> and <c>JPEG</c>
            outputs at the same time, that configuration is not listed for regular capture sessions, and
            therefore simultaneous output to both targets is not allowed.
            
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="13"&gt;LEVEL-3 additional guaranteed configurations for creating a reprocessable capture session&lt;br&gt;(<c>PRIV</c> input is guaranteed only if PRIVATE reprocessing is supported. <c>YUV</c> input is always guaranteed.&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Input&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 4&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 5&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>640x480</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;In-app viewfinder analysis with ZSL and RAW.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>640x480</c>&lt;/td&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAXIMUM</c>&lt;/td&gt;&lt;td&gt;In-app viewfinder analysis with ZSL, RAW, and JPEG reprocessing output.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>If a camera device supports multi-resolution <c>YUV</c> input and multi-resolution
            <c>YUV</c> output or supports multi-resolution <c>PRIVATE</c> input and multi-resolution
            <c>PRIVATE</c> output, the additional mandatory stream combinations for LIMITED and FULL devices are listed
            below (<c>MULTI_RES</c> in the Max size column refers to a
            <c>MultiResolutionImageReader</c> for output, and a multi-resolution
            <c>InputConfiguration</c> for input):
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="11"&gt;LIMITED-level additional guaranteed configurations for creating a reprocessable capture session with multi-resolution input and multi-resolution outputs&lt;br&gt;(<c>PRIV</c> input is guaranteed only if PRIVATE reprocessing is supported. <c>YUV</c> input is guaranteed only if YUV reprocessing is supported)&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Input&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 4&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;No-viewfinder still image reprocessing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;ZSL(Zero-Shutter-Lag) still imaging.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;ZSL still and in-app processing imaging.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;ZSL in-app processing with still capture.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;
            &lt;table&gt;
            &lt;tr&gt;&lt;th colspan="11"&gt;FULL-level additional guaranteed configurations for creating a reprocessable capture session with multi-resolution input and multi-resolution outputs&lt;br&gt;(<c>PRIV</c> input is guaranteed only if PRIVATE reprocessing is supported. <c>YUV</c> input is guaranteed only if YUV reprocessing is supported)&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th colspan="2" id="rb"&gt;Input&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 1&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 2&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 3&lt;/th&gt;&lt;th colspan="2" id="rb"&gt;Target 4&lt;/th&gt;&lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution ZSL in-app processing with regular preview.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;td id="rb"&gt;&lt;/td&gt; &lt;td&gt;Maximum-resolution two-input ZSL in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>PRIV</c>/<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;Same as input&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;<c>PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt; &lt;td&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MULTI_RES</c>&lt;/td&gt; &lt;td&gt;ZSL still capture and in-app processing.&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;</para>
          <para>Devices with the ULTRA_HIGH_RESOLUTION_SENSOR capability have some additional guarantees
            which clients can take advantage of :</para>
          <para>&lt;table&gt;
            &lt;tr&gt;&lt;th colspan="13"&gt;Additional guaranteed combinations for ULTRA_HIGH_RESOLUTION sensors (YUV / PRIV inputs are guaranteed only if YUV / PRIVATE reprocessing are supported)&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;th colspan="3" id="rb"&gt;Input&lt;/th&gt; &lt;th colspan="3" id="rb"&gt;Target 1&lt;/th&gt; &lt;th colspan="3" id="rb"&gt;Target 2&lt;/th&gt;  &lt;th colspan="3" id="rb"&gt;Target 3&lt;/th&gt; &lt;th rowspan="2"&gt;Sample use case(s)&lt;/th&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt; SC Map&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt; SC Map&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt; SC Map&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt; &lt;th&gt;Type&lt;/th&gt;&lt;th id="rb"&gt; SC Map&lt;/th&gt;&lt;th id="rb"&gt;Max size&lt;/th&gt;&lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt;&lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>DEFAULT</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td colspan="3" id="rb"&gt;&lt;/td&gt; &lt;td&gt;RAW remosaic reprocessing with separate preview&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt;&lt;td&gt;<c>RAW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PRIV / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>DEFAULT</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>JPEG / YUV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt; &lt;td&gt;Ultra high res RAW -&gt; JPEG / YUV with seperate preview&lt;/td&gt; &lt;/tr&gt;
            &lt;tr&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt; &lt;td&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>YUV / PRIV</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>DEFAULT</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>PREVIEW</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>JPEG</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX_RES</c>&lt;/td&gt;&lt;td id="rb"&gt;<c>MAX</c>&lt;/td&gt; &lt;td&gt; Ultra high res PRIV / YUV -&gt; YUV / JPEG reprocessing with seperate preview&lt;/td&gt; &lt;/tr&gt;
            &lt;/table&gt;&lt;br&gt;
            No additional mandatory stream combinations for RAW capability and LEVEL-3 hardware level.
            &lt;/p&gt;
            
            &lt;h3&gt;Constrained high-speed recording&lt;/h3&gt;</para>
          <para>The application can use a
            <c>android.hardware.camera2.params.SessionConfiguration#SESSION_REGULAR
            normal capture session</c>
            for high speed capture if the desired high speed FPS ranges are advertised by
            <c>CameraCharacteristics#CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES</c>, in which case all API
            semantics associated with normal capture sessions applies.</para>
          <para>A
            <c>android.hardware.camera2.params.SessionConfiguration#SESSION_HIGH_SPEED
            high-speed capture session</c>
            can be use for high speed video recording (&gt;=120fps) when the camera device supports high
            speed video capability (i.e., <c>CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES</c>
            contains <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO</c>).
            A constrained high-speed capture session has special limitations compared with a normal
            capture session:</para>
          <para>&lt;ul&gt;
            
            &lt;li&gt;In addition to the output target Surface requirements specified above for regular
              captures, a high speed capture session will only support up to 2 output Surfaces, though
              the application might choose to configure just one Surface (e.g., preview only). All
              Surfaces must be either video encoder surfaces (acquired by
              <c>android.media.MediaRecorder#getSurface</c> or
              <c>android.media.MediaCodec#createInputSurface</c>) or preview surfaces (obtained from
              <c>android.view.SurfaceView</c>, <c>android.graphics.SurfaceTexture</c> via
              <c>android.view.Surface#Surface(android.graphics.SurfaceTexture)</c>). The Surface sizes
              must be one of the sizes reported by <c>StreamConfigurationMap#getHighSpeedVideoSizes</c>.
              When multiple Surfaces are configured, their size must be same.&lt;/li&gt;
            
            &lt;li&gt;An active high speed capture session only accepts request lists created via
              <c>CameraConstrainedHighSpeedCaptureSession#createHighSpeedRequestList</c>, and the
              request list can only be submitted to this session via
              <c>CameraCaptureSession#captureBurst captureBurst</c>, or
              <c>CameraCaptureSession#setRepeatingBurst setRepeatingBurst</c>.&lt;/li&gt;
            
            &lt;li&gt;The FPS ranges being requested to this session must be selected from
              <c>StreamConfigurationMap#getHighSpeedVideoFpsRangesFor</c>. The application can still use
              <c>CaptureRequest#CONTROL_AE_TARGET_FPS_RANGE</c> to control the desired FPS range.
              Switching to an FPS range that has different
              <c>android.util.Range#getUpper() maximum FPS</c> may trigger some camera device
              reconfigurations, which may introduce extra latency. It is recommended that the
              application avoids unnecessary maximum target FPS changes as much as possible during high
              speed streaming.&lt;/li&gt;
            
            &lt;li&gt;For the request lists submitted to this session, the camera device will override the
              <c>CaptureRequest#CONTROL_MODE control mode</c>, auto-exposure (AE), auto-white balance
              (AWB) and auto-focus (AF) to <c>CameraMetadata#CONTROL_MODE_AUTO</c>,
              <c>CameraMetadata#CONTROL_AE_MODE_ON</c>, <c>CameraMetadata#CONTROL_AWB_MODE_AUTO</c>
              and <c>CameraMetadata#CONTROL_AF_MODE_CONTINUOUS_VIDEO</c>, respectively. All
              post-processing block mode controls will be overridden to be FAST. Therefore, no manual
              control of capture and post-processing parameters is possible. Beside these, only a subset
              of controls will work, see
              <c>CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO</c> for
              more details.&lt;/li&gt;
            
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createCaptureSession(android.hardware.camera2.params.SessionConfiguration)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createCaptureSession(android.hardware.camera2.params.SessionConfiguration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCaptureSession">
      <MemberSignature Language="C#" Value="public abstract void CreateCaptureSession (System.Collections.Generic.IList&lt;Android.Views.Surface&gt; outputs, Android.Hardware.Camera2.CameraCaptureSession.StateCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateCaptureSession(class System.Collections.Generic.IList`1&lt;class Android.Views.Surface&gt; outputs, class Android.Hardware.Camera2.CameraCaptureSession/StateCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateCaptureSession(System.Collections.Generic.IList{Android.Views.Surface},Android.Hardware.Camera2.CameraCaptureSession.StateCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member CreateCaptureSession : System.Collections.Generic.IList&lt;Android.Views.Surface&gt; * Android.Hardware.Camera2.CameraCaptureSession.StateCallback * Android.OS.Handler -&gt; unit" Usage="cameraDevice.CreateCaptureSession (outputs, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCaptureSession", "(Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateCaptureSession_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCaptureSession", "(Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateCaptureSession_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputs" Type="System.Collections.Generic.IList&lt;Android.Views.Surface&gt;" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraCaptureSession+StateCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="outputs">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCaptureSessionByOutputConfigurations">
      <MemberSignature Language="C#" Value="public abstract void CreateCaptureSessionByOutputConfigurations (System.Collections.Generic.IList&lt;Android.Hardware.Camera2.Params.OutputConfiguration&gt;? outputConfigurations, Android.Hardware.Camera2.CameraCaptureSession.StateCallback? callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateCaptureSessionByOutputConfigurations(class System.Collections.Generic.IList`1&lt;class Android.Hardware.Camera2.Params.OutputConfiguration&gt; outputConfigurations, class Android.Hardware.Camera2.CameraCaptureSession/StateCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateCaptureSessionByOutputConfigurations(System.Collections.Generic.IList{Android.Hardware.Camera2.Params.OutputConfiguration},Android.Hardware.Camera2.CameraCaptureSession.StateCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member CreateCaptureSessionByOutputConfigurations : System.Collections.Generic.IList&lt;Android.Hardware.Camera2.Params.OutputConfiguration&gt; * Android.Hardware.Camera2.CameraCaptureSession.StateCallback * Android.OS.Handler -&gt; unit" Usage="cameraDevice.CreateCaptureSessionByOutputConfigurations (outputConfigurations, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCaptureSessionByOutputConfigurations", "(Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateCaptureSessionByOutputConfigurations_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCaptureSessionByOutputConfigurations", "(Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateCaptureSessionByOutputConfigurations_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputConfigurations" Type="System.Collections.Generic.IList&lt;Android.Hardware.Camera2.Params.OutputConfiguration&gt;" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraCaptureSession+StateCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="outputConfigurations">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>Create a new camera capture session by providing the target output set of Surfaces and
            its corresponding surface configuration to the camera device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createCaptureSessionByOutputConfigurations(java.util.List,%20android.hardware.camera2.StateCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createCaptureSessionByOutputConfigurations(java.util.List, android.hardware.camera2.StateCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConstrainedHighSpeedCaptureSession">
      <MemberSignature Language="C#" Value="public abstract void CreateConstrainedHighSpeedCaptureSession (System.Collections.Generic.IList&lt;Android.Views.Surface&gt; outputs, Android.Hardware.Camera2.CameraCaptureSession.StateCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateConstrainedHighSpeedCaptureSession(class System.Collections.Generic.IList`1&lt;class Android.Views.Surface&gt; outputs, class Android.Hardware.Camera2.CameraCaptureSession/StateCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateConstrainedHighSpeedCaptureSession(System.Collections.Generic.IList{Android.Views.Surface},Android.Hardware.Camera2.CameraCaptureSession.StateCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member CreateConstrainedHighSpeedCaptureSession : System.Collections.Generic.IList&lt;Android.Views.Surface&gt; * Android.Hardware.Camera2.CameraCaptureSession.StateCallback * Android.OS.Handler -&gt; unit" Usage="cameraDevice.CreateConstrainedHighSpeedCaptureSession (outputs, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createConstrainedHighSpeedCaptureSession", "(Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateConstrainedHighSpeedCaptureSession_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createConstrainedHighSpeedCaptureSession", "(Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateConstrainedHighSpeedCaptureSession_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputs" Type="System.Collections.Generic.IList&lt;Android.Views.Surface&gt;" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraCaptureSession+StateCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="outputs">The new set of Surfaces that should be made available as
                           targets for captured high speed image data.</param>
        <param name="callback">The callback to notify about the status of the new capture session.</param>
        <param name="handler">The handler on which the callback should be invoked, or <c>null</c> to use
                           the current thread's <c>android.os.Looper looper</c>.</param>
        <summary>Create a new constrained high speed capture session.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createConstrainedHighSpeedCaptureSession(java.util.List,%20android.hardware.camera2.StateCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createConstrainedHighSpeedCaptureSession(java.util.List, android.hardware.camera2.StateCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExtensionSession">
      <MemberSignature Language="C#" Value="public virtual void CreateExtensionSession (Android.Hardware.Camera2.Params.ExtensionSessionConfiguration extensionConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateExtensionSession(class Android.Hardware.Camera2.Params.ExtensionSessionConfiguration extensionConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateExtensionSession(Android.Hardware.Camera2.Params.ExtensionSessionConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member CreateExtensionSession : Android.Hardware.Camera2.Params.ExtensionSessionConfiguration -&gt; unit&#xA;override this.CreateExtensionSession : Android.Hardware.Camera2.Params.ExtensionSessionConfiguration -&gt; unit" Usage="cameraDevice.CreateExtensionSession extensionConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createExtensionSession", "(Landroid/hardware/camera2/params/ExtensionSessionConfiguration;)V", "GetCreateExtensionSession_Landroid_hardware_camera2_params_ExtensionSessionConfiguration_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createExtensionSession", "(Landroid/hardware/camera2/params/ExtensionSessionConfiguration;)V", "GetCreateExtensionSession_Landroid_hardware_camera2_params_ExtensionSessionConfiguration_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionConfiguration" Type="Android.Hardware.Camera2.Params.ExtensionSessionConfiguration" />
      </Parameters>
      <Docs>
        <param name="extensionConfiguration">extension configuration</param>
        <summary>Initialize a specific device-specific extension augmented camera capture
            session.</summary>
        <remarks>
          <para>Initialize a specific device-specific extension augmented camera capture
            session.</para>
          <para>Extension sessions can be used to enable device-specific operation modes like
            <c>CameraExtensionCharacteristics#EXTENSION_NIGHT</c> or
            <c>CameraExtensionCharacteristics#EXTENSION_HDR</c>. These modes are less flexible than the
            full camera API, but enable access to more sophisticated processing algorithms that can
            capture multi-frame bursts to generate single output images. To query for available
            extensions on this device call
            <c>CameraExtensionCharacteristics#getSupportedExtensions()</c>.</para>
          <para>This method will also trigger the setup of the internal
            processing pipeline for extension augmented preview and multi-frame
            still capture.</para>
          <para>If a prior CameraCaptureSession already exists when this method is called, the previous
            session will no longer be able to accept new capture requests and will be closed. Any
            in-progress capture requests made on the prior session will be completed before it's closed.</para>
          <para>The CameraExtensionSession will be active until the client
            either calls CameraExtensionSession.close() or creates a new camera
            capture session. In both cases all internal resources will be
            released, continuous repeating requests stopped and any pending
            multi-frame capture requests flushed.</para>
          <para>Note that the CameraExtensionSession currently supports at most wo
            multi frame capture surface formats: ImageFormat.JPEG will be supported
            by all extensions and ImageFormat.YUV_420_888 may or may not be supported.
            Clients must query the multi-frame capture format support using
            <c>CameraExtensionCharacteristics#getExtensionSupportedSizes(int, int)</c>.
            For repeating requests CameraExtensionSession supports only
            <c>android.graphics.SurfaceTexture</c> as output. Clients can query the supported resolution
            for the repeating request output using
            <c>CameraExtensionCharacteristics#getExtensionSupportedSizes(int, Class)
            getExtensionSupportedSizes(..., Class)</c>.</para>
          <para>At the very minimum the initialization expects either one valid output
            surface for repeating or one valid output for high-quality single requests registered in the
            outputs argument of the extension configuration argument. At the maximum the initialization
            will accept two valid output surfaces, one for repeating and the other for single requests.
            Additional unsupported surfaces passed to ExtensionSessionConfiguration will cause an
            <c>IllegalArgumentException</c> to be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createExtensionSession(android.hardware.camera2.params.ExtensionSessionConfiguration)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createExtensionSession(android.hardware.camera2.params.ExtensionSessionConfiguration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReprocessableCaptureSession">
      <MemberSignature Language="C#" Value="public abstract void CreateReprocessableCaptureSession (Android.Hardware.Camera2.Params.InputConfiguration inputConfig, System.Collections.Generic.IList&lt;Android.Views.Surface&gt; outputs, Android.Hardware.Camera2.CameraCaptureSession.StateCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateReprocessableCaptureSession(class Android.Hardware.Camera2.Params.InputConfiguration inputConfig, class System.Collections.Generic.IList`1&lt;class Android.Views.Surface&gt; outputs, class Android.Hardware.Camera2.CameraCaptureSession/StateCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateReprocessableCaptureSession(Android.Hardware.Camera2.Params.InputConfiguration,System.Collections.Generic.IList{Android.Views.Surface},Android.Hardware.Camera2.CameraCaptureSession.StateCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member CreateReprocessableCaptureSession : Android.Hardware.Camera2.Params.InputConfiguration * System.Collections.Generic.IList&lt;Android.Views.Surface&gt; * Android.Hardware.Camera2.CameraCaptureSession.StateCallback * Android.OS.Handler -&gt; unit" Usage="cameraDevice.CreateReprocessableCaptureSession (inputConfig, outputs, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createReprocessableCaptureSession", "(Landroid/hardware/camera2/params/InputConfiguration;Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateReprocessableCaptureSession_Landroid_hardware_camera2_params_InputConfiguration_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createReprocessableCaptureSession", "(Landroid/hardware/camera2/params/InputConfiguration;Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateReprocessableCaptureSession_Landroid_hardware_camera2_params_InputConfiguration_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputConfig" Type="Android.Hardware.Camera2.Params.InputConfiguration" />
        <Parameter Name="outputs" Type="System.Collections.Generic.IList&lt;Android.Views.Surface&gt;" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraCaptureSession+StateCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="inputConfig">The configuration for the input <c>Surface</c></param>
        <param name="outputs">The new set of Surfaces that should be made available as
                           targets for captured image data.</param>
        <param name="callback">The callback to notify about the status of the new capture session.</param>
        <param name="handler">The handler on which the callback should be invoked, or <c>null</c> to use
                           the current thread's <c>android.os.Looper looper</c>.</param>
        <summary>Create a new reprocessable camera capture session by providing the desired reprocessing
            input Surface configuration and the target output set of Surfaces to the camera device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration,%20java.util.List,%20android.hardware.camera2.StateCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration, java.util.List, android.hardware.camera2.StateCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReprocessableCaptureSessionByConfigurations">
      <MemberSignature Language="C#" Value="public abstract void CreateReprocessableCaptureSessionByConfigurations (Android.Hardware.Camera2.Params.InputConfiguration inputConfig, System.Collections.Generic.IList&lt;Android.Hardware.Camera2.Params.OutputConfiguration&gt; outputs, Android.Hardware.Camera2.CameraCaptureSession.StateCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateReprocessableCaptureSessionByConfigurations(class Android.Hardware.Camera2.Params.InputConfiguration inputConfig, class System.Collections.Generic.IList`1&lt;class Android.Hardware.Camera2.Params.OutputConfiguration&gt; outputs, class Android.Hardware.Camera2.CameraCaptureSession/StateCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateReprocessableCaptureSessionByConfigurations(Android.Hardware.Camera2.Params.InputConfiguration,System.Collections.Generic.IList{Android.Hardware.Camera2.Params.OutputConfiguration},Android.Hardware.Camera2.CameraCaptureSession.StateCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member CreateReprocessableCaptureSessionByConfigurations : Android.Hardware.Camera2.Params.InputConfiguration * System.Collections.Generic.IList&lt;Android.Hardware.Camera2.Params.OutputConfiguration&gt; * Android.Hardware.Camera2.CameraCaptureSession.StateCallback * Android.OS.Handler -&gt; unit" Usage="cameraDevice.CreateReprocessableCaptureSessionByConfigurations (inputConfig, outputs, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createReprocessableCaptureSessionByConfigurations", "(Landroid/hardware/camera2/params/InputConfiguration;Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateReprocessableCaptureSessionByConfigurations_Landroid_hardware_camera2_params_InputConfiguration_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createReprocessableCaptureSessionByConfigurations", "(Landroid/hardware/camera2/params/InputConfiguration;Ljava/util/List;Landroid/hardware/camera2/CameraCaptureSession$StateCallback;Landroid/os/Handler;)V", "GetCreateReprocessableCaptureSessionByConfigurations_Landroid_hardware_camera2_params_InputConfiguration_Ljava_util_List_Landroid_hardware_camera2_CameraCaptureSession_StateCallback_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputConfig" Type="Android.Hardware.Camera2.Params.InputConfiguration" />
        <Parameter Name="outputs" Type="System.Collections.Generic.IList&lt;Android.Hardware.Camera2.Params.OutputConfiguration&gt;" />
        <Parameter Name="callback" Type="Android.Hardware.Camera2.CameraCaptureSession+StateCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="inputConfig">To be added.</param>
        <param name="outputs">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>Create a new reprocessable camera capture session by providing the desired reprocessing
            input configuration and output <c>OutputConfiguration</c>
            to the camera device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createReprocessableCaptureSessionByConfigurations(android.hardware.camera2.params.InputConfiguration,%20java.util.List,%20android.hardware.camera2.StateCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createReprocessableCaptureSessionByConfigurations(android.hardware.camera2.params.InputConfiguration, java.util.List, android.hardware.camera2.StateCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReprocessCaptureRequest">
      <MemberSignature Language="C#" Value="public abstract Android.Hardware.Camera2.CaptureRequest.Builder CreateReprocessCaptureRequest (Android.Hardware.Camera2.TotalCaptureResult inputResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.Camera2.CaptureRequest/Builder CreateReprocessCaptureRequest(class Android.Hardware.Camera2.TotalCaptureResult inputResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.CreateReprocessCaptureRequest(Android.Hardware.Camera2.TotalCaptureResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateReprocessCaptureRequest : Android.Hardware.Camera2.TotalCaptureResult -&gt; Android.Hardware.Camera2.CaptureRequest.Builder" Usage="cameraDevice.CreateReprocessCaptureRequest inputResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createReprocessCaptureRequest", "(Landroid/hardware/camera2/TotalCaptureResult;)Landroid/hardware/camera2/CaptureRequest$Builder;", "GetCreateReprocessCaptureRequest_Landroid_hardware_camera2_TotalCaptureResult_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createReprocessCaptureRequest", "(Landroid/hardware/camera2/TotalCaptureResult;)Landroid/hardware/camera2/CaptureRequest$Builder;", "GetCreateReprocessCaptureRequest_Landroid_hardware_camera2_TotalCaptureResult_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputResult" Type="Android.Hardware.Camera2.TotalCaptureResult" />
      </Parameters>
      <Docs>
        <param name="inputResult">The capture result of the output image or one of the output images used
                                  to generate the reprocess input image for this capture request.</param>
        <summary>Create a <c>CaptureRequest.Builder</c> for a new reprocess <c>CaptureRequest</c> from a
            <c>TotalCaptureResult</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#createReprocessCaptureRequest(android.hardware.camera2.TotalCaptureResult)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.createReprocessCaptureRequest(android.hardware.camera2.TotalCaptureResult)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraDevice.Id" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Android.Hardware.Camera2.CameraDevice.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getId", "()Ljava/lang/String;", "GetGetIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getId", "()Ljava/lang/String;", "GetGetIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the ID of this camera device.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Hardware.Camera2.CameraManager.GetCameraCharacteristics(System.String)" />
        <altmember cref="M:Android.Hardware.Camera2.CameraManager.GetCameraIdList" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="IsSessionConfigurationSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSessionConfigurationSupported (Android.Hardware.Camera2.Params.SessionConfiguration sessionConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSessionConfigurationSupported(class Android.Hardware.Camera2.Params.SessionConfiguration sessionConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Camera2.CameraDevice.IsSessionConfigurationSupported(Android.Hardware.Camera2.Params.SessionConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member IsSessionConfigurationSupported : Android.Hardware.Camera2.Params.SessionConfiguration -&gt; bool&#xA;override this.IsSessionConfigurationSupported : Android.Hardware.Camera2.Params.SessionConfiguration -&gt; bool" Usage="cameraDevice.IsSessionConfigurationSupported sessionConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSessionConfigurationSupported", "(Landroid/hardware/camera2/params/SessionConfiguration;)Z", "GetIsSessionConfigurationSupported_Landroid_hardware_camera2_params_SessionConfiguration_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSessionConfigurationSupported", "(Landroid/hardware/camera2/params/SessionConfiguration;)Z", "GetIsSessionConfigurationSupported_Landroid_hardware_camera2_params_SessionConfiguration_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionConfig" Type="Android.Hardware.Camera2.Params.SessionConfiguration" />
      </Parameters>
      <Docs>
        <param name="sessionConfig">To be added.</param>
        <summary>Checks whether a particular <c>SessionConfiguration</c> is supported by the camera device.</summary>
        <returns>
          <c>true</c> if the given session configuration is supported by the camera device
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Checks whether a particular <c>SessionConfiguration</c> is supported by the camera device.</para>
          <para>This method performs a runtime check of a given <c>SessionConfiguration</c>. The result
            confirms whether or not the passed session configuration can be successfully used to
            create a camera capture session using
            <c>CameraDevice#createCaptureSession(
            android.hardware.camera2.params.SessionConfiguration)</c>.</para>
          <para>The method can be called at any point before, during and after active capture session.
            It must not impact normal camera behavior in any way and must complete significantly
            faster than creating a regular or constrained capture session.</para>
          <para>Although this method is faster than creating a new capture session, it is not intended
            to be used for exploring the entire space of supported stream combinations. The available
            mandatory stream combinations
            <c>android.hardware.camera2.params.MandatoryStreamCombination</c> are better suited for this
            purpose.</para>
          <para>Note that session parameters will be ignored and calls to
            <c>SessionConfiguration#setSessionParameters</c> are not required.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/camera2/CameraDevice#isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration)" title="Reference documentation">Java documentation for <code>android.hardware.camera2.CameraDevice.isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraDevice.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Hardware.Camera2.CameraDevice.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraDevice.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Hardware.Camera2.CameraDevice.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Camera2.CameraDevice.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Hardware.Camera2.CameraDevice.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
