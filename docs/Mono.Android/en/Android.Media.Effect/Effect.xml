<Type Name="Effect" FullName="Android.Media.Effect.Effect">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Effect&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Effect abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class Effect : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Effect extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.Effect.Effect" />
  <TypeSignature Language="F#" Value="type Effect = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/effect/Effect", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/effect/Effect", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>Effects are high-performance transformations that can be applied to image frames.</summary>
    <remarks>
      <para>Effects are high-performance transformations that can be applied to image frames. These are
            passed in the form of OpenGL ES 2.0 texture names. Typical frames could be images loaded from
            disk, or frames from the camera or other video streams.</para>
      <para>To create an Effect you must first create an EffectContext. You can obtain an instance of the
            context's EffectFactory by calling
            <c>android.media.effect.EffectContext#getFactory() getFactory()</c>. The EffectFactory allows
            you to instantiate specific Effects.</para>
      <para>The application is responsible for creating an EGL context, and making it current before
            applying an effect. An effect is bound to a single EffectContext, which in turn is bound to a
            single EGL context. If your EGL context is destroyed, the EffectContext becomes invalid and any
            effects bound to this context can no longer be used.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/effect/Effect" title="Reference documentation">Java documentation for <code>android.media.effect.Effect</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Effect();" />
      <MemberSignature Language="C#" Value="public Effect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Effect.Effect.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Effect(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Effect (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Effect.Effect.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.Effect.Effect : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.Effect.Effect" Usage="new Android.Media.Effect.Effect (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Apply (inputTexId As Integer, width As Integer, height As Integer, outputTexId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Apply(int inputTexId, int width, int height, int outputTexId);" />
      <MemberSignature Language="C#" Value="public abstract void Apply (int inputTexId, int width, int height, int outputTexId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(int32 inputTexId, int32 width, int32 height, int32 outputTexId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Effect.Effect.Apply(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Apply : int * int * int * int -&gt; unit" Usage="effect.Apply (inputTexId, width, height, outputTexId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("apply", "(IIII)V", "GetApply_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("apply", "(IIII)V", "GetApply_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputTexId" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="outputTexId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputTexId">The GL texture name of a valid and bound input texture.</param>
        <param name="width">The width of the input texture in pixels.</param>
        <param name="height">The height of the input texture in pixels.</param>
        <param name="outputTexId">The GL texture name of the output texture.</param>
        <summary>Apply an effect to GL textures.</summary>
        <remarks>
          <para>Apply an effect to GL textures.</para>
          <para>Apply the Effect on the specified input GL texture, and write the result into the
            output GL texture. The texture names passed must be valid in the current GL context.</para>
          <para>The input texture must be a valid texture name with the given width and height and must be
            bound to a GL_TEXTURE_2D texture image (usually done by calling the glTexImage2D() function).
            Multiple mipmap levels may be provided.</para>
          <para>If the output texture has not been bound to a texture image, it will be automatically
            bound by the effect as a GL_TEXTURE_2D. It will contain one mipmap level (0), which will have
            the same size as the input. No other mipmap levels are defined. If the output texture was
            bound already, and its size does not match the input texture size, the result may be clipped
            or only partially fill the texture.</para>
          <para>Note, that regardless of whether a texture image was originally provided or not, both the
            input and output textures are owned by the caller. That is, the caller is responsible for
            calling glDeleteTextures() to deallocate the input and output textures.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/effect/Effect#apply(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.effect.Effect.apply(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Effect.Effect.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.Effect.Effect.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract string? Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Effect.Effect.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Android.Media.Effect.Effect.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the effect name.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Release ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Release();" />
      <MemberSignature Language="C#" Value="public abstract void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Effect.Effect.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit" Usage="effect.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Release an effect.</summary>
        <remarks>
          <para>Release an effect.</para>
          <para>Releases the effect and any resources associated with it. You may call this if you need to
            make sure acquired resources are no longer held by the effect. Releasing an effect makes it
            invalid for reuse.</para>
          <para>Note that this method must be called with the EffectContext and EGL context current, as
            the effect may release internal GL resources.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/effect/Effect#release()" title="Reference documentation">Java documentation for <code>android.media.effect.Effect.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetParameter (parameterKey As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetParameter(System::String ^ parameterKey, Java::Lang::Object ^ value);" />
      <MemberSignature Language="C#" Value="public abstract void SetParameter (string? parameterKey, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParameter(string parameterKey, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Effect.Effect.SetParameter(System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetParameter : string * Java.Lang.Object -&gt; unit" Usage="effect.SetParameter (parameterKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setParameter", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetParameter_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setParameter", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetParameter_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterKey" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="parameterKey">The name of the parameter to adjust.</param>
        <param name="value">The new value to set the parameter to.</param>
        <summary>Set a filter parameter.</summary>
        <remarks>
          <para>Set a filter parameter.</para>
          <para>Consult the effect documentation for a list of supported parameter keys for each effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/effect/Effect#setParameter(java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.media.effect.Effect.setParameter(java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetUpdateListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUpdateListener (listener As IEffectUpdateListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUpdateListener(Android::Media::Effect::IEffectUpdateListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void SetUpdateListener (Android.Media.Effect.IEffectUpdateListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUpdateListener(class Android.Media.Effect.IEffectUpdateListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Effect.Effect.SetUpdateListener(Android.Media.Effect.IEffectUpdateListener)" />
      <MemberSignature Language="F#" Value="abstract member SetUpdateListener : Android.Media.Effect.IEffectUpdateListener -&gt; unit&#xA;override this.SetUpdateListener : Android.Media.Effect.IEffectUpdateListener -&gt; unit" Usage="effect.SetUpdateListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUpdateListener", "(Landroid/media/effect/EffectUpdateListener;)V", "GetSetUpdateListener_Landroid_media_effect_EffectUpdateListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUpdateListener", "(Landroid/media/effect/EffectUpdateListener;)V", "GetSetUpdateListener_Landroid_media_effect_EffectUpdateListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.Effect.IEffectUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to receive update callbacks on.</param>
        <summary>Set an effect listener.</summary>
        <remarks>
          <para>Set an effect listener.</para>
          <para>Some effects may report state changes back to the host, if a listener is set. Consult the
            individual effect documentation for more details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/effect/Effect#setUpdateListener(android.media.effect.EffectUpdateListener)" title="Reference documentation">Java documentation for <code>android.media.effect.Effect.setUpdateListener(android.media.effect.EffectUpdateListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Effect.Effect.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.Effect.Effect.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Effect.Effect.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.Effect.Effect.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="VB.NET" Value="Public Custom Event Update As EventHandler(Of EffectUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Media::Effect::EffectUpdateEventArgs ^&gt; ^ Update;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.Effect.EffectUpdateEventArgs&gt; Update;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.Effect.EffectUpdateEventArgs&gt; Update" />
      <MemberSignature Language="DocId" Value="E:Android.Media.Effect.Effect.Update" />
      <MemberSignature Language="F#" Value="member this.Update : EventHandler&lt;Android.Media.Effect.EffectUpdateEventArgs&gt; " Usage="member this.Update : System.EventHandler&lt;Android.Media.Effect.EffectUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.Effect.EffectUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
