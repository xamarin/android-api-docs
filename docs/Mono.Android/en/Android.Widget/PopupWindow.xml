<Type Name="PopupWindow" FullName="Android.Widget.PopupWindow">
  <TypeSignature Language="C#" Value="public class PopupWindow : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PopupWindow extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/PopupWindow", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary tool="true">
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">A popup window that can be used to display an arbitrary view. The popup
 window is a floating container that appears on top of the current
 activity.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Android.Widget.AutoCompleteTextView" /></c></term></item><item><term><c><see cref="T:Android.Widget.Spinner" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/PopupWindow.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new empty, non focusable popup window of dimension (0,0).</para>
          <para tool="javadoc-to-mdoc">The popup does not provide any background. This should be handled
 by the content view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new empty, non focusable popup window of dimension (0,0).</para>
          <para tool="javadoc-to-mdoc">The popup does provide a background.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow (Android.Views.View contentView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.View contentView) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/View;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contentView" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="contentView">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new non focusable popup window which can display the
 <c>contentView</c>. The dimension of the window are (0,0).</para>
          <para tool="javadoc-to-mdoc">The popup does not provide any background. This should be handled
 by the content view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new empty, non focusable popup window of dimension (0,0).</para>
          <para tool="javadoc-to-mdoc">The popup does provide a background.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new empty, non focusable popup window. The dimension of the
 window must be passed to this constructor.</para>
          <para tool="javadoc-to-mdoc">The popup does not provide any background. This should be handled
 by the content view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PopupWindow (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new empty, non focusable popup window of dimension (0,0).</para>
          <para tool="javadoc-to-mdoc">The popup does provide a background.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow (Android.Views.View contentView, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.View contentView, int32 width, int32 height) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/View;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contentView" Type="Android.Views.View" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="contentView">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new non focusable popup window which can display the
 <c>contentView</c>. The dimension of the window must be passed to
 this constructor.</para>
          <para tool="javadoc-to-mdoc">The popup does not provide any background. This should be handled
 by the content view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow(android.view.View, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new, empty, non focusable popup window of dimension (0,0).</para>
          <para tool="javadoc-to-mdoc">The popup does not provide a background.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupWindow (Android.Views.View contentView, int width, int height, bool focusable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.View contentView, int32 width, int32 height, bool focusable) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/View;IIZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contentView" Type="Android.Views.View" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="focusable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="contentView">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="focusable">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new popup window which can display the <c>contentView</c>.
 The dimension of the window must be passed to this constructor.</para>
          <para tool="javadoc-to-mdoc">The popup does not provide any background. This should be handled
 by the content view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#PopupWindow(android.view.View, int, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AnimationStyle">
      <MemberSignature Language="C#" Value="public virtual int AnimationStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AnimationStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAnimationStyle", "()I", "GetGetAnimationStyleHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAnimationStyle", "(I)V", "GetSetAnimationStyle_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getAnimationStyle()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Return the animation style to use the popup appears and disappears</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setAnimationStyle(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Change the animation style resource for this popup.</para>
          <para tool="javadoc-to-mdoc">If the popup is showing, calling this method will take effect only
 the next time the popup is shown or through a manual call to one of
 the <c><see cref="M:Android.Widget.PopupWindow.Update" /></c> methods.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.PopupWindow.Update" />
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Background { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetBackgroundHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable used as the popup window's background.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the drawable used as the popup window's background.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getBackground()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.PopupWindow.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable)" />
      </Docs>
    </Member>
    <Member MemberName="ClippingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ClippingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClippingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isClippingEnabled", "()Z", "GetIsClippingEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setClippingEnabled", "(Z)V", "GetSetClippingEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#isClippingEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Indicates whether clipping of the popup window is enabled.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setClippingEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Allows the popup window to extend beyond the bounds of the screen. By default the
 window is clipped to the screen boundaries. Setting this to false will allow windows to be
 accurately positioned.</para>
          <para tool="javadoc-to-mdoc">If the popup is showing, calling this method will take effect only
 the next time the popup is shown or through a manual call to one of
 the <c><see cref="M:Android.Widget.PopupWindow.Update" /></c> methods.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.PopupWindow.ClippingEnabled" />
        <altmember cref="P:Android.Widget.PopupWindow.IsShowing" />
        <altmember cref="P:Android.Widget.PopupWindow.ClippingEnabled" />
        <altmember cref="M:Android.Widget.PopupWindow.Update" />
      </Docs>
    </Member>
    <Member MemberName="ContentView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View ContentView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View ContentView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentView", "()Landroid/view/View;", "GetGetContentViewHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getContentView()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Return the view used as the content of the popup window.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setContentView(android.view.View)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Change the popup's content. The content is represented by an instance
 of <c><see cref="T:Android.Views.View" /></c>.</para>
          <para tool="javadoc-to-mdoc">This method has no effect if called when the popup is showing.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.PopupWindow.ContentView" />
        <altmember cref="P:Android.Widget.PopupWindow.ContentView" />
        <altmember cref="P:Android.Widget.PopupWindow.IsShowing" />
      </Docs>
    </Member>
    <Member MemberName="Dismiss">
      <MemberSignature Language="C#" Value="public virtual void Dismiss ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dismiss() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dismiss", "()V", "GetDismissHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Disposes of the popup window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Disposes of the popup window. This method can be invoked only after
 <c><see cref="M:Android.Widget.PopupWindow.ShowAsDropDown(Android.Views.View)" /></c> has been executed. Failing
 that, calling this method will have no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#dismiss()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.PopupWindow.ShowAsDropDown(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="DismissEvent">
      <MemberSignature Language="C#" Value="public event EventHandler DismissEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DismissEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public virtual float Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Elevation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getElevation", "()F", "GetGetElevationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setElevation", "(F)V", "GetSetElevation_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getElevation()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setElevation(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Specifies the elevation for this popup window.</para>
        </remarks>
        <altmember cref="P:Android.Widget.PopupWindow.Elevation" />
        <altmember cref="P:Android.Widget.PopupWindow.Elevation" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public virtual bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFocusable", "()Z", "GetIsFocusableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFocusable", "(Z)V", "GetSetFocusable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#isFocusable()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Indicate whether the popup window can grab the focus.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setFocusable(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Changes the focusability of the popup window. When focusable, the
 window will grab the focus from the current focused widget if the popup
 contains a focusable <c><see cref="T:Android.Views.View" /></c>.  By default a popup
 window is not focusable.</para>
          <para tool="javadoc-to-mdoc">If the popup is showing, calling this method will take effect only
 the next time the popup is shown or through a manual call to one of
 the <c><see cref="M:Android.Widget.PopupWindow.Update" /></c> methods.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.PopupWindow.Focusable" />
        <altmember cref="P:Android.Widget.PopupWindow.Focusable" />
        <altmember cref="P:Android.Widget.PopupWindow.IsShowing" />
        <altmember cref="M:Android.Widget.PopupWindow.Update" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxAvailableHeight">
      <MemberSignature Language="C#" Value="public virtual int GetMaxAvailableHeight (Android.Views.View anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxAvailableHeight(class Android.Views.View anchor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaxAvailableHeight", "(Landroid/view/View;)I", "GetGetMaxAvailableHeight_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="anchor">The view on which the popup window must be anchored.</param>
        <summary>Returns the maximum height that is available for the popup to be
 completely shown.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum height that is available for the popup to be
 completely shown. It is recommended that this height be the maximum for
 the popup's height, otherwise it is possible that the popup will be
 clipped.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getMaxAvailableHeight(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxAvailableHeight">
      <MemberSignature Language="C#" Value="public virtual int GetMaxAvailableHeight (Android.Views.View anchor, int yOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxAvailableHeight(class Android.Views.View anchor, int32 yOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaxAvailableHeight", "(Landroid/view/View;I)I", "GetGetMaxAvailableHeight_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="Android.Views.View" />
        <Parameter Name="yOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anchor">The view on which the popup window must be anchored.</param>
        <param name="yOffset">y offset from the view's bottom edge</param>
        <summary>Returns the maximum height that is available for the popup to be
 completely shown.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum height that is available for the popup to be
 completely shown. It is recommended that this height be the maximum for
 the popup's height, otherwise it is possible that the popup will be
 clipped.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getMaxAvailableHeight(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHeight", "(I)V", "GetSetHeight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Returns the popup's height MeasureSpec.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getHeight()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the popup's height MeasureSpec.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setHeight(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the popup's height MeasureSpec.
 
 If the popup is showing, calling this method will take effect the next
 time the popup is shown.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.PopupWindow.Height" />
        <altmember cref="P:Android.Widget.PopupWindow.Height" />
        <altmember cref="P:Android.Widget.PopupWindow.IsShowing" />
      </Docs>
    </Member>
    <Member MemberName="InputMethodMode">
      <MemberSignature Language="C#" Value="public virtual Android.Widget.InputMethod InputMethodMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Widget.InputMethod InputMethodMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInputMethodMode", "()I", "GetGetInputMethodModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setInputMethodMode", "(I)V", "GetSetInputMethodMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.InputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current value in <c><see cref="P:Android.Widget.PopupWindow.InputMethodMode" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getInputMethodMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the current value in <c><see cref="P:Android.Widget.PopupWindow.InputMethodMode" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setInputMethodMode(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Control how the popup operates with an input method: one of
 <c><see cref="!:Android.Widget.PopupWindow.INPUT_METHOD_FROM_FOCUSABLE" /></c>, <c><see cref="!:Android.Widget.PopupWindow.INPUT_METHOD_NEEDED" /></c>,
 or <c><see cref="!:Android.Widget.PopupWindow.INPUT_METHOD_NOT_NEEDED" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">If the popup is showing, calling this method will take effect only
 the next time the popup is shown or through a manual call to one of
 the <c><see cref="M:Android.Widget.PopupWindow.Update" /></c> methods.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.PopupWindow.InputMethodMode" />
        <altmember cref="P:Android.Widget.PopupWindow.InputMethodMode" />
        <altmember cref="M:Android.Widget.PopupWindow.Update" />
      </Docs>
    </Member>
    <Member MemberName="IsAboveAnchor">
      <MemberSignature Language="C#" Value="public virtual bool IsAboveAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAboveAnchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAboveAnchor", "()Z", "GetIsAboveAnchorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the popup is showing above (the y coordinate of the popup's bottom
 is less than the y coordinate of the anchor) or below the anchor view (the y coordinate
 of the popup is greater than y coordinate of the anchor's bottom).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether the popup is showing above (the y coordinate of the popup's bottom
 is less than the y coordinate of the anchor) or below the anchor view (the y coordinate
 of the popup is greater than y coordinate of the anchor's bottom).

 The value returned
 by this method is meaningful only after <c><see cref="M:Android.Widget.PopupWindow.ShowAsDropDown(Android.Views.View)" /></c>
 or <c><see cref="M:Android.Widget.PopupWindow.ShowAsDropDown(Android.Views.View,System.Int32,System.Int32)" /></c> was invoked.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#isAboveAnchor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsShowing">
      <MemberSignature Language="C#" Value="public virtual bool IsShowing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShowing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isShowing", "()Z", "GetIsShowingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Indicate whether this popup window is showing on screen.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#isShowing()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutsideTouchable">
      <MemberSignature Language="C#" Value="public virtual bool OutsideTouchable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OutsideTouchable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOutsideTouchable", "()Z", "GetIsOutsideTouchableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOutsideTouchable", "(Z)V", "GetSetOutsideTouchable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#isOutsideTouchable()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Indicates whether the popup window will be informed of touch events
 outside of its window.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setOutsideTouchable(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Controls whether the pop-up will be informed of touch events outside
 of its window.  This only makes sense for pop-ups that are touchable
 but not focusable, which means touches outside of the window will
 be delivered to the window behind.  The default is false.</para>
          <para tool="javadoc-to-mdoc">If the popup is showing, calling this method will take effect only
 the next time the popup is shown or through a manual call to one of
 the <c><see cref="M:Android.Widget.PopupWindow.Update" /></c> methods.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.PopupWindow.OutsideTouchable" />
        <altmember cref="P:Android.Widget.PopupWindow.OutsideTouchable" />
        <altmember cref="P:Android.Widget.PopupWindow.IsShowing" />
        <altmember cref="M:Android.Widget.PopupWindow.Update" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundDrawable (Android.Graphics.Drawables.Drawable background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundDrawable(class Android.Graphics.Drawables.Drawable background) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="background">the popup's background</param>
        <summary>Specifies the background drawable for this popup window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies the background drawable for this popup window. The background
 can be set to <c>null</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setBackgroundDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.PopupWindow.Background" />
      </Docs>
    </Member>
    <Member MemberName="SetIgnoreCheekPress">
      <MemberSignature Language="C#" Value="public virtual void SetIgnoreCheekPress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIgnoreCheekPress() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIgnoreCheekPress", "()V", "GetSetIgnoreCheekPressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Set the flag on popup to ignore cheek press events; by default this flag
 is set to false
 which means the popup will not ignore cheek press dispatch events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the flag on popup to ignore cheek press events; by default this flag
 is set to false
 which means the popup will not ignore cheek press dispatch events.

 </para>
          <para tool="javadoc-to-mdoc">If the popup is showing, calling this method will take effect only
 the next time the popup is shown or through a manual call to one of
 the <c><see cref="M:Android.Widget.PopupWindow.Update" /></c> methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setIgnoreCheekPress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.PopupWindow.Update" />
      </Docs>
    </Member>
    <Member MemberName="SetOnDismissListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnDismissListener (Android.Widget.PopupWindow.IOnDismissListener onDismissListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnDismissListener(class Android.Widget.PopupWindow/IOnDismissListener onDismissListener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnDismissListener", "(Landroid/widget/PopupWindow$OnDismissListener;)V", "GetSetOnDismissListener_Landroid_widget_PopupWindow_OnDismissListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onDismissListener" Type="Android.Widget.PopupWindow+IOnDismissListener" />
      </Parameters>
      <Docs>
        <param name="onDismissListener">The listener.
</param>
        <summary>Sets the listener to be called when the window is dismissed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener to be called when the window is dismissed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setOnDismissListener(android.widget.PopupWindow.OnDismissListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTouchInterceptor">
      <MemberSignature Language="C#" Value="public virtual void SetTouchInterceptor (Android.Views.View.IOnTouchListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTouchInterceptor(class Android.Views.View/IOnTouchListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTouchInterceptor", "(Landroid/view/View$OnTouchListener;)V", "GetSetTouchInterceptor_Landroid_view_View_OnTouchListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnTouchListener" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <summary>Set a callback for all touch events being dispatched to the popup
 window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a callback for all touch events being dispatched to the popup
 window.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setTouchInterceptor(android.view.View.OnTouchListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowLayoutMode">
      <MemberSignature Language="C#" Value="public virtual void SetWindowLayoutMode (int widthSpec, int heightSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowLayoutMode(int32 widthSpec, int32 heightSpec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWindowLayoutMode", "(II)V", "GetSetWindowLayoutMode_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthSpec" Type="System.Int32" />
        <Parameter Name="heightSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="widthSpec">an explicit width measure spec mode, either
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.WrapContent" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.MatchParent" tool="ReplaceLinkValue" /></c>, or 0 to use the absolute
 width.</param>
        <param name="heightSpec">an explicit height measure spec mode, either
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.WrapContent" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.MatchParent" tool="ReplaceLinkValue" /></c>, or 0 to use the absolute
 height.</param>
        <summary tool="true">
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Change the width and height measure specs that are given to the
 window manager by the popup.  By default these are 0, meaning that
 the current width or height is requested as an explicit size from
 the window manager.  You can supply
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.WrapContent" tool="ReplaceLinkValue" /></c> or
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.MatchParent" tool="ReplaceLinkValue" /></c> to have that measure
 spec supplied instead, replacing the absolute width and height that
 has been set in the popup.</para>
          <para tool="javadoc-to-mdoc">If the popup is showing, calling this method will take effect only
 the next time the popup is shown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setWindowLayoutMode(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowAsDropDown">
      <MemberSignature Language="C#" Value="public virtual void ShowAsDropDown (Android.Views.View anchor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAsDropDown(class Android.Views.View anchor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showAsDropDown", "(Landroid/view/View;)V", "GetShowAsDropDown_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="anchor">the view on which to pin the popup window</param>
        <summary tool="true">Display the content view in a popup window anchored to the bottom-left
 corner of the anchor view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Display the content view in a popup window anchored to the bottom-left
 corner of the anchor view. If there is not enough room on screen to show
 the popup in its entirety, this method tries to find a parent scroll
 view to scroll. If no parent scroll view can be scrolled, the
 bottom-left corner of the popup is pinned at the top left corner of the
 anchor view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#showAsDropDown(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.PopupWindow.Dismiss" />
      </Docs>
    </Member>
    <Member MemberName="ShowAsDropDown">
      <MemberSignature Language="C#" Value="public virtual void ShowAsDropDown (Android.Views.View anchor, int xoff, int yoff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAsDropDown(class Android.Views.View anchor, int32 xoff, int32 yoff) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showAsDropDown", "(Landroid/view/View;II)V", "GetShowAsDropDown_Landroid_view_View_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="Android.Views.View" />
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anchor">the view on which to pin the popup window</param>
        <param name="xoff">A horizontal offset from the anchor in pixels</param>
        <param name="yoff">A vertical offset from the anchor in pixels</param>
        <summary>Display the content view in a popup window anchored to the bottom-left
 corner of the anchor view offset by the specified x and y coordinates.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Display the content view in a popup window anchored to the bottom-left
 corner of the anchor view offset by the specified x and y coordinates.
 If there is not enough room on screen to show the popup in its entirety,
 this method tries to find a parent scroll view to scroll. If no parent
 scroll view can be scrolled, the bottom-left corner of the popup is
 pinned at the top left corner of the anchor view.
 </para>
          <para tool="javadoc-to-mdoc">
 If the view later scrolls to move <c>anchor</c> to a different
 location, the popup will be moved correspondingly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#showAsDropDown(android.view.View, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.PopupWindow.Dismiss" />
      </Docs>
    </Member>
    <Member MemberName="ShowAsDropDown">
      <MemberSignature Language="C#" Value="public virtual void ShowAsDropDown (Android.Views.View anchor, int xoff, int yoff, Android.Views.GravityFlags gravity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAsDropDown(class Android.Views.View anchor, int32 xoff, int32 yoff, valuetype Android.Views.GravityFlags gravity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showAsDropDown", "(Landroid/view/View;III)V", "GetShowAsDropDown_Landroid_view_View_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="Android.Views.View" />
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="gravity" Type="Android.Views.GravityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="anchor">the view on which to pin the popup window</param>
        <param name="xoff">A horizontal offset from the anchor in pixels</param>
        <param name="yoff">A vertical offset from the anchor in pixels</param>
        <param name="gravity">Alignment of the popup relative to the anchor</param>
        <summary>Displays the content view in a popup window anchored to the corner of
 another view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Displays the content view in a popup window anchored to the corner of
 another view. The window is positioned according to the specified
 gravity and offset by the specified x and y coordinates.
 </para>
          <para tool="javadoc-to-mdoc">
 If there is not enough room on screen to show the popup in its entirety,
 this method tries to find a parent scroll view to scroll. If no parent
 view can be scrolled, the specified vertical gravity will be ignored and
 the popup will anchor itself such that it is visible.
 </para>
          <para tool="javadoc-to-mdoc">
 If the view later scrolls to move <c>anchor</c> to a different
 location, the popup will be moved correspondingly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#showAsDropDown(android.view.View, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Widget.PopupWindow.Dismiss" />
      </Docs>
    </Member>
    <Member MemberName="ShowAtLocation">
      <MemberSignature Language="C#" Value="public virtual void ShowAtLocation (Android.Views.View parent, Android.Views.GravityFlags gravity, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAtLocation(class Android.Views.View parent, valuetype Android.Views.GravityFlags gravity, int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showAtLocation", "(Landroid/view/View;III)V", "GetShowAtLocation_Landroid_view_View_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.View" />
        <Parameter Name="gravity" Type="Android.Views.GravityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent">a parent view to get the <c><see cref="P:Android.Views.View.WindowToken" /></c> token from</param>
        <param name="gravity">the gravity which controls the placement of the popup window</param>
        <param name="x">the popup's x location offset</param>
        <param name="y">the popup's y location offset
</param>
        <summary tool="true">
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
 Display the content view in a popup window at the specified location. If the popup window
 cannot fit on screen, it will be clipped. See <c><see cref="T:Android.Views.WindowManagerLayoutParams" /></c>
 for more information on how gravity and the x and y parameters are related. Specifying
 a gravity of <c><see cref="!:Android.Views.Gravity.NO_GRAVITY" /></c> is similar to specifying
 <c>Gravity.LEFT | Gravity.TOP</c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#showAtLocation(android.view.View, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SoftInputMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.SoftInput SoftInputMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.SoftInput SoftInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSoftInputMode", "()I", "GetGetSoftInputModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSoftInputMode", "(I)V", "GetSetSoftInputMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SoftInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current value in <c><see cref="P:Android.Widget.PopupWindow.SoftInputMode" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getSoftInputMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the current value in <c><see cref="P:Android.Widget.PopupWindow.SoftInputMode" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setSoftInputMode(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the operating mode for the soft input area.</para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Widget.PopupWindow.SoftInputMode" />
        <altmember cref="P:Android.Views.WindowManagerLayoutParams.SoftInputMode" />
        <altmember cref="P:Android.Views.WindowManagerLayoutParams.SoftInputMode" />
        <altmember cref="P:Android.Widget.PopupWindow.SoftInputMode" />
      </Docs>
    </Member>
    <Member MemberName="SplitTouchEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SplitTouchEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SplitTouchEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSplitTouchEnabled", "()Z", "GetIsSplitTouchEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSplitTouchEnabled", "(Z)V", "GetSetSplitTouchEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#isSplitTouchEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Indicates whether the popup window supports splitting touches.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setSplitTouchEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Allows the popup window to split touches across other windows that also
 support split touch.  When this flag is false, the first pointer
 that goes down determines the window to which all subsequent touches
 go until all pointers go up.  When this flag is true, each pointer
 (not necessarily the first) that goes down determines the window
 to which all subsequent touches of that pointer will go until that
 pointer goes up thereby enabling touches with multiple pointers
 to be split across multiple windows.</para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Widget.PopupWindow.SplitTouchEnabled" />
        <altmember cref="P:Android.Widget.PopupWindow.SplitTouchEnabled" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Touchable">
      <MemberSignature Language="C#" Value="public virtual bool Touchable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Touchable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isTouchable", "()Z", "GetIsTouchableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTouchable", "(Z)V", "GetSetTouchable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#isTouchable()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Indicates whether the popup window receives touch events.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setTouchable(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Changes the touchability of the popup window. When touchable, the
 window will receive touch events, otherwise touch events will go to the
 window below it. By default the window is touchable.</para>
          <para tool="javadoc-to-mdoc">If the popup is showing, calling this method will take effect only
 the next time the popup is shown or through a manual call to one of
 the <c><see cref="M:Android.Widget.PopupWindow.Update" /></c> methods.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.PopupWindow.Touchable" />
        <altmember cref="P:Android.Widget.PopupWindow.Touchable" />
        <altmember cref="P:Android.Widget.PopupWindow.IsShowing" />
        <altmember cref="M:Android.Widget.PopupWindow.Update" />
      </Docs>
    </Member>
    <Member MemberName="TouchIntercepted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.TouchEventArgs&gt; TouchIntercepted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/TouchEventArgs&gt; TouchIntercepted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "()V", "GetUpdateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Updates the state of the popup window, if it is currently being displayed,
 from the currently set state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates the state of the popup window, if it is currently being displayed,
 from the currently set state.
 </para>
          <para tool="javadoc-to-mdoc">
 This includes:
 <list type="bullet"><item><term><c><see cref="P:Android.Widget.PopupWindow.ClippingEnabled" /></c></term></item><item><term><c><see cref="P:Android.Widget.PopupWindow.Focusable" /></c></term></item><item><term><c><see cref="M:Android.Widget.PopupWindow.SetIgnoreCheekPress" /></c></term></item><item><term><c><see cref="P:Android.Widget.PopupWindow.InputMethodMode" /></c></term></item><item><term><c><see cref="P:Android.Widget.PopupWindow.Touchable" /></c></term></item><item><term><c><see cref="P:Android.Widget.PopupWindow.AnimationStyle" /></c></term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#update()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(II)V", "GetUpdate_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">the new width, must be &gt;= 0 or -1 to ignore</param>
        <param name="height">the new height, must be &gt;= 0 or -1 to ignore
</param>
        <summary>Updates the dimension of the popup window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates the dimension of the popup window.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this function also updates the window with the current popup
 state as described for <c><see cref="M:Android.Widget.PopupWindow.Update" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#update(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (Android.Views.View anchor, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class Android.Views.View anchor, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Landroid/view/View;II)V", "GetUpdate_Landroid_view_View_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="Android.Views.View" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anchor">the popup's anchor view</param>
        <param name="width">the new width, must be &gt;= 0 or -1 to ignore</param>
        <param name="height">the new height, must be &gt;= 0 or -1 to ignore
</param>
        <summary>Updates the position and the dimension of the popup window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates the position and the dimension of the popup window.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this function also updates the window with the current popup
 state as described for <c><see cref="M:Android.Widget.PopupWindow.Update" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#update(android.view.View, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(IIII)V", "GetUpdate_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">the new x location</param>
        <param name="y">the new y location</param>
        <param name="width">the new width, must be &gt;= 0 or -1 to ignore</param>
        <param name="height">the new height, must be &gt;= 0 or -1 to ignore
</param>
        <summary>Updates the position and the dimension of the popup window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates the position and the dimension of the popup window.
 </para>
          <para tool="javadoc-to-mdoc">
 Width and height can be set to -1 to update location only. Calling this
 function also updates the window with the current popup state as
 described for <c><see cref="M:Android.Widget.PopupWindow.Update" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#update(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (Android.Views.View anchor, int xoff, int yoff, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class Android.Views.View anchor, int32 xoff, int32 yoff, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Landroid/view/View;IIII)V", "GetUpdate_Landroid_view_View_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchor" Type="Android.Views.View" />
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anchor">the popup's anchor view</param>
        <param name="xoff">x offset from the view's left edge</param>
        <param name="yoff">y offset from the view's bottom edge</param>
        <param name="width">the new width, must be &gt;= 0 or -1 to ignore</param>
        <param name="height">the new height, must be &gt;= 0 or -1 to ignore
</param>
        <summary>Updates the position and the dimension of the popup window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates the position and the dimension of the popup window.
 </para>
          <para tool="javadoc-to-mdoc">
 Width and height can be set to -1 to update location only. Calling this
 function also updates the window with the current popup state as
 described for <c><see cref="M:Android.Widget.PopupWindow.Update" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If the view later scrolls to move <c>anchor</c> to a different
 location, the popup will be moved correspondingly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#update(android.view.View, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (int x, int y, int width, int height, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(int32 x, int32 y, int32 width, int32 height, bool force) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(IIIIZ)V", "GetUpdate_IIIIZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">the new x location</param>
        <param name="y">the new y location</param>
        <param name="width">the new width, must be &gt;= 0 or -1 to ignore</param>
        <param name="height">the new height, must be &gt;= 0 or -1 to ignore</param>
        <param name="force">
          <c>true</c> to reposition the window even if the specified
              position already seems to correspond to the LayoutParams,
              <c>false</c> to only reposition if needed
</param>
        <summary>Updates the position and the dimension of the popup window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates the position and the dimension of the popup window.
 </para>
          <para tool="javadoc-to-mdoc">
 Width and height can be set to -1 to update location only. Calling this
 function also updates the window with the current popup state as
 described for <c><see cref="M:Android.Widget.PopupWindow.Update" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#update(int, int, int, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setWidth", "(I)V", "GetSetWidth_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Returns the popup's width MeasureSpec.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#getWidth()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the popup's width MeasureSpec.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/PopupWindow.html#setWidth(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the popup's width MeasureSpec.
 
 If the popup is showing, calling this method will take effect the next
 time the popup is shown.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.PopupWindow.Width" />
        <altmember cref="P:Android.Widget.PopupWindow.Width" />
        <altmember cref="P:Android.Widget.PopupWindow.IsShowing" />
      </Docs>
    </Member>
  </Members>
</Type>
