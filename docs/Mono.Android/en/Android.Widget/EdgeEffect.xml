<Type Name="EdgeEffect" FullName="Android.Widget.EdgeEffect">
  <TypeSignature Language="C#" Value="public class EdgeEffect : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EdgeEffect extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Widget.EdgeEffect" />
  <TypeSignature Language="F#" Value="type EdgeEffect = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/widget/EdgeEffect", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/widget/EdgeEffect", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>This class performs the graphical effect used at the edges of scrollable widgets
            when the user scrolls beyond the content bounds in 2D space.</summary>
    <remarks>
      <para>This class performs the graphical effect used at the edges of scrollable widgets
            when the user scrolls beyond the content bounds in 2D space.</para>
      <para>EdgeEffect is stateful. Custom widgets using EdgeEffect should create an
            instance for each edge that should show the effect, feed it input data using
            the methods <c>#onAbsorb(int)</c>, <c>#onPull(float)</c>, and <c>#onRelease()</c>,
            and draw the effect using <c>#draw(Canvas)</c> in the widget's overridden
            <c>android.view.View#draw(Canvas)</c> method. If <c>#isFinished()</c> returns
            false after drawing, the edge effect's animation is not yet complete and the widget
            should schedule another drawing pass to continue the animation.</para>
      <para>When drawing, widgets should draw their main content and child views first,
            usually by invoking <c>super.draw(canvas)</c> from an overridden <c>draw</c>
            method. (This will invoke onDraw and dispatch drawing to child views as needed.)
            The edge effect may then be drawn on top of the view's content using the
            <c>#draw(Canvas)</c> method.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/widget/EdgeEffect" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EdgeEffect (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Widget.EdgeEffect : Android.Content.Context -&gt; Android.Widget.EdgeEffect" Usage="new Android.Widget.EdgeEffect context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">Context used to provide theming and resource information for the EdgeEffect</param>
        <summary>Construct a new EdgeEffect with a theme appropriate for the provided context.</summary>
        <remarks>
          <para>Construct a new EdgeEffect with a theme appropriate for the provided context.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#EdgeEffect(android.content.Context)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.EdgeEffect(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EdgeEffect (Android.Content.Context context, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.#ctor(Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="new Android.Widget.EdgeEffect : Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Widget.EdgeEffect" Usage="new Android.Widget.EdgeEffect (context, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">Context used to provide theming and resource information for the EdgeEffect</param>
        <param name="attrs">The attributes of the XML tag that is inflating the view</param>
        <summary>Construct a new EdgeEffect with a theme appropriate for the provided context.</summary>
        <remarks>
          <para>Construct a new EdgeEffect with a theme appropriate for the provided context.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#EdgeEffect(android.content.Context,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.EdgeEffect(android.content.Context, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EdgeEffect (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Widget.EdgeEffect : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Widget.EdgeEffect" Usage="new Android.Widget.EdgeEffect (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendMode">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.BlendMode? BlendMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.BlendMode BlendMode" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.BlendMode" />
      <MemberSignature Language="F#" Value="member this.BlendMode : Android.Graphics.BlendMode with get, set" Usage="Android.Widget.EdgeEffect.BlendMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBlendMode", "()Landroid/graphics/BlendMode;", "GetGetBlendModeHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBlendMode", "()Landroid/graphics/BlendMode;", "GetGetBlendModeHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BlendMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="blendmode">May be null. The blend mode to be installed in the paint</param>
        <summary>Returns the blend mode. -or- Set or clear the blend mode.</summary>
        <value>BlendMode</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the blend mode. A blend mode defines how source pixels
            (generated by a drawing command) are composited with the destination pixels
            (content of the render target).
            &lt;p /&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#getBlendMode()" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.getBlendMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set or clear the blend mode. A blend mode defines how source pixels
            (generated by a drawing command) are composited with the destination pixels
            (content of the render target).
            &lt;p /&gt;
            Pass null to clear any previous blend mode.
            &lt;p /&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#setBlendMode(android.graphics.BlendMode)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.setBlendMode(android.graphics.BlendMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public virtual int Color { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Color" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.Color" />
      <MemberSignature Language="F#" Value="member this.Color : int" Usage="Android.Widget.EdgeEffect.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColor", "()I", "GetGetColorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getColor", "()I", "GetGetColorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the color of this edge effect in argb.</summary>
        <value>The color of this edge effect in argb</value>
        <remarks>
          <para>Return the color of this edge effect in argb.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#getColor()" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.getColor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBlendMode">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BlendMode? DefaultBlendMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Graphics.BlendMode DefaultBlendMode" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.DefaultBlendMode" />
      <MemberSignature Language="F#" Value="static member DefaultBlendMode : Android.Graphics.BlendMode" Usage="Android.Widget.EdgeEffect.DefaultBlendMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEFAULT_BLEND_MODE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEFAULT_BLEND_MODE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BlendMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default blend mode used by <c>EdgeEffect</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The default blend mode used by <c>EdgeEffect</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#DEFAULT_BLEND_MODE" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.DEFAULT_BLEND_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distance">
      <MemberSignature Language="C#" Value="public virtual float Distance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Distance" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.Distance" />
      <MemberSignature Language="F#" Value="member this.Distance : single" Usage="Android.Widget.EdgeEffect.Distance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDistance", "()F", "GetGetDistanceHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDistance", "()F", "GetGetDistanceHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the pull distance needed to be released to remove the showing effect.</summary>
        <value>The pull distance that must be released to remove the showing effect.</value>
        <remarks>
          <para>Returns the pull distance needed to be released to remove the showing effect.
            It is determined by the <c>#onPull(float, float)</c><c>deltaDistance</c> and
            any animating values, including from <c>#onAbsorb(int)</c> and <c>#onRelease()</c>.
            
            This can be used in conjunction with <c>#onPullDistance(float, float)</c> to
            release the currently showing effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#getDistance()" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.getDistance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual bool Draw (Android.Graphics.Canvas? canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.Draw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas -&gt; bool&#xA;override this.Draw : Android.Graphics.Canvas -&gt; bool" Usage="edgeEffect.Draw canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)Z", "GetDraw_Landroid_graphics_Canvas_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)Z", "GetDraw_Landroid_graphics_Canvas_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">Canvas to draw into</param>
        <summary>Draw into the provided canvas.</summary>
        <returns>true if drawing should continue beyond this frame to continue the
                    animation</returns>
        <remarks>
          <para>Draw into the provided canvas. Assumes that the canvas has been rotated
            accordingly and the size has been set. The effect will be drawn the full
            width of X=0 to X=width, beginning from Y=0 and extending to some factor &lt;
            1.f of height. The effect will only be visible on a
            hardware canvas, e.g. <c>RenderNode#beginRecording()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#draw(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.draw(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Finish">
      <MemberSignature Language="C#" Value="public virtual void Finish ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finish() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.Finish" />
      <MemberSignature Language="F#" Value="abstract member Finish : unit -&gt; unit&#xA;override this.Finish : unit -&gt; unit" Usage="edgeEffect.Finish " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finish", "()V", "GetFinishHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finish", "()V", "GetFinishHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Immediately finish the current animation.</summary>
        <remarks>
          <para>Immediately finish the current animation.
            After this call <c>#isFinished()</c> will return true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#finish()" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.finish()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="IsFinished">
      <MemberSignature Language="C#" Value="public virtual bool IsFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFinished" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.IsFinished" />
      <MemberSignature Language="F#" Value="member this.IsFinished : bool" Usage="Android.Widget.EdgeEffect.IsFinished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFinished", "()Z", "GetIsFinishedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFinished", "()Z", "GetIsFinishedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reports if this EdgeEffect's animation is finished.</summary>
        <value>true if animation is finished, false if drawing should continue on the next frame.</value>
        <remarks>
          <para>Reports if this EdgeEffect's animation is finished. If this method returns false
            after a call to <c>#draw(Canvas)</c> the host widget should schedule another
            drawing pass to continue the animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#isFinished()" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.isFinished()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Widget.EdgeEffect.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="public virtual int MaxHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.MaxHeight" />
      <MemberSignature Language="F#" Value="member this.MaxHeight : int" Usage="Android.Widget.EdgeEffect.MaxHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxHeight", "()I", "GetGetMaxHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxHeight", "()I", "GetGetMaxHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the maximum height that the edge effect will be drawn at given the original
            <c>#setSize(int, int) input size</c>.</summary>
        <value>The maximum height of the edge effect</value>
        <remarks>
          <para>Return the maximum height that the edge effect will be drawn at given the original
            <c>#setSize(int, int) input size</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#getMaxHeight()" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.getMaxHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbsorb">
      <MemberSignature Language="C#" Value="public virtual void OnAbsorb (int velocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAbsorb(int32 velocity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnAbsorb(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnAbsorb : int -&gt; unit&#xA;override this.OnAbsorb : int -&gt; unit" Usage="edgeEffect.OnAbsorb velocity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAbsorb", "(I)V", "GetOnAbsorb_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAbsorb", "(I)V", "GetOnAbsorb_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="velocity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="velocity">Velocity at impact in pixels per second.</param>
        <summary>Call when the effect absorbs an impact at the given velocity.</summary>
        <remarks>
          <para>Call when the effect absorbs an impact at the given velocity.
            Used when a fling reaches the scroll boundary.</para>
          <para>When using a <c>android.widget.Scroller</c> or <c>android.widget.OverScroller</c>,
            the method <c>getCurrVelocity</c> will provide a reasonable approximation
            to use here.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#onAbsorb(int)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.onAbsorb(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnPull">
      <MemberSignature Language="C#" Value="public virtual void OnPull (float deltaDistance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPull(float32 deltaDistance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnPull(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member OnPull : single -&gt; unit&#xA;override this.OnPull : single -&gt; unit" Usage="edgeEffect.OnPull deltaDistance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPull", "(F)V", "GetOnPull_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPull", "(F)V", "GetOnPull_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaDistance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="deltaDistance">Change in distance since the last call. Values may be 0 (no change) to
                                 1.f (full length of the view) or negative values to express change
                                 back toward the edge reached to initiate the effect.</param>
        <summary>A view should call this when content is pulled away from an edge by the user.</summary>
        <remarks>
          <para>A view should call this when content is pulled away from an edge by the user.
            This will update the state of the current visual effect and its associated animation.
            The host view should always <c>android.view.View#invalidate()</c> after this
            and draw the results accordingly.</para>
          <para>Views using EdgeEffect should favor <c>#onPull(float, float)</c> when the displacement
            of the pull point is known.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#onPull(float)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.onPull(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnPull">
      <MemberSignature Language="C#" Value="public virtual void OnPull (float deltaDistance, float displacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPull(float32 deltaDistance, float32 displacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnPull(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member OnPull : single * single -&gt; unit&#xA;override this.OnPull : single * single -&gt; unit" Usage="edgeEffect.OnPull (deltaDistance, displacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPull", "(FF)V", "GetOnPull_FFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPull", "(FF)V", "GetOnPull_FFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaDistance" Type="System.Single" />
        <Parameter Name="displacement" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="deltaDistance">Change in distance since the last call. Values may be 0 (no change) to
                                 1.f (full length of the view) or negative values to express change
                                 back toward the edge reached to initiate the effect.</param>
        <param name="displacement">The displacement from the starting side of the effect of the point
                                initiating the pull. In the case of touch this is the finger position.
                                Values may be from 0-1.</param>
        <summary>A view should call this when content is pulled away from an edge by the user.</summary>
        <remarks>
          <para>A view should call this when content is pulled away from an edge by the user.
            This will update the state of the current visual effect and its associated animation.
            The host view should always <c>android.view.View#invalidate()</c> after this
            and draw the results accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#onPull(float,%20float)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.onPull(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPullDistance">
      <MemberSignature Language="C#" Value="public virtual float OnPullDistance (float deltaDistance, float displacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 OnPullDistance(float32 deltaDistance, float32 displacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnPullDistance(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member OnPullDistance : single * single -&gt; single&#xA;override this.OnPullDistance : single * single -&gt; single" Usage="edgeEffect.OnPullDistance (deltaDistance, displacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPullDistance", "(FF)F", "GetOnPullDistance_FFHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPullDistance", "(FF)F", "GetOnPullDistance_FFHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaDistance" Type="System.Single" />
        <Parameter Name="displacement" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="deltaDistance">Change in distance since the last call. Values may be 0 (no change) to
                                 1.f (full length of the view) or negative values to express change
                                 back toward the edge reached to initiate the effect.</param>
        <param name="displacement">The displacement from the starting side of the effect of the point
                                initiating the pull. In the case of touch this is the finger position.
                                Values may be from 0-1.</param>
        <summary>A view should call this when content is pulled away from an edge by the user.</summary>
        <returns>The amount of <c>deltaDistance</c> that was consumed, a number between
            0 and <c>deltaDistance</c>.</returns>
        <remarks>
          <para>A view should call this when content is pulled away from an edge by the user.
            This will update the state of the current visual effect and its associated animation.
            The host view should always <c>android.view.View#invalidate()</c> after this
            and draw the results accordingly. This works similarly to <c>#onPull(float, float)</c>,
            but returns the amount of <c>deltaDistance</c> that has been consumed. If the
            <c>#getDistance()</c> is currently 0 and <c>deltaDistance</c> is negative, this
            function will return 0 and the drawn value will remain unchanged.
            
            This method can be used to reverse the effect from a pull or absorb and partially consume
            some of a motion:</para>
          <code lang="text/java">if (deltaY &lt; 0) {
                    float consumed = edgeEffect.onPullDistance(deltaY / getHeight(), x / getWidth());
                    deltaY -= consumed * getHeight();
                    if (edgeEffect.getDistance() == 0f) edgeEffect.onRelease();
                }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#onPullDistance(float,%20float)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.onPullDistance(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRelease">
      <MemberSignature Language="C#" Value="public virtual void OnRelease ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRelease() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnRelease" />
      <MemberSignature Language="F#" Value="abstract member OnRelease : unit -&gt; unit&#xA;override this.OnRelease : unit -&gt; unit" Usage="edgeEffect.OnRelease " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRelease", "()V", "GetOnReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRelease", "()V", "GetOnReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call when the object is released after being pulled.</summary>
        <remarks>
          <para>Call when the object is released after being pulled.
            This will begin the "decay" phase of the effect. After calling this method
            the host view should <c>android.view.View#invalidate()</c> and thereby
            draw the results accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#onRelease()" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.onRelease()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetColor">
      <MemberSignature Language="C#" Value="public virtual void SetColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.SetColor(Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetColor : Android.Graphics.Color -&gt; unit&#xA;override this.SetColor : Android.Graphics.Color -&gt; unit" Usage="edgeEffect.SetColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setColor", "(I)V", "GetSetColor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setColor", "(I)V", "GetSetColor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">Color in argb</param>
        <summary>Set the color of this edge effect in argb.</summary>
        <remarks>
          <para>Set the color of this edge effect in argb.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#setColor(int)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.setColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public virtual void SetSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.SetSize(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetSize : int * int -&gt; unit&#xA;override this.SetSize : int * int -&gt; unit" Usage="edgeEffect.SetSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSize", "(II)V", "GetSetSize_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSize", "(II)V", "GetSetSize_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Effect width in pixels</param>
        <param name="height">Effect height in pixels</param>
        <summary>Set the size of this edge effect in pixels.</summary>
        <remarks>
          <para>Set the size of this edge effect in pixels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/EdgeEffect#setSize(int,%20int)" title="Reference documentation">Java documentation for <code>android.widget.EdgeEffect.setSize(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Widget.EdgeEffect.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Widget.EdgeEffect.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
