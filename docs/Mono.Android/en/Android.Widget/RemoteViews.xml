<Type Name="RemoteViews" FullName="Android.Widget.RemoteViews">
  <TypeSignature Language="C#" Value="public class RemoteViews : Java.Lang.Object, Android.OS.IParcelable, Android.Views.LayoutInflater.IFilter, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RemoteViews extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Android.Views.LayoutInflater/IFilter, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Widget.RemoteViews" />
  <TypeSignature Language="F#" Value="type RemoteViews = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface LayoutInflater.IFilter" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.LayoutInflater+IFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/RemoteViews", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A class that describes a view hierarchy that can be displayed in
 another process.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/widget/RemoteViews" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteViews (Android.OS.Parcel parcel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.OS.Parcel parcel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.#ctor(Android.OS.Parcel)" />
      <MemberSignature Language="F#" Value="new Android.Widget.RemoteViews : Android.OS.Parcel -&gt; Android.Widget.RemoteViews" Usage="new Android.Widget.RemoteViews parcel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/os/Parcel;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parcel" Type="Android.OS.Parcel" />
      </Parameters>
      <Docs>
        <param name="parcel">To be added.</param>
        <summary>Reads a RemoteViews object from a parcel.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteViews (Android.Widget.RemoteViews landscape, Android.Widget.RemoteViews portrait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Widget.RemoteViews landscape, class Android.Widget.RemoteViews portrait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.#ctor(Android.Widget.RemoteViews,Android.Widget.RemoteViews)" />
      <MemberSignature Language="F#" Value="new Android.Widget.RemoteViews : Android.Widget.RemoteViews * Android.Widget.RemoteViews -&gt; Android.Widget.RemoteViews" Usage="new Android.Widget.RemoteViews (landscape, portrait)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V", "", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="landscape" Type="Android.Widget.RemoteViews" />
        <Parameter Name="portrait" Type="Android.Widget.RemoteViews" />
      </Parameters>
      <Docs>
        <param name="landscape">To be added.</param>
        <param name="portrait">To be added.</param>
        <summary>Create a new RemoteViews object that will inflate as the specified
 landspace or portrait RemoteViews, depending on the current configuration.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RemoteViews (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Widget.RemoteViews : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Widget.RemoteViews" Usage="new Android.Widget.RemoteViews (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteViews (string packageName, int layoutId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string packageName, int32 layoutId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Widget.RemoteViews : string * int -&gt; Android.Widget.RemoteViews" Usage="new Android.Widget.RemoteViews (packageName, layoutId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="layoutId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="layoutId">To be added.</param>
        <summary>Create a new RemoteViews object that will display the views contained
 in the specified layout file.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddView">
      <MemberSignature Language="C#" Value="public virtual void AddView (int viewId, Android.Widget.RemoteViews nestedView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddView(int32 viewId, class Android.Widget.RemoteViews nestedView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.AddView(System.Int32,Android.Widget.RemoteViews)" />
      <MemberSignature Language="F#" Value="abstract member AddView : int * Android.Widget.RemoteViews -&gt; unit&#xA;override this.AddView : int * Android.Widget.RemoteViews -&gt; unit" Usage="remoteViews.AddView (viewId, nestedView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addView", "(ILandroid/widget/RemoteViews;)V", "GetAddView_ILandroid_widget_RemoteViews_Handler", ApiSince=7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="nestedView" Type="Android.Widget.RemoteViews" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the parent <see cref="T:Android.Views.ViewGroup" /> to add child into.</param>
        <param name="nestedView">
          <see cref="T:Android.Widget.RemoteViews" /> that describes the child.
</param>
        <summary>Equivalent to calling <see cref="M:Android.Views.ViewGroup.AddView(Android.Views.View)" /> after inflating the
 given <see cref="T:Android.Widget.RemoteViews" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View Apply (Android.Content.Context context, Android.Views.ViewGroup parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Apply(class Android.Content.Context context, class Android.Views.ViewGroup parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.Apply(Android.Content.Context,Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="abstract member Apply : Android.Content.Context * Android.Views.ViewGroup -&gt; Android.Views.View&#xA;override this.Apply : Android.Content.Context * Android.Views.ViewGroup -&gt; Android.Views.View" Usage="remoteViews.Apply (context, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("apply", "(Landroid/content/Context;Landroid/view/ViewGroup;)Landroid/view/View;", "GetApply_Landroid_content_Context_Landroid_view_ViewGroup_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="parent" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="context">Default context to use</param>
        <param name="parent">Parent that the resulting view hierarchy will be attached to. This method
 does <i>not</i> attach the hierarchy. The caller should do so when appropriate.</param>
        <summary>Inflates the view hierarchy represented by this object and applies
 all of the actions.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Android.Widget.RemoteViews Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Widget.RemoteViews Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.Clone" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Android.Widget.RemoteViews" Usage="remoteViews.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clone", "()Landroid/widget/RemoteViews;", "GetCloneHandler", ApiSince=9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.RemoteViews</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a copy of this <c>Object</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.RemoteViews.Creator" />
      <MemberSignature Language="F#" Value="member this.Creator : Android.OS.IParcelableCreator" Usage="Android.Widget.RemoteViews.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CREATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Parcelable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.DescribeContents" />
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="remoteViews.DescribeContents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.RemoteViews.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Widget.RemoteViews.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutId">
      <MemberSignature Language="C#" Value="public virtual int LayoutId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LayoutId" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.RemoteViews.LayoutId" />
      <MemberSignature Language="F#" Value="member this.LayoutId : int" Usage="Android.Widget.RemoteViews.LayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLayoutId", "()I", "GetGetLayoutIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reutrns the layout id of the root layout associated with this RemoteViews.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLoadClass">
      <MemberSignature Language="C#" Value="public virtual bool OnLoadClass (Java.Lang.Class clazz);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnLoadClass(class Java.Lang.Class clazz) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.OnLoadClass(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member OnLoadClass : Java.Lang.Class -&gt; bool&#xA;override this.OnLoadClass : Java.Lang.Class -&gt; bool" Usage="remoteViews.OnLoadClass clazz" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.LayoutInflater.IFilter.OnLoadClass(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLoadClass", "(Ljava/lang/Class;)Z", "GetOnLoadClass_Ljava_lang_Class_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clazz" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="clazz">The class object for the View that is about to be inflated</param>
        <summary>Hook to allow clients of the LayoutInflater to restrict the set of Views 
 that are allowed to be inflated.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public virtual string Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Package" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.RemoteViews.Package" />
      <MemberSignature Language="F#" Value="member this.Package : string" Usage="Android.Widget.RemoteViews.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPackage", "()Ljava/lang/String;", "GetGetPackageHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reapply">
      <MemberSignature Language="C#" Value="public virtual void Reapply (Android.Content.Context context, Android.Views.View v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reapply(class Android.Content.Context context, class Android.Views.View v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.Reapply(Android.Content.Context,Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member Reapply : Android.Content.Context * Android.Views.View -&gt; unit&#xA;override this.Reapply : Android.Content.Context * Android.Views.View -&gt; unit" Usage="remoteViews.Reapply (context, v)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reapply", "(Landroid/content/Context;Landroid/view/View;)V", "GetReapply_Landroid_content_Context_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="v" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="v">The view to apply the actions to.  This should be the result of
 the <see cref="M:Android.Widget.RemoteViews.Apply(Android.Content.Context,Android.Views.ViewGroup)" /> call.
</param>
        <summary>Applies all of the actions to the provided view.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAllViews">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllViews (int viewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllViews(int32 viewId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.RemoveAllViews(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllViews : int -&gt; unit&#xA;override this.RemoveAllViews : int -&gt; unit" Usage="remoteViews.RemoveAllViews viewId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeAllViews", "(I)V", "GetRemoveAllViews_IHandler", ApiSince=7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the parent <see cref="T:Android.Views.ViewGroup" /> to remove all
            children from.
</param>
        <summary>Equivalent to calling <see cref="M:Android.Views.ViewGroup.RemoveAllViews" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SetAccessibilityTraversalAfter">
      <MemberSignature Language="C#" Value="public virtual void SetAccessibilityTraversalAfter (int viewId, int nextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAccessibilityTraversalAfter(int32 viewId, int32 nextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetAccessibilityTraversalAfter(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessibilityTraversalAfter : int * int -&gt; unit&#xA;override this.SetAccessibilityTraversalAfter : int * int -&gt; unit" Usage="remoteViews.SetAccessibilityTraversalAfter (viewId, nextId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAccessibilityTraversalAfter", "(II)V", "GetSetAccessibilityTraversalAfter_IIHandler", ApiSince=22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="nextId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">To be added.</param>
        <param name="nextId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessibilityTraversalBefore">
      <MemberSignature Language="C#" Value="public virtual void SetAccessibilityTraversalBefore (int viewId, int nextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAccessibilityTraversalBefore(int32 viewId, int32 nextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetAccessibilityTraversalBefore(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessibilityTraversalBefore : int * int -&gt; unit&#xA;override this.SetAccessibilityTraversalBefore : int * int -&gt; unit" Usage="remoteViews.SetAccessibilityTraversalBefore (viewId, nextId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAccessibilityTraversalBefore", "(II)V", "GetSetAccessibilityTraversalBefore_IIHandler", ApiSince=22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="nextId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">To be added.</param>
        <param name="nextId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBitmap">
      <MemberSignature Language="C#" Value="public virtual void SetBitmap (int viewId, string methodName, Android.Graphics.Bitmap value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBitmap(int32 viewId, string methodName, class Android.Graphics.Bitmap value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetBitmap(System.Int32,System.String,Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member SetBitmap : int * string * Android.Graphics.Bitmap -&gt; unit&#xA;override this.SetBitmap : int * string * Android.Graphics.Bitmap -&gt; unit" Usage="remoteViews.SetBitmap (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBitmap", "(ILjava/lang/String;Landroid/graphics/Bitmap;)V", "GetSetBitmap_ILjava_lang_String_Landroid_graphics_Bitmap_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one Bitmap on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetBoolean">
      <MemberSignature Language="C#" Value="public virtual void SetBoolean (int viewId, string methodName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBoolean(int32 viewId, string methodName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetBoolean(System.Int32,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetBoolean : int * string * bool -&gt; unit&#xA;override this.SetBoolean : int * string * bool -&gt; unit" Usage="remoteViews.SetBoolean (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBoolean", "(ILjava/lang/String;Z)V", "GetSetBoolean_ILjava_lang_String_ZHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one boolean on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetBundle">
      <MemberSignature Language="C#" Value="public virtual void SetBundle (int viewId, string methodName, Android.OS.Bundle value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBundle(int32 viewId, string methodName, class Android.OS.Bundle value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetBundle(System.Int32,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SetBundle : int * string * Android.OS.Bundle -&gt; unit&#xA;override this.SetBundle : int * string * Android.OS.Bundle -&gt; unit" Usage="remoteViews.SetBundle (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBundle", "(ILjava/lang/String;Landroid/os/Bundle;)V", "GetSetBundle_ILjava_lang_String_Landroid_os_Bundle_Handler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one Bundle on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetByte">
      <MemberSignature Language="C#" Value="public virtual void SetByte (int viewId, string methodName, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByte(int32 viewId, string methodName, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetByte(System.Int32,System.String,System.SByte)" />
      <MemberSignature Language="F#" Value="abstract member SetByte : int * string * sbyte -&gt; unit&#xA;override this.SetByte : int * string * sbyte -&gt; unit" Usage="remoteViews.SetByte (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setByte", "(ILjava/lang/String;B)V", "GetSetByte_ILjava_lang_String_BHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one byte on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetChar">
      <MemberSignature Language="C#" Value="public virtual void SetChar (int viewId, string methodName, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChar(int32 viewId, string methodName, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetChar(System.Int32,System.String,System.Char)" />
      <MemberSignature Language="F#" Value="abstract member SetChar : int * string * char -&gt; unit&#xA;override this.SetChar : int * string * char -&gt; unit" Usage="remoteViews.SetChar (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setChar", "(ILjava/lang/String;C)V", "GetSetChar_ILjava_lang_String_CHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one char on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetCharSequence">
      <MemberSignature Language="C#" Value="public virtual void SetCharSequence (int viewId, string methodName, Java.Lang.ICharSequence value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCharSequence(int32 viewId, string methodName, class Java.Lang.ICharSequence value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetCharSequence(System.Int32,System.String,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetCharSequence : int * string * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetCharSequence : int * string * Java.Lang.ICharSequence -&gt; unit" Usage="remoteViews.SetCharSequence (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCharSequence", "(ILjava/lang/String;Ljava/lang/CharSequence;)V", "GetSetCharSequence_ILjava_lang_String_Ljava_lang_CharSequence_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one CharSequence on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetCharSequence">
      <MemberSignature Language="C#" Value="public void SetCharSequence (int viewId, string methodName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCharSequence(int32 viewId, string methodName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetCharSequence(System.Int32,System.String,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetCharSequence : int * string * string -&gt; unit" Usage="remoteViews.SetCharSequence (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewId">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChronometer">
      <MemberSignature Language="C#" Value="public virtual void SetChronometer (int viewId, long base, string format, bool started);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChronometer(int32 viewId, int64 base, string format, bool started) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetChronometer(System.Int32,System.Int64,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetChronometer : int * int64 * string * bool -&gt; unit&#xA;override this.SetChronometer : int * int64 * string * bool -&gt; unit" Usage="remoteViews.SetChronometer (viewId, base, format, started)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setChronometer", "(IJLjava/lang/String;Z)V", "GetSetChronometer_IJLjava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="base" Type="System.Int64" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="started" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the <see cref="T:Android.Widget.Chronometer" /> to change</param>
        <param name="base">The time at which the timer would have read 0:00.  This
             time should be based off of
             <see cref="M:Android.OS.SystemClock.ElapsedRealtime" />.</param>
        <param name="format">The Chronometer format string, or null to
               simply display the timer value.</param>
        <param name="started">True if you want the clock to be started, false if not.
</param>
        <summary>Equivalent to calling <see cref="P:Android.Widget.Chronometer.Base" />,
 <see cref="P:Android.Widget.Chronometer.Format" />,
 and <see cref="M:Android.Widget.Chronometer.Start" /> or
 <see cref="M:Android.Widget.Chronometer.Stop" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetChronometerCountDown">
      <MemberSignature Language="C#" Value="public virtual void SetChronometerCountDown (int viewId, bool isCountDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChronometerCountDown(int32 viewId, bool isCountDown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetChronometerCountDown(System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetChronometerCountDown : int * bool -&gt; unit&#xA;override this.SetChronometerCountDown : int * bool -&gt; unit" Usage="remoteViews.SetChronometerCountDown (viewId, isCountDown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setChronometerCountDown", "(IZ)V", "GetSetChronometerCountDown_IZHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="isCountDown" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewId">To be added.</param>
        <param name="isCountDown">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentDescription">
      <MemberSignature Language="C#" Value="public virtual void SetContentDescription (int viewId, Java.Lang.ICharSequence contentDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentDescription(int32 viewId, class Java.Lang.ICharSequence contentDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetContentDescription(System.Int32,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetContentDescription : int * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetContentDescription : int * Java.Lang.ICharSequence -&gt; unit" Usage="remoteViews.SetContentDescription (viewId, contentDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentDescription", "(ILjava/lang/CharSequence;)V", "GetSetContentDescription_ILjava_lang_CharSequence_Handler", ApiSince=15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="contentDescription" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose content description should change.</param>
        <param name="contentDescription">The new content description for the view.
</param>
        <summary>Equivalent to calling View.setContentDescription(CharSequence).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="SetContentDescription">
      <MemberSignature Language="C#" Value="public void SetContentDescription (int viewId, string contentDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetContentDescription(int32 viewId, string contentDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetContentDescription(System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetContentDescription : int * string -&gt; unit" Usage="remoteViews.SetContentDescription (viewId, contentDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="contentDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewId">To be added.</param>
        <param name="contentDescription">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayedChild">
      <MemberSignature Language="C#" Value="public virtual void SetDisplayedChild (int viewId, int childIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayedChild(int32 viewId, int32 childIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetDisplayedChild(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetDisplayedChild : int * int -&gt; unit&#xA;override this.SetDisplayedChild : int * int -&gt; unit" Usage="remoteViews.SetDisplayedChild (viewId, childIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplayedChild", "(II)V", "GetSetDisplayedChild_IIHandler", ApiSince=12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="childIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call
               <see cref="P:Android.Widget.AdapterViewAnimator.DisplayedChild" /></param>
        <param name="childIndex">To be added.</param>
        <summary>Equivalent to calling <see cref="P:Android.Widget.AdapterViewAnimator.DisplayedChild" /></summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetDouble">
      <MemberSignature Language="C#" Value="public virtual void SetDouble (int viewId, string methodName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDouble(int32 viewId, string methodName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetDouble(System.Int32,System.String,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetDouble : int * string * double -&gt; unit&#xA;override this.SetDouble : int * string * double -&gt; unit" Usage="remoteViews.SetDouble (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDouble", "(ILjava/lang/String;D)V", "GetSetDouble_ILjava_lang_String_DHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one double on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEmptyView">
      <MemberSignature Language="C#" Value="public virtual void SetEmptyView (int viewId, int emptyViewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEmptyView(int32 viewId, int32 emptyViewId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetEmptyView(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetEmptyView : int * int -&gt; unit&#xA;override this.SetEmptyView : int * int -&gt; unit" Usage="remoteViews.SetEmptyView (viewId, emptyViewId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEmptyView", "(II)V", "GetSetEmptyView_IIHandler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="emptyViewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to set the empty view</param>
        <param name="emptyViewId">The view id of the empty view
</param>
        <summary>Equivalent to calling AdapterView.setEmptyView</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFloat">
      <MemberSignature Language="C#" Value="public virtual void SetFloat (int viewId, string methodName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFloat(int32 viewId, string methodName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetFloat(System.Int32,System.String,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetFloat : int * string * single -&gt; unit&#xA;override this.SetFloat : int * string * single -&gt; unit" Usage="remoteViews.SetFloat (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFloat", "(ILjava/lang/String;F)V", "GetSetFloat_ILjava_lang_String_FHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one float on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetIcon">
      <MemberSignature Language="C#" Value="public virtual void SetIcon (int viewId, string methodName, Android.Graphics.Drawables.Icon value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIcon(int32 viewId, string methodName, class Android.Graphics.Drawables.Icon value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetIcon(System.Int32,System.String,Android.Graphics.Drawables.Icon)" />
      <MemberSignature Language="F#" Value="abstract member SetIcon : int * string * Android.Graphics.Drawables.Icon -&gt; unit&#xA;override this.SetIcon : int * string * Android.Graphics.Drawables.Icon -&gt; unit" Usage="remoteViews.SetIcon (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIcon", "(ILjava/lang/String;Landroid/graphics/drawable/Icon;)V", "GetSetIcon_ILjava_lang_String_Landroid_graphics_drawable_Icon_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="Android.Graphics.Drawables.Icon" />
      </Parameters>
      <Docs>
        <param name="viewId">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImageViewBitmap">
      <MemberSignature Language="C#" Value="public virtual void SetImageViewBitmap (int viewId, Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImageViewBitmap(int32 viewId, class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetImageViewBitmap(System.Int32,Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member SetImageViewBitmap : int * Android.Graphics.Bitmap -&gt; unit&#xA;override this.SetImageViewBitmap : int * Android.Graphics.Bitmap -&gt; unit" Usage="remoteViews.SetImageViewBitmap (viewId, bitmap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setImageViewBitmap", "(ILandroid/graphics/Bitmap;)V", "GetSetImageViewBitmap_ILandroid_graphics_Bitmap_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose bitmap should change</param>
        <param name="bitmap">The new Bitmap for the drawable
</param>
        <summary>Equivalent to calling ImageView.setImageBitmap</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetImageViewIcon">
      <MemberSignature Language="C#" Value="public virtual void SetImageViewIcon (int viewId, Android.Graphics.Drawables.Icon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImageViewIcon(int32 viewId, class Android.Graphics.Drawables.Icon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetImageViewIcon(System.Int32,Android.Graphics.Drawables.Icon)" />
      <MemberSignature Language="F#" Value="abstract member SetImageViewIcon : int * Android.Graphics.Drawables.Icon -&gt; unit&#xA;override this.SetImageViewIcon : int * Android.Graphics.Drawables.Icon -&gt; unit" Usage="remoteViews.SetImageViewIcon (viewId, icon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setImageViewIcon", "(ILandroid/graphics/drawable/Icon;)V", "GetSetImageViewIcon_ILandroid_graphics_drawable_Icon_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="icon" Type="Android.Graphics.Drawables.Icon" />
      </Parameters>
      <Docs>
        <param name="viewId">To be added.</param>
        <param name="icon">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImageViewResource">
      <MemberSignature Language="C#" Value="public virtual void SetImageViewResource (int viewId, int srcId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImageViewResource(int32 viewId, int32 srcId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetImageViewResource(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetImageViewResource : int * int -&gt; unit&#xA;override this.SetImageViewResource : int * int -&gt; unit" Usage="remoteViews.SetImageViewResource (viewId, srcId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setImageViewResource", "(II)V", "GetSetImageViewResource_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="srcId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose drawable should change</param>
        <param name="srcId">The new resource id for the drawable
</param>
        <summary>Equivalent to calling ImageView.setImageResource</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetImageViewUri">
      <MemberSignature Language="C#" Value="public virtual void SetImageViewUri (int viewId, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImageViewUri(int32 viewId, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetImageViewUri(System.Int32,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member SetImageViewUri : int * Android.Net.Uri -&gt; unit&#xA;override this.SetImageViewUri : int * Android.Net.Uri -&gt; unit" Usage="remoteViews.SetImageViewUri (viewId, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setImageViewUri", "(ILandroid/net/Uri;)V", "GetSetImageViewUri_ILandroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose drawable should change</param>
        <param name="uri">The Uri for the image
</param>
        <summary>Equivalent to calling ImageView.setImageURI</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetInt">
      <MemberSignature Language="C#" Value="public virtual void SetInt (int viewId, string methodName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInt(int32 viewId, string methodName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetInt(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetInt : int * string * int -&gt; unit&#xA;override this.SetInt : int * string * int -&gt; unit" Usage="remoteViews.SetInt (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInt", "(ILjava/lang/String;I)V", "GetSetInt_ILjava_lang_String_IHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one int on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetIntent">
      <MemberSignature Language="C#" Value="public virtual void SetIntent (int viewId, string methodName, Android.Content.Intent value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIntent(int32 viewId, string methodName, class Android.Content.Intent value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetIntent(System.Int32,System.String,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member SetIntent : int * string * Android.Content.Intent -&gt; unit&#xA;override this.SetIntent : int * string * Android.Content.Intent -&gt; unit" Usage="remoteViews.SetIntent (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIntent", "(ILjava/lang/String;Landroid/content/Intent;)V", "GetSetIntent_ILjava_lang_String_Landroid_content_Intent_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The <see cref="T:Android.Content.Intent" /> to pass the method.
</param>
        <summary>Call a method taking one Intent on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetLabelFor">
      <MemberSignature Language="C#" Value="public virtual void SetLabelFor (int viewId, int labeledId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLabelFor(int32 viewId, int32 labeledId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetLabelFor(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetLabelFor : int * int -&gt; unit&#xA;override this.SetLabelFor : int * int -&gt; unit" Usage="remoteViews.SetLabelFor (viewId, labeledId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLabelFor", "(II)V", "GetSetLabelFor_IIHandler", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="labeledId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose property to set.</param>
        <param name="labeledId">The id of a view for which this view serves as a label.
</param>
        <summary>Equivalent to calling View.setLabelFor(int).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetLong">
      <MemberSignature Language="C#" Value="public virtual void SetLong (int viewId, string methodName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLong(int32 viewId, string methodName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetLong(System.Int32,System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetLong : int * string * int64 -&gt; unit&#xA;override this.SetLong : int * string * int64 -&gt; unit" Usage="remoteViews.SetLong (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLong", "(ILjava/lang/String;J)V", "GetSetLong_ILjava_lang_String_JHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one long on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOnClickFillInIntent">
      <MemberSignature Language="C#" Value="public virtual void SetOnClickFillInIntent (int viewId, Android.Content.Intent fillInIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnClickFillInIntent(int32 viewId, class Android.Content.Intent fillInIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetOnClickFillInIntent(System.Int32,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member SetOnClickFillInIntent : int * Android.Content.Intent -&gt; unit&#xA;override this.SetOnClickFillInIntent : int * Android.Content.Intent -&gt; unit" Usage="remoteViews.SetOnClickFillInIntent (viewId, fillInIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnClickFillInIntent", "(ILandroid/content/Intent;)V", "GetSetOnClickFillInIntent_ILandroid_content_Intent_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to set the fillInIntent</param>
        <param name="fillInIntent">The intent which will be combined with the parent's PendingIntent
        in order to determine the on-click behavior of the view specified by viewId
</param>
        <summary>When using collections (eg.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetOnClickPendingIntent">
      <MemberSignature Language="C#" Value="public virtual void SetOnClickPendingIntent (int viewId, Android.App.PendingIntent pendingIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnClickPendingIntent(int32 viewId, class Android.App.PendingIntent pendingIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetOnClickPendingIntent(System.Int32,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetOnClickPendingIntent : int * Android.App.PendingIntent -&gt; unit&#xA;override this.SetOnClickPendingIntent : int * Android.App.PendingIntent -&gt; unit" Usage="remoteViews.SetOnClickPendingIntent (viewId, pendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnClickPendingIntent", "(ILandroid/app/PendingIntent;)V", "GetSetOnClickPendingIntent_ILandroid_app_PendingIntent_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view that will trigger the <see cref="T:Android.App.PendingIntent" /> when clicked</param>
        <param name="pendingIntent">The <see cref="T:Android.App.PendingIntent" /> to send when user clicks
</param>
        <summary>Equivalent to calling
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Views View SetOnClickListener( IOnClickListener)';scope=Xamarin" title="M:Android.Views.View.SetOnClickListener(.IOnClickListener)">M:Android.Views.View.SetOnClickListener(.IOnClickListener)</a></format>
 to launch the provided <see cref="T:Android.App.PendingIntent" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPendingIntentTemplate">
      <MemberSignature Language="C#" Value="public virtual void SetPendingIntentTemplate (int viewId, Android.App.PendingIntent pendingIntentTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPendingIntentTemplate(int32 viewId, class Android.App.PendingIntent pendingIntentTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetPendingIntentTemplate(System.Int32,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetPendingIntentTemplate : int * Android.App.PendingIntent -&gt; unit&#xA;override this.SetPendingIntentTemplate : int * Android.App.PendingIntent -&gt; unit" Usage="remoteViews.SetPendingIntentTemplate (viewId, pendingIntentTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPendingIntentTemplate", "(ILandroid/app/PendingIntent;)V", "GetSetPendingIntentTemplate_ILandroid_app_PendingIntent_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="pendingIntentTemplate" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the collection who's children will use this PendingIntent template
          when clicked</param>
        <param name="pendingIntentTemplate">The <see cref="T:Android.App.PendingIntent" /> to be combined with extras specified
          by a child of viewId and executed when that child is clicked
</param>
        <summary>When using collections (eg.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetProgressBar">
      <MemberSignature Language="C#" Value="public virtual void SetProgressBar (int viewId, int max, int progress, bool indeterminate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProgressBar(int32 viewId, int32 max, int32 progress, bool indeterminate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetProgressBar(System.Int32,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetProgressBar : int * int * int * bool -&gt; unit&#xA;override this.SetProgressBar : int * int * int * bool -&gt; unit" Usage="remoteViews.SetProgressBar (viewId, max, progress, indeterminate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProgressBar", "(IIIZ)V", "GetSetProgressBar_IIIZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="progress" Type="System.Int32" />
        <Parameter Name="indeterminate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the <see cref="T:Android.Widget.ProgressBar" /> to change</param>
        <param name="max">The 100% value for the progress bar</param>
        <param name="progress">The current value of the progress bar.</param>
        <param name="indeterminate">True if the progress bar is indeterminate,
                false if not.
</param>
        <summary>Equivalent to calling <see cref="P:Android.Widget.ProgressBar.Max" />,
 <see cref="P:Android.Widget.ProgressBar.Progress" />, and
 <see cref="P:Android.Widget.ProgressBar.Indeterminate" />

 If indeterminate is true, then the values for max and progress are ignored.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetRelativeScrollPosition">
      <MemberSignature Language="C#" Value="public virtual void SetRelativeScrollPosition (int viewId, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRelativeScrollPosition(int32 viewId, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetRelativeScrollPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetRelativeScrollPosition : int * int -&gt; unit&#xA;override this.SetRelativeScrollPosition : int * int -&gt; unit" Usage="remoteViews.SetRelativeScrollPosition (viewId, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRelativeScrollPosition", "(II)V", "GetSetRelativeScrollPosition_IIHandler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view to change</param>
        <param name="offset">Scroll by this adapter position offset
</param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.AbsListView.SmoothScrollToPosition(System.Int32,System.Int32)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetRemoteAdapter">
      <MemberSignature Language="C#" Value="public virtual void SetRemoteAdapter (int viewId, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRemoteAdapter(int32 viewId, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetRemoteAdapter(System.Int32,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member SetRemoteAdapter : int * Android.Content.Intent -&gt; unit&#xA;override this.SetRemoteAdapter : int * Android.Content.Intent -&gt; unit" Usage="remoteViews.SetRemoteAdapter (viewId, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRemoteAdapter", "(ILandroid/content/Intent;)V", "GetSetRemoteAdapter_ILandroid_content_Intent_Handler", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the <see cref="T:Android.Widget.AdapterView" /></param>
        <param name="intent">The intent of the service which will be
            providing data to the RemoteViewsAdapter
</param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.AbsListView.SetRemoteViewsAdapter(Android.Content.Intent)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetRemoteAdapter">
      <MemberSignature Language="C#" Value="public virtual void SetRemoteAdapter (int appWidgetId, int viewId, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRemoteAdapter(int32 appWidgetId, int32 viewId, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetRemoteAdapter(System.Int32,System.Int32,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member SetRemoteAdapter : int * int * Android.Content.Intent -&gt; unit&#xA;override this.SetRemoteAdapter : int * int * Android.Content.Intent -&gt; unit" Usage="remoteViews.SetRemoteAdapter (appWidgetId, viewId, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRemoteAdapter", "(IILandroid/content/Intent;)V", "GetSetRemoteAdapter_IILandroid_content_Intent_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appWidgetId" Type="System.Int32" />
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="appWidgetId">The id of the app widget which contains the specified view. (This
      parameter is ignored in this deprecated method)</param>
        <param name="viewId">The id of the <see cref="T:Android.Widget.AdapterView" /></param>
        <param name="intent">The intent of the service which will be
            providing data to the RemoteViewsAdapter</param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.AbsListView.SetRemoteViewsAdapter(Android.Content.Intent)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetScrollPosition">
      <MemberSignature Language="C#" Value="public virtual void SetScrollPosition (int viewId, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScrollPosition(int32 viewId, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetScrollPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetScrollPosition : int * int -&gt; unit&#xA;override this.SetScrollPosition : int * int -&gt; unit" Usage="remoteViews.SetScrollPosition (viewId, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScrollPosition", "(II)V", "GetSetScrollPosition_IIHandler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view to change</param>
        <param name="position">Scroll to this adapter position
</param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.AbsListView.SmoothScrollToPosition(System.Int32,System.Int32)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetShort">
      <MemberSignature Language="C#" Value="public virtual void SetShort (int viewId, string methodName, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShort(int32 viewId, string methodName, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetShort(System.Int32,System.String,System.Int16)" />
      <MemberSignature Language="F#" Value="abstract member SetShort : int * string * int16 -&gt; unit&#xA;override this.SetShort : int * string * int16 -&gt; unit" Usage="remoteViews.SetShort (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShort", "(ILjava/lang/String;S)V", "GetSetShort_ILjava_lang_String_SHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one short on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetString">
      <MemberSignature Language="C#" Value="public virtual void SetString (int viewId, string methodName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetString(int32 viewId, string methodName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetString(System.Int32,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetString : int * string * string -&gt; unit&#xA;override this.SetString : int * string * string -&gt; unit" Usage="remoteViews.SetString (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setString", "(ILjava/lang/String;Ljava/lang/String;)V", "GetSetString_ILjava_lang_String_Ljava_lang_String_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one String on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetTextColor">
      <MemberSignature Language="C#" Value="public virtual void SetTextColor (int viewId, Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextColor(int32 viewId, valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetTextColor(System.Int32,Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetTextColor : int * Android.Graphics.Color -&gt; unit&#xA;override this.SetTextColor : int * Android.Graphics.Color -&gt; unit" Usage="remoteViews.SetTextColor (viewId, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextColor", "(II)V", "GetSetTextColor_IIHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose text color should change</param>
        <param name="color">Sets the text color for all the states (normal, selected,
            focused) to be this color.
</param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.TextView.SetTextColor(Android.Graphics.Color)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetTextViewCompoundDrawables">
      <MemberSignature Language="C#" Value="public virtual void SetTextViewCompoundDrawables (int viewId, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextViewCompoundDrawables(int32 viewId, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetTextViewCompoundDrawables(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetTextViewCompoundDrawables : int * int * int * int * int -&gt; unit&#xA;override this.SetTextViewCompoundDrawables : int * int * int * int * int -&gt; unit" Usage="remoteViews.SetTextViewCompoundDrawables (viewId, left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextViewCompoundDrawables", "(IIIII)V", "GetSetTextViewCompoundDrawables_IIIIIHandler", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose text should change</param>
        <param name="left">The id of a drawable to place to the left of the text, or 0</param>
        <param name="top">The id of a drawable to place above the text, or 0</param>
        <param name="right">The id of a drawable to place to the right of the text, or 0</param>
        <param name="bottom">The id of a drawable to place below the text, or 0
</param>
        <summary>Equivalent to calling
 <see cref="M:Android.Widget.TextView.SetCompoundDrawablesWithIntrinsicBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetTextViewCompoundDrawablesRelative">
      <MemberSignature Language="C#" Value="public virtual void SetTextViewCompoundDrawablesRelative (int viewId, int start, int top, int end, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextViewCompoundDrawablesRelative(int32 viewId, int32 start, int32 top, int32 end, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetTextViewCompoundDrawablesRelative(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetTextViewCompoundDrawablesRelative : int * int * int * int * int -&gt; unit&#xA;override this.SetTextViewCompoundDrawablesRelative : int * int * int * int * int -&gt; unit" Usage="remoteViews.SetTextViewCompoundDrawablesRelative (viewId, start, top, end, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextViewCompoundDrawablesRelative", "(IIIII)V", "GetSetTextViewCompoundDrawablesRelative_IIIIIHandler", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose text should change</param>
        <param name="start">The id of a drawable to place before the text (relative to the
 layout direction), or 0</param>
        <param name="top">The id of a drawable to place above the text, or 0</param>
        <param name="end">The id of a drawable to place after the text, or 0</param>
        <param name="bottom">The id of a drawable to place below the text, or 0
</param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.TextView.SetCompoundDrawablesRelativeWithIntrinsicBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetTextViewText">
      <MemberSignature Language="C#" Value="public virtual void SetTextViewText (int viewId, Java.Lang.ICharSequence text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextViewText(int32 viewId, class Java.Lang.ICharSequence text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetTextViewText(System.Int32,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetTextViewText : int * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetTextViewText : int * Java.Lang.ICharSequence -&gt; unit" Usage="remoteViews.SetTextViewText (viewId, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextViewText", "(ILjava/lang/CharSequence;)V", "GetSetTextViewText_ILjava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose text should change</param>
        <param name="text">The new text for the view
</param>
        <summary>Equivalent to calling TextView.setText</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTextViewText">
      <MemberSignature Language="C#" Value="public void SetTextViewText (int viewId, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextViewText(int32 viewId, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetTextViewText(System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetTextViewText : int * string -&gt; unit" Usage="remoteViews.SetTextViewText (viewId, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewId">To be added.</param>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextViewTextSize">
      <MemberSignature Language="C#" Value="public virtual void SetTextViewTextSize (int viewId, int units, float size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextViewTextSize(int32 viewId, int32 units, float32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetTextViewTextSize(System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetTextViewTextSize : int * int * single -&gt; unit&#xA;override this.SetTextViewTextSize : int * int * single -&gt; unit" Usage="remoteViews.SetTextViewTextSize (viewId, units, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextViewTextSize", "(IIF)V", "GetSetTextViewTextSize_IIFHandler", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="units" Type="System.Int32" />
        <Parameter Name="size" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose text size should change</param>
        <param name="units">The units of size (e.g. COMPLEX_UNIT_SP)</param>
        <param name="size">The size of the text
</param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.TextView.SetTextSize(Android.Util.ComplexUnitType,System.Single)" /></summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetUri">
      <MemberSignature Language="C#" Value="public virtual void SetUri (int viewId, string methodName, Android.Net.Uri value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUri(int32 viewId, string methodName, class Android.Net.Uri value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetUri(System.Int32,System.String,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member SetUri : int * string * Android.Net.Uri -&gt; unit&#xA;override this.SetUri : int * string * Android.Net.Uri -&gt; unit" Usage="remoteViews.SetUri (viewId, methodName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setUri", "(ILjava/lang/String;Landroid/net/Uri;)V", "GetSetUri_ILjava_lang_String_Landroid_net_Uri_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="value" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call the method.</param>
        <param name="methodName">The name of the method to call.</param>
        <param name="value">The value to pass to the method.
</param>
        <summary>Call a method taking one Uri on a view in the layout for this RemoteViews.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetViewPadding">
      <MemberSignature Language="C#" Value="public virtual void SetViewPadding (int viewId, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetViewPadding(int32 viewId, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetViewPadding(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetViewPadding : int * int * int * int * int -&gt; unit&#xA;override this.SetViewPadding : int * int * int * int * int -&gt; unit" Usage="remoteViews.SetViewPadding (viewId, left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setViewPadding", "(IIIII)V", "GetSetViewPadding_IIIIIHandler", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view to change</param>
        <param name="left">the left padding in pixels</param>
        <param name="top">the top padding in pixels</param>
        <param name="right">the right padding in pixels</param>
        <param name="bottom">the bottom padding in pixels
</param>
        <summary>Equivalent to calling <see cref="M:Android.Views.View.SetPadding(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetViewVisibility">
      <MemberSignature Language="C#" Value="public virtual void SetViewVisibility (int viewId, Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetViewVisibility(int32 viewId, valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.SetViewVisibility(System.Int32,Android.Views.ViewStates)" />
      <MemberSignature Language="F#" Value="abstract member SetViewVisibility : int * Android.Views.ViewStates -&gt; unit&#xA;override this.SetViewVisibility : int * Android.Views.ViewStates -&gt; unit" Usage="remoteViews.SetViewVisibility (viewId, visibility)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setViewVisibility", "(II)V", "GetSetViewVisibility_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view whose visibility should change</param>
        <param name="visibility">The new visibility for the view
</param>
        <summary>Equivalent to calling View.setVisibility</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShowNext">
      <MemberSignature Language="C#" Value="public virtual void ShowNext (int viewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowNext(int32 viewId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.ShowNext(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ShowNext : int -&gt; unit&#xA;override this.ShowNext : int -&gt; unit" Usage="remoteViews.ShowNext viewId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showNext", "(I)V", "GetShowNext_IHandler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call <see cref="M:Android.Widget.AdapterViewAnimator.ShowNext" /></param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.AdapterViewAnimator.ShowNext" /></summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrevious">
      <MemberSignature Language="C#" Value="public virtual void ShowPrevious (int viewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowPrevious(int32 viewId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.ShowPrevious(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ShowPrevious : int -&gt; unit&#xA;override this.ShowPrevious : int -&gt; unit" Usage="remoteViews.ShowPrevious viewId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showPrevious", "(I)V", "GetShowPrevious_IHandler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="viewId">The id of the view on which to call <see cref="M:Android.Widget.AdapterViewAnimator.ShowPrevious" /></param>
        <summary>Equivalent to calling <see cref="M:Android.Widget.AdapterViewAnimator.ShowPrevious" /></summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.RemoteViews.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Widget.RemoteViews.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.RemoteViews.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Widget.RemoteViews.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel dest, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel dest, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.RemoteViews.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="remoteViews.WriteToParcel (dest, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dest">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" />.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
