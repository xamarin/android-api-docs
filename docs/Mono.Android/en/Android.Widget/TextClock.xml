<Type Name="TextClock" FullName="Android.Widget.TextClock">
  <TypeSignature Language="C#" Value="public class TextClock : Android.Widget.TextView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextClock extends Android.Widget.TextView" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Widget.TextView</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/TextClock", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="17">
    <summary tool="true">
      <list type="bullet">
        <item>
          <term>In 24-hour mode:
         <list type="bullet" /></term>
        </item>
        <item>
          <term>Use the value returned by <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c> when non-null</term>
        </item>
        <item>
          <term>Otherwise, use the value returned by <c><see cref="P:Android.Widget.TextClock.Format12HourFormatted" /></c> when non-null</term>
        </item>
        <item>
          <term>Otherwise, use a default value appropriate for the user's locale, such as <c>h:mm a</c></term>
        </item>
        <item>
          <term>In 12-hour mode:
         <list type="bullet" /></term>
        </item>
        <item>
          <term>Use the value returned by <c><see cref="P:Android.Widget.TextClock.Format12HourFormatted" /></c> when non-null</term>
        </item>
        <item>
          <term>Otherwise, use the value returned by <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c> when non-null</term>
        </item>
        <item>
          <term>Otherwise, use a default value appropriate for the user's locale, such as <c>HH:mm</c></term>
        </item>
      </list>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <list type="bullet">
          <item>
            <term>In 24-hour mode:
         <list type="bullet" /></term>
          </item>
          <item>
            <term>Use the value returned by <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c> when non-null</term>
          </item>
          <item>
            <term>Otherwise, use the value returned by <c><see cref="P:Android.Widget.TextClock.Format12HourFormatted" /></c> when non-null</term>
          </item>
          <item>
            <term>Otherwise, use a default value appropriate for the user's locale, such as <c>h:mm a</c></term>
          </item>
          <item>
            <term>In 12-hour mode:
         <list type="bullet" /></term>
          </item>
          <item>
            <term>Use the value returned by <c><see cref="P:Android.Widget.TextClock.Format12HourFormatted" /></c> when non-null</term>
          </item>
          <item>
            <term>Otherwise, use the value returned by <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c> when non-null</term>
          </item>
          <item>
            <term>Otherwise, use a default value appropriate for the user's locale, such as <c>HH:mm</c></term>
          </item>
        </list>
      </para>
      <para tool="javadoc-to-mdoc">
        <c>TextClock</c> can display the current date and/or time as
 a formatted string.</para>
      <para tool="javadoc-to-mdoc">This view honors the 24-hour format system setting. As such, it is
 possible and recommended to provide two different formatting patterns:
 one to display the date/time in 24-hour mode and one to display the
 date/time in 12-hour mode. Most callers will want to use the defaults,
 though, which will be appropriate for the user's locale.</para>
      <para tool="javadoc-to-mdoc">It is possible to determine whether the system is currently in
 24-hour mode by calling <c><see cref="M:Android.Widget.TextClock.Is24HourModeEnabled" /></c>.</para>
      <para tool="javadoc-to-mdoc">The rules used by this widget to decide how to format the date and
 time are the following:</para>
      <para tool="javadoc-to-mdoc">The <c><see cref="T:Java.Lang.ICharSequence" /></c> instances used as formatting patterns when calling either
 <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c> or <c><see cref="P:Android.Widget.TextClock.Format12HourFormatted" /></c> can
 contain styling information. To do so, use a <c><see cref="T:Android.Text.ISpanned" /></c> object.
 Note that if you customize these strings, it is your responsibility to supply strings
 appropriate for formatting dates and/or times in the user's locale.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/TextClock.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 17" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextClock (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Creates a new clock using the default patterns for the current locale.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new clock using the default patterns for the current locale.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#TextClock(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextClock (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Creates a new clock inflated from XML.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new clock inflated from XML. This object's properties are
 intialized from the attributes specified in XML.

 This constructor uses a default style of 0, so the only attribute values
 applied are those in the Context's Theme and the given AttributeSet.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#TextClock(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextClock (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextClock (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>Creates a new clock inflated from XML.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new clock inflated from XML. This object's properties are
 intialized from the attributes specified in XML.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#TextClock(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextClock (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#TextClock(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFormat12Hour">
      <MemberSignature Language="C#" Value="public static Java.Lang.ICharSequence DefaultFormat12Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Lang.ICharSequence DefaultFormat12Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFAULT_FORMAT_12_HOUR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default formatting pattern in 12-hour mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The default formatting pattern in 12-hour mode. This pattern is used
 if <c><see cref="P:Android.Widget.TextClock.Format12HourFormatted" /></c> is called with a null pattern
 or if no pattern was specified when creating an instance of this class.

 This default pattern shows only the time, hours and minutes, and an am/pm
 indicator.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#DEFAULT_FORMAT_12_HOUR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Widget.TextClock.Format12HourFormatted" />
        <altmember cref="P:Android.Widget.TextClock.Format12HourFormatted" />
      </Docs>
    </Member>
    <Member MemberName="DefaultFormat24Hour">
      <MemberSignature Language="C#" Value="public static Java.Lang.ICharSequence DefaultFormat24Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Lang.ICharSequence DefaultFormat24Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFAULT_FORMAT_24_HOUR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default formatting pattern in 24-hour mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The default formatting pattern in 24-hour mode. This pattern is used
 if <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c> is called with a null pattern
 or if no pattern was specified when creating an instance of this class.

 This default pattern shows only the time, hours and minutes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#DEFAULT_FORMAT_24_HOUR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Widget.TextClock.Format24HourFormatted" />
        <altmember cref="P:Android.Widget.TextClock.Format24HourFormatted" />
      </Docs>
    </Member>
    <Member MemberName="Format12Hour">
      <MemberSignature Language="C#" Value="public string Format12Hour { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format12Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format12HourFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence Format12HourFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence Format12HourFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFormat12Hour", "()Ljava/lang/CharSequence;", "GetGetFormat12HourHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFormat12Hour", "(Ljava/lang/CharSequence;)V", "GetSetFormat12Hour_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the formatting pattern used to display the date and/or time
 in 12-hour mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#getFormat12Hour()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the formatting pattern used to display the date and/or time
 in 12-hour mode. The formatting pattern syntax is described in
 <c><see cref="T:Android.Text.Format.DateFormat" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#setFormat12Hour(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Specifies the formatting pattern used to display the date and/or time
 in 12-hour mode. The formatting pattern syntax is described in
 <c><see cref="T:Android.Text.Format.DateFormat" /></c>.</para>
          <para tool="javadoc-to-mdoc">If this pattern is set to null, <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c> will be used
 even in 12-hour mode. If both 24-hour and 12-hour formatting patterns
 are set to null, the default pattern for the current locale will be used
 instead.</para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> if styling is not needed, it is highly recommended
 you supply a format string generated by
 <c><see cref="M:Android.Text.Format.DateFormat.GetBestDateTimePattern(Java.Util.Locale,System.String)" /></c>. This method
 takes care of generating a format string adapted to the desired locale.</para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Widget.TextClock.Format12HourFormatted" />
        <altmember cref="M:Android.Widget.TextClock.Is24HourModeEnabled" />
        <altmember cref="P:Android.Widget.TextClock.Format12HourFormatted" />
        <altmember cref="M:Android.Widget.TextClock.Is24HourModeEnabled" />
        <altmember cref="M:Android.Text.Format.DateFormat.GetBestDateTimePattern(Java.Util.Locale, System.String)" />
        <altmember cref="T:Android.Text.Format.DateFormat" />
      </Docs>
    </Member>
    <Member MemberName="Format24Hour">
      <MemberSignature Language="C#" Value="public string Format24Hour { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format24Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format24HourFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence Format24HourFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence Format24HourFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFormat24Hour", "()Ljava/lang/CharSequence;", "GetGetFormat24HourHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFormat24Hour", "(Ljava/lang/CharSequence;)V", "GetSetFormat24Hour_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the formatting pattern used to display the date and/or time
 in 24-hour mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#getFormat24Hour()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the formatting pattern used to display the date and/or time
 in 24-hour mode. The formatting pattern syntax is described in
 <c><see cref="T:Android.Text.Format.DateFormat" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#setFormat24Hour(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Specifies the formatting pattern used to display the date and/or time
 in 24-hour mode. The formatting pattern syntax is described in
 <c><see cref="T:Android.Text.Format.DateFormat" /></c>.</para>
          <para tool="javadoc-to-mdoc">If this pattern is set to null, <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c> will be used
 even in 12-hour mode. If both 24-hour and 12-hour formatting patterns
 are set to null, the default pattern for the current locale will be used
 instead.</para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> if styling is not needed, it is highly recommended
 you supply a format string generated by
 <c><see cref="M:Android.Text.Format.DateFormat.GetBestDateTimePattern(Java.Util.Locale,System.String)" /></c>. This method
 takes care of generating a format string adapted to the desired locale.</para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Widget.TextClock.Format24HourFormatted" />
        <altmember cref="M:Android.Widget.TextClock.Is24HourModeEnabled" />
        <altmember cref="P:Android.Widget.TextClock.Format24HourFormatted" />
        <altmember cref="M:Android.Widget.TextClock.Is24HourModeEnabled" />
        <altmember cref="M:Android.Text.Format.DateFormat.GetBestDateTimePattern(Java.Util.Locale, System.String)" />
        <altmember cref="T:Android.Text.Format.DateFormat" />
      </Docs>
    </Member>
    <Member MemberName="Is24HourModeEnabled">
      <MemberSignature Language="C#" Value="public virtual bool Is24HourModeEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Is24HourModeEnabled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("is24HourModeEnabled", "()Z", "GetIs24HourModeEnabledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the system is currently using the 24-hour mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether the system is currently using the 24-hour mode.

 When the system is in 24-hour mode, this view will use the pattern
 returned by <c><see cref="P:Android.Widget.TextClock.Format24HourFormatted" /></c>. In 12-hour mode, the pattern
 returned by <c><see cref="P:Android.Widget.TextClock.Format12HourFormatted" /></c> is used instead.

 If either one of the formats is null, the other format is used. If
 both formats are null, the default formats for the current locale are used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#is24HourModeEnabled()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Widget.TextClock.Format12HourFormatted" />
        <altmember cref="P:Android.Widget.TextClock.Format12HourFormatted" />
        <altmember cref="P:Android.Widget.TextClock.Format24HourFormatted" />
        <altmember cref="P:Android.Widget.TextClock.Format24HourFormatted" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeZone">
      <MemberSignature Language="C#" Value="public virtual string TimeZone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTimeZone", "()Ljava/lang/String;", "GetGetTimeZoneHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTimeZone", "(Ljava/lang/String;)V", "GetSetTimeZone_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates which time zone is currently used by this view.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#getTimeZone()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Indicates which time zone is currently used by this view.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextClock.html#setTimeZone(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the specified time zone to use in this clock. When the time zone
 is set through this method, system time zone changes (when the user
 sets the time zone in settings for instance) will be ignored.</para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="T:Java.Util.TimeZone" />
        <altmember cref="M:Java.Util.TimeZone.GetAvailableIDs" />
        <altmember cref="P:Android.Widget.TextClock.TimeZone" />
        <altmember cref="P:Android.Widget.TextClock.TimeZone" />
        <altmember cref="M:Java.Util.TimeZone.GetAvailableIDs" />
        <altmember cref="M:Java.Util.TimeZone.GetTimeZone(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
