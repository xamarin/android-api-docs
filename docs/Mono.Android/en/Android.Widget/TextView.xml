<Type Name="TextView" FullName="Android.Widget.TextView">
  <TypeSignature Language="C#" Value="public class TextView : Android.Views.View, Android.Views.ViewTreeObserver.IOnPreDrawListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextView extends Android.Views.View implements class Android.Runtime.IJavaObject, class Android.Views.ViewTreeObserver/IOnPreDrawListener, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.View</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.ViewTreeObserver+IOnPreDrawListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/TextView", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Displays text to the user and optionally allows them to edit it.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Displays text to the user and optionally allows them to edit it.  A TextView
 is a complete text editor, however the basic class is configured to not
 allow editing; see <c><see cref="T:Android.Widget.EditText" /></c> for a subclass that configures the text
 view for editing.

 </para>
      <para tool="javadoc-to-mdoc">
 To allow users to copy some or all of the TextView's value and paste it somewhere else, set the
 XML attribute <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#TextView_textIsSelectable" /></c> to "true" or call
 <c><see cref="M:Android.Widget.TextView.SetTextIsSelectable(System.Boolean)" /></c>. The <c>textIsSelectable</c> flag
 allows users to make selection gestures in the TextView, which in turn triggers the system's
 built-in copy/paste controls.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <b>XML attributes</b>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
 See <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#TextView" /></c>,
 <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#View" /></c></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/TextView.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextView (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#TextView(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextView (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#TextView(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextView (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#TextView(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#TextView(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddTextChangedListener (Android.Text.ITextWatcher watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTextChangedListener(class Android.Text.ITextWatcher watcher) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTextChangedListener", "(Landroid/text/TextWatcher;)V", "GetAddTextChangedListener_Landroid_text_TextWatcher_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="Android.Text.ITextWatcher" />
      </Parameters>
      <Docs>
        <param name="watcher">To be added.</param>
        <summary>Adds a TextWatcher to the list of those whose methods are called
 whenever this TextView's text changes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds a TextWatcher to the list of those whose methods are called
 whenever this TextView's text changes.
 </para>
          <para tool="javadoc-to-mdoc">
 In 1.0, the <c><see cref="M:Android.Text.ITextWatcher.AfterTextChanged(Android.Text.IEditable)" /></c> method was erroneously
 not called after <c><see cref="M:Android.Widget.TextView.SetText(System.Char[],System.Int32,System.Int32)" /></c> calls.  Now, doing <c><see cref="M:Android.Widget.TextView.SetText(System.Char[],System.Int32,System.Int32)" /></c>
 if there are any text changed listeners forces the buffer type to
 Editable if it would not otherwise be and does call this method.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#addTextChangedListener(android.text.TextWatcher)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AfterTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Text.AfterTextChangedEventArgs&gt; AfterTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Text.AfterTextChangedEventArgs&gt; AfterTextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Text.AfterTextChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (Java.Lang.ICharSequence text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class Java.Lang.ICharSequence text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("append", "(Ljava/lang/CharSequence;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary tool="true">Convenience method: Append the specified text to the TextView's
 display buffer, upgrading it to BufferType.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method: Append the specified text to the TextView's
 display buffer, upgrading it to BufferType.EDITABLE if it was
 not already editable.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#append(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual void Append (Java.Lang.ICharSequence text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Append(class Java.Lang.ICharSequence text, int32 start, int32 end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("append", "(Ljava/lang/CharSequence;II)V", "GetAppend_Ljava_lang_CharSequence_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Convenience method: Append the specified text slice to the TextView's
 display buffer, upgrading it to BufferType.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method: Append the specified text slice to the TextView's
 display buffer, upgrading it to BufferType.EDITABLE if it was
 not already editable.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#append(java.lang.CharSequence, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string text, int32 start, int32 end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLinkMask">
      <MemberSignature Language="C#" Value="public Android.Text.Util.MatchOptions AutoLinkMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Text.Util.MatchOptions AutoLinkMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAutoLinkMask", "()I", "GetGetAutoLinkMaskHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAutoLinkMask", "(I)V", "GetSetAutoLinkMask_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Util.MatchOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the autolink mask of the text.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getAutoLinkMask()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the autolink mask of the text.  See <c><see cref="!:Android.Text.Util.Linkify.ALL" /></c> and peers for
 possible values.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setAutoLinkMask(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the autolink mask of the text.  See <c><see cref="!:Android.Text.Util.Linkify.ALL" /></c> and peers for
 possible values.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BeforeTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Text.TextChangedEventArgs&gt; BeforeTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Text.TextChangedEventArgs&gt; BeforeTextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Text.TextChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBatchEdit">
      <MemberSignature Language="C#" Value="public virtual void BeginBatchEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginBatchEdit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beginBatchEdit", "()V", "GetBeginBatchEditHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#beginBatchEdit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="BringPointIntoView">
      <MemberSignature Language="C#" Value="public virtual bool BringPointIntoView (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BringPointIntoView(int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bringPointIntoView", "(I)Z", "GetBringPointIntoView_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>Move the point, specified by the offset, into the view if it is needed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Move the point, specified by the offset, into the view if it is needed.
 This has to be called after layout. Returns true if anything changed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#bringPointIntoView(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ClearComposingText">
      <MemberSignature Language="C#" Value="public virtual void ClearComposingText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearComposingText() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearComposingText", "()V", "GetClearComposingTextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Use <c><see cref="M:Android.Views.InputMethods.BaseInputConnection.RemoveComposingSpans(Android.Text.ISpannable)" /></c> to remove any IME composing
 state from this text view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Use <c><see cref="M:Android.Views.InputMethods.BaseInputConnection.RemoveComposingSpans(Android.Text.ISpannable)" /></c> to remove any IME composing
 state from this text view.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#clearComposingText()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CompoundDrawablePadding">
      <MemberSignature Language="C#" Value="public virtual int CompoundDrawablePadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompoundDrawablePadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCompoundDrawablePadding", "()I", "GetGetCompoundDrawablePaddingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCompoundDrawablePadding", "(I)V", "GetSetCompoundDrawablePadding_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the padding between the compound drawables and the text.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundDrawablePadding()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the padding between the compound drawables and the text.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablePadding(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the size of the padding between the compound drawables and
 the text.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompoundPaddingBottom">
      <MemberSignature Language="C#" Value="public virtual int CompoundPaddingBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompoundPaddingBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCompoundPaddingBottom", "()I", "GetGetCompoundPaddingBottomHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bottom padding of the view, plus space for the bottom
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the bottom padding of the view, plus space for the bottom
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingBottom()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompoundPaddingEnd">
      <MemberSignature Language="C#" Value="public virtual int CompoundPaddingEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompoundPaddingEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCompoundPaddingEnd", "()I", "GetGetCompoundPaddingEndHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the end padding of the view, plus space for the end
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the end padding of the view, plus space for the end
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingEnd()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CompoundPaddingLeft">
      <MemberSignature Language="C#" Value="public virtual int CompoundPaddingLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompoundPaddingLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCompoundPaddingLeft", "()I", "GetGetCompoundPaddingLeftHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the left padding of the view, plus space for the left
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the left padding of the view, plus space for the left
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingLeft()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompoundPaddingRight">
      <MemberSignature Language="C#" Value="public virtual int CompoundPaddingRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompoundPaddingRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCompoundPaddingRight", "()I", "GetGetCompoundPaddingRightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the right padding of the view, plus space for the right
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the right padding of the view, plus space for the right
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingRight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompoundPaddingStart">
      <MemberSignature Language="C#" Value="public virtual int CompoundPaddingStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompoundPaddingStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCompoundPaddingStart", "()I", "GetGetCompoundPaddingStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the start padding of the view, plus space for the start
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the start padding of the view, plus space for the start
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingStart()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CompoundPaddingTop">
      <MemberSignature Language="C#" Value="public virtual int CompoundPaddingTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompoundPaddingTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCompoundPaddingTop", "()I", "GetGetCompoundPaddingTopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the top padding of the view, plus space for the top
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the top padding of the view, plus space for the top
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingTop()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrentHintTextColor">
      <MemberSignature Language="C#" Value="public Android.Graphics.Color CurrentHintTextColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color CurrentHintTextColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentHintTextColor", "()I", "GetGetCurrentHintTextColorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Return the current color selected to paint the hint text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCurrentHintTextColor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTextColor">
      <MemberSignature Language="C#" Value="public Android.Graphics.Color CurrentTextColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color CurrentTextColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentTextColor", "()I", "GetGetCurrentTextColorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Return the current color selected for normal text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCurrentTextColor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CustomSelectionActionModeCallback">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode.ICallback CustomSelectionActionModeCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ActionMode/ICallback CustomSelectionActionModeCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCustomSelectionActionModeCallback", "()Landroid/view/ActionMode$Callback;", "GetGetCustomSelectionActionModeCallbackHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCustomSelectionActionModeCallback", "(Landroid/view/ActionMode$Callback;)V", "GetSetCustomSelectionActionModeCallback_Landroid_view_ActionMode_Callback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode+ICallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the value set in <c><see cref="P:Android.Widget.TextView.CustomSelectionActionModeCallback" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCustomSelectionActionModeCallback()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Retrieves the value set in <c><see cref="P:Android.Widget.TextView.CustomSelectionActionModeCallback" /></c>. Default is null.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCustomSelectionActionModeCallback(android.view.ActionMode.Callback)" target="_blank">[Android Documentation]</a>
              <br />
            </format>If provided, this ActionMode.Callback will be used to create the ActionMode when text
 selection is initiated in this View.

 The standard implementation populates the menu with a subset of Select All, Cut, Copy,
 Paste, Replace and Share actions, depending on what this View supports.

 A custom implementation can add new entries in the default menu in its
 <c><see cref="!:NoType:android/view/ActionMode$Callback;Href=../../../reference/android/view/ActionMode.Callback.html#onPrepareActionMode(android.view.ActionMode,android.view.Menu)" /></c>
 method. The default actions can also be removed from the menu using
 <c><see cref="!:Android.Views.Menu.removeItem(int)" /></c> and passing <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#selectAll" /></c>,
 <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#cut" /></c>, <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#copy" /></c>, <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#paste" /></c>,
 <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#replaceText" /></c> or <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#shareText" /></c> ids as parameters.

 Returning false from
 <c><see cref="!:NoType:android/view/ActionMode$Callback;Href=../../../reference/android/view/ActionMode.Callback.html#onCreateActionMode(android.view.ActionMode,android.view.Menu)" /></c>
 will prevent the action mode from being started.

 Action click events should be handled by the custom implementation of
 <c><see cref="!:NoType:android/view/ActionMode$Callback;Href=../../../reference/android/view/ActionMode.Callback.html#onActionItemClicked(android.view.ActionMode,android.view.MenuItem)" /></c>.

 Note that text selection mode is not started when a TextView receives focus and the
 <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#selectAllOnFocus" /></c> flag has been set. The content is highlighted in
 that case, to allow for quick replacement.
</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Debug">
      <MemberSignature Language="C#" Value="public virtual void Debug (int depth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Debug(int32 depth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("debug", "(I)V", "GetDebug_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="depth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="depth">the indentation level</param>
        <summary>Prints information about this view in the log output, with the tag
 <c><see cref="F:Android.Views.View.ViewLogTag" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Prints information about this view in the log output, with the tag
 <c><see cref="F:Android.Views.View.ViewLogTag" /></c>. Each line in the output is preceded with an
 indentation defined by the <c>depth</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#debug(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefaultEditable">
      <MemberSignature Language="C#" Value="protected virtual bool DefaultEditable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultEditable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultEditable", "()Z", "GetGetDefaultEditableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Subclasses override this to specify that they have a KeyListener
 by default even if not specifically called for in the XML options.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Subclasses override this to specify that they have a KeyListener
 by default even if not specifically called for in the XML options.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getDefaultEditable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMovementMethod">
      <MemberSignature Language="C#" Value="protected virtual Android.Text.Method.IMovementMethod DefaultMovementMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.Method.IMovementMethod DefaultMovementMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultMovementMethod", "()Landroid/text/method/MovementMethod;", "GetGetDefaultMovementMethodHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Method.IMovementMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Subclasses override this to specify a default movement method.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Subclasses override this to specify a default movement method.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getDefaultMovementMethod()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DidTouchFocusSelect">
      <MemberSignature Language="C#" Value="public virtual bool DidTouchFocusSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DidTouchFocusSelect() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("didTouchFocusSelect", "()Z", "GetDidTouchFocusSelectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true, only while processing a touch gesture, if the initial
 touch down event caused focus to move to the text view and as a result
 its selection changed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true, only while processing a touch gesture, if the initial
 touch down event caused focus to move to the text view and as a result
 its selection changed.  Only valid while processing the touch gesture
 of interest, in an editable text view.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#didTouchFocusSelect()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="EditableText">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IEditable EditableText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.IEditable EditableText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEditableText", "()Landroid/text/Editable;", "GetGetEditableTextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the text the TextView is displaying as an Editable object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the text the TextView is displaying as an Editable object.  If
 the text is not editable, null is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getEditableText()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.TextView.TextFormatted" />
      </Docs>
    </Member>
    <Member MemberName="EditorAction">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Widget.TextView.EditorActionEventArgs&gt; EditorAction;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Widget.TextView/EditorActionEventArgs&gt; EditorAction" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Widget.TextView+EditorActionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ellipsize">
      <MemberSignature Language="C#" Value="public virtual Android.Text.TextUtils.TruncateAt Ellipsize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.TextUtils/TruncateAt Ellipsize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEllipsize", "()Landroid/text/TextUtils$TruncateAt;", "GetGetEllipsizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEllipsize", "(Landroid/text/TextUtils$TruncateAt;)V", "GetSetEllipsize_Landroid_text_TextUtils_TruncateAt_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.TextUtils+TruncateAt</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns where, if anywhere, words that are longer than the view
 is wide should be ellipsized.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getEllipsize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns where, if anywhere, words that are longer than the view
 is wide should be ellipsized.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setEllipsize(android.text.TextUtils.TruncateAt)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Causes words in the text that are longer than the view is wide
 to be ellipsized instead of broken in the middle.  You may also
 want to <c><see cref="M:Android.Widget.TextView.SetSingleLine" /></c> or <c><see cref="M:Android.Widget.TextView.SetHorizontallyScrolling(System.Boolean)" /></c>
 to constrain the text to a single line.  Use <c>null</c>
 to turn off ellipsizing.

 If <c><see cref="M:Android.Widget.TextView.SetMaxLines(System.Int32)" /></c> has been used to set two or more lines,
 only <c><see cref="!:NoType:android/text/TextUtils$TruncateAt;Href=../../../reference/android/text/TextUtils.TruncateAt.html#END" /></c> and
 <c><see cref="!:NoType:android/text/TextUtils$TruncateAt;Href=../../../reference/android/text/TextUtils.TruncateAt.html#MARQUEE" /></c> are supported
 (other ellipsizing types will not do anything).</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EndBatchEdit">
      <MemberSignature Language="C#" Value="public virtual void EndBatchEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndBatchEdit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endBatchEdit", "()V", "GetEndBatchEditHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#endBatchEdit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public string Error { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence ErrorFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence ErrorFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getError", "()Ljava/lang/CharSequence;", "GetGetErrorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setError", "(Ljava/lang/CharSequence;)V", "GetSetError_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the error message that was set to be displayed with
 <c><see cref="P:Android.Widget.TextView.ErrorFormatted" /></c>, or <c>null</c> if no error was set
 or if it the error was cleared by the widget after user input.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getError()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the error message that was set to be displayed with
 <c><see cref="P:Android.Widget.TextView.ErrorFormatted" /></c>, or <c>null</c> if no error was set
 or if it the error was cleared by the widget after user input.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setError(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the right-hand compound drawable of the TextView to the "error"
 icon and sets an error message that will be displayed in a popup when
 the TextView has focus.  The icon and error message will be reset to
 null when any key events cause changes to the TextView's text.  If the
 <c>error</c> is <c>null</c>, the error message and icon
 will be cleared.
</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedPaddingBottom">
      <MemberSignature Language="C#" Value="public virtual int ExtendedPaddingBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExtendedPaddingBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExtendedPaddingBottom", "()I", "GetGetExtendedPaddingBottomHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the extended bottom padding of the view, including both the
 bottom Drawable if any and any extra space to keep more than maxLines
 of text from showing.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the extended bottom padding of the view, including both the
 bottom Drawable if any and any extra space to keep more than maxLines
 of text from showing.  It is only valid to call this after measuring.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getExtendedPaddingBottom()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedPaddingTop">
      <MemberSignature Language="C#" Value="public virtual int ExtendedPaddingTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExtendedPaddingTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExtendedPaddingTop", "()I", "GetGetExtendedPaddingTopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the extended top padding of the view, including both the
 top Drawable if any and any extra space to keep more than maxLines
 of text from showing.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the extended top padding of the view, including both the
 top Drawable if any and any extra space to keep more than maxLines
 of text from showing.  It is only valid to call this after measuring.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getExtendedPaddingTop()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtractText">
      <MemberSignature Language="C#" Value="public virtual bool ExtractText (Android.Views.InputMethods.ExtractedTextRequest request, Android.Views.InputMethods.ExtractedText outText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExtractText(class Android.Views.InputMethods.ExtractedTextRequest request, class Android.Views.InputMethods.ExtractedText outText) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("extractText", "(Landroid/view/inputmethod/ExtractedTextRequest;Landroid/view/inputmethod/ExtractedText;)Z", "GetExtractText_Landroid_view_inputmethod_ExtractedTextRequest_Landroid_view_inputmethod_ExtractedText_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Views.InputMethods.ExtractedTextRequest" />
        <Parameter Name="outText" Type="Android.Views.InputMethods.ExtractedText" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="outText">To be added.</param>
        <summary>If this TextView contains editable content, extract a portion of it
 based on the information in <format type="text/html"><var>request</var></format> in to <format type="text/html"><var>outText</var></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">If this TextView contains editable content, extract a portion of it
 based on the information in <format type="text/html"><var>request</var></format> in to <format type="text/html"><var>outText</var></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FontFeatureSettings">
      <MemberSignature Language="C#" Value="public virtual string FontFeatureSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FontFeatureSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFontFeatureSettings", "()Ljava/lang/String;", "GetGetFontFeatureSettingsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFontFeatureSettings", "(Ljava/lang/String;)V", "GetSetFontFeatureSettings_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getFontFeatureSettings()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setFontFeatureSettings(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets font feature settings.  The format is the same as the CSS
 font-feature-settings attribute:
 http://dev.w3.org/csswg/css-fonts/#propdef-font-feature-settings</para>
        </remarks>
        <altmember cref="P:Android.Widget.TextView.FontFeatureSettings" />
        <altmember cref="P:Android.Graphics.Paint.FontFeatureSettings" />
        <altmember cref="P:Android.Widget.TextView.FontFeatureSettings" />
        <altmember cref="P:Android.Graphics.Paint.FontFeatureSettings" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="FreezesText">
      <MemberSignature Language="C#" Value="public virtual bool FreezesText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FreezesText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFreezesText", "()Z", "GetGetFreezesTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFreezesText", "(Z)V", "GetSetFreezesText_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether this text view is including its entire text contents
 in frozen icicles.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getFreezesText()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return whether this text view is including its entire text contents
 in frozen icicles.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setFreezesText(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Control whether this text view saves its entire text contents when
 freezing to an icicle, in addition to dynamic state such as cursor
 position.  By default this is false, not saving the text.  Set to true
 if the text in the text view is not being saved somewhere else in
 persistent storage (such as in a content provider) so that if the
 view is later thawed the user will not lose their data.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.TextView.FreezesText" />
      </Docs>
    </Member>
    <Member MemberName="GetCompoundDrawables">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable[] GetCompoundDrawables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable[] GetCompoundDrawables() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCompoundDrawables", "()[Landroid/graphics/drawable/Drawable;", "GetGetCompoundDrawablesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns drawables for the left, top, right, and bottom borders.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns drawables for the left, top, right, and bottom borders.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundDrawables()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCompoundDrawablesRelative">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable[] GetCompoundDrawablesRelative ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable[] GetCompoundDrawablesRelative() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCompoundDrawablesRelative", "()[Landroid/graphics/drawable/Drawable;", "GetGetCompoundDrawablesRelativeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns drawables for the start, top, end, and bottom borders.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns drawables for the start, top, end, and bottom borders.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getCompoundDrawablesRelative()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetFilters">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IInputFilter[] GetFilters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IInputFilter[] GetFilters() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFilters", "()[Landroid/text/InputFilter;", "GetGetFiltersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IInputFilter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current list of input filters.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current list of input filters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getFilters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInputExtras">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle GetInputExtras (bool create);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle GetInputExtras(bool create) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInputExtras", "(Z)Landroid/os/Bundle;", "GetGetInputExtras_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="create" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="create">If true, the extras will be created if they don't already
 exist.  Otherwise, null will be returned if none have been created.</param>
        <summary>Retrieve the input extras currently associated with the text view, which
 can be viewed as well as modified.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the input extras currently associated with the text view, which
 can be viewed as well as modified.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getInputExtras(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Widget.TextView.SetInputExtras(System.Int32)" />
        <altmember cref="P:Android.Views.InputMethods.EditorInfo.Extras" />
      </Docs>
    </Member>
    <Member MemberName="GetLineBounds">
      <MemberSignature Language="C#" Value="public virtual int GetLineBounds (int line, Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineBounds(int32 line, class Android.Graphics.Rect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineBounds", "(ILandroid/graphics/Rect;)I", "GetGetLineBounds_ILandroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="line">which line to examine (0..getLineCount() - 1)</param>
        <param name="bounds">Optional. If not null, it returns the extent of the line</param>
        <summary>Return the baseline for the specified line (0...getLineCount() - 1)
 If bounds is not null, return the top, left, right, bottom extents
 of the specified line in it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the baseline for the specified line (0...getLineCount() - 1)
 If bounds is not null, return the top, left, right, bottom extents
 of the specified line in it. If the internal Layout has not been built,
 return 0 and set bounds to (0, 0, 0, 0)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLineBounds(int, android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetForPosition">
      <MemberSignature Language="C#" Value="public virtual int GetOffsetForPosition (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffsetForPosition(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOffsetForPosition", "(FF)I", "GetGetOffsetForPosition_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The horizontal absolute position of a point on screen</param>
        <param name="y">The vertical absolute position of a point on screen</param>
        <summary>Get the character offset closest to the specified absolute position.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the character offset closest to the specified absolute position. A typical use case is to
 pass the result of <c><see cref="M:Android.Views.MotionEvent.GetX" /></c> and <c><see cref="M:Android.Views.MotionEvent.GetY" /></c> to this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getOffsetForPosition(float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="GetTextColor">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Color GetTextColor (Android.Content.Context context, Android.Content.Res.TypedArray attrs, int def);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Android.Graphics.Color GetTextColor(class Android.Content.Context context, class Android.Content.Res.TypedArray attrs, int32 def) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextColor", "(Landroid/content/Context;Landroid/content/res/TypedArray;I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Content.Res.TypedArray" />
        <Parameter Name="def" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="def">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextColor">
      <MemberSignature Language="C#" Value="public static int GetTextColor (Android.Content.Context context, Android.Content.Res.TypedArray attrs, int def);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTextColor(class Android.Content.Context context, class Android.Content.Res.TypedArray attrs, int32 def) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextColor", "(Landroid/content/Context;Landroid/content/res/TypedArray;I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Content.Res.TypedArray" />
        <Parameter Name="def" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="def">To be added.</param>
        <summary>Returns the default color from the TextView_textColor attribute
 from the AttributeSet, if set, or the default color from the
 TextAppearance_textColor from the TextView_textAppearance attribute,
 if TextView_textColor was not set directly.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the default color from the TextView_textColor attribute
 from the AttributeSet, if set, or the default color from the
 TextAppearance_textColor from the TextView_textAppearance attribute,
 if TextView_textColor was not set directly.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTextColor(android.content.Context, android.content.res.TypedArray, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextColors">
      <MemberSignature Language="C#" Value="public static Android.Content.Res.ColorStateList GetTextColors (Android.Content.Context context, Android.Content.Res.TypedArray attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.Res.ColorStateList GetTextColors(class Android.Content.Context context, class Android.Content.Res.TypedArray attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextColors", "(Landroid/content/Context;Landroid/content/res/TypedArray;)Landroid/content/res/ColorStateList;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Content.Res.TypedArray" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Returns the TextView_textColor attribute from the
 TypedArray, if set, or the TextAppearance_textColor
 from the TextView_textAppearance attribute, if TextView_textColor
 was not set directly.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the TextView_textColor attribute from the
 TypedArray, if set, or the TextAppearance_textColor
 from the TextView_textAppearance attribute, if TextView_textColor
 was not set directly.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTextColors(android.content.Context, android.content.res.TypedArray)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetUrls">
      <MemberSignature Language="C#" Value="public virtual Android.Text.Style.URLSpan[] GetUrls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.Style.URLSpan[] GetUrls() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getUrls", "()[Landroid/text/style/URLSpan;", "GetGetUrlsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Style.URLSpan[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of URLSpans attached to the text
 (by <c><see cref="T:Android.Text.Util.Linkify" /></c> or otherwise) if any.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the list of URLSpans attached to the text
 (by <c><see cref="T:Android.Text.Util.Linkify" /></c> or otherwise) if any.  You can call
 <c><see cref="P:Android.Text.Style.URLSpan.URL" /></c> on them to find where they link to
 or use <c><see cref="M:Android.Text.ISpanned.GetSpanStart(Java.Lang.Object)" /></c> and <c><see cref="M:Android.Text.ISpanned.GetSpanEnd(Java.Lang.Object)" /></c>
 to find the region of the text they are attached to.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getUrls()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Gravity">
      <MemberSignature Language="C#" Value="public virtual Android.Views.GravityFlags Gravity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.GravityFlags Gravity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGravity", "()I", "GetGetGravityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setGravity", "(I)V", "GetSetGravity_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.GravityFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the horizontal and vertical alignment of this TextView.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getGravity()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the horizontal and vertical alignment of this TextView.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setGravity(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the horizontal alignment of the text and the
 vertical gravity that will be used when there is extra space
 in the TextView beyond what is required for the text itself.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Views.Gravity" />
        <altmember cref="T:Android.Views.Gravity" />
      </Docs>
    </Member>
    <Member MemberName="HasSelection">
      <MemberSignature Language="C#" Value="public virtual bool HasSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasSelection", "()Z", "GetHasSelectionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true iff there is a selection inside this text view.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true iff there is a selection inside this text view.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#hasSelection()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HighlightColor">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color HighlightColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color HighlightColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHighlightColor", "()I", "GetGetHighlightColorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getHighlightColor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetHighlightColor(Android.Graphics.Color)" />
      </Docs>
    </Member>
    <Member MemberName="Hint">
      <MemberSignature Language="C#" Value="public string Hint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Hint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence HintFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence HintFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHint", "()Ljava/lang/CharSequence;", "GetGetHintHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHint", "(Ljava/lang/CharSequence;)V", "GetSetHint_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the hint that is displayed when the text of the TextView
 is empty.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getHint()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the hint that is displayed when the text of the TextView
 is empty.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setHint(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the text to be displayed when the text of the TextView is empty.
 Null means to use the normal empty text. The hint does not currently
 participate in determining the size of the view.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HintTextColors">
      <MemberSignature Language="C#" Value="public Android.Content.Res.ColorStateList HintTextColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.ColorStateList HintTextColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHintTextColors", "()Landroid/content/res/ColorStateList;", "GetGetHintTextColorsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getHintTextColors()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetHintTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Widget.TextView.SetHintTextColor(Android.Graphics.Color)" />
        <altmember cref="M:Android.Widget.TextView.SetTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Widget.TextView.SetLinkTextColor(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="ImeActionId">
      <MemberSignature Language="C#" Value="public virtual int ImeActionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImeActionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getImeActionId", "()I", "GetGetImeActionIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the IME action ID previous set with <c><see cref="M:Android.Widget.TextView.SetImeActionLabel(Java.Lang.ICharSequence,Android.Views.InputMethods.ImeAction)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the IME action ID previous set with <c><see cref="M:Android.Widget.TextView.SetImeActionLabel(Java.Lang.ICharSequence,Android.Views.InputMethods.ImeAction)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getImeActionId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Widget.TextView.SetImeActionLabel(Java.Lang.ICharSequence, Android.Views.InputMethods.ImeAction)" />
        <altmember cref="T:Android.Views.InputMethods.EditorInfo" />
      </Docs>
    </Member>
    <Member MemberName="ImeActionLabel">
      <MemberSignature Language="C#" Value="public string ImeActionLabel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImeActionLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeActionLabelFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence ImeActionLabelFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence ImeActionLabelFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getImeActionLabel", "()Ljava/lang/CharSequence;", "GetGetImeActionLabelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the IME action label previous set with <c><see cref="M:Android.Widget.TextView.SetImeActionLabel(Java.Lang.ICharSequence,Android.Views.InputMethods.ImeAction)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the IME action label previous set with <c><see cref="M:Android.Widget.TextView.SetImeActionLabel(Java.Lang.ICharSequence,Android.Views.InputMethods.ImeAction)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getImeActionLabel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Widget.TextView.SetImeActionLabel(Java.Lang.ICharSequence, Android.Views.InputMethods.ImeAction)" />
        <altmember cref="T:Android.Views.InputMethods.EditorInfo" />
      </Docs>
    </Member>
    <Member MemberName="ImeOptions">
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.ImeAction ImeOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.InputMethods.ImeAction ImeOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getImeOptions", "()I", "GetGetImeOptionsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setImeOptions", "(I)V", "GetSetImeOptions_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.ImeAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the type of the IME editor.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getImeOptions()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the type of the IME editor.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setImeOptions(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Change the editor type integer associated with the text view, which
 will be reported to an IME with <c><see cref="P:Android.Views.InputMethods.EditorInfo.ImeOptions" /></c> when it
 has focus.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.TextView.ImeOptions" />
        <altmember cref="T:Android.Views.InputMethods.EditorInfo" />
        <altmember cref="P:Android.Widget.TextView.ImeOptions" />
        <altmember cref="T:Android.Views.InputMethods.EditorInfo" />
      </Docs>
    </Member>
    <Member MemberName="IncludeFontPadding">
      <MemberSignature Language="C#" Value="public virtual bool IncludeFontPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeFontPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIncludeFontPadding", "()Z", "GetGetIncludeFontPaddingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the TextView includes extra top and bottom padding to make
 room for accents that go above the normal ascent and descent.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether the TextView includes extra top and bottom padding to make
 room for accents that go above the normal ascent and descent.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getIncludeFontPadding()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetIncludeFontPadding(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual Android.Text.InputTypes InputType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Text.InputTypes InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInputType", "()I", "GetGetInputTypeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setInputType", "(I)V", "GetSetInputType_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.InputTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the type of the editable content.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getInputType()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the type of the editable content.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setInputType(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the type of the content with a constant as defined for <c><see cref="P:Android.Views.InputMethods.EditorInfo.InputType" /></c>. This
 will take care of changing the key listener, by calling <c><see cref="P:Android.Widget.TextView.KeyListener" /></c>,
 to match the given content type.  If the given content type is <c><see cref="!:Android.Text.IInputType.TYPE_NULL" /></c>
 then a soft keyboard will not be displayed for this text view.

 Note that the maximum number of displayed lines (see <c><see cref="M:Android.Widget.TextView.SetMaxLines(System.Int32)" /></c>) will be
 modified if you change the <c><see cref="!:Android.Text.IInputType.TYPE_TEXT_FLAG_MULTI_LINE" /></c> flag of the input
 type.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.TextView.InputType" />
        <altmember cref="T:Android.Text.IInputType" />
        <altmember cref="P:Android.Widget.TextView.InputType" />
        <altmember cref="M:Android.Widget.TextView.SetRawInputType(Android.Text.InputTypes)" />
        <altmember cref="T:Android.Text.IInputType" />
      </Docs>
    </Member>
    <Member MemberName="IsCursorVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsCursorVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCursorVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isCursorVisible", "()Z", "GetIsCursorVisibleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#isCursorVisible()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetCursorVisible(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodTarget">
      <MemberSignature Language="C#" Value="public virtual bool IsInputMethodTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInputMethodTarget", "()Z", "GetIsInputMethodTargetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this text view is a current input method target.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether this text view is a current input method target.  The
 default implementation just checks with <c><see cref="T:Android.Views.InputMethods.InputMethodManager" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#isInputMethodTarget()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsSuggestionsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsSuggestionsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSuggestionsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSuggestionsEnabled", "()Z", "GetIsSuggestionsEnabledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether or not suggestions are enabled on this TextView.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return whether or not suggestions are enabled on this TextView. The suggestions are generated
 by the IME or by the spell checker as the user types. This is done by adding
 <c><see cref="T:Android.Text.Style.SuggestionSpan" /></c>s to the text.

 When suggestions are enabled (default), this list of suggestions will be displayed when the
 user asks for them on these parts of the text. This value depends on the inputType of this
 TextView.

 The class of the input type must be <c><see cref="F:Android.Text.InputTypes.ClassText" tool="ReplaceLinkValue" /></c>.

 In addition, the type variation must be one of
 <c><see cref="!:Android.Text.IInputType.TYPE_TEXT_VARIATION_NORMAL" /></c>,
 <c><see cref="!:Android.Text.IInputType.TYPE_TEXT_VARIATION_EMAIL_SUBJECT" /></c>,
 <c><see cref="!:Android.Text.IInputType.TYPE_TEXT_VARIATION_LONG_MESSAGE" /></c>,
 <c><see cref="!:Android.Text.IInputType.TYPE_TEXT_VARIATION_SHORT_MESSAGE" /></c> or
 <c><see cref="!:Android.Text.IInputType.TYPE_TEXT_VARIATION_WEB_EDIT_TEXT" /></c>.

 And finally, the <c><see cref="!:Android.Text.IInputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS" /></c> flag must <format type="text/html"><i>not</i></format> be set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#isSuggestionsEnabled()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="IsTextSelectable">
      <MemberSignature Language="C#" Value="public virtual bool IsTextSelectable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSelectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isTextSelectable", "()Z", "GetIsTextSelectableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the state of the <c>textIsSelectable</c> flag (See
 <c><see cref="M:Android.Widget.TextView.SetTextIsSelectable(System.Boolean)" /></c>).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the state of the <c>textIsSelectable</c> flag (See
 <c><see cref="M:Android.Widget.TextView.SetTextIsSelectable(System.Boolean)" /></c>). Although you have to set this flag
 to allow users to select and copy text in a non-editable TextView, the content of an
 <c><see cref="T:Android.Widget.EditText" /></c> can always be selected, independently of the value of this flag.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#isTextSelectable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="KeyListener">
      <MemberSignature Language="C#" Value="public Android.Text.Method.IKeyListener KeyListener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.Method.IKeyListener KeyListener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeyListener", "()Landroid/text/method/KeyListener;", "GetGetKeyListenerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setKeyListener", "(Landroid/text/method/KeyListener;)V", "GetSetKeyListener_Landroid_text_method_KeyListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Method.IKeyListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getKeyListener()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setKeyListener(android.text.method.KeyListener)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the key listener to be used with this TextView.  This can be null
 to disallow user input.  Note that this method has significant and
 subtle interactions with soft keyboards and other input method:
 see <c><see cref="P:Android.Text.Method.IKeyListener.InputType" /></c>
 for important details.  Calling this method will replace the current
 content type of the text view with the content type returned by the
 key listener.
 
 Be warned that if you want a TextView with a key listener or movement
 method not to be focusable, or if you want a TextView without a
 key listener or movement method to be focusable, you must call
 <c><see cref="P:Android.Views.View.Focusable" /></c> again after calling this to get the focusability
 back the way you want it.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public Android.Text.Layout Layout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.Layout Layout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLayout", "()Landroid/text/Layout;", "GetGetLayoutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLayout()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public virtual int Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Length() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("length", "()I", "GetLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the length, in characters, of the text managed by this TextView
</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the length, in characters, of the text managed by this TextView
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#length()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LetterSpacing">
      <MemberSignature Language="C#" Value="public virtual float LetterSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LetterSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLetterSpacing", "()F", "GetGetLetterSpacingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLetterSpacing", "(F)V", "GetSetLetterSpacing_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLetterSpacing()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setLetterSpacing(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets text letter-spacing.  The value is in 'EM' units.  Typical values
 for slight expansion will be around 0.05.  Negative values tighten text.</para>
        </remarks>
        <altmember cref="P:Android.Widget.TextView.LetterSpacing" />
        <altmember cref="P:Android.Graphics.Paint.LetterSpacing" />
        <altmember cref="P:Android.Widget.TextView.LetterSpacing" />
        <altmember cref="P:Android.Graphics.Paint.LetterSpacing" />
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public virtual int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineCount", "()I", "GetGetLineCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of lines of text, or 0 if the internal Layout has not
 been built.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the number of lines of text, or 0 if the internal Layout has not
 been built.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLineCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public virtual int LineHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineHeight", "()I", "GetGetLineHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLineHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LineSpacingExtra">
      <MemberSignature Language="C#" Value="public virtual float LineSpacingExtra { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LineSpacingExtra" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineSpacingExtra", "()F", "GetGetLineSpacingExtraHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line spacing extra space</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the line spacing extra space</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLineSpacingExtra()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetLineSpacing(System.Single, System.Single)" />
        <altmember cref="P:Android.Widget.TextView.LineSpacingMultiplier" />
      </Docs>
    </Member>
    <Member MemberName="LineSpacingMultiplier">
      <MemberSignature Language="C#" Value="public virtual float LineSpacingMultiplier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LineSpacingMultiplier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineSpacingMultiplier", "()F", "GetGetLineSpacingMultiplierHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line spacing multiplier</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the line spacing multiplier</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLineSpacingMultiplier()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetLineSpacing(System.Single, System.Single)" />
        <altmember cref="P:Android.Widget.TextView.LineSpacingExtra" />
      </Docs>
    </Member>
    <Member MemberName="LinksClickable">
      <MemberSignature Language="C#" Value="public bool LinksClickable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinksClickable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLinksClickable", "()Z", "GetGetLinksClickableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLinksClickable", "(Z)V", "GetSetLinksClickable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the movement method will automatically be set to
 <c><see cref="T:Android.Text.Method.LinkMovementMethod" /></c> if <c><see cref="P:Android.Widget.TextView.AutoLinkMask" /></c> has been
 set to nonzero and links are detected in <c><see cref="M:Android.Widget.TextView.SetText(System.Char[],System.Int32,System.Int32)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLinksClickable()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether the movement method will automatically be set to
 <c><see cref="T:Android.Text.Method.LinkMovementMethod" /></c> if <c><see cref="P:Android.Widget.TextView.AutoLinkMask" /></c> has been
 set to nonzero and links are detected in <c><see cref="M:Android.Widget.TextView.SetText(System.Char[],System.Int32,System.Int32)" /></c>.
 The default is true.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setLinksClickable(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the movement method will automatically be set to
 <c><see cref="T:Android.Text.Method.LinkMovementMethod" /></c> if <c><see cref="P:Android.Widget.TextView.AutoLinkMask" /></c> has been
 set to nonzero and links are detected in <c><see cref="M:Android.Widget.TextView.SetText(System.Char[],System.Int32,System.Int32)" /></c>.
 The default is true.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LinkTextColors">
      <MemberSignature Language="C#" Value="public Android.Content.Res.ColorStateList LinkTextColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.ColorStateList LinkTextColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLinkTextColors", "()Landroid/content/res/ColorStateList;", "GetGetLinkTextColorsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getLinkTextColors()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetLinkTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Widget.TextView.SetLinkTextColor(Android.Graphics.Color)" />
      </Docs>
    </Member>
    <Member MemberName="MarqueeRepeatLimit">
      <MemberSignature Language="C#" Value="public virtual int MarqueeRepeatLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarqueeRepeatLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMarqueeRepeatLimit", "()I", "GetGetMarqueeRepeatLimitHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of times the marquee animation is repeated.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the number of times the marquee animation is repeated. Only meaningful if the
 TextView has marquee enabled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMarqueeRepeatLimit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMarqueeRepeatLimit(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxEms">
      <MemberSignature Language="C#" Value="public virtual int MaxEms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxEms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxEms", "()I", "GetGetMaxEmsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMaxEms()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMaxEms(System.Int32)" />
        <altmember cref="M:Android.Widget.TextView.SetEms(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="public virtual int MaxHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxHeight", "()I", "GetGetMaxHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMaxHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMaxHeight(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public virtual int MaxLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxLines", "()I", "GetGetMaxLinesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMaxLines()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMaxLines(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public virtual int MaxWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxWidth", "()I", "GetGetMaxWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMaxWidth()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMaxWidth(System.Int32)" />
        <altmember cref="M:Android.Widget.TextView.SetWidth(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinEms">
      <MemberSignature Language="C#" Value="public virtual int MinEms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinEms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinEms", "()I", "GetGetMinEmsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMinEms()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMinEms(System.Int32)" />
        <altmember cref="M:Android.Widget.TextView.SetEms(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinHeight">
      <MemberSignature Language="C#" Value="public virtual int MinHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinHeight", "()I", "GetGetMinHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMinHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMinHeight(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public virtual int MinLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinLines", "()I", "GetGetMinLinesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMinLines()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMinLines(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public virtual int MinWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinWidth", "()I", "GetGetMinWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMinWidth()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetMinWidth(System.Int32)" />
        <altmember cref="M:Android.Widget.TextView.SetWidth(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MoveCursorToVisibleOffset">
      <MemberSignature Language="C#" Value="public virtual bool MoveCursorToVisibleOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveCursorToVisibleOffset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("moveCursorToVisibleOffset", "()Z", "GetMoveCursorToVisibleOffsetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Move the cursor, if needed, so that it is at an offset that is visible
 to the user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Move the cursor, if needed, so that it is at an offset that is visible
 to the user.  This will not move the cursor if it represents more than
 one character (a selection range).  This will only work if the
 TextView contains spannable text; otherwise it will do nothing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#moveCursorToVisibleOffset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="MovementMethod">
      <MemberSignature Language="C#" Value="public Android.Text.Method.IMovementMethod MovementMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.Method.IMovementMethod MovementMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMovementMethod", "()Landroid/text/method/MovementMethod;", "GetGetMovementMethodHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMovementMethod", "(Landroid/text/method/MovementMethod;)V", "GetSetMovementMethod_Landroid_text_method_MovementMethod_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Method.IMovementMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getMovementMethod()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMovementMethod(android.text.method.MovementMethod)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the movement method (arrow key handler) to be used for
 this TextView.  This can be null to disallow using the arrow keys
 to move the cursor or scroll the view.
 
 Be warned that if you want a TextView with a key listener or movement
 method not to be focusable, or if you want a TextView without a
 key listener or movement method to be focusable, you must call
 <c><see cref="P:Android.Views.View.Focusable" /></c> again after calling this to get the focusability
 back the way you want it.
</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnBeginBatchEdit">
      <MemberSignature Language="C#" Value="public virtual void OnBeginBatchEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBeginBatchEdit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBeginBatchEdit", "()V", "GetOnBeginBatchEditHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the framework in response to a request to begin a batch
 of edit operations through a call to link <c><see cref="M:Android.Widget.TextView.BeginBatchEdit" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by the framework in response to a request to begin a batch
 of edit operations through a call to link <c><see cref="M:Android.Widget.TextView.BeginBatchEdit" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onBeginBatchEdit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCommitCompletion">
      <MemberSignature Language="C#" Value="public virtual void OnCommitCompletion (Android.Views.InputMethods.CompletionInfo text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCommitCompletion(class Android.Views.InputMethods.CompletionInfo text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCommitCompletion", "(Landroid/view/inputmethod/CompletionInfo;)V", "GetOnCommitCompletion_Landroid_view_inputmethod_CompletionInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Views.InputMethods.CompletionInfo" />
      </Parameters>
      <Docs>
        <param name="text">The auto complete text the user has selected.
</param>
        <summary>Called by the framework in response to a text completion from
 the current input method, provided by it calling
 <c><see cref="!:Android.Views.InputMethods.InputConnection.commitCompletion(android.view.inputmethod.CompletionInfo)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by the framework in response to a text completion from
 the current input method, provided by it calling
 <c><see cref="!:Android.Views.InputMethods.InputConnection.commitCompletion(android.view.inputmethod.CompletionInfo)" /></c>.  The default implementation does
 nothing; text views that are supporting auto-completion should override
 this to do their desired behavior.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onCommitCompletion(android.view.inputmethod.CompletionInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCommitCorrection">
      <MemberSignature Language="C#" Value="public virtual void OnCommitCorrection (Android.Views.InputMethods.CorrectionInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCommitCorrection(class Android.Views.InputMethods.CorrectionInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCommitCorrection", "(Landroid/view/inputmethod/CorrectionInfo;)V", "GetOnCommitCorrection_Landroid_view_inputmethod_CorrectionInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Views.InputMethods.CorrectionInfo" />
      </Parameters>
      <Docs>
        <param name="info">The auto correct info about the text that was corrected.
</param>
        <summary>Called by the framework in response to a text auto-correction (such as fixing a typo using a
 a dictionnary) from the current input method, provided by it calling
 <c><see cref="!:Android.Views.InputMethods.InputConnection.commitCorrection(android.view.inputmethod.CorrectionInfo)" /></c> InputConnection.commitCorrection()}.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by the framework in response to a text auto-correction (such as fixing a typo using a
 a dictionnary) from the current input method, provided by it calling
 <c><see cref="!:Android.Views.InputMethods.InputConnection.commitCorrection(android.view.inputmethod.CorrectionInfo)" /></c> InputConnection.commitCorrection()}. The default
 implementation flashes the background of the corrected word to provide feedback to the user.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onCommitCorrection(android.view.inputmethod.CorrectionInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnEditorAction">
      <MemberSignature Language="C#" Value="public virtual void OnEditorAction (Android.Views.InputMethods.ImeAction actionCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEditorAction(valuetype Android.Views.InputMethods.ImeAction actionCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onEditorAction", "(I)V", "GetOnEditorAction_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionCode" Type="Android.Views.InputMethods.ImeAction">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actionCode">The code of the action being performed.</param>
        <summary>Called when an attached input method calls
 <c><see cref="M:Android.Views.InputMethods.BaseInputConnection.PerformEditorAction" tool="ReplaceLinkValue" /></c>
 for this text view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when an attached input method calls
 <c><see cref="M:Android.Views.InputMethods.BaseInputConnection.PerformEditorAction" tool="ReplaceLinkValue" /></c>
 for this text view.  The default implementation will call your action
 listener supplied to <c><see cref="M:Android.Widget.TextView.SetOnEditorActionListener(.IOnEditorActionListener)" /></c>, or perform
 a standard operation for <c><see cref="!:Android.Views.InputMethods.EditorInfo.IME_ACTION_NEXT" /></c>, <c><see cref="!:Android.Views.InputMethods.EditorInfo.IME_ACTION_PREVIOUS" /></c>, or <c><see cref="!:Android.Views.InputMethods.EditorInfo.IME_ACTION_DONE" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">For backwards compatibility, if no IME options have been set and the
 text view would not normally advance focus on enter, then
 the NEXT and DONE actions received here will be turned into an enter
 key down/up pair to go through the normal key handling.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onEditorAction(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Widget.TextView.SetOnEditorActionListener(.IOnEditorActionListener)" />
      </Docs>
    </Member>
    <Member MemberName="OnEndBatchEdit">
      <MemberSignature Language="C#" Value="public virtual void OnEndBatchEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEndBatchEdit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onEndBatchEdit", "()V", "GetOnEndBatchEditHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the framework in response to a request to end a batch
 of edit operations through a call to link <c><see cref="M:Android.Widget.TextView.EndBatchEdit" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by the framework in response to a request to end a batch
 of edit operations through a call to link <c><see cref="M:Android.Widget.TextView.EndBatchEdit" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onEndBatchEdit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnPreDraw">
      <MemberSignature Language="C#" Value="public virtual bool OnPreDraw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPreDraw() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPreDraw", "()Z", "GetOnPreDrawHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Callback method to be invoked when the view tree is about to be drawn.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Callback method to be invoked when the view tree is about to be drawn. At this point, all
 views in the tree have been measured and given a frame. Clients can use this to adjust
 their scroll bounds or even to request a new layout before drawing occurs.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onPreDraw()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnPrivateIMECommand">
      <MemberSignature Language="C#" Value="public virtual bool OnPrivateIMECommand (string action, Android.OS.Bundle data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPrivateIMECommand(string action, class Android.OS.Bundle data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPrivateIMECommand", "(Ljava/lang/String;Landroid/os/Bundle;)Z", "GetOnPrivateIMECommand_Ljava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="data" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">The action name of the command.</param>
        <param name="data">Any additional data for the command.  This may be null.</param>
        <summary>Called by the framework in response to a private command from the
 current method, provided by it calling
 <c><see cref="!:Android.Views.InputMethods.InputConnection.performPrivateCommand(java.lang.String,android.os.Bundle)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by the framework in response to a private command from the
 current method, provided by it calling
 <c><see cref="!:Android.Views.InputMethods.InputConnection.performPrivateCommand(java.lang.String,android.os.Bundle)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onPrivateIMECommand(java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnRestoreInstanceState">
      <MemberSignature Language="C#" Value="public virtual void OnRestoreInstanceState (Android.OS.IParcelable state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestoreInstanceState(class Android.OS.IParcelable state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.OS.IParcelable" />
      </Parameters>
      <Docs>
        <param name="state">The frozen state that had previously been returned by
        <c><see cref="M:Android.Widget.TextView.OnSaveInstanceState" /></c>.</param>
        <summary>Hook allowing a view to re-apply a representation of its internal state that had previously
 been generated by <c><see cref="M:Android.Views.View.OnSaveInstanceState" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Hook allowing a view to re-apply a representation of its internal state that had previously
 been generated by <c><see cref="M:Android.Views.View.OnSaveInstanceState" /></c>. This function will never be called with a
 null state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onRestoreInstanceState(android.os.Parcelable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSaveInstanceState">
      <MemberSignature Language="C#" Value="public virtual Android.OS.IParcelable OnSaveInstanceState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.IParcelable OnSaveInstanceState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hook allowing a view to generate a representation of its internal state
 that can later be used to create a new instance with that same state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Hook allowing a view to generate a representation of its internal state
 that can later be used to create a new instance with that same state.
 This state should only contain information that is not persistent or can
 not be reconstructed later. For example, you will never store your
 current position on screen because that will be computed again when a
 new instance of the view is placed in its view hierarchy.
 </para>
          <para tool="javadoc-to-mdoc">
 Some examples of things you may store here: the current cursor position
 in a text view (but usually not the text itself since that is stored in a
 content provider or other persistent storage), the currently selected
 item in a list view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onSaveInstanceState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (int selStart, int selEnd);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(int32 selStart, int32 selEnd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSelectionChanged", "(II)V", "GetOnSelectionChanged_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selStart" Type="System.Int32" />
        <Parameter Name="selEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selStart">The new selection start location.</param>
        <param name="selEnd">The new selection end location.
</param>
        <summary>This method is called when the selection has changed, in case any
 subclasses would like to know.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called when the selection has changed, in case any
 subclasses would like to know.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onSelectionChanged(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (Java.Lang.ICharSequence text, int start, int lengthBefore, int lengthAfter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class Java.Lang.ICharSequence text, int32 start, int32 lengthBefore, int32 lengthAfter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onTextChanged", "(Ljava/lang/CharSequence;III)V", "GetOnTextChanged_Ljava_lang_CharSequence_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="before" Type="System.Int32" />
        <Parameter Name="after" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text the TextView is displaying</param>
        <param name="start">The offset of the start of the range of the text that was
 modified</param>
        <param name="lengthBefore">The length of the former text that has been replaced</param>
        <param name="lengthAfter">The length of the replacement modified text
</param>
        <summary>This method is called when the text is changed, in case any subclasses
 would like to know.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called when the text is changed, in case any subclasses
 would like to know.

 Within <c>text</c>, the <c>lengthAfter</c> characters
 beginning at <c>start</c> have just replaced old text that had
 length <c>lengthBefore</c>. It is an error to attempt to make
 changes to <c>text</c> from this callback.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onTextChanged(java.lang.CharSequence, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected void OnTextChanged (string text, int start, int lengthBefore, int lengthAfter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnTextChanged(string text, int32 start, int32 lengthBefore, int32 lengthAfter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="before" Type="System.Int32" />
        <Parameter Name="after" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="lengthBefore">To be added.</param>
        <param name="lengthAfter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextContextMenuItem">
      <MemberSignature Language="C#" Value="public virtual bool OnTextContextMenuItem (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnTextContextMenuItem(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onTextContextMenuItem", "(I)Z", "GetOnTextContextMenuItem_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>Called when a context menu option for the text view is selected.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a context menu option for the text view is selected.  Currently
 this will be one of <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#selectAll" /></c>, <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#cut" /></c>,
 <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#copy" /></c>, <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#paste" /></c> or <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#shareText" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#onTextContextMenuItem(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public virtual Android.Text.TextPaint Paint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.TextPaint Paint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaint", "()Landroid/text/TextPaint;", "GetGetPaintHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.TextPaint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getPaint()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PaintFlags">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PaintFlags PaintFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.PaintFlags PaintFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaintFlags", "()I", "GetGetPaintFlagsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPaintFlags", "(I)V", "GetSetPaintFlags_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getPaintFlags()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setPaintFlags(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets flags on the Paint being used to display the text and
 reflows the text if they are different from the old flags.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Paint.Flags" />
        <altmember cref="P:Android.Graphics.Paint.Flags" />
      </Docs>
    </Member>
    <Member MemberName="PrivateImeOptions">
      <MemberSignature Language="C#" Value="public virtual string PrivateImeOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateImeOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPrivateImeOptions", "()Ljava/lang/String;", "GetGetPrivateImeOptionsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPrivateImeOptions", "(Ljava/lang/String;)V", "GetSetPrivateImeOptions_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the private type of the content.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getPrivateImeOptions()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the private type of the content.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setPrivateImeOptions(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the private content type of the text, which is the
 <c><see cref="P:Android.Views.InputMethods.EditorInfo.PrivateImeOptions" /></c>
 field that will be filled in when creating an input connection.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.TextView.PrivateImeOptions" />
        <altmember cref="P:Android.Views.InputMethods.EditorInfo.PrivateImeOptions" />
        <altmember cref="P:Android.Widget.TextView.PrivateImeOptions" />
        <altmember cref="P:Android.Views.InputMethods.EditorInfo.PrivateImeOptions" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTextChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveTextChangedListener (Android.Text.ITextWatcher watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTextChangedListener(class Android.Text.ITextWatcher watcher) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTextChangedListener", "(Landroid/text/TextWatcher;)V", "GetRemoveTextChangedListener_Landroid_text_TextWatcher_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="Android.Text.ITextWatcher" />
      </Parameters>
      <Docs>
        <param name="watcher">To be added.</param>
        <summary>Removes the specified TextWatcher from the list of those whose
 methods are called
 whenever this TextView's text changes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes the specified TextWatcher from the list of those whose
 methods are called
 whenever this TextView's text changes.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#removeTextChangedListener(android.text.TextWatcher)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetResolvedDrawables">
      <MemberSignature Language="C#" Value="protected virtual void ResetResolvedDrawables ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResetResolvedDrawables() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetResolvedDrawables", "()V", "GetResetResolvedDrawablesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetResolvedLayoutDirection">
      <MemberSignature Language="C#" Value="protected virtual void ResetResolvedLayoutDirection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResetResolvedLayoutDirection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetResolvedLayoutDirection", "()V", "GetResetResolvedLayoutDirectionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveDrawables">
      <MemberSignature Language="C#" Value="protected virtual void ResolveDrawables ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResolveDrawables() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveDrawables", "()V", "GetResolveDrawablesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveTextDirection">
      <MemberSignature Language="C#" Value="protected virtual void ResolveTextDirection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResolveTextDirection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveTextDirection", "()V", "GetResolveTextDirectionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public virtual int SelectionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSelectionEnd", "()I", "GetGetSelectionEndHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Convenience for <c><see cref="M:Android.Text.Selection.GetSelectionEnd(Java.Lang.ICharSequence)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for <c><see cref="M:Android.Text.Selection.GetSelectionEnd(Java.Lang.ICharSequence)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getSelectionEnd()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public virtual int SelectionStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSelectionStart", "()I", "GetGetSelectionStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Convenience for <c><see cref="M:Android.Text.Selection.GetSelectionStart(Java.Lang.ICharSequence)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for <c><see cref="M:Android.Text.Selection.GetSelectionStart(Java.Lang.ICharSequence)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getSelectionStart()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetAllCaps">
      <MemberSignature Language="C#" Value="public virtual void SetAllCaps (bool allCaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAllCaps(bool allCaps) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAllCaps", "(Z)V", "GetSetAllCaps_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allCaps" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allCaps">To be added.</param>
        <summary>Sets the properties of this field to transform input to ALL CAPS
 display.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the properties of this field to transform input to ALL CAPS
 display. This may use a "small caps" formatting if available.
 This setting will be ignored if this field is editable or selectable.

 This call replaces the current transformation method. Disabling this
 will not necessarily restore the previous behavior from before this
 was enabled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setAllCaps(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.TextView.TransformationMethod" />
      </Docs>
    </Member>
    <Member MemberName="SetCompoundDrawables">
      <MemberSignature Language="C#" Value="public virtual void SetCompoundDrawables (Android.Graphics.Drawables.Drawable left, Android.Graphics.Drawables.Drawable top, Android.Graphics.Drawables.Drawable right, Android.Graphics.Drawables.Drawable bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCompoundDrawables(class Android.Graphics.Drawables.Drawable left, class Android.Graphics.Drawables.Drawable top, class Android.Graphics.Drawables.Drawable right, class Android.Graphics.Drawables.Drawable bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCompoundDrawables", "(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "GetSetCompoundDrawables_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="top" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="right" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="bottom" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Sets the Drawables (if any) to appear to the left of, above, to the
 right of, and below the text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Drawables (if any) to appear to the left of, above, to the
 right of, and below the text. Use <c>null</c> if you do not want a
 Drawable there. The Drawables must already have had
 <c><see cref="P:Android.Graphics.Drawables.Drawable.Bounds" /></c> called.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method will overwrite any Drawables previously set using
 <c><see cref="M:Android.Widget.TextView.SetCompoundDrawablesRelative(Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable)" /></c> or related methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawables(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCompoundDrawablesRelative">
      <MemberSignature Language="C#" Value="public virtual void SetCompoundDrawablesRelative (Android.Graphics.Drawables.Drawable start, Android.Graphics.Drawables.Drawable top, Android.Graphics.Drawables.Drawable end, Android.Graphics.Drawables.Drawable bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCompoundDrawablesRelative(class Android.Graphics.Drawables.Drawable start, class Android.Graphics.Drawables.Drawable top, class Android.Graphics.Drawables.Drawable end, class Android.Graphics.Drawables.Drawable bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCompoundDrawablesRelative", "(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "GetSetCompoundDrawablesRelative_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="top" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="end" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="bottom" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="top">To be added.</param>
        <param name="end">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Sets the Drawables (if any) to appear to the start of, above, to the end
 of, and below the text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Drawables (if any) to appear to the start of, above, to the end
 of, and below the text. Use <c>null</c> if you do not want a Drawable
 there. The Drawables must already have had <c><see cref="P:Android.Graphics.Drawables.Drawable.Bounds" /></c>
 called.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method will overwrite any Drawables previously set using
 <c><see cref="M:Android.Widget.TextView.SetCompoundDrawables(Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable)" /></c> or related methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesRelative(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetCompoundDrawablesRelativeWithIntrinsicBounds">
      <MemberSignature Language="C#" Value="public virtual void SetCompoundDrawablesRelativeWithIntrinsicBounds (Android.Graphics.Drawables.Drawable start, Android.Graphics.Drawables.Drawable top, Android.Graphics.Drawables.Drawable end, Android.Graphics.Drawables.Drawable bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCompoundDrawablesRelativeWithIntrinsicBounds(class Android.Graphics.Drawables.Drawable start, class Android.Graphics.Drawables.Drawable top, class Android.Graphics.Drawables.Drawable end, class Android.Graphics.Drawables.Drawable bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCompoundDrawablesRelativeWithIntrinsicBounds", "(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "GetSetCompoundDrawablesRelativeWithIntrinsicBounds_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="top" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="end" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="bottom" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="top">To be added.</param>
        <param name="end">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Sets the Drawables (if any) to appear to the start of, above, to the end
 of, and below the text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Drawables (if any) to appear to the start of, above, to the end
 of, and below the text. Use <c>null</c> if you do not want a Drawable
 there. The Drawables' bounds will be set to their intrinsic bounds.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method will overwrite any Drawables previously set using
 <c><see cref="M:Android.Widget.TextView.SetCompoundDrawables(Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable)" /></c> or related methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetCompoundDrawablesRelativeWithIntrinsicBounds">
      <MemberSignature Language="C#" Value="public virtual void SetCompoundDrawablesRelativeWithIntrinsicBounds (int start, int top, int end, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCompoundDrawablesRelativeWithIntrinsicBounds(int32 start, int32 top, int32 end, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCompoundDrawablesRelativeWithIntrinsicBounds", "(IIII)V", "GetSetCompoundDrawablesRelativeWithIntrinsicBounds_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">Resource identifier of the start Drawable.</param>
        <param name="top">Resource identifier of the top Drawable.</param>
        <param name="end">Resource identifier of the end Drawable.</param>
        <param name="bottom">Resource identifier of the bottom Drawable.</param>
        <summary>Sets the Drawables (if any) to appear to the start of, above, to the end
 of, and below the text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Drawables (if any) to appear to the start of, above, to the end
 of, and below the text. Use 0 if you do not want a Drawable there. The
 Drawables' bounds will be set to their intrinsic bounds.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method will overwrite any Drawables previously set using
 <c><see cref="M:Android.Widget.TextView.SetCompoundDrawables(Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable)" /></c> or related methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetCompoundDrawablesWithIntrinsicBounds">
      <MemberSignature Language="C#" Value="public virtual void SetCompoundDrawablesWithIntrinsicBounds (Android.Graphics.Drawables.Drawable left, Android.Graphics.Drawables.Drawable top, Android.Graphics.Drawables.Drawable right, Android.Graphics.Drawables.Drawable bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCompoundDrawablesWithIntrinsicBounds(class Android.Graphics.Drawables.Drawable left, class Android.Graphics.Drawables.Drawable top, class Android.Graphics.Drawables.Drawable right, class Android.Graphics.Drawables.Drawable bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCompoundDrawablesWithIntrinsicBounds", "(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "GetSetCompoundDrawablesWithIntrinsicBounds_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="top" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="right" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="bottom" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Sets the Drawables (if any) to appear to the left of, above, to the
 right of, and below the text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Drawables (if any) to appear to the left of, above, to the
 right of, and below the text. Use <c>null</c> if you do not want a
 Drawable there. The Drawables' bounds will be set to their intrinsic
 bounds.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method will overwrite any Drawables previously set using
 <c><see cref="M:Android.Widget.TextView.SetCompoundDrawablesRelative(Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable)" /></c> or related methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCompoundDrawablesWithIntrinsicBounds">
      <MemberSignature Language="C#" Value="public virtual void SetCompoundDrawablesWithIntrinsicBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCompoundDrawablesWithIntrinsicBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCompoundDrawablesWithIntrinsicBounds", "(IIII)V", "GetSetCompoundDrawablesWithIntrinsicBounds_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">Resource identifier of the left Drawable.</param>
        <param name="top">Resource identifier of the top Drawable.</param>
        <param name="right">Resource identifier of the right Drawable.</param>
        <param name="bottom">Resource identifier of the bottom Drawable.</param>
        <summary>Sets the Drawables (if any) to appear to the left of, above, to the
 right of, and below the text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Drawables (if any) to appear to the left of, above, to the
 right of, and below the text. Use 0 if you do not want a Drawable there.
 The Drawables' bounds will be set to their intrinsic bounds.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method will overwrite any Drawables previously set using
 <c><see cref="M:Android.Widget.TextView.SetCompoundDrawablesRelative(Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable,Android.Graphics.Drawables.Drawable)" /></c> or related methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesWithIntrinsicBounds(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetCursorVisible">
      <MemberSignature Language="C#" Value="public virtual void SetCursorVisible (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCursorVisible(bool visible) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCursorVisible", "(Z)V", "GetSetCursorVisible_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">To be added.</param>
        <summary>Set whether the cursor is visible.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether the cursor is visible. The default is true. Note that this property only
 makes sense for editable TextView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setCursorVisible(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.TextView.IsCursorVisible" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableFactory">
      <MemberSignature Language="C#" Value="public void SetEditableFactory (Android.Text.EditableFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditableFactory(class Android.Text.EditableFactory factory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEditableFactory", "(Landroid/text/Editable$Factory;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Android.Text.EditableFactory" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>Sets the Factory used to create new Editables.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Factory used to create new Editables.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setEditableFactory(android.text.Editable.Factory)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetElegantTextHeight">
      <MemberSignature Language="C#" Value="public virtual void SetElegantTextHeight (bool elegant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElegantTextHeight(bool elegant) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setElegantTextHeight", "(Z)V", "GetSetElegantTextHeight_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elegant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elegant">set the paint's elegant metrics flag.</param>
        <summary>Set the TextView's elegant height metrics flag.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the TextView's elegant height metrics flag. This setting selects font
 variants that have not been compacted to fit Latin-based vertical
 metrics, and also increases top and bottom bounds to provide more space.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setElegantTextHeight(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEms">
      <MemberSignature Language="C#" Value="public virtual void SetEms (int ems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEms(int32 ems) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEms", "(I)V", "GetSetEms_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ems" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ems">To be added.</param>
        <summary>Makes the TextView exactly this many ems wide</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView exactly this many ems wide</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setEms(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetMaxEms(System.Int32)" />
        <altmember cref="M:Android.Widget.TextView.SetMinEms(System.Int32)" />
        <altmember cref="P:Android.Widget.TextView.MinEms" />
        <altmember cref="P:Android.Widget.TextView.MaxEms" />
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public virtual void SetError (Java.Lang.ICharSequence error, Android.Graphics.Drawables.Drawable icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetError(class Java.Lang.ICharSequence error, class Android.Graphics.Drawables.Drawable icon) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setError", "(Ljava/lang/CharSequence;Landroid/graphics/drawable/Drawable;)V", "GetSetError_Ljava_lang_CharSequence_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Java.Lang.ICharSequence" />
        <Parameter Name="icon" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="icon">To be added.</param>
        <summary>Sets the right-hand compound drawable of the TextView to the specified
 icon and sets an error message that will be displayed in a popup when
 the TextView has focus.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the right-hand compound drawable of the TextView to the specified
 icon and sets an error message that will be displayed in a popup when
 the TextView has focus.  The icon and error message will be reset to
 null when any key events cause changes to the TextView's text.  The
 drawable must already have had <c><see cref="P:Android.Graphics.Drawables.Drawable.Bounds" /></c> set on it.
 If the <c>error</c> is <c>null</c>, the error message will
 be cleared (and you should provide a <c>null</c> icon as well).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setError(java.lang.CharSequence, android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public void SetError (string error, Android.Graphics.Drawables.Drawable icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetError(string error, class Android.Graphics.Drawables.Drawable icon) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
        <Parameter Name="icon" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="icon">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExtractedText">
      <MemberSignature Language="C#" Value="public virtual void SetExtractedText (Android.Views.InputMethods.ExtractedText text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExtractedText(class Android.Views.InputMethods.ExtractedText text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExtractedText", "(Landroid/view/inputmethod/ExtractedText;)V", "GetSetExtractedText_Landroid_view_inputmethod_ExtractedText_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Views.InputMethods.ExtractedText" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>Apply to this text view the given extracted text, as previously
 returned by <c><see cref="M:Android.Widget.TextView.ExtractText(Android.Views.InputMethods.ExtractedTextRequest,Android.Views.InputMethods.ExtractedText)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Apply to this text view the given extracted text, as previously
 returned by <c><see cref="M:Android.Widget.TextView.ExtractText(Android.Views.InputMethods.ExtractedTextRequest,Android.Views.InputMethods.ExtractedText)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setExtractedText(android.view.inputmethod.ExtractedText)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetFilters">
      <MemberSignature Language="C#" Value="public virtual void SetFilters (Android.Text.IInputFilter[] filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFilters(class Android.Text.IInputFilter[] filters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFilters", "([Landroid/text/InputFilter;)V", "GetSetFilters_arrayLandroid_text_InputFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="Android.Text.IInputFilter[]" />
      </Parameters>
      <Docs>
        <param name="filters">To be added.</param>
        <summary>Sets the list of input filters that will be used if the buffer is
 Editable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the list of input filters that will be used if the buffer is
 Editable. Has no effect otherwise.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setFilters(android.text.InputFilter[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFrame">
      <MemberSignature Language="C#" Value="protected virtual bool SetFrame (int l, int t, int r, int b);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetFrame(int32 l, int32 t, int32 r, int32 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFrame", "(IIII)Z", "GetSetFrame_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="l">Left position, relative to parent</param>
        <param name="t">Top position, relative to parent</param>
        <param name="r">Right position, relative to parent</param>
        <param name="b">Bottom position, relative to parent</param>
        <summary>Assign a size and position to this view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Assign a size and position to this view.

 This is called from layout.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setFrame(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetHeight">
      <MemberSignature Language="C#" Value="public virtual void SetHeight (int pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHeight(int32 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHeight", "(I)V", "GetSetHeight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pixels">To be added.</param>
        <summary>Makes the TextView exactly this many pixels tall.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView exactly this many pixels tall.
 You could do the same thing by specifying this number in the
 LayoutParams.

 Note that setting this value overrides any other (minimum / maximum) number of lines or
 height setting.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setHeight(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetHighlightColor">
      <MemberSignature Language="C#" Value="public virtual void SetHighlightColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHighlightColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHighlightColor", "(I)V", "GetSetHighlightColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>Sets the color used to display the selection highlight.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the color used to display the selection highlight.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setHighlightColor(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetHint">
      <MemberSignature Language="C#" Value="public void SetHint (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHint(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHint", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">To be added.</param>
        <summary>Sets the text to be displayed when the text of the TextView is empty,
 from a resource.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text to be displayed when the text of the TextView is empty,
 from a resource.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setHint(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetHintTextColor">
      <MemberSignature Language="C#" Value="public void SetHintTextColor (Android.Content.Res.ColorStateList colors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHintTextColor(class Android.Content.Res.ColorStateList colors) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHintTextColor", "(Landroid/content/res/ColorStateList;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="Android.Content.Res.ColorStateList" />
      </Parameters>
      <Docs>
        <param name="colors">To be added.</param>
        <summary tool="true">Sets the color of the hint text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the color of the hint text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setHintTextColor(android.content.res.ColorStateList)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.TextView.HintTextColors" />
        <altmember cref="M:Android.Widget.TextView.SetHintTextColor(Android.Graphics.Color)" />
        <altmember cref="M:Android.Widget.TextView.SetTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Widget.TextView.SetLinkTextColor(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="SetHintTextColor">
      <MemberSignature Language="C#" Value="public void SetHintTextColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHintTextColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHintTextColor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>Sets the color of the hint text for all the states (disabled, focussed, selected...) of this
 TextView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the color of the hint text for all the states (disabled, focussed, selected...) of this
 TextView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setHintTextColor(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetHintTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="P:Android.Widget.TextView.HintTextColors" />
        <altmember cref="M:Android.Widget.TextView.SetTextColor(Android.Graphics.Color)" />
      </Docs>
    </Member>
    <Member MemberName="SetHorizontallyScrolling">
      <MemberSignature Language="C#" Value="public virtual void SetHorizontallyScrolling (bool whether);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHorizontallyScrolling(bool whether) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHorizontallyScrolling", "(Z)V", "GetSetHorizontallyScrolling_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whether" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="whether">To be added.</param>
        <summary>Sets whether the text should be allowed to be wider than the
 View is.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets whether the text should be allowed to be wider than the
 View is.  If false, it will be wrapped to the width of the View.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setHorizontallyScrolling(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetImeActionLabel">
      <MemberSignature Language="C#" Value="public virtual void SetImeActionLabel (Java.Lang.ICharSequence label, Android.Views.InputMethods.ImeAction actionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImeActionLabel(class Java.Lang.ICharSequence label, valuetype Android.Views.InputMethods.ImeAction actionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setImeActionLabel", "(Ljava/lang/CharSequence;I)V", "GetSetImeActionLabel_Ljava_lang_CharSequence_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="actionId" Type="Android.Views.InputMethods.ImeAction">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="actionId">To be added.</param>
        <summary>Change the custom IME action associated with the text view, which
 will be reported to an IME with <c><see cref="P:Android.Views.InputMethods.EditorInfo.ActionLabel" /></c>
 and <c><see cref="P:Android.Views.InputMethods.EditorInfo.ActionId" /></c> when it has focus.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Change the custom IME action associated with the text view, which
 will be reported to an IME with <c><see cref="P:Android.Views.InputMethods.EditorInfo.ActionLabel" /></c>
 and <c><see cref="P:Android.Views.InputMethods.EditorInfo.ActionId" /></c> when it has focus.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setImeActionLabel(java.lang.CharSequence, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.TextView.ImeActionLabelFormatted" />
        <altmember cref="P:Android.Widget.TextView.ImeActionId" />
        <altmember cref="T:Android.Views.InputMethods.EditorInfo" />
      </Docs>
    </Member>
    <Member MemberName="SetImeActionLabel">
      <MemberSignature Language="C#" Value="public void SetImeActionLabel (string label, Android.Views.InputMethods.ImeAction actionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImeActionLabel(string label, valuetype Android.Views.InputMethods.ImeAction actionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="actionId" Type="Android.Views.InputMethods.ImeAction">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="actionId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIncludeFontPadding">
      <MemberSignature Language="C#" Value="public virtual void SetIncludeFontPadding (bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIncludeFontPadding(bool includepad) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIncludeFontPadding", "(Z)V", "GetSetIncludeFontPadding_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includepad">To be added.</param>
        <summary>Set whether the TextView includes extra top and bottom padding to make
 room for accents that go above the normal ascent and descent.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether the TextView includes extra top and bottom padding to make
 room for accents that go above the normal ascent and descent.
 The default is true.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setIncludeFontPadding(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.TextView.IncludeFontPadding" />
      </Docs>
    </Member>
    <Member MemberName="SetInputExtras">
      <MemberSignature Language="C#" Value="public virtual void SetInputExtras (int xmlResId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInputExtras(int32 xmlResId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInputExtras", "(I)V", "GetSetInputExtras_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlResId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xmlResId">To be added.</param>
        <summary>Set the extra input data of the text, which is the
 <c><see cref="P:Android.Views.InputMethods.EditorInfo.Extras" /></c>
 Bundle that will be filled in when creating an input connection.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the extra input data of the text, which is the
 <c><see cref="P:Android.Views.InputMethods.EditorInfo.Extras" /></c>
 Bundle that will be filled in when creating an input connection.  The
 given integer is the resource ID of an XML resource holding an
 <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#InputExtras" /></c> XML tree.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setInputExtras(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.Widget.TextView.GetInputExtras(System.Boolean)" />
        <altmember cref="P:Android.Views.InputMethods.EditorInfo.Extras" />
      </Docs>
    </Member>
    <Member MemberName="SetLines">
      <MemberSignature Language="C#" Value="public virtual void SetLines (int lines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLines(int32 lines) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLines", "(I)V", "GetSetLines_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lines" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lines">To be added.</param>
        <summary>Makes the TextView exactly this many lines tall.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView exactly this many lines tall.

 Note that setting this value overrides any other (minimum / maximum) number of lines or
 height setting. A single line TextView will set this value to 1.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setLines(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetLineSpacing">
      <MemberSignature Language="C#" Value="public virtual void SetLineSpacing (float add, float mult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineSpacing(float32 add, float32 mult) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLineSpacing", "(FF)V", "GetSetLineSpacing_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="add" Type="System.Single" />
        <Parameter Name="mult" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="add">To be added.</param>
        <param name="mult">To be added.</param>
        <summary>Sets line spacing for this TextView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets line spacing for this TextView.  Each line will have its height
 multiplied by <c>mult</c> and have <c>add</c> added to it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setLineSpacing(float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetLinkTextColor">
      <MemberSignature Language="C#" Value="public void SetLinkTextColor (Android.Content.Res.ColorStateList colors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLinkTextColor(class Android.Content.Res.ColorStateList colors) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLinkTextColor", "(Landroid/content/res/ColorStateList;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="Android.Content.Res.ColorStateList" />
      </Parameters>
      <Docs>
        <param name="colors">To be added.</param>
        <summary>Sets the color of links in the text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the color of links in the text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setLinkTextColor(android.content.res.ColorStateList)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetLinkTextColor(Android.Graphics.Color)" />
        <altmember cref="P:Android.Widget.TextView.LinkTextColors" />
        <altmember cref="M:Android.Widget.TextView.SetTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Widget.TextView.SetHintTextColor(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="SetLinkTextColor">
      <MemberSignature Language="C#" Value="public void SetLinkTextColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLinkTextColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLinkTextColor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>Sets the color of links in the text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the color of links in the text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setLinkTextColor(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetLinkTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="P:Android.Widget.TextView.LinkTextColors" />
      </Docs>
    </Member>
    <Member MemberName="SetMarqueeRepeatLimit">
      <MemberSignature Language="C#" Value="public virtual void SetMarqueeRepeatLimit (int marqueeLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMarqueeRepeatLimit(int32 marqueeLimit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMarqueeRepeatLimit", "(I)V", "GetSetMarqueeRepeatLimit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="marqueeLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="marqueeLimit">To be added.</param>
        <summary>Sets how many times to repeat the marquee animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets how many times to repeat the marquee animation. Only applied if the
 TextView has marquee enabled. Set to -1 to repeat indefinitely.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMarqueeRepeatLimit(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Widget.TextView.MarqueeRepeatLimit" />
      </Docs>
    </Member>
    <Member MemberName="SetMaxEms">
      <MemberSignature Language="C#" Value="public virtual void SetMaxEms (int maxems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxEms(int32 maxems) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaxEms", "(I)V", "GetSetMaxEms_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxems" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxems">To be added.</param>
        <summary>Makes the TextView at most this many ems wide</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView at most this many ems wide</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMaxEms(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMaxHeight">
      <MemberSignature Language="C#" Value="public virtual void SetMaxHeight (int maxHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxHeight(int32 maxHeight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaxHeight", "(I)V", "GetSetMaxHeight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxHeight">To be added.</param>
        <summary>Makes the TextView at most this many pixels tall.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView at most this many pixels tall.  This option is mutually exclusive with the
 <c><see cref="M:Android.Widget.TextView.SetMaxLines(System.Int32)" /></c> method.

 Setting this value overrides any other (maximum) number of lines setting.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMaxHeight(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMaxLines">
      <MemberSignature Language="C#" Value="public virtual void SetMaxLines (int maxlines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxLines(int32 maxlines) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaxLines", "(I)V", "GetSetMaxLines_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxlines" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxlines">To be added.</param>
        <summary>Makes the TextView at most this many lines tall.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView at most this many lines tall.

 Setting this value overrides any other (maximum) height setting.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMaxLines(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMaxWidth">
      <MemberSignature Language="C#" Value="public virtual void SetMaxWidth (int maxpixels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxWidth(int32 maxpixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaxWidth", "(I)V", "GetSetMaxWidth_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxpixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxpixels">To be added.</param>
        <summary>Makes the TextView at most this many pixels wide</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView at most this many pixels wide</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMaxWidth(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMinEms">
      <MemberSignature Language="C#" Value="public virtual void SetMinEms (int minems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinEms(int32 minems) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMinEms", "(I)V", "GetSetMinEms_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minems" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minems">To be added.</param>
        <summary>Makes the TextView at least this many ems wide</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView at least this many ems wide</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMinEms(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMinHeight">
      <MemberSignature Language="C#" Value="public virtual void SetMinHeight (int minHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinHeight(int32 minHeight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMinHeight", "(I)V", "GetSetMinHeight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minHeight">To be added.</param>
        <summary>Makes the TextView at least this many pixels tall.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView at least this many pixels tall.

 Setting this value overrides any other (minimum) number of lines setting.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMinHeight(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMinLines">
      <MemberSignature Language="C#" Value="public virtual void SetMinLines (int minlines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinLines(int32 minlines) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMinLines", "(I)V", "GetSetMinLines_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minlines" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minlines">To be added.</param>
        <summary>Makes the TextView at least this many lines tall.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView at least this many lines tall.

 Setting this value overrides any other (minimum) height setting. A single line TextView will
 set this value to 1.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMinLines(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.TextView.MinLines" />
      </Docs>
    </Member>
    <Member MemberName="SetMinWidth">
      <MemberSignature Language="C#" Value="public virtual void SetMinWidth (int minpixels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinWidth(int32 minpixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMinWidth", "(I)V", "GetSetMinWidth_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minpixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minpixels">To be added.</param>
        <summary>Makes the TextView at least this many pixels wide</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView at least this many pixels wide</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setMinWidth(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnEditorActionListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnEditorActionListener (Android.Widget.TextView.IOnEditorActionListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnEditorActionListener(class Android.Widget.TextView/IOnEditorActionListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnEditorActionListener", "(Landroid/widget/TextView$OnEditorActionListener;)V", "GetSetOnEditorActionListener_Landroid_widget_TextView_OnEditorActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Widget.TextView+IOnEditorActionListener" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <summary>Set a special listener to be called when an action is performed
 on the text view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a special listener to be called when an action is performed
 on the text view.  This will be called when the enter key is pressed,
 or when an action supplied to the IME is selected by the user.  Setting
 this means that the normal hard key event will not insert a newline
 into the text view, even if it is multi-line; holding down the ALT
 modifier will, however, allow the user to insert a newline character.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPaddingRelative">
      <MemberSignature Language="C#" Value="public override void SetPaddingRelative (int start, int top, int end, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPaddingRelative(int32 start, int32 top, int32 end, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPaddingRelative", "(IIII)V", "GetSetPaddingRelative_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the start padding in pixels</param>
        <param name="top">the top padding in pixels</param>
        <param name="end">the end padding in pixels</param>
        <param name="bottom">the bottom padding in pixels
</param>
        <summary>Sets the relative padding.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the relative padding. The view may add on the space required to display
 the scrollbars, depending on the style and visibility of the scrollbars.
 So the values returned from <c><see cref="P:Android.Views.View.PaddingStart" /></c>, <c><see cref="P:Android.Views.View.PaddingTop" /></c>,
 <c><see cref="P:Android.Views.View.PaddingEnd" /></c> and <c><see cref="P:Android.Views.View.PaddingBottom" /></c> may be different
 from the values set in this call.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setPaddingRelative(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetRawInputType">
      <MemberSignature Language="C#" Value="public virtual void SetRawInputType (Android.Text.InputTypes type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRawInputType(valuetype Android.Text.InputTypes type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRawInputType", "(I)V", "GetSetRawInputType_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Text.InputTypes">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>Directly change the content type integer of the text view, without
 modifying any other state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Directly change the content type integer of the text view, without
 modifying any other state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setRawInputType(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Widget.TextView.InputType" />
        <altmember cref="T:Android.Text.IInputType" />
      </Docs>
    </Member>
    <Member MemberName="SetScroller">
      <MemberSignature Language="C#" Value="public virtual void SetScroller (Android.Widget.Scroller s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScroller(class Android.Widget.Scroller s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScroller", "(Landroid/widget/Scroller;)V", "GetSetScroller_Landroid_widget_Scroller_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Widget.Scroller" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setScroller(android.widget.Scroller)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectAllOnFocus">
      <MemberSignature Language="C#" Value="public virtual void SetSelectAllOnFocus (bool selectAllOnFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectAllOnFocus(bool selectAllOnFocus) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSelectAllOnFocus", "(Z)V", "GetSetSelectAllOnFocus_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAllOnFocus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAllOnFocus">To be added.</param>
        <summary>Set the TextView so that when it takes focus, all the text is
 selected.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the TextView so that when it takes focus, all the text is
 selected.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setSelectAllOnFocus(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetShadowLayer">
      <MemberSignature Language="C#" Value="public virtual void SetShadowLayer (float radius, float dx, float dy, Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShadowLayer(float32 radius, float32 dx, float32 dy, valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShadowLayer", "(FFFI)V", "GetSetShadowLayer_FFFIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="radius">To be added.</param>
        <param name="dx">To be added.</param>
        <param name="dy">To be added.</param>
        <param name="color">To be added.</param>
        <summary>Gives the text a shadow of the specified blur radius and color, the specified
 distance from its drawn position.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Gives the text a shadow of the specified blur radius and color, the specified
 distance from its drawn position.
 </para>
          <para tool="javadoc-to-mdoc">
 The text shadow produced does not interact with the properties on view
 that are responsible for real time shadows,
 <c><see cref="P:Android.Views.View.Elevation" /></c> and
 <c><see cref="P:Android.Views.View.TranslationZ" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setShadowLayer(float, float, float, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Paint.SetShadowLayer(System.Single, System.Single, System.Single, System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="SetSingleLine">
      <MemberSignature Language="C#" Value="public virtual void SetSingleLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSingleLine() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSingleLine", "()V", "GetSetSingleLineHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Sets the properties of this field (lines, horizontally scrolling,
 transformation method) to be for a single-line input.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the properties of this field (lines, horizontally scrolling,
 transformation method) to be for a single-line input.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setSingleLine()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSingleLine">
      <MemberSignature Language="C#" Value="public virtual void SetSingleLine (bool singleLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSingleLine(bool singleLine) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSingleLine", "(Z)V", "GetSetSingleLine_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singleLine" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="singleLine">To be added.</param>
        <summary>If true, sets the properties of this field (number of lines, horizontally scrolling,
 transformation method) to be for a single-line input; if false, restores these to the default
 conditions.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If true, sets the properties of this field (number of lines, horizontally scrolling,
 transformation method) to be for a single-line input; if false, restores these to the default
 conditions.

 Note that the default conditions are not necessarily those that were in effect prior this
 method, and you may want to reset these properties to your custom values.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setSingleLine(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSpannableFactory">
      <MemberSignature Language="C#" Value="public void SetSpannableFactory (Android.Text.SpannableFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpannableFactory(class Android.Text.SpannableFactory factory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSpannableFactory", "(Landroid/text/Spannable$Factory;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Android.Text.SpannableFactory" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>Sets the Factory used to create new Spannables.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Factory used to create new Spannables.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setSpannableFactory(android.text.Spannable.Factory)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setText", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setText(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (Java.Lang.ICharSequence text, Android.Widget.TextView.BufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(class Java.Lang.ICharSequence text, class Android.Widget.TextView/BufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setText", "(Ljava/lang/CharSequence;Landroid/widget/TextView$BufferType;)V", "GetSetText_Ljava_lang_CharSequence_Landroid_widget_TextView_BufferType_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="type" Type="Android.Widget.TextView+BufferType" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="type">To be added.</param>
        <summary>Sets the text that this TextView is to display (see
 <c><see cref="P:Android.Widget.TextView.TextFormatted" /></c>) and also sets whether it is stored
 in a styleable/spannable buffer and whether it is editable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text that this TextView is to display (see
 <c><see cref="P:Android.Widget.TextView.TextFormatted" /></c>) and also sets whether it is stored
 in a styleable/spannable buffer and whether it is editable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence, android.widget.TextView.BufferType)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (int resid, Android.Widget.TextView.BufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(int32 resid, class Android.Widget.TextView/BufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setText", "(ILandroid/widget/TextView$BufferType;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="type" Type="Android.Widget.TextView+BufferType" />
      </Parameters>
      <Docs>
        <param name="resid">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setText(int, android.widget.TextView.BufferType)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string text, Android.Widget.TextView.BufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string text, class Android.Widget.TextView/BufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="Android.Widget.TextView+BufferType" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (char[] text, int start, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(char[] text, int32 start, int32 len) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setText", "([CII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="len">To be added.</param>
        <summary>Sets the TextView to display the specified slice of the specified
 char array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the TextView to display the specified slice of the specified
 char array.  You must promise that you will not change the contents
 of the array except for right before another call to setText(),
 since the TextView has no way to know that the text
 has changed and that it needs to invalidate and re-layout.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setText(char[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTextAppearance">
      <MemberSignature Language="C#" Value="public virtual void SetTextAppearance (Android.Content.Context context, int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextAppearance(class Android.Content.Context context, int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextAppearance", "(Landroid/content/Context;I)V", "GetSetTextAppearance_Landroid_content_Context_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="resid">To be added.</param>
        <summary>Sets the text color, size, style, hint color, and highlight color
 from the specified TextAppearance resource.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text color, size, style, hint color, and highlight color
 from the specified TextAppearance resource.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextAppearance(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTextColor">
      <MemberSignature Language="C#" Value="public virtual void SetTextColor (Android.Content.Res.ColorStateList colors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextColor(class Android.Content.Res.ColorStateList colors) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetTextColor_Landroid_content_res_ColorStateList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="Android.Content.Res.ColorStateList" />
      </Parameters>
      <Docs>
        <param name="colors">To be added.</param>
        <summary tool="true">Sets the text color.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text color.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextColor(android.content.res.ColorStateList)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetTextColor(Android.Graphics.Color)" />
        <altmember cref="P:Android.Widget.TextView.TextColors" />
        <altmember cref="M:Android.Widget.TextView.SetHintTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Widget.TextView.SetLinkTextColor(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="SetTextColor">
      <MemberSignature Language="C#" Value="public virtual void SetTextColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextColor", "(I)V", "GetSetTextColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>Sets the text color for all the states (normal, selected,
 focused) to be this color.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text color for all the states (normal, selected,
 focused) to be this color.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextColor(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="P:Android.Widget.TextView.TextColors" />
      </Docs>
    </Member>
    <Member MemberName="SetTextIsSelectable">
      <MemberSignature Language="C#" Value="public virtual void SetTextIsSelectable (bool selectable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextIsSelectable(bool selectable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextIsSelectable", "(Z)V", "GetSetTextIsSelectable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectable">Whether the content of this TextView should be selectable.
</param>
        <summary>Sets whether the content of this view is selectable by the user.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets whether the content of this view is selectable by the user. The default is
 <c>false</c>, meaning that the content is not selectable.
 </para>
          <para tool="javadoc-to-mdoc">
 When you use a TextView to display a useful piece of information to the user (such as a
 contact's address), make it selectable, so that the user can select and copy its
 content. You can also use set the XML attribute
 <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#TextView_textIsSelectable" /></c> to "true".
 </para>
          <para tool="javadoc-to-mdoc">
 When you call this method to set the value of <c>textIsSelectable</c>, it sets
 the flags <c>focusable</c>, <c>focusableInTouchMode</c>, <c>clickable</c>,
 and <c>longClickable</c> to the same value. These flags correspond to the attributes
 <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#View_focusable" /></c>,
 <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#View_focusableInTouchMode" /></c>,
 <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#View_clickable" /></c>, and
 <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#View_longClickable" /></c>. To restore any of these
 flags to a state you had set previously, call one or more of the following methods:
 <c><see cref="P:Android.Views.View.Focusable" /></c>,
 <c><see cref="P:Android.Views.View.FocusableInTouchMode" /></c>,
 <c><see cref="P:Android.Views.View.Clickable" /></c> or
 <c><see cref="P:Android.Views.View.LongClickable" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextIsSelectable(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetTextKeepState">
      <MemberSignature Language="C#" Value="public void SetTextKeepState (Java.Lang.ICharSequence text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextKeepState(class Java.Lang.ICharSequence text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextKeepState", "(Ljava/lang/CharSequence;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">The new text to place in the text view.</param>
        <summary>Like <c><see cref="P:Android.Widget.TextView.TextFormatted" /></c>,
 except that the cursor position (if any) is retained in the new text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="P:Android.Widget.TextView.TextFormatted" /></c>,
 except that the cursor position (if any) is retained in the new text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextKeepState(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.TextView.TextFormatted" />
      </Docs>
    </Member>
    <Member MemberName="SetTextKeepState">
      <MemberSignature Language="C#" Value="public void SetTextKeepState (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextKeepState(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextKeepState">
      <MemberSignature Language="C#" Value="public void SetTextKeepState (Java.Lang.ICharSequence text, Android.Widget.TextView.BufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextKeepState(class Java.Lang.ICharSequence text, class Android.Widget.TextView/BufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextKeepState", "(Ljava/lang/CharSequence;Landroid/widget/TextView$BufferType;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="type" Type="Android.Widget.TextView+BufferType" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="type">To be added.</param>
        <summary>Like <c><see cref="M:Android.Widget.TextView.SetText(Java.Lang.ICharSequence,.BufferType)" /></c>,
 except that the cursor position (if any) is retained in the new text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.Widget.TextView.SetText(Java.Lang.ICharSequence,.BufferType)" /></c>,
 except that the cursor position (if any) is retained in the new text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextKeepState(java.lang.CharSequence, android.widget.TextView.BufferType)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetText(Java.Lang.ICharSequence, .BufferType)" />
      </Docs>
    </Member>
    <Member MemberName="SetTextKeepState">
      <MemberSignature Language="C#" Value="public void SetTextKeepState (string text, Android.Widget.TextView.BufferType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextKeepState(string text, class Android.Widget.TextView/BufferType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="Android.Widget.TextView+BufferType" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextSize">
      <MemberSignature Language="C#" Value="public virtual void SetTextSize (Android.Util.ComplexUnitType unit, float size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextSize(valuetype Android.Util.ComplexUnitType unit, float32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextSize", "(IF)V", "GetSetTextSize_IFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="Android.Util.ComplexUnitType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="size" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="unit">The desired dimension unit.</param>
        <param name="size">The desired size in the given units.</param>
        <summary>Set the default text size to a given unit and value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the default text size to a given unit and value.  See <c><see cref="T:Android.Util.TypedValue" /></c> for the possible dimension units.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextSize(int, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTypeface">
      <MemberSignature Language="C#" Value="public virtual void SetTypeface (Android.Graphics.Typeface tf, Android.Graphics.TypefaceStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTypeface(class Android.Graphics.Typeface tf, valuetype Android.Graphics.TypefaceStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTypeface", "(Landroid/graphics/Typeface;I)V", "GetSetTypeface_Landroid_graphics_Typeface_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tf" Type="Android.Graphics.Typeface" />
        <Parameter Name="style" Type="Android.Graphics.TypefaceStyle">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tf">To be added.</param>
        <param name="style">To be added.</param>
        <summary>Sets the typeface and style in which the text should be displayed,
 and turns on the fake bold and italic bits in the Paint if the
 Typeface that you provided does not have all the bits in the
 style that you specified.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the typeface and style in which the text should be displayed,
 and turns on the fake bold and italic bits in the Paint if the
 Typeface that you provided does not have all the bits in the
 style that you specified.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTypeface(android.graphics.Typeface, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWidth">
      <MemberSignature Language="C#" Value="public virtual void SetWidth (int pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWidth(int32 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWidth", "(I)V", "GetSetWidth_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pixels">To be added.</param>
        <summary>Makes the TextView exactly this many pixels wide.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Makes the TextView exactly this many pixels wide.
 You could do the same thing by specifying this number in the
 LayoutParams.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setWidth(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetMaxWidth(System.Int32)" />
        <altmember cref="M:Android.Widget.TextView.SetMinWidth(System.Int32)" />
        <altmember cref="P:Android.Widget.TextView.MinWidth" />
        <altmember cref="P:Android.Widget.TextView.MaxWidth" />
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color ShadowColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getShadowColor", "()I", "GetGetShadowColorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getShadowColor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetShadowLayer(System.Single, System.Single, System.Single, System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ShadowDx">
      <MemberSignature Language="C#" Value="public virtual float ShadowDx { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ShadowDx" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getShadowDx", "()F", "GetGetShadowDxHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getShadowDx()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetShadowLayer(System.Single, System.Single, System.Single, System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ShadowDy">
      <MemberSignature Language="C#" Value="public virtual float ShadowDy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ShadowDy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getShadowDy", "()F", "GetGetShadowDyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getShadowDy()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetShadowLayer(System.Single, System.Single, System.Single, System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ShadowRadius">
      <MemberSignature Language="C#" Value="public virtual float ShadowRadius { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ShadowRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getShadowRadius", "()F", "GetGetShadowRadiusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the radius of the shadow layer.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the radius of the shadow layer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getShadowRadius()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.TextView.SetShadowLayer(System.Single, System.Single, System.Single, System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ShowSoftInputOnFocus">
      <MemberSignature Language="C#" Value="public bool ShowSoftInputOnFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSoftInputOnFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getShowSoftInputOnFocus", "()Z", "GetGetShowSoftInputOnFocusHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setShowSoftInputOnFocus", "(Z)V", "GetSetShowSoftInputOnFocus_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the soft input method will be made visible when this
 TextView gets focused.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getShowSoftInputOnFocus()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether the soft input method will be made visible when this
 TextView gets focused. The default is true.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setShowSoftInputOnFocus(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the soft input method will be made visible when this
 TextView gets focused. The default is true.
</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Text.TextChangedEventArgs&gt; TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Text.TextChangedEventArgs&gt; TextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Text.TextChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextColors">
      <MemberSignature Language="C#" Value="public Android.Content.Res.ColorStateList TextColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.ColorStateList TextColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextColors", "()Landroid/content/res/ColorStateList;", "GetGetTextColorsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the text colors for the different states (normal, selected, focused) of the TextView.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the text colors for the different states (normal, selected, focused) of the TextView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTextColors()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TextView.SetTextColor(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Widget.TextView.SetTextColor(Android.Graphics.Color)" />
      </Docs>
    </Member>
    <Member MemberName="TextFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence TextFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence TextFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getText", "()Ljava/lang/CharSequence;", "GetGetTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setText", "(Ljava/lang/CharSequence;)V", "GetSetText_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the text the TextView is displaying.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getText()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the text the TextView is displaying. If setText() was called with
 an argument of BufferType.SPANNABLE or BufferType.EDITABLE, you can cast
 the return value from this method to Spannable or Editable, respectively.

 Note: The content of the return value should not be modified. If you want
 a modifiable one, you should make your own copy first.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the string value of the TextView. TextView <i>does not</i> accept
 HTML-like formatting, which you can do with text strings in XML resource files.
 To style your strings, attach android.text.style.* objects to a
 <c><see cref="T:Android.Text.SpannableString" /></c>, or see the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/available-resources.html#stringresources">
 Available Resource Types</a></format> documentation for an example of setting
 formatted text in the XML resource file.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextLocale">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Locale TextLocale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Locale TextLocale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextLocale", "()Ljava/util/Locale;", "GetGetTextLocaleHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextLocale", "(Ljava/util/Locale;)V", "GetSetTextLocale_Ljava_util_Locale_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the default <c><see cref="T:Java.Util.Locale" /></c> of the text in this TextView.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTextLocale()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the default <c><see cref="T:Java.Util.Locale" /></c> of the text in this TextView.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextLocale(java.util.Locale)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the default <c><see cref="T:Java.Util.Locale" /></c> of the text in this TextView to the given value. This value
 is used to choose appropriate typefaces for ambiguous characters. Typically used for CJK
 locales to disambiguate Hanzi/Kanji/Hanja characters.</para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Graphics.Paint.TextLocale" />
      </Docs>
    </Member>
    <Member MemberName="TextScaleX">
      <MemberSignature Language="C#" Value="public virtual float TextScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextScaleX", "()F", "GetGetTextScaleXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextScaleX", "(F)V", "GetSetTextScaleX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTextScaleX()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextScaleX(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the extent by which text should be stretched horizontally.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextSize">
      <MemberSignature Language="C#" Value="public virtual float TextSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextSize", "()F", "GetGetTextSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextSize", "(F)V", "GetSetTextSize_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTextSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTextSize(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the default text size to the given value, interpreted as "scaled
 pixel" units.  This size is adjusted based on the current density and
 user font size preference.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalPaddingBottom">
      <MemberSignature Language="C#" Value="public virtual int TotalPaddingBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalPaddingBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalPaddingBottom", "()I", "GetGetTotalPaddingBottomHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total bottom padding of the view, including the bottom
 Drawable if any, the extra space to keep more than maxLines
 from showing, and the vertical offset for gravity, if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total bottom padding of the view, including the bottom
 Drawable if any, the extra space to keep more than maxLines
 from showing, and the vertical offset for gravity, if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingBottom()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TotalPaddingEnd">
      <MemberSignature Language="C#" Value="public virtual int TotalPaddingEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalPaddingEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalPaddingEnd", "()I", "GetGetTotalPaddingEndHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total end padding of the view, including the end
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total end padding of the view, including the end
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingEnd()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TotalPaddingLeft">
      <MemberSignature Language="C#" Value="public virtual int TotalPaddingLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalPaddingLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalPaddingLeft", "()I", "GetGetTotalPaddingLeftHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total left padding of the view, including the left
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total left padding of the view, including the left
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingLeft()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TotalPaddingRight">
      <MemberSignature Language="C#" Value="public virtual int TotalPaddingRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalPaddingRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalPaddingRight", "()I", "GetGetTotalPaddingRightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total right padding of the view, including the right
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total right padding of the view, including the right
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingRight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TotalPaddingStart">
      <MemberSignature Language="C#" Value="public virtual int TotalPaddingStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalPaddingStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalPaddingStart", "()I", "GetGetTotalPaddingStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total start padding of the view, including the start
 Drawable if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total start padding of the view, including the start
 Drawable if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingStart()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TotalPaddingTop">
      <MemberSignature Language="C#" Value="public virtual int TotalPaddingTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalPaddingTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalPaddingTop", "()I", "GetGetTotalPaddingTopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total top padding of the view, including the top
 Drawable if any, the extra space to keep more than maxLines
 from showing, and the vertical offset for gravity, if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total top padding of the view, including the top
 Drawable if any, the extra space to keep more than maxLines
 from showing, and the vertical offset for gravity, if any.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingTop()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TransformationMethod">
      <MemberSignature Language="C#" Value="public Android.Text.Method.ITransformationMethod TransformationMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.Method.ITransformationMethod TransformationMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransformationMethod", "()Landroid/text/method/TransformationMethod;", "GetGetTransformationMethodHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTransformationMethod", "(Landroid/text/method/TransformationMethod;)V", "GetSetTransformationMethod_Landroid_text_method_TransformationMethod_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Method.ITransformationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTransformationMethod()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTransformationMethod(android.text.method.TransformationMethod)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the transformation that is applied to the text that this
 TextView is displaying.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Typeface">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Typeface Typeface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Typeface Typeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTypeface", "()Landroid/graphics/Typeface;", "GetGetTypefaceHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTypeface", "(Landroid/graphics/Typeface;)V", "GetSetTypeface_Landroid_graphics_Typeface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Typeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#getTypeface()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/TextView.html#setTypeface(android.graphics.Typeface)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the typeface and style in which the text should be displayed.
 Note that not all Typeface families actually have bold and italic
 variants, so you may need to use
 <c><see cref="M:Android.Widget.TextView.SetTypeface(Android.Graphics.Typeface,Android.Graphics.TypefaceStyle)" /></c> to get the appearance
 that you actually want.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.TextView.Typeface" />
        <altmember cref="P:Android.Widget.TextView.Typeface" />
      </Docs>
    </Member>
  </Members>
</Type>
