<Type Name="ExpandableListView+ExpandableListContextMenuInfo" FullName="Android.Widget.ExpandableListView+ExpandableListContextMenuInfo">
  <TypeSignature Language="C#" Value="public class ExpandableListView.ExpandableListContextMenuInfo : Java.Lang.Object, Android.Views.IContextMenuContextMenuInfo, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ExpandableListView/ExpandableListContextMenuInfo extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Views.IContextMenuContextMenuInfo, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.IContextMenuContextMenuInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/ExpandableListView$ExpandableListContextMenuInfo", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Extra menu information specific to an <c><see cref="T:Android.Widget.ExpandableListView" /></c> provided
 to the
 <c><see cref="M:Android.Views.View.IOnCreateContextMenuListener.OnCreateContextMenu(Android.Views.IContextMenu,Android.Views.View,Android.Views.View)" /></c>
 callback when a context menu is brought up for this AdapterView.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Extra menu information specific to an <c><see cref="T:Android.Widget.ExpandableListView" /></c> provided
 to the
 <c><see cref="M:Android.Views.View.IOnCreateContextMenuListener.OnCreateContextMenu(Android.Views.IContextMenu,Android.Views.View,Android.Views.View)" /></c>
 callback when a context menu is brought up for this AdapterView.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/ExpandableListView.ExpandableListContextMenuInfo.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpandableListContextMenuInfo (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandableListContextMenuInfo (Android.Views.View targetView, long packedPosition, long id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.View targetView, int64 packedPosition, int64 id) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/View;JJ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="targetView" Type="Android.Views.View" />
        <Parameter Name="packedPosition" Type="System.Int64" />
        <Parameter Name="id" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="targetView">To be added.</param>
        <param name="packedPosition">To be added.</param>
        <param name="id">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ExpandableListView.ExpandableListContextMenuInfo.html#ExpandableListView.ExpandableListContextMenuInfo(android.view.View, long, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public long Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The ID of the item (group or child) for which the context menu is
 being displayed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The ID of the item (group or child) for which the context menu is
 being displayed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ExpandableListView.ExpandableListContextMenuInfo.html#id" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PackedPosition">
      <MemberSignature Language="C#" Value="public long PackedPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PackedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("packedPosition")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The packed position in the list represented by the adapter for which
 the context menu is being displayed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The packed position in the list represented by the adapter for which
 the context menu is being displayed. Use the methods
 <c><see cref="M:Android.Widget.ExpandableListView.GetPackedPositionType(System.Int64)" /></c>,
 <c><see cref="M:Android.Widget.ExpandableListView.GetPackedPositionChild(System.Int64)" /></c>, and
 <c><see cref="M:Android.Widget.ExpandableListView.GetPackedPositionGroup(System.Int64)" /></c> to unpack this.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ExpandableListView.ExpandableListContextMenuInfo.html#packedPosition" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TargetView">
      <MemberSignature Language="C#" Value="public Android.Views.View TargetView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View TargetView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("targetView")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The view for which the context menu is being displayed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The view for which the context menu is being displayed. This
 will be one of the children Views of this <c><see cref="T:Android.Widget.ExpandableListView" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ExpandableListView.ExpandableListContextMenuInfo.html#targetView" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
