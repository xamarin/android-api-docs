<Type Name="SimpleAdapter" FullName="Android.Widget.SimpleAdapter">
  <TypeSignature Language="C#" Value="public class SimpleAdapter : Android.Widget.BaseAdapter, Android.Widget.IFilterable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleAdapter extends Android.Widget.BaseAdapter implements class Android.Runtime.IJavaObject, class Android.Widget.IFilterable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Widget.BaseAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Widget.IFilterable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/SimpleAdapter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An easy adapter to map static data to views defined in an XML file.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An easy adapter to map static data to views defined in an XML file. You can specify the data
 backing the list as an ArrayList of Maps. Each entry in the ArrayList corresponds to one row
 in the list. The Maps contain the data for each row. You also specify an XML file that
 defines the views used to display the row, and a mapping from keys in the Map to specific
 views.

 Binding data to views occurs in two phases. First, if a
 <c><see cref="!:NoType:android/widget/SimpleAdapter$ViewBinder;Href=../../../reference/android/widget/SimpleAdapter.ViewBinder.html" /></c> is available,
 <c><see cref="!:NoType:android/widget/SimpleAdapter$ViewBinder;Href=../../../reference/android/widget/SimpleAdapter.ViewBinder.html#setViewValue(android.view.View,java.lang.Object,java.lang.String)" /></c>
 is invoked. If the returned value is true, binding has occurred. 
 If the returned value is false, the following views are then tried in order:
 <list type="bullet"><item><term> A view that implements Checkable (e.g. CheckBox).  The expected bind value is a boolean.
 </term></item><item><term> TextView.  The expected bind value is a string and <c><see cref="M:Android.Widget.SimpleAdapter.SetViewText(Android.Widget.TextView,System.String)" /></c>
 is invoked.
 </term></item><item><term> ImageView. The expected bind value is a resource id or a string and
 <c><see cref="M:Android.Widget.SimpleAdapter.SetViewImage(Android.Widget.ImageView,System.Int32)" /></c> or <c><see cref="M:Android.Widget.SimpleAdapter.SetViewImage(Android.Widget.ImageView,System.String)" /></c> is invoked.
 </term></item></list>
 If no appropriate binding can be found, an <c><see cref="T:Java.Lang.IllegalStateException" /></c> is thrown.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimpleAdapter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleAdapter (Android.Content.Context context, System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; data, int resource, string[] from, int[] to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; data, int32 resource, string[] from, int32[] to) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Ljava/util/List;I[Ljava/lang/String;[I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="resource" Type="System.Int32" />
        <Parameter Name="from" Type="System.String[]" />
        <Parameter Name="to" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="data">To be added.</param>
        <param name="resource">To be added.</param>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCount", "()I", "GetGetCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>How many items are in the data set represented by this Adapter.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">How many items are in the data set represented by this Adapter.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#getCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual Android.Widget.Filter Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Widget.Filter Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFilter", "()Landroid/widget/Filter;", "GetGetFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.Filter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns a filter that can be used to constrain data with a filtering
 pattern.</para>
          <para tool="javadoc-to-mdoc">This method is usually implemented by <c><see cref="T:Android.Widget.Adapter" /></c>
 classes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#getFilter()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public override Java.Lang.Object GetItem (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object GetItem(int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getItem", "(I)Ljava/lang/Object;", "GetGetItem_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Position of the item whose data we want within the adapter's 
 data set.</param>
        <summary>Get the data item associated with the specified position in the data set.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the data item associated with the specified position in the data set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#getItem(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetItemId">
      <MemberSignature Language="C#" Value="public override long GetItemId (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetItemId(int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getItemId", "(I)J", "GetGetItemId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">The position of the item within the adapter's data set whose row id we want.</param>
        <summary>Get the row id associated with the specified position in the list.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the row id associated with the specified position in the list.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#getItemId(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public override Android.Views.View GetView (int position, Android.Views.View convertView, Android.Views.ViewGroup parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Views.View GetView(int32 position, class Android.Views.View convertView, class Android.Views.ViewGroup parent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getView", "(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;", "GetGetView_ILandroid_view_View_Landroid_view_ViewGroup_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="convertView" Type="Android.Views.View" />
        <Parameter Name="parent" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="position">The position of the item within the adapter's data set of the item whose view
        we want.</param>
        <param name="convertView">The old view to reuse, if possible. Note: You should check that this view
        is non-null and of an appropriate type before using. If it is not possible to convert
        this view to display the correct data, this method can create a new view.
        Heterogeneous lists can specify their number of view types, so that this View is
        always of the right type (see <c><see cref="!:Android.Widget.BaseAdapter`1.getViewTypeCount()" /></c> and
        <c><see cref="!:Android.Widget.BaseAdapter`1.getItemViewType(int)" /></c>).</param>
        <param name="parent">The parent that this view will eventually be attached to</param>
        <summary>Get a View that displays the data at the specified position in the data set.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a View that displays the data at the specified position in the data set. You can either
 create a View manually or inflate it from an XML layout file. When the View is inflated, the
 parent View (GridView, ListView...) will apply default layout parameters unless you use
 <c><see cref="M:Android.Views.LayoutInflater.Inflate(System.Int32,Android.Views.ViewGroup,Android.Views.ViewGroup)" /></c>
 to specify a root view and to prevent attachment to the root.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#getView(int, android.view.View, android.view.ViewGroup)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDropDownViewResource">
      <MemberSignature Language="C#" Value="public virtual void SetDropDownViewResource (int resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDropDownViewResource(int32 resource) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDropDownViewResource", "(I)V", "GetSetDropDownViewResource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resource">the layout resource defining the drop down views</param>
        <summary tool="true">
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Sets the layout resource to create the drop down views.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#setDropDownViewResource(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetViewImage">
      <MemberSignature Language="C#" Value="public virtual void SetViewImage (Android.Widget.ImageView v, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetViewImage(class Android.Widget.ImageView v, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setViewImage", "(Landroid/widget/ImageView;I)V", "GetSetViewImage_Landroid_widget_ImageView_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Widget.ImageView" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">ImageView to receive an image</param>
        <param name="value">the value retrieved from the data set</param>
        <summary>Called by bindView() to set the image for an ImageView but only if
 there is no existing ViewBinder or if the existing ViewBinder cannot
 handle binding to an ImageView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by bindView() to set the image for an ImageView but only if
 there is no existing ViewBinder or if the existing ViewBinder cannot
 handle binding to an ImageView.

 This method is called instead of <c><see cref="M:Android.Widget.SimpleAdapter.SetViewImage(Android.Widget.ImageView,System.String)" /></c>
 if the supplied data is an int or Integer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#setViewImage(android.widget.ImageView, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.SimpleAdapter.SetViewImage(Android.Widget.ImageView, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetViewImage">
      <MemberSignature Language="C#" Value="public virtual void SetViewImage (Android.Widget.ImageView v, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetViewImage(class Android.Widget.ImageView v, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setViewImage", "(Landroid/widget/ImageView;Ljava/lang/String;)V", "GetSetViewImage_Landroid_widget_ImageView_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Widget.ImageView" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="v">ImageView to receive an image</param>
        <param name="value">the value retrieved from the data set</param>
        <summary>Called by bindView() to set the image for an ImageView but only if
 there is no existing ViewBinder or if the existing ViewBinder cannot
 handle binding to an ImageView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by bindView() to set the image for an ImageView but only if
 there is no existing ViewBinder or if the existing ViewBinder cannot
 handle binding to an ImageView.

 By default, the value will be treated as an image resource. If the
 value cannot be used as an image resource, the value is used as an
 image Uri.

 This method is called instead of <c><see cref="M:Android.Widget.SimpleAdapter.SetViewImage(Android.Widget.ImageView,System.Int32)" /></c>
 if the supplied data is not an int or Integer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#setViewImage(android.widget.ImageView, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.SimpleAdapter.SetViewImage(Android.Widget.ImageView, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetViewText">
      <MemberSignature Language="C#" Value="public virtual void SetViewText (Android.Widget.TextView v, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetViewText(class Android.Widget.TextView v, string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setViewText", "(Landroid/widget/TextView;Ljava/lang/String;)V", "GetSetViewText_Landroid_widget_TextView_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Widget.TextView" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="v">TextView to receive text</param>
        <param name="text">the text to be set for the TextView
</param>
        <summary>Called by bindView() to set the text for a TextView but only if
 there is no existing ViewBinder or if the existing ViewBinder cannot
 handle binding to a TextView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by bindView() to set the text for a TextView but only if
 there is no existing ViewBinder or if the existing ViewBinder cannot
 handle binding to a TextView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#setViewText(android.widget.TextView, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewBinder">
      <MemberSignature Language="C#" Value="public virtual Android.Widget.SimpleAdapter.IViewBinder ViewBinder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Widget.SimpleAdapter/IViewBinder ViewBinder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getViewBinder", "()Landroid/widget/SimpleAdapter$ViewBinder;", "GetGetViewBinderHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setViewBinder", "(Landroid/widget/SimpleAdapter$ViewBinder;)V", "GetSetViewBinder_Landroid_widget_SimpleAdapter_ViewBinder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.SimpleAdapter+IViewBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c><see cref="!:NoType:android/widget/SimpleAdapter$ViewBinder;Href=../../../reference/android/widget/SimpleAdapter.ViewBinder.html" /></c> used to bind data to views.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#getViewBinder()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the <c><see cref="!:NoType:android/widget/SimpleAdapter$ViewBinder;Href=../../../reference/android/widget/SimpleAdapter.ViewBinder.html" /></c> used to bind data to views.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/SimpleAdapter.html#setViewBinder(android.widget.SimpleAdapter.ViewBinder)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the binder used to bind data to views.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.SimpleAdapter.ViewBinder" />
        <altmember cref="P:Android.Widget.SimpleAdapter.ViewBinder" />
      </Docs>
    </Member>
  </Members>
</Type>
