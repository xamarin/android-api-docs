<Type Name="ViewAnimator" FullName="Android.Widget.ViewAnimator">
  <TypeSignature Language="C#" Value="public class ViewAnimator : Android.Widget.FrameLayout" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ViewAnimator extends Android.Widget.FrameLayout" />
  <TypeSignature Language="DocId" Value="T:Android.Widget.ViewAnimator" />
  <TypeSignature Language="F#" Value="type ViewAnimator = class&#xA;    inherit FrameLayout" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Widget.FrameLayout</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/widget/ViewAnimator", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/widget/ViewAnimator", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Base class for a <c>FrameLayout</c> container that will perform animations
            when switching between its views.</summary>
    <remarks>
      <para>Base class for a <c>FrameLayout</c> container that will perform animations
            when switching between its views.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/widget/ViewAnimator" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewAnimator (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.ViewAnimator.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Widget.ViewAnimator : Android.Content.Context -&gt; Android.Widget.ViewAnimator" Usage="new Android.Widget.ViewAnimator context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewAnimator (Android.Content.Context? context, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.ViewAnimator.#ctor(Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="new Android.Widget.ViewAnimator : Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Widget.ViewAnimator" Usage="new Android.Widget.ViewAnimator (context, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewAnimator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.ViewAnimator.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Widget.ViewAnimator : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Widget.ViewAnimator" Usage="new Android.Widget.ViewAnimator (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateFirstView">
      <MemberSignature Language="C#" Value="public virtual bool AnimateFirstView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AnimateFirstView" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.ViewAnimator.AnimateFirstView" />
      <MemberSignature Language="F#" Value="member this.AnimateFirstView : bool" Usage="Android.Widget.ViewAnimator.AnimateFirstView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAnimateFirstView", "()Z", "GetGetAnimateFirstViewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAnimateFirstView", "()Z", "GetGetAnimateFirstViewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the current View should be animated the first time the ViewAnimator
            is displayed.</summary>
        <value>true if the current View will be animated the first time it is displayed,
            false otherwise.</value>
        <remarks>
          <para>Returns whether the current View should be animated the first time the ViewAnimator
            is displayed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#getAnimateFirstView()" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.getAnimateFirstView()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Widget.ViewAnimator.SetAnimateFirstView(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? CurrentView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View CurrentView" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.ViewAnimator.CurrentView" />
      <MemberSignature Language="F#" Value="member this.CurrentView : Android.Views.View" Usage="Android.Widget.ViewAnimator.CurrentView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentView", "()Landroid/view/View;", "GetGetCurrentViewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentView", "()Landroid/view/View;", "GetGetCurrentViewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the View corresponding to the currently displayed child.</summary>
        <value>The View currently displayed.</value>
        <remarks>
          <para>Returns the View corresponding to the currently displayed child.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#getCurrentView()" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.getCurrentView()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.ViewAnimator.DisplayedChild" />
      </Docs>
    </Member>
    <Member MemberName="DisplayedChild">
      <MemberSignature Language="C#" Value="public virtual int DisplayedChild { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisplayedChild" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.ViewAnimator.DisplayedChild" />
      <MemberSignature Language="F#" Value="member this.DisplayedChild : int with get, set" Usage="Android.Widget.ViewAnimator.DisplayedChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDisplayedChild", "()I", "GetGetDisplayedChildHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDisplayedChild", "()I", "GetGetDisplayedChildHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDisplayedChild", "(I)V", "GetSetDisplayedChild_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDisplayedChild", "(I)V", "GetSetDisplayedChild_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="whichChild">the index of the child view to display</param>
        <summary>Returns the index of the currently displayed child view. -or- Sets which child view will be displayed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the index of the currently displayed child view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#getDisplayedChild()" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.getDisplayedChild()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets which child view will be displayed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#setDisplayedChild(int)" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.setDisplayedChild(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InAnimation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.Animation? InAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.Animation InAnimation" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.ViewAnimator.InAnimation" />
      <MemberSignature Language="F#" Value="member this.InAnimation : Android.Views.Animations.Animation with get, set" Usage="Android.Widget.ViewAnimator.InAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInAnimation", "()Landroid/view/animation/Animation;", "GetGetInAnimationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInAnimation", "()Landroid/view/animation/Animation;", "GetGetInAnimationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setInAnimation", "(Landroid/view/animation/Animation;)V", "GetSetInAnimation_Landroid_view_animation_Animation_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setInAnimation", "(Landroid/view/animation/Animation;)V", "GetSetInAnimation_Landroid_view_animation_Animation_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="inAnimation">The animation started when a View enters the screen.</param>
        <summary>Returns the current animation used to animate a View that enters the screen. -or- Specifies the animation used to animate a View that enters the screen.</summary>
        <value>An Animation or null if none is set.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current animation used to animate a View that enters the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#getInAnimation()" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.getInAnimation()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specifies the animation used to animate a View that enters the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#setInAnimation(android.view.animation.Animation)" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.setInAnimation(android.view.animation.Animation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.ViewAnimator.InAnimation" />
        <altmember cref="M:Android.Widget.ViewAnimator.SetInAnimation(Android.Content.Context, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.ViewAnimator.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Widget.ViewAnimator.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutAnimation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.Animation? OutAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.Animation OutAnimation" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.ViewAnimator.OutAnimation" />
      <MemberSignature Language="F#" Value="member this.OutAnimation : Android.Views.Animations.Animation with get, set" Usage="Android.Widget.ViewAnimator.OutAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOutAnimation", "()Landroid/view/animation/Animation;", "GetGetOutAnimationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOutAnimation", "()Landroid/view/animation/Animation;", "GetGetOutAnimationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOutAnimation", "(Landroid/view/animation/Animation;)V", "GetSetOutAnimation_Landroid_view_animation_Animation_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOutAnimation", "(Landroid/view/animation/Animation;)V", "GetSetOutAnimation_Landroid_view_animation_Animation_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="outAnimation">The animation started when a View exit the screen.</param>
        <summary>Returns the current animation used to animate a View that exits the screen. -or- Specifies the animation used to animate a View that exit the screen.</summary>
        <value>An Animation or null if none is set.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current animation used to animate a View that exits the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#getOutAnimation()" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.getOutAnimation()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specifies the animation used to animate a View that exit the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#setOutAnimation(android.view.animation.Animation)" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.setOutAnimation(android.view.animation.Animation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.ViewAnimator.OutAnimation" />
        <altmember cref="M:Android.Widget.ViewAnimator.SetOutAnimation(Android.Content.Context, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetAnimateFirstView">
      <MemberSignature Language="C#" Value="public virtual void SetAnimateFirstView (bool animate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAnimateFirstView(bool animate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.ViewAnimator.SetAnimateFirstView(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAnimateFirstView : bool -&gt; unit&#xA;override this.SetAnimateFirstView : bool -&gt; unit" Usage="viewAnimator.SetAnimateFirstView animate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAnimateFirstView", "(Z)V", "GetSetAnimateFirstView_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAnimateFirstView", "(Z)V", "GetSetAnimateFirstView_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="animate">True to animate the current View the first time it is displayed,
                           false otherwise.</param>
        <summary>Indicates whether the current View should be animated the first time
            the ViewAnimator is displayed.</summary>
        <remarks>
          <para>Indicates whether the current View should be animated the first time
            the ViewAnimator is displayed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#setAnimateFirstView(boolean)" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.setAnimateFirstView(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetInAnimation">
      <MemberSignature Language="C#" Value="public virtual void SetInAnimation (Android.Content.Context? context, int resourceID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInAnimation(class Android.Content.Context context, int32 resourceID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.ViewAnimator.SetInAnimation(Android.Content.Context,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetInAnimation : Android.Content.Context * int -&gt; unit&#xA;override this.SetInAnimation : Android.Content.Context * int -&gt; unit" Usage="viewAnimator.SetInAnimation (context, resourceID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInAnimation", "(Landroid/content/Context;I)V", "GetSetInAnimation_Landroid_content_Context_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInAnimation", "(Landroid/content/Context;I)V", "GetSetInAnimation_Landroid_content_Context_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resourceID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">The application's environment.</param>
        <param name="resourceID">The resource id of the animation.</param>
        <summary>Specifies the animation used to animate a View that enters the screen.</summary>
        <remarks>
          <para>Specifies the animation used to animate a View that enters the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#setInAnimation(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.setInAnimation(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.ViewAnimator.InAnimation" />
      </Docs>
    </Member>
    <Member MemberName="SetOutAnimation">
      <MemberSignature Language="C#" Value="public virtual void SetOutAnimation (Android.Content.Context? context, int resourceID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutAnimation(class Android.Content.Context context, int32 resourceID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.ViewAnimator.SetOutAnimation(Android.Content.Context,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetOutAnimation : Android.Content.Context * int -&gt; unit&#xA;override this.SetOutAnimation : Android.Content.Context * int -&gt; unit" Usage="viewAnimator.SetOutAnimation (context, resourceID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutAnimation", "(Landroid/content/Context;I)V", "GetSetOutAnimation_Landroid_content_Context_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutAnimation", "(Landroid/content/Context;I)V", "GetSetOutAnimation_Landroid_content_Context_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resourceID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">The application's environment.</param>
        <param name="resourceID">The resource id of the animation.</param>
        <summary>Specifies the animation used to animate a View that exit the screen.</summary>
        <remarks>
          <para>Specifies the animation used to animate a View that exit the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#setOutAnimation(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.setOutAnimation(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Widget.ViewAnimator.OutAnimation" />
      </Docs>
    </Member>
    <Member MemberName="ShowNext">
      <MemberSignature Language="C#" Value="public virtual void ShowNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.ViewAnimator.ShowNext" />
      <MemberSignature Language="F#" Value="abstract member ShowNext : unit -&gt; unit&#xA;override this.ShowNext : unit -&gt; unit" Usage="viewAnimator.ShowNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showNext", "()V", "GetShowNextHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showNext", "()V", "GetShowNextHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Manually shows the next child.</summary>
        <remarks>
          <para>Manually shows the next child.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#showNext()" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.showNext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrevious">
      <MemberSignature Language="C#" Value="public virtual void ShowPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowPrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.ViewAnimator.ShowPrevious" />
      <MemberSignature Language="F#" Value="abstract member ShowPrevious : unit -&gt; unit&#xA;override this.ShowPrevious : unit -&gt; unit" Usage="viewAnimator.ShowPrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showPrevious", "()V", "GetShowPreviousHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showPrevious", "()V", "GetShowPreviousHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Manually shows the previous child.</summary>
        <remarks>
          <para>Manually shows the previous child.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/widget/ViewAnimator#showPrevious()" title="Reference documentation">Java documentation for <code>android.widget.ViewAnimator.showPrevious()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.ViewAnimator.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Widget.ViewAnimator.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.ViewAnimator.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Widget.ViewAnimator.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
