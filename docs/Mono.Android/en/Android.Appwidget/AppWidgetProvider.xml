<Type Name="AppWidgetProvider" FullName="Android.Appwidget.AppWidgetProvider">
  <TypeSignature Language="C#" Value="public class AppWidgetProvider : Android.Content.BroadcastReceiver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppWidgetProvider extends Android.Content.BroadcastReceiver" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.BroadcastReceiver</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/appwidget/AppWidgetProvider", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>A convenience class to aid in implementing an AppWidget provider.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A convenience class to aid in implementing an AppWidget provider.
 Everything you can do with AppWidgetProvider, you can do with a regular <c><see cref="T:Android.Content.BroadcastReceiver" /></c>.
 AppWidgetProvider merely parses the relevant fields out of the Intent that is received in
 <c><see cref="M:Android.Appwidget.AppWidgetProvider.OnReceive(Android.Content.Context,Android.Content.Intent)" /></c>, and calls hook methods
 with the received extras.

 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">Extend this class and override one or more of the <c><see cref="M:Android.Appwidget.AppWidgetProvider.OnUpdate(Android.Content.Context,Android.Appwidget.AppWidgetManager,Android.Appwidget.AppWidgetManager)" /></c>, <c><see cref="M:Android.Appwidget.AppWidgetProvider.OnDeleted(Android.Content.Context,System.Int32[])" /></c>,
 <c><see cref="M:Android.Appwidget.AppWidgetProvider.OnEnabled(Android.Content.Context)" /></c> or <c><see cref="M:Android.Appwidget.AppWidgetProvider.OnDisabled(Android.Content.Context)" /></c> methods to implement your own AppWidget functionality.
 </para>
      <para tool="javadoc-to-mdoc">For more information about how to write an app widget provider, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/appwidgets/index.html#AppWidgetProvider">App Widgets</a></format>
 developer guide.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppWidgetProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructor to initialize AppWidgetProvider.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructor to initialize AppWidgetProvider.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html#AppWidgetProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AppWidgetProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppWidgetOptionsChanged">
      <MemberSignature Language="C#" Value="public virtual void OnAppWidgetOptionsChanged (Android.Content.Context context, Android.Appwidget.AppWidgetManager appWidgetManager, int appWidgetId, Android.OS.Bundle newOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAppWidgetOptionsChanged(class Android.Content.Context context, class Android.Appwidget.AppWidgetManager appWidgetManager, int32 appWidgetId, class Android.OS.Bundle newOptions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAppWidgetOptionsChanged", "(Landroid/content/Context;Landroid/appwidget/AppWidgetManager;ILandroid/os/Bundle;)V", "GetOnAppWidgetOptionsChanged_Landroid_content_Context_Landroid_appwidget_AppWidgetManager_ILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="appWidgetManager" Type="Android.Appwidget.AppWidgetManager" />
        <Parameter Name="appWidgetId" Type="System.Int32" />
        <Parameter Name="newOptions" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="context">The <c><see cref="T:Android.Content.Context" /></c> in which this receiver is
                  running.</param>
        <param name="appWidgetManager">A <c><see cref="T:Android.Appwidget.AppWidgetManager" /></c> object you can call <c><see cref="M:Android.Appwidget.AppWidgetManager.UpdateAppWidget(Android.Content.ComponentName,Android.Widget.RemoteViews)" /></c> on.</param>
        <param name="appWidgetId">The appWidgetId of the widget whose size changed.</param>
        <param name="newOptions">The appWidgetId of the widget whose size changed.</param>
        <summary>Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetOptionsChanged" /></c>
 broadcast when this widget has been layed out at a new size.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetOptionsChanged" /></c>
 broadcast when this widget has been layed out at a new size.

 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html#onAppWidgetOptionsChanged(android.content.Context, android.appwidget.AppWidgetManager, int, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetOptionsChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="public virtual void OnDeleted (Android.Content.Context context, int[] appWidgetIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeleted(class Android.Content.Context context, int32[] appWidgetIds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDeleted", "(Landroid/content/Context;[I)V", "GetOnDeleted_Landroid_content_Context_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="appWidgetIds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="context">The <c><see cref="T:Android.Content.Context" /></c> in which this receiver is
                  running.</param>
        <param name="appWidgetIds">The appWidgetIds that have been deleted from their host.</param>
        <summary>Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetDeleted" /></c> broadcast when
 one or more AppWidget instances have been deleted.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetDeleted" /></c> broadcast when
 one or more AppWidget instances have been deleted.  Override this method to implement
 your own AppWidget functionality.

 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html#onDeleted(android.content.Context, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetDeleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDisabled">
      <MemberSignature Language="C#" Value="public virtual void OnDisabled (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDisabled(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDisabled", "(Landroid/content/Context;)V", "GetOnDisabled_Landroid_content_Context_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The <c><see cref="T:Android.Content.Context" /></c> in which this receiver is
                  running.</param>
        <summary>Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetDisabled" /></c> broadcast, which
 is sent when the last AppWidget instance for this provider is deleted.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetDisabled" /></c> broadcast, which
 is sent when the last AppWidget instance for this provider is deleted.  Override this method
 to implement your own AppWidget functionality.

 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html#onDisabled(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetDisabled" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabled">
      <MemberSignature Language="C#" Value="public virtual void OnEnabled (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEnabled(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onEnabled", "(Landroid/content/Context;)V", "GetOnEnabled_Landroid_content_Context_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The <c><see cref="T:Android.Content.Context" /></c> in which this receiver is
                  running.</param>
        <summary>Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetEnabled" /></c> broadcast when
 the a AppWidget for this provider is instantiated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetEnabled" /></c> broadcast when
 the a AppWidget for this provider is instantiated.  Override this method to implement your
 own AppWidget functionality.

 </para>
          <para tool="javadoc-to-mdoc">
 When the last AppWidget for this provider is deleted,
 <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetDisabled" /></c> is sent by the AppWidget manager, and
 <c><see cref="M:Android.Appwidget.AppWidgetProvider.OnDisabled(Android.Content.Context)" /></c> is called.  If after that, an AppWidget for this provider is created
 again, onEnabled() will be called again.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html#onEnabled(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetEnabled" />
      </Docs>
    </Member>
    <Member MemberName="OnReceive">
      <MemberSignature Language="C#" Value="public override void OnReceive (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnReceive(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The Context in which the receiver is running.</param>
        <param name="intent">The Intent being received.
</param>
        <summary>Implements <c><see cref="M:Android.Content.BroadcastReceiver.OnReceive(Android.Content.Context,Android.Content.Intent)" /></c> to dispatch calls to the various
 other methods on AppWidgetProvider.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Implements <c><see cref="M:Android.Content.BroadcastReceiver.OnReceive(Android.Content.Context,Android.Content.Intent)" /></c> to dispatch calls to the various
 other methods on AppWidgetProvider.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html#onReceive(android.content.Context, android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnRestored">
      <MemberSignature Language="C#" Value="public virtual void OnRestored (Android.Content.Context context, int[] oldWidgetIds, int[] newWidgetIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestored(class Android.Content.Context context, int32[] oldWidgetIds, int32[] newWidgetIds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRestored", "(Landroid/content/Context;[I[I)V", "GetOnRestored_Landroid_content_Context_arrayIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="oldWidgetIds" Type="System.Int32[]" />
        <Parameter Name="newWidgetIds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="oldWidgetIds">To be added.</param>
        <param name="newWidgetIds">To be added.</param>
        <summary>Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetRestored" /></c> broadcast
 when instances of this AppWidget provider have been restored from backup.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetRestored" /></c> broadcast
 when instances of this AppWidget provider have been restored from backup.  If your
 provider maintains any persistent data about its widget instances, override this method
 to remap the old AppWidgetIds to the new values and update any other app state that may
 be relevant.

 </para>
          <para tool="javadoc-to-mdoc">This callback will be followed immediately by a call to <c><see cref="M:Android.Appwidget.AppWidgetProvider.OnUpdate(Android.Content.Context,Android.Appwidget.AppWidgetManager,Android.Appwidget.AppWidgetManager)" /></c> so your
 provider can immediately generate new RemoteViews suitable for its newly-restored set
 of instances.

 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html#onRestored(android.content.Context, int[], int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdate">
      <MemberSignature Language="C#" Value="public virtual void OnUpdate (Android.Content.Context context, Android.Appwidget.AppWidgetManager appWidgetManager, int[] appWidgetIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUpdate(class Android.Content.Context context, class Android.Appwidget.AppWidgetManager appWidgetManager, int32[] appWidgetIds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onUpdate", "(Landroid/content/Context;Landroid/appwidget/AppWidgetManager;[I)V", "GetOnUpdate_Landroid_content_Context_Landroid_appwidget_AppWidgetManager_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="appWidgetManager" Type="Android.Appwidget.AppWidgetManager" />
        <Parameter Name="appWidgetIds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="context">The <c><see cref="T:Android.Content.Context" /></c> in which this receiver is
                  running.</param>
        <param name="appWidgetManager">A <c><see cref="T:Android.Appwidget.AppWidgetManager" /></c> object you can call <c><see cref="M:Android.Appwidget.AppWidgetManager.UpdateAppWidget(Android.Content.ComponentName,Android.Widget.RemoteViews)" /></c> on.</param>
        <param name="appWidgetIds">The appWidgetIds for which an update is needed.  Note that this
                  may be all of the AppWidget instances for this provider, or just
                  a subset of them.</param>
        <summary>Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetUpdate" /></c> and
 <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetRestored" /></c> broadcasts when this AppWidget
 provider is being asked to provide <c><see cref="T:Android.Widget.RemoteViews" /></c>
 for a set of AppWidgets.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called in response to the <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetUpdate" /></c> and
 <c><see cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetRestored" /></c> broadcasts when this AppWidget
 provider is being asked to provide <c><see cref="T:Android.Widget.RemoteViews" /></c>
 for a set of AppWidgets.  Override this method to implement your own AppWidget functionality.

 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetProvider.html#onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Appwidget.AppWidgetManager.ActionAppwidgetUpdate" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
