<Type Name="AppWidgetHost" FullName="Android.Appwidget.AppWidgetHost">
  <TypeSignature Language="C#" Value="public class AppWidgetHost : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppWidgetHost extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/appwidget/AppWidgetHost", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>AppWidgetHost provides the interaction with the AppWidget service for apps,
 like the home screen, that want to embed AppWidgets in their UI.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">AppWidgetHost provides the interaction with the AppWidget service for apps,
 like the home screen, that want to embed AppWidgets in their UI.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppWidgetHost (Android.Content.Context context, int hostId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, int32 hostId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="hostId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="hostId">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#AppWidgetHost(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AppWidgetHost (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateAppWidgetId">
      <MemberSignature Language="C#" Value="public virtual int AllocateAppWidgetId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AllocateAppWidgetId() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("allocateAppWidgetId", "()I", "GetAllocateAppWidgetIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a appWidgetId for a host in the calling process.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a appWidgetId for a host in the calling process.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#allocateAppWidgetId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ClearViews">
      <MemberSignature Language="C#" Value="protected virtual void ClearViews ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearViews() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearViews", "()V", "GetClearViewsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear the list of Views that have been created by this AppWidgetHost.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clear the list of Views that have been created by this AppWidgetHost.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#clearViews()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="public Android.Appwidget.AppWidgetHostView CreateView (Android.Content.Context context, int appWidgetId, Android.Appwidget.AppWidgetProviderInfo appWidget);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Appwidget.AppWidgetHostView CreateView(class Android.Content.Context context, int32 appWidgetId, class Android.Appwidget.AppWidgetProviderInfo appWidget) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createView", "(Landroid/content/Context;ILandroid/appwidget/AppWidgetProviderInfo;)Landroid/appwidget/AppWidgetHostView;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Appwidget.AppWidgetHostView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="appWidgetId" Type="System.Int32" />
        <Parameter Name="appWidget" Type="Android.Appwidget.AppWidgetProviderInfo" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="appWidgetId">To be added.</param>
        <param name="appWidget">To be added.</param>
        <summary>Create the AppWidgetHostView for the given widget.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create the AppWidgetHostView for the given widget.
 The AppWidgetHost retains a pointer to the newly-created View.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#createView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAllHosts">
      <MemberSignature Language="C#" Value="public static void DeleteAllHosts ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteAllHosts() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteAllHosts", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove all records about all hosts for your package.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove all records about all hosts for your package.
 <list type="bullet"><item><term>Call this when initializing your database, as it might be because of a data wipe.</term></item><item><term>Call this to have the AppWidget manager release all resources associated with your
   host.  Any future calls about this host will cause the records to be re-allocated.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#deleteAllHosts()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAppWidgetId">
      <MemberSignature Language="C#" Value="public virtual void DeleteAppWidgetId (int appWidgetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteAppWidgetId(int32 appWidgetId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteAppWidgetId", "(I)V", "GetDeleteAppWidgetId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appWidgetId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="appWidgetId">To be added.</param>
        <summary>Stop listening to changes for this AppWidget.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stop listening to changes for this AppWidget.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#deleteAppWidgetId(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DeleteHost">
      <MemberSignature Language="C#" Value="public virtual void DeleteHost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteHost() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteHost", "()V", "GetDeleteHostHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove all records about this host from the AppWidget manager.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove all records about this host from the AppWidget manager.
 <list type="bullet"><item><term>Call this when initializing your database, as it might be because of a data wipe.</term></item><item><term>Call this to have the AppWidget manager release all resources associated with your
   host.  Any future calls about this host will cause the records to be re-allocated.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#deleteHost()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="C#" Value="protected virtual Android.Appwidget.AppWidgetHostView OnCreateView (Android.Content.Context context, int appWidgetId, Android.Appwidget.AppWidgetProviderInfo appWidget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.Appwidget.AppWidgetHostView OnCreateView(class Android.Content.Context context, int32 appWidgetId, class Android.Appwidget.AppWidgetProviderInfo appWidget) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateView", "(Landroid/content/Context;ILandroid/appwidget/AppWidgetProviderInfo;)Landroid/appwidget/AppWidgetHostView;", "GetOnCreateView_Landroid_content_Context_ILandroid_appwidget_AppWidgetProviderInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Appwidget.AppWidgetHostView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="appWidgetId" Type="System.Int32" />
        <Parameter Name="appWidget" Type="Android.Appwidget.AppWidgetProviderInfo" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="appWidgetId">To be added.</param>
        <param name="appWidget">To be added.</param>
        <summary>Called to create the AppWidgetHostView.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to create the AppWidgetHostView.  Override to return a custom subclass if you
 need it.  </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#onCreateView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnProviderChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProviderChanged (int appWidgetId, Android.Appwidget.AppWidgetProviderInfo appWidget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProviderChanged(int32 appWidgetId, class Android.Appwidget.AppWidgetProviderInfo appWidget) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onProviderChanged", "(ILandroid/appwidget/AppWidgetProviderInfo;)V", "GetOnProviderChanged_ILandroid_appwidget_AppWidgetProviderInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appWidgetId" Type="System.Int32" />
        <Parameter Name="appWidget" Type="Android.Appwidget.AppWidgetProviderInfo" />
      </Parameters>
      <Docs>
        <param name="appWidgetId">To be added.</param>
        <param name="appWidget">To be added.</param>
        <summary>Called when the AppWidget provider for a AppWidget has been upgraded to a new apk.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the AppWidget provider for a AppWidget has been upgraded to a new apk.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#onProviderChanged(int, android.appwidget.AppWidgetProviderInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnProvidersChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProvidersChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProvidersChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onProvidersChanged", "()V", "GetOnProvidersChangedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Called when the set of available widgets changes (ie. widget containing packages
 are added, updated or removed, or widget components are enabled or disabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the set of available widgets changes (ie. widget containing packages
 are added, updated or removed, or widget components are enabled or disabled.)
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#onProvidersChanged()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="StartAppWidgetConfigureActivityForResult">
      <MemberSignature Language="C#" Value="public void StartAppWidgetConfigureActivityForResult (Android.App.Activity activity, int appWidgetId, Android.Content.ActivityFlags intentFlags, int requestCode, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartAppWidgetConfigureActivityForResult(class Android.App.Activity activity, int32 appWidgetId, valuetype Android.Content.ActivityFlags intentFlags, int32 requestCode, class Android.OS.Bundle options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startAppWidgetConfigureActivityForResult", "(Landroid/app/Activity;IIILandroid/os/Bundle;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="appWidgetId" Type="System.Int32" />
        <Parameter Name="intentFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="activity">The activity from which to start the configure one.</param>
        <param name="appWidgetId">The bound app widget whose provider's config activity to start.</param>
        <param name="intentFlags">Optional intent flags.</param>
        <param name="requestCode">Optional request code retuned with the result.</param>
        <param name="options">To be added.</param>
        <summary>Starts an app widget provider configure activity for result on behalf of the caller.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts an app widget provider configure activity for result on behalf of the caller.
 Use this method if the provider is in another profile as you are not allowed to start
 an activity in another profile. You can optionally provide a request code that is
 returned in <c><see cref="M:Android.App.Activity.OnActivityResult(System.Int32,Android.App.Result,Android.App.Result)" /></c> and
 an options bundle to be passed to the started activity.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that the provided app widget has to be bound for this method to work.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#startAppWidgetConfigureActivityForResult(android.app.Activity, int, int, int, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Android.Content.ActivityNotFoundException">If the activity is not found.</exception>
        <altmember cref="P:Android.Appwidget.AppWidgetProviderInfo.Profile" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public virtual void StartListening ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startListening", "()V", "GetStartListeningHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start receiving onAppWidgetChanged calls for your AppWidgets.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start receiving onAppWidgetChanged calls for your AppWidgets.  Call this when your activity
 becomes visible, i.e. from onStart() in your Activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#startListening()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public virtual void StopListening ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopListening", "()V", "GetStopListeningHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop receiving onAppWidgetChanged calls for your AppWidgets.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stop receiving onAppWidgetChanged calls for your AppWidgets.  Call this when your activity is
 no longer visible, i.e. from onStop() in your Activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/appwidget/AppWidgetHost.html#stopListening()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
