<Type Name="IPosixFileAttributeView" FullName="Java.Nio.FileNio.Attributes.IPosixFileAttributeView">
  <TypeSignature Language="VB.NET" Value="Public Interface IPosixFileAttributeView&#xA;Implements IBasicFileAttributeView, IDisposable, IFileOwnerAttributeView, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPosixFileAttributeView : IDisposable, Java::Interop::IJavaPeerable, Java::Nio::FileNio::Attributes::IBasicFileAttributeView, Java::Nio::FileNio::Attributes::IFileOwnerAttributeView" />
  <TypeSignature Language="C#" Value="public interface IPosixFileAttributeView : IDisposable, Java.Interop.IJavaPeerable, Java.Nio.FileNio.Attributes.IBasicFileAttributeView, Java.Nio.FileNio.Attributes.IFileOwnerAttributeView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPosixFileAttributeView implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Nio.FileNio.Attributes.IAttributeView, class Java.Nio.FileNio.Attributes.IBasicFileAttributeView, class Java.Nio.FileNio.Attributes.IFileAttributeView, class Java.Nio.FileNio.Attributes.IFileOwnerAttributeView, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.FileNio.Attributes.IPosixFileAttributeView" />
  <TypeSignature Language="F#" Value="type IPosixFileAttributeView = interface&#xA;    interface IBasicFileAttributeView&#xA;    interface IFileAttributeView&#xA;    interface IAttributeView&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IFileOwnerAttributeView" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.FileNio.Attributes.IAttributeView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.FileNio.Attributes.IBasicFileAttributeView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.FileNio.Attributes.IFileAttributeView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.FileNio.Attributes.IFileOwnerAttributeView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/file/attribute/PosixFileAttributeView", "", "Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker", ApiSince=26)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/file/attribute/PosixFileAttributeView", "", "Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker", ApiSince=26)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A file attribute view that provides a view of the file attributes commonly
            associated with files on file systems used by operating systems that implement
            the Portable Operating System Interface (POSIX) family of standards.</summary>
    <remarks>
      <para>A file attribute view that provides a view of the file attributes commonly
            associated with files on file systems used by operating systems that implement
            the Portable Operating System Interface (POSIX) family of standards.</para>
      <para>Operating systems that implement the <see href="http://www.opengroup.org">
            POSIX</see> family of standards commonly use file systems that have a
            file &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;group-owner&lt;/em&gt;, and related &lt;em&gt;access
            permissions&lt;/em&gt;. This file attribute view provides read and write access
            to these attributes.</para>
      <para>The <c>#readAttributes() readAttributes</c> method is used to read the
            file's attributes. The file <c>PosixFileAttributes#owner() owner</c> is
            represented by a <c>UserPrincipal</c> that is the identity of the file owner
            for the purposes of access control. The <c>PosixFileAttributes#group()
            group-owner</c>, represented by a <c>GroupPrincipal</c>, is the identity of the
            group owner, where a group is an identity created for administrative purposes
            so as to determine the access rights for the members of the group.</para>
      <para>The <c>PosixFileAttributes#permissions() permissions</c> attribute is a
            set of access permissions. This file attribute view provides access to the nine
            permission defined by the <c>PosixFilePermission</c> class.
            These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and
            &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others
            meaning identities other than the owner and members of the group). Some
            operating systems and file systems may provide additional permission bits
            but access to these other bits is not defined by this class in this release.</para>
      <para>&lt;b&gt;Usage Example:&lt;/b&gt;
            Suppose we need to print out the owner and access permissions of a file:</para>
      <code lang="text/java">Path file = ...
                PosixFileAttributes attrs = Files.getFileAttributeView(file, PosixFileAttributeView.class)
                    .readAttributes();
                System.out.format("%s %s%n",
                    attrs.owner().getName(),
                    PosixFilePermissions.toString(attrs.permissions()));
            </code>
      <para>&lt;h2&gt; Dynamic Access &lt;/h2&gt;</para>
      <para>Where dynamic access to file attributes is required, the attributes
            supported by this attribute view are as defined by <c>BasicFileAttributeView</c> and <c>FileOwnerAttributeView</c>, and in addition,
            the following attributes are supported:
            &lt;blockquote&gt;
            &lt;table class="striped"&gt;
            &lt;caption style="display:none"&gt;Supported attributes&lt;/caption&gt;
            &lt;thead&gt;
              &lt;tr&gt;
                &lt;th scope="col"&gt; Name &lt;/th&gt;
                &lt;th scope="col"&gt; Type &lt;/th&gt;
              &lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
             &lt;tr&gt;
                &lt;th scope="row"&gt; "permissions" &lt;/th&gt;
                &lt;td&gt; <c>Set</c>&amp;lt;<c>PosixFilePermission</c>&amp;gt; &lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;th scope="row"&gt; "group" &lt;/th&gt;
                &lt;td&gt; <c>GroupPrincipal</c>&lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;
            &lt;/blockquote&gt;</para>
      <para>The <c>Files#getAttribute getAttribute</c> method may be used to read
            any of these attributes, or any of the attributes defined by <c>BasicFileAttributeView</c> as if by invoking the <c>#readAttributes
            readAttributes()</c> method.</para>
      <para>The <c>Files#setAttribute setAttribute</c> method may be used to update
            the file's last modified time, last access time or create time attributes as
            defined by <c>BasicFileAttributeView</c>. It may also be used to update
            the permissions, owner, or group-owner as if by invoking the <c>#setPermissions setPermissions</c>, <c>#setOwner setOwner</c>, and <c>#setGroup setGroup</c> methods respectively.
            
            &lt;h2&gt; Setting Initial Permissions &lt;/h2&gt;</para>
      <para>Implementations supporting this attribute view may also support setting
            the initial permissions when creating a file or directory. The
            initial permissions are provided to the <c>Files#createFile createFile</c>
            or <c>Files#createDirectory createDirectory</c> methods as a <c>FileAttribute</c> with <c>FileAttribute#name name</c><c>"posix:permissions"</c>
            and a <c>FileAttribute#value value</c> that is the set of permissions. The
            following example uses the <c>PosixFilePermissions#asFileAttribute
            asFileAttribute</c> method to construct a <c>FileAttribute</c> when creating a
            file:</para>
      <code lang="text/java">Path path = ...
                Set&amp;lt;PosixFilePermission&amp;gt; perms =
                    EnumSet.of(OWNER_READ, OWNER_WRITE, OWNER_EXECUTE, GROUP_READ);
                Files.createFile(path, PosixFilePermissions.asFileAttribute(perms));
            </code>
      <para>When the access permissions are set at file creation time then the actual
            value of the permissions may differ that the value of the attribute object.
            The reasons for this are implementation specific. On UNIX systems, for
            example, a process has a &lt;em&gt;umask&lt;/em&gt; that impacts the permission bits
            of newly created files. Where an implementation supports the setting of
            the access permissions, and the underlying file system supports access
            permissions, then it is required that the value of the actual access
            permissions will be equal or less than the value of the attribute
            provided to the <c>Files#createFile createFile</c> or <c>Files#createDirectory createDirectory</c> methods. In other words, the file may
            be more secure than requested.</para>
      <para>Added in 1.7.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributeView" title="Reference documentation">Java documentation for <code>java.nio.file.attribute.PosixFileAttributeView</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="VB.NET" Value="Public Function Name () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Name();" />
      <MemberSignature Language="C#" Value="public string? Name ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Name() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Attributes.IPosixFileAttributeView.Name" />
      <MemberSignature Language="F#" Value="abstract member Name : unit -&gt; string" Usage="iPosixFileAttributeView.Name " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.FileNio.Attributes.IBasicFileAttributeView.Name</InterfaceMember>
        <InterfaceMember>M:Java.Nio.FileNio.Attributes.IFileOwnerAttributeView.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("name", "()Ljava/lang/String;", "GetNameHandler:Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("name", "()Ljava/lang/String;", "GetNameHandler:Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the name of the attribute view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the name of the attribute view. Attribute views of this type
            have the name <c>"posix"</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributeView#name()" title="Reference documentation">Java documentation for <code>java.nio.file.attribute.PosixFileAttributeView.name()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributes">
      <MemberSignature Language="VB.NET" Value="Public Function ReadAttributes () As IBasicFileAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::FileNio::Attributes::IBasicFileAttributes ^ ReadAttributes();" />
      <MemberSignature Language="C#" Value="public Java.Nio.FileNio.Attributes.IBasicFileAttributes? ReadAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.Attributes.IBasicFileAttributes ReadAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Attributes.IPosixFileAttributeView.ReadAttributes" />
      <MemberSignature Language="F#" Value="abstract member ReadAttributes : unit -&gt; Java.Nio.FileNio.Attributes.IBasicFileAttributes" Usage="iPosixFileAttributeView.ReadAttributes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.FileNio.Attributes.IBasicFileAttributeView.ReadAttributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readAttributes", "()Ljava/nio/file/attribute/PosixFileAttributes;", "GetReadAttributesHandler:Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readAttributes", "()Ljava/nio/file/attribute/PosixFileAttributes;", "GetReadAttributesHandler:Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.Attributes.IBasicFileAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributeView#readAttributes()" title="Reference documentation">Java documentation for <code>java.nio.file.attribute.PosixFileAttributeView.readAttributes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGroup">
      <MemberSignature Language="VB.NET" Value="Public Sub SetGroup (group As IGroupPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGroup(Java::Nio::FileNio::Attributes::IGroupPrincipal ^ group);" />
      <MemberSignature Language="C#" Value="public void SetGroup (Java.Nio.FileNio.Attributes.IGroupPrincipal? group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGroup(class Java.Nio.FileNio.Attributes.IGroupPrincipal group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Attributes.IPosixFileAttributeView.SetGroup(Java.Nio.FileNio.Attributes.IGroupPrincipal)" />
      <MemberSignature Language="F#" Value="abstract member SetGroup : Java.Nio.FileNio.Attributes.IGroupPrincipal -&gt; unit" Usage="iPosixFileAttributeView.SetGroup group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setGroup", "(Ljava/nio/file/attribute/GroupPrincipal;)V", "GetSetGroup_Ljava_nio_file_attribute_GroupPrincipal_Handler:Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setGroup", "(Ljava/nio/file/attribute/GroupPrincipal;)V", "GetSetGroup_Ljava_nio_file_attribute_GroupPrincipal_Handler:Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="Java.Nio.FileNio.Attributes.IGroupPrincipal" />
      </Parameters>
      <Docs>
        <param name="group">the new file group-owner</param>
        <summary>Updates the file group-owner.</summary>
        <remarks>
          <para>Updates the file group-owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributeView#setGroup(java.nio.file.attribute.GroupPrincipal)" title="Reference documentation">Java documentation for <code>java.nio.file.attribute.PosixFileAttributeView.setGroup(java.nio.file.attribute.GroupPrincipal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (perms As ICollection(Of PosixFilePermission))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Collections::Generic::ICollection&lt;Java::Nio::FileNio::Attributes::PosixFilePermission ^&gt; ^ perms);" />
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.Attributes.PosixFilePermission&gt;? perms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPermissions(class System.Collections.Generic.ICollection`1&lt;class Java.Nio.FileNio.Attributes.PosixFilePermission&gt; perms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Attributes.IPosixFileAttributeView.SetPermissions(System.Collections.Generic.ICollection{Java.Nio.FileNio.Attributes.PosixFilePermission})" />
      <MemberSignature Language="F#" Value="abstract member SetPermissions : System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.Attributes.PosixFilePermission&gt; -&gt; unit" Usage="iPosixFileAttributeView.SetPermissions perms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPermissions", "(Ljava/util/Set;)V", "GetSetPermissions_Ljava_util_Set_Handler:Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPermissions", "(Ljava/util/Set;)V", "GetSetPermissions_Ljava_util_Set_Handler:Java.Nio.FileNio.Attributes.IPosixFileAttributeViewInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perms" Type="System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.Attributes.PosixFilePermission&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="perms">the new set of permissions</param>
        <summary>Updates the file permissions.</summary>
        <remarks>
          <para>Updates the file permissions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/attribute/PosixFileAttributeView#setPermissions(java.util.Set%3Cjava.nio.file.attribute.PosixFilePermission%3E)" title="Reference documentation">Java documentation for <code>java.nio.file.attribute.PosixFileAttributeView.setPermissions(java.util.Set&lt;java.nio.file.attribute.PosixFilePermission&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
