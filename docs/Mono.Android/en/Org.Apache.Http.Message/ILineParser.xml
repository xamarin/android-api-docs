<Type Name="ILineParser" FullName="Org.Apache.Http.Message.ILineParser">
  <TypeSignature Language="C#" Value="public interface ILineParser : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILineParser implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/message/LineParser", "", "Org.Apache.Http.Message.ILineParserInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Interface for parsing lines in the HEAD section of an HTTP message.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Interface for parsing lines in the HEAD section of an HTTP message.
 There are individual methods for parsing a request line, a
 status line, or a header line.
 The lines to parse are passed in memory, the parser does not depend
 on any specific IO mechanism.
 Instances of this interface are expected to be stateless and thread-safe.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/message/LineParser.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="HasProtocolVersion">
      <MemberSignature Language="C#" Value="public bool HasProtocolVersion (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasProtocolVersion(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasProtocolVersion", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Z", "GetHasProtocolVersion_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler:Org.Apache.Http.Message.ILineParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the line to inspect</param>
        <param name="cursor">the cursor at which to check for a protocol version, or
                  negative for "end of line". Whether the check tolerates
                  whitespace before or after the protocol version is
                  implementation dependent.</param>
        <summary>Checks whether there likely is a protocol version in a line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether there likely is a protocol version in a line.
 This method implements a <format type="text/html"><i>heuristic</i></format> to check for a
 likely protocol version specification. It does <format type="text/html"><i>not</i></format>
 guarantee that <c><see cref="M:Org.Apache.Http.Message.ILineParser.ParseProtocolVersion(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.Message.ParserCursor)" /></c> would not
 detect a parse error.
 This can be used to detect garbage lines before a request
 or status line.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/LineParser.html#hasProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseHeader">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IHeader ParseHeader (Org.Apache.Http.Util.CharArrayBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IHeader ParseHeader(class Org.Apache.Http.Util.CharArrayBuffer buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseHeader", "(Lorg/apache/http/util/CharArrayBuffer;)Lorg/apache/http/Header;", "GetParseHeader_Lorg_apache_http_util_CharArrayBuffer_Handler:Org.Apache.Http.Message.ILineParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the full header line.
                  This buffer MUST NOT be re-used afterwards, since
                  the returned object may reference the contents later.</param>
        <summary>Creates a header from a line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a header from a line.
 The full header line is expected here. Header continuation lines
 must be joined by the caller before invoking this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/LineParser.html#parseHeader(org.apache.http.util.CharArrayBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException">in case of a parse error
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseProtocolVersion">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.ProtocolVersion ParseProtocolVersion (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.ProtocolVersion ParseProtocolVersion(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseProtocolVersion", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/ProtocolVersion;", "GetParseProtocolVersion_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler:Org.Apache.Http.Message.ILineParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.ProtocolVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the protocol version to parse</param>
        <param name="cursor">the parser cursor containing the current position and 
                  the bounds within the buffer for the parsing operation</param>
        <summary>Parses the textual representation of a protocol version.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses the textual representation of a protocol version.
 This is needed for parsing request lines (last element)
 as well as status lines (first element).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/LineParser.html#parseProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException">in case of a parse error
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseRequestLine">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IRequestLine ParseRequestLine (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IRequestLine ParseRequestLine(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseRequestLine", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/RequestLine;", "GetParseRequestLine_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler:Org.Apache.Http.Message.ILineParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IRequestLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the line to parse</param>
        <param name="cursor">the parser cursor containing the current position and 
                  the bounds within the buffer for the parsing operation</param>
        <summary>Parses a request line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses a request line.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/LineParser.html#parseRequestLine(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException">in case of a parse error
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseStatusLine">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IStatusLine ParseStatusLine (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IStatusLine ParseStatusLine(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseStatusLine", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/StatusLine;", "GetParseStatusLine_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler:Org.Apache.Http.Message.ILineParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IStatusLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the line to parse</param>
        <param name="cursor">the parser cursor containing the current position and 
                  the bounds within the buffer for the parsing operation</param>
        <summary>Parses a status line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses a status line.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/LineParser.html#parseStatusLine(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException">in case of a parse error
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
