<Type Name="BasicHeaderValueFormatter" FullName="Org.Apache.Http.Message.BasicHeaderValueFormatter">
  <TypeSignature Language="C#" Value="public class BasicHeaderValueFormatter : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Org.Apache.Http.Message.IHeaderValueFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BasicHeaderValueFormatter extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.Apache.Http.Message.IHeaderValueFormatter, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Apache.Http.Message.BasicHeaderValueFormatter" />
  <TypeSignature Language="F#" Value="type BasicHeaderValueFormatter = class&#xA;    inherit Object&#xA;    interface IHeaderValueFormatter&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Apache.Http.Message.IHeaderValueFormatter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/message/BasicHeaderValueFormatter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This class is obsoleted in this android platform")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Basic implementation for formatting header value elements.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/apache/http/message/BasicHeaderValueFormatter" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHeaderValueFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicHeaderValueFormatter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Org.Apache.Http.Message.BasicHeaderValueFormatter : nativeint * Android.Runtime.JniHandleOwnership -&gt; Org.Apache.Http.Message.BasicHeaderValueFormatter" Usage="new Org.Apache.Http.Message.BasicHeaderValueFormatter (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Message.BasicHeaderValueFormatter Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Org.Apache.Http.Message.BasicHeaderValueFormatter Default" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Message.BasicHeaderValueFormatter.Default" />
      <MemberSignature Language="F#" Value="member this.Default : Org.Apache.Http.Message.BasicHeaderValueFormatter" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFAULT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Message.BasicHeaderValueFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A default instance of this class, for use as default or fallback.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoFormatValue">
      <MemberSignature Language="C#" Value="protected virtual void DoFormatValue (Org.Apache.Http.Util.CharArrayBuffer buffer, string value, bool quote);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DoFormatValue(class Org.Apache.Http.Util.CharArrayBuffer buffer, string value, bool quote) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.DoFormatValue(Org.Apache.Http.Util.CharArrayBuffer,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DoFormatValue : Org.Apache.Http.Util.CharArrayBuffer * string * bool -&gt; unit&#xA;override this.DoFormatValue : Org.Apache.Http.Util.CharArrayBuffer * string * bool -&gt; unit" Usage="basicHeaderValueFormatter.DoFormatValue (buffer, value, quote)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFormatValue", "(Lorg/apache/http/util/CharArrayBuffer;Ljava/lang/String;Z)V", "GetDoFormatValue_Lorg_apache_http_util_CharArrayBuffer_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="quote" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">the buffer to append to, never <c>null</c></param>
        <param name="value">the value to append, never <c>null</c></param>
        <param name="quote">
          <c>true</c> to always format with quotes,
                  <c>false</c> to use quotes only when necessary
</param>
        <summary>Actually formats the value of a name-value pair.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EstimateElementsLen">
      <MemberSignature Language="C#" Value="protected virtual int EstimateElementsLen (Org.Apache.Http.IHeaderElement[] elems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EstimateElementsLen(class Org.Apache.Http.IHeaderElement[] elems) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.EstimateElementsLen(Org.Apache.Http.IHeaderElement[])" />
      <MemberSignature Language="F#" Value="abstract member EstimateElementsLen : Org.Apache.Http.IHeaderElement[] -&gt; int&#xA;override this.EstimateElementsLen : Org.Apache.Http.IHeaderElement[] -&gt; int" Usage="basicHeaderValueFormatter.EstimateElementsLen elems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("estimateElementsLen", "([Lorg/apache/http/HeaderElement;)I", "GetEstimateElementsLen_arrayLorg_apache_http_HeaderElement_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elems" Type="Org.Apache.Http.IHeaderElement[]" />
      </Parameters>
      <Docs>
        <param name="elems">the header elements to format, or <c>null</c></param>
        <summary>Estimates the length of formatted header elements.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EstimateHeaderElementLen">
      <MemberSignature Language="C#" Value="protected virtual int EstimateHeaderElementLen (Org.Apache.Http.IHeaderElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EstimateHeaderElementLen(class Org.Apache.Http.IHeaderElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.EstimateHeaderElementLen(Org.Apache.Http.IHeaderElement)" />
      <MemberSignature Language="F#" Value="abstract member EstimateHeaderElementLen : Org.Apache.Http.IHeaderElement -&gt; int&#xA;override this.EstimateHeaderElementLen : Org.Apache.Http.IHeaderElement -&gt; int" Usage="basicHeaderValueFormatter.EstimateHeaderElementLen elem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("estimateHeaderElementLen", "(Lorg/apache/http/HeaderElement;)I", "GetEstimateHeaderElementLen_Lorg_apache_http_HeaderElement_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="Org.Apache.Http.IHeaderElement" />
      </Parameters>
      <Docs>
        <param name="elem">the header element to format, or <c>null</c></param>
        <summary>Estimates the length of a formatted header element.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EstimateNameValuePairLen">
      <MemberSignature Language="C#" Value="protected virtual int EstimateNameValuePairLen (Org.Apache.Http.INameValuePair nvp);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EstimateNameValuePairLen(class Org.Apache.Http.INameValuePair nvp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.EstimateNameValuePairLen(Org.Apache.Http.INameValuePair)" />
      <MemberSignature Language="F#" Value="abstract member EstimateNameValuePairLen : Org.Apache.Http.INameValuePair -&gt; int&#xA;override this.EstimateNameValuePairLen : Org.Apache.Http.INameValuePair -&gt; int" Usage="basicHeaderValueFormatter.EstimateNameValuePairLen nvp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("estimateNameValuePairLen", "(Lorg/apache/http/NameValuePair;)I", "GetEstimateNameValuePairLen_Lorg_apache_http_NameValuePair_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nvp" Type="Org.Apache.Http.INameValuePair" />
      </Parameters>
      <Docs>
        <param name="nvp">the name-value pair to format, or <c>null</c></param>
        <summary>Estimates the length of a formatted name-value pair.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EstimateParametersLen">
      <MemberSignature Language="C#" Value="protected virtual int EstimateParametersLen (Org.Apache.Http.INameValuePair[] nvps);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EstimateParametersLen(class Org.Apache.Http.INameValuePair[] nvps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.EstimateParametersLen(Org.Apache.Http.INameValuePair[])" />
      <MemberSignature Language="F#" Value="abstract member EstimateParametersLen : Org.Apache.Http.INameValuePair[] -&gt; int&#xA;override this.EstimateParametersLen : Org.Apache.Http.INameValuePair[] -&gt; int" Usage="basicHeaderValueFormatter.EstimateParametersLen nvps" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("estimateParametersLen", "([Lorg/apache/http/NameValuePair;)I", "GetEstimateParametersLen_arrayLorg_apache_http_NameValuePair_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nvps" Type="Org.Apache.Http.INameValuePair[]" />
      </Parameters>
      <Docs>
        <param name="nvps">the parameters to format, or <c>null</c></param>
        <summary>Estimates the length of formatted parameters.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FormatElements">
      <MemberSignature Language="C#" Value="public static string FormatElements (Org.Apache.Http.IHeaderElement[] elems, bool quote, Org.Apache.Http.Message.IHeaderValueFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatElements(class Org.Apache.Http.IHeaderElement[] elems, bool quote, class Org.Apache.Http.Message.IHeaderValueFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatElements(Org.Apache.Http.IHeaderElement[],System.Boolean,Org.Apache.Http.Message.IHeaderValueFormatter)" />
      <MemberSignature Language="F#" Value="static member FormatElements : Org.Apache.Http.IHeaderElement[] * bool * Org.Apache.Http.Message.IHeaderValueFormatter -&gt; string" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatElements (elems, quote, formatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatElements", "([Lorg/apache/http/HeaderElement;ZLorg/apache/http/message/HeaderValueFormatter;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elems" Type="Org.Apache.Http.IHeaderElement[]" />
        <Parameter Name="quote" Type="System.Boolean" />
        <Parameter Name="formatter" Type="Org.Apache.Http.Message.IHeaderValueFormatter" />
      </Parameters>
      <Docs>
        <param name="elems">the header elements to format</param>
        <param name="quote">
          <c>true</c> to always format with quoted values,
                  <c>false</c> to use quotes only when necessary</param>
        <param name="formatter">the formatter to use, or <c>null</c>
                          for the <see cref="P:Org.Apache.Http.Message.BasicHeaderValueFormatter.Default" /></param>
        <summary>Formats an array of header elements.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FormatElements">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.Util.CharArrayBuffer FormatElements (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.IHeaderElement[] elems, bool quote);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.Util.CharArrayBuffer FormatElements(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.IHeaderElement[] elems, bool quote) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatElements(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.IHeaderElement[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member FormatElements : Org.Apache.Http.Util.CharArrayBuffer * Org.Apache.Http.IHeaderElement[] * bool -&gt; Org.Apache.Http.Util.CharArrayBuffer&#xA;override this.FormatElements : Org.Apache.Http.Util.CharArrayBuffer * Org.Apache.Http.IHeaderElement[] * bool -&gt; Org.Apache.Http.Util.CharArrayBuffer" Usage="basicHeaderValueFormatter.FormatElements (buffer, elems, quote)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatElements", "(Lorg/apache/http/util/CharArrayBuffer;[Lorg/apache/http/HeaderElement;Z)Lorg/apache/http/util/CharArrayBuffer;", "GetFormatElements_Lorg_apache_http_util_CharArrayBuffer_arrayLorg_apache_http_HeaderElement_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Util.CharArrayBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="elems" Type="Org.Apache.Http.IHeaderElement[]" />
        <Parameter Name="quote" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">the buffer to append to, or
                  <c>null</c> to create a new buffer</param>
        <param name="elems">the header elements to format</param>
        <param name="quote">
          <c>true</c> to always format with quoted values,
                  <c>false</c> to use quotes only when necessary</param>
        <summary>Formats an array of header elements.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Message.IHeaderValueFormatter.FormatElements(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.IHeaderElement[],System.Boolean)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="FormatHeaderElement">
      <MemberSignature Language="C#" Value="public static string FormatHeaderElement (Org.Apache.Http.IHeaderElement elem, bool quote, Org.Apache.Http.Message.IHeaderValueFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatHeaderElement(class Org.Apache.Http.IHeaderElement elem, bool quote, class Org.Apache.Http.Message.IHeaderValueFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatHeaderElement(Org.Apache.Http.IHeaderElement,System.Boolean,Org.Apache.Http.Message.IHeaderValueFormatter)" />
      <MemberSignature Language="F#" Value="static member FormatHeaderElement : Org.Apache.Http.IHeaderElement * bool * Org.Apache.Http.Message.IHeaderValueFormatter -&gt; string" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatHeaderElement (elem, quote, formatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatHeaderElement", "(Lorg/apache/http/HeaderElement;ZLorg/apache/http/message/HeaderValueFormatter;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="Org.Apache.Http.IHeaderElement" />
        <Parameter Name="quote" Type="System.Boolean" />
        <Parameter Name="formatter" Type="Org.Apache.Http.Message.IHeaderValueFormatter" />
      </Parameters>
      <Docs>
        <param name="elem">the header element to format</param>
        <param name="quote">
          <c>true</c> to always format with quoted values,
                  <c>false</c> to use quotes only when necessary</param>
        <param name="formatter">the formatter to use, or <c>null</c>
                          for the <see cref="P:Org.Apache.Http.Message.BasicHeaderValueFormatter.Default" /></param>
        <summary tool="true">Formats one header element.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FormatHeaderElement">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.Util.CharArrayBuffer FormatHeaderElement (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.IHeaderElement elem, bool quote);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.Util.CharArrayBuffer FormatHeaderElement(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.IHeaderElement elem, bool quote) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatHeaderElement(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.IHeaderElement,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member FormatHeaderElement : Org.Apache.Http.Util.CharArrayBuffer * Org.Apache.Http.IHeaderElement * bool -&gt; Org.Apache.Http.Util.CharArrayBuffer&#xA;override this.FormatHeaderElement : Org.Apache.Http.Util.CharArrayBuffer * Org.Apache.Http.IHeaderElement * bool -&gt; Org.Apache.Http.Util.CharArrayBuffer" Usage="basicHeaderValueFormatter.FormatHeaderElement (buffer, elem, quote)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatHeaderElement", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/HeaderElement;Z)Lorg/apache/http/util/CharArrayBuffer;", "GetFormatHeaderElement_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_HeaderElement_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Util.CharArrayBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="elem" Type="Org.Apache.Http.IHeaderElement" />
        <Parameter Name="quote" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">the buffer to append to, or
                  <c>null</c> to create a new buffer</param>
        <param name="elem">the header element to format</param>
        <param name="quote">
          <c>true</c> to always format with quoted values,
                  <c>false</c> to use quotes only when necessary</param>
        <summary>Formats one header element.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Message.IHeaderValueFormatter.FormatHeaderElement(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.IHeaderElement,System.Boolean)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="FormatNameValuePair">
      <MemberSignature Language="C#" Value="public static string FormatNameValuePair (Org.Apache.Http.INameValuePair nvp, bool quote, Org.Apache.Http.Message.IHeaderValueFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatNameValuePair(class Org.Apache.Http.INameValuePair nvp, bool quote, class Org.Apache.Http.Message.IHeaderValueFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatNameValuePair(Org.Apache.Http.INameValuePair,System.Boolean,Org.Apache.Http.Message.IHeaderValueFormatter)" />
      <MemberSignature Language="F#" Value="static member FormatNameValuePair : Org.Apache.Http.INameValuePair * bool * Org.Apache.Http.Message.IHeaderValueFormatter -&gt; string" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatNameValuePair (nvp, quote, formatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatNameValuePair", "(Lorg/apache/http/NameValuePair;ZLorg/apache/http/message/HeaderValueFormatter;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nvp" Type="Org.Apache.Http.INameValuePair" />
        <Parameter Name="quote" Type="System.Boolean" />
        <Parameter Name="formatter" Type="Org.Apache.Http.Message.IHeaderValueFormatter" />
      </Parameters>
      <Docs>
        <param name="nvp">the name-value pair to format</param>
        <param name="quote">
          <c>true</c> to always format with a quoted value,
                  <c>false</c> to use quotes only when necessary</param>
        <param name="formatter">the formatter to use, or <c>null</c>
                          for the <see cref="P:Org.Apache.Http.Message.BasicHeaderValueFormatter.Default" /></param>
        <summary tool="true">Formats one name-value pair, where the value is optional.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FormatNameValuePair">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.Util.CharArrayBuffer FormatNameValuePair (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.INameValuePair nvp, bool quote);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.Util.CharArrayBuffer FormatNameValuePair(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.INameValuePair nvp, bool quote) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatNameValuePair(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.INameValuePair,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member FormatNameValuePair : Org.Apache.Http.Util.CharArrayBuffer * Org.Apache.Http.INameValuePair * bool -&gt; Org.Apache.Http.Util.CharArrayBuffer&#xA;override this.FormatNameValuePair : Org.Apache.Http.Util.CharArrayBuffer * Org.Apache.Http.INameValuePair * bool -&gt; Org.Apache.Http.Util.CharArrayBuffer" Usage="basicHeaderValueFormatter.FormatNameValuePair (buffer, nvp, quote)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatNameValuePair", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/NameValuePair;Z)Lorg/apache/http/util/CharArrayBuffer;", "GetFormatNameValuePair_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_NameValuePair_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Util.CharArrayBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="nvp" Type="Org.Apache.Http.INameValuePair" />
        <Parameter Name="quote" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">the buffer to append to, or
                  <c>null</c> to create a new buffer</param>
        <param name="nvp">the name-value pair to format</param>
        <param name="quote">
          <c>true</c> to always format with a quoted value,
                  <c>false</c> to use quotes only when necessary</param>
        <summary>Formats one name-value pair, where the value is optional.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Message.IHeaderValueFormatter.FormatNameValuePair(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.INameValuePair,System.Boolean)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="FormatParameters">
      <MemberSignature Language="C#" Value="public static string FormatParameters (Org.Apache.Http.INameValuePair[] nvps, bool quote, Org.Apache.Http.Message.IHeaderValueFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatParameters(class Org.Apache.Http.INameValuePair[] nvps, bool quote, class Org.Apache.Http.Message.IHeaderValueFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatParameters(Org.Apache.Http.INameValuePair[],System.Boolean,Org.Apache.Http.Message.IHeaderValueFormatter)" />
      <MemberSignature Language="F#" Value="static member FormatParameters : Org.Apache.Http.INameValuePair[] * bool * Org.Apache.Http.Message.IHeaderValueFormatter -&gt; string" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatParameters (nvps, quote, formatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatParameters", "([Lorg/apache/http/NameValuePair;ZLorg/apache/http/message/HeaderValueFormatter;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nvps" Type="Org.Apache.Http.INameValuePair[]" />
        <Parameter Name="quote" Type="System.Boolean" />
        <Parameter Name="formatter" Type="Org.Apache.Http.Message.IHeaderValueFormatter" />
      </Parameters>
      <Docs>
        <param name="nvps">the parameters to format</param>
        <param name="quote">
          <c>true</c> to always format with quoted values,
                  <c>false</c> to use quotes only when necessary</param>
        <param name="formatter">the formatter to use, or <c>null</c>
                          for the <see cref="P:Org.Apache.Http.Message.BasicHeaderValueFormatter.Default" /></param>
        <summary>Formats a set of parameters.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FormatParameters">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.Util.CharArrayBuffer FormatParameters (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.INameValuePair[] nvps, bool quote);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.Util.CharArrayBuffer FormatParameters(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.INameValuePair[] nvps, bool quote) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.FormatParameters(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.INameValuePair[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member FormatParameters : Org.Apache.Http.Util.CharArrayBuffer * Org.Apache.Http.INameValuePair[] * bool -&gt; Org.Apache.Http.Util.CharArrayBuffer&#xA;override this.FormatParameters : Org.Apache.Http.Util.CharArrayBuffer * Org.Apache.Http.INameValuePair[] * bool -&gt; Org.Apache.Http.Util.CharArrayBuffer" Usage="basicHeaderValueFormatter.FormatParameters (buffer, nvps, quote)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatParameters", "(Lorg/apache/http/util/CharArrayBuffer;[Lorg/apache/http/NameValuePair;Z)Lorg/apache/http/util/CharArrayBuffer;", "GetFormatParameters_Lorg_apache_http_util_CharArrayBuffer_arrayLorg_apache_http_NameValuePair_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Util.CharArrayBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="nvps" Type="Org.Apache.Http.INameValuePair[]" />
        <Parameter Name="quote" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">the buffer to append to, or
                  <c>null</c> to create a new buffer</param>
        <param name="nvps">the parameters (name-value pairs) to format</param>
        <param name="quote">
          <c>true</c> to always format with quoted values,
                  <c>false</c> to use quotes only when necessary</param>
        <summary>Formats the parameters of a header element.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Message.IHeaderValueFormatter.FormatParameters(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.INameValuePair[],System.Boolean)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="protected virtual bool IsSeparator (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSeparator(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.IsSeparator(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member IsSeparator : char -&gt; bool&#xA;override this.IsSeparator : char -&gt; bool" Usage="basicHeaderValueFormatter.IsSeparator ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSeparator", "(C)Z", "GetIsSeparator_CHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to check</param>
        <summary>Checks whether a character is a <see cref="F:Org.Apache.Http.Message.BasicHeaderValueFormatter.Separators" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnsafe">
      <MemberSignature Language="C#" Value="protected virtual bool IsUnsafe (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsUnsafe(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Message.BasicHeaderValueFormatter.IsUnsafe(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member IsUnsafe : char -&gt; bool&#xA;override this.IsUnsafe : char -&gt; bool" Usage="basicHeaderValueFormatter.IsUnsafe ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isUnsafe", "(C)Z", "GetIsUnsafe_CHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to check</param>
        <summary>Checks whether a character is <see cref="F:Org.Apache.Http.Message.BasicHeaderValueFormatter.UnsafeChars" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Message.BasicHeaderValueFormatter.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Separators">
      <MemberSignature Language="C#" Value="public const string Separators;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Separators" />
      <MemberSignature Language="DocId" Value="F:Org.Apache.Http.Message.BasicHeaderValueFormatter.Separators" />
      <MemberSignature Language="F#" Value="val mutable Separators : string" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.Separators" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SEPARATORS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Special characters that can be used as separators in HTTP parameters.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Message.BasicHeaderValueFormatter.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Message.BasicHeaderValueFormatter.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeChars">
      <MemberSignature Language="C#" Value="public const string UnsafeChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UnsafeChars" />
      <MemberSignature Language="DocId" Value="F:Org.Apache.Http.Message.BasicHeaderValueFormatter.UnsafeChars" />
      <MemberSignature Language="F#" Value="val mutable UnsafeChars : string" Usage="Org.Apache.Http.Message.BasicHeaderValueFormatter.UnsafeChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNSAFE_CHARS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Unsafe special characters that must be escaped using the backslash
 character
</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
