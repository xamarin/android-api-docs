<Type Name="BasicLineParser" FullName="Org.Apache.Http.Message.BasicLineParser">
  <TypeSignature Language="C#" Value="public class BasicLineParser : Java.Lang.Object, IDisposable, Org.Apache.Http.Message.ILineParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BasicLineParser extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Org.Apache.Http.Message.ILineParser, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.Apache.Http.Message.ILineParser</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/message/BasicLineParser", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Basic parser for lines in the head section of an HTTP message.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Basic parser for lines in the head section of an HTTP message.
 There are individual methods for parsing a request line, a
 status line, or a header line.
 The lines to parse are passed in memory, the parser does not depend
 on any specific IO mechanism.
 Instances of this class are stateless and thread-safe.
 Derived classes MUST maintain these properties.

 </para>
      <para tool="javadoc-to-mdoc">
 Note: This class was created by refactoring parsing code located in
 various other classes. The author tags from those other classes have
 been replicated here, although the association with the parsing code
 taken from there has not been traced.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicLineParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new line parser for HTTP.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new line parser for HTTP.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#BasicLineParser()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicLineParser (Org.Apache.Http.ProtocolVersion proto);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Org.Apache.Http.ProtocolVersion proto) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Lorg/apache/http/ProtocolVersion;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="proto" Type="Org.Apache.Http.ProtocolVersion" />
      </Parameters>
      <Docs>
        <param name="proto">To be added.</param>
        <summary>Creates a new line parser for the given HTTP-like protocol.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new line parser for the given HTTP-like protocol.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#BasicLineParser(org.apache.http.ProtocolVersion)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicLineParser (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProtocolVersion">
      <MemberSignature Language="C#" Value="protected virtual Org.Apache.Http.ProtocolVersion CreateProtocolVersion (int major, int minor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.Apache.Http.ProtocolVersion CreateProtocolVersion(int32 major, int32 minor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createProtocolVersion", "(II)Lorg/apache/http/ProtocolVersion;", "GetCreateProtocolVersion_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.ProtocolVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">the major version number, for example 1 in HTTP/1.0</param>
        <param name="minor">the minor version number, for example 0 in HTTP/1.0</param>
        <summary>Creates a protocol version.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a protocol version.
 Called from <c><see cref="M:Org.Apache.Http.Message.BasicLineParser.ParseProtocolVersion(System.String,Org.Apache.Http.Message.ILineParser)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#createProtocolVersion(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateRequestLine">
      <MemberSignature Language="C#" Value="protected virtual Org.Apache.Http.IRequestLine CreateRequestLine (string method, string uri, Org.Apache.Http.ProtocolVersion ver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.Apache.Http.IRequestLine CreateRequestLine(string method, string uri, class Org.Apache.Http.ProtocolVersion ver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createRequestLine", "(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)Lorg/apache/http/RequestLine;", "GetCreateRequestLine_Ljava_lang_String_Ljava_lang_String_Lorg_apache_http_ProtocolVersion_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IRequestLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="ver" Type="Org.Apache.Http.ProtocolVersion" />
      </Parameters>
      <Docs>
        <param name="method">the request method</param>
        <param name="uri">the requested URI</param>
        <param name="ver">the protocol version</param>
        <summary>Instantiates a new request line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Instantiates a new request line.
 Called from <c><see cref="M:Org.Apache.Http.Message.BasicLineParser.ParseRequestLine(System.String,Org.Apache.Http.Message.ILineParser)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#createRequestLine(java.lang.String, java.lang.String, org.apache.http.ProtocolVersion)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateStatusLine">
      <MemberSignature Language="C#" Value="protected virtual Org.Apache.Http.IStatusLine CreateStatusLine (Org.Apache.Http.ProtocolVersion ver, int status, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.Apache.Http.IStatusLine CreateStatusLine(class Org.Apache.Http.ProtocolVersion ver, int32 status, string reason) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createStatusLine", "(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)Lorg/apache/http/StatusLine;", "GetCreateStatusLine_Lorg_apache_http_ProtocolVersion_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IStatusLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ver" Type="Org.Apache.Http.ProtocolVersion" />
        <Parameter Name="status" Type="System.Int32" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ver">the protocol version</param>
        <param name="status">the status code</param>
        <param name="reason">the reason phrase</param>
        <summary>Instantiates a new status line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Instantiates a new status line.
 Called from <c><see cref="M:Org.Apache.Http.Message.BasicLineParser.ParseStatusLine(System.String,Org.Apache.Http.Message.ILineParser)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#createStatusLine(org.apache.http.ProtocolVersion, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Message.BasicLineParser Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Org.Apache.Http.Message.BasicLineParser Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFAULT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Message.BasicLineParser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A default instance of this class, for use as default or fallback.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">A default instance of this class, for use as default or fallback.
 Note that <c><see cref="T:Org.Apache.Http.Message.BasicLineParser" /></c> is not a singleton, there can
 be many instances of the class itself and of derived classes.
 The instance here provides non-customized, default behavior.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#DEFAULT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual bool HasProtocolVersion (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasProtocolVersion(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasProtocolVersion", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Z", "GetHasProtocolVersion_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the line to inspect</param>
        <param name="cursor">the cursor at which to check for a protocol version, or
                  negative for "end of line". Whether the check tolerates
                  whitespace before or after the protocol version is
                  implementation dependent.</param>
        <summary>Checks whether there likely is a protocol version in a line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether there likely is a protocol version in a line.
 This method implements a <format type="text/html"><i>heuristic</i></format> to check for a
 likely protocol version specification. It does <format type="text/html"><i>not</i></format>
 guarantee that <c><see cref="M:Org.Apache.Http.Message.ILineParser.ParseProtocolVersion(Org.Apache.Http.Util.CharArrayBuffer,Org.Apache.Http.Message.ParserCursor)" /></c> would not
 detect a parse error.
 This can be used to detect garbage lines before a request
 or status line.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#hasProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseHeader">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.IHeader ParseHeader (Org.Apache.Http.Util.CharArrayBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IHeader ParseHeader(class Org.Apache.Http.Util.CharArrayBuffer buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseHeader", "(Lorg/apache/http/util/CharArrayBuffer;)Lorg/apache/http/Header;", "GetParseHeader_Lorg_apache_http_util_CharArrayBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the full header line.
                  This buffer MUST NOT be re-used afterwards, since
                  the returned object may reference the contents later.</param>
        <summary>Creates a header from a line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a header from a line.
 The full header line is expected here. Header continuation lines
 must be joined by the caller before invoking this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#parseHeader(org.apache.http.util.CharArrayBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException" />
      </Docs>
    </Member>
    <Member MemberName="ParseHeader">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.IHeader ParseHeader (string value, Org.Apache.Http.Message.ILineParser parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.IHeader ParseHeader(string value, class Org.Apache.Http.Message.ILineParser parser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseHeader", "(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/Header;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="parser" Type="Org.Apache.Http.Message.ILineParser" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#parseHeader(java.lang.String, org.apache.http.message.LineParser)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException" />
      </Docs>
    </Member>
    <Member MemberName="ParseProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.ProtocolVersion ParseProtocolVersion (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.ProtocolVersion ParseProtocolVersion(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseProtocolVersion", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/ProtocolVersion;", "GetParseProtocolVersion_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.ProtocolVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the protocol version to parse</param>
        <param name="cursor">the parser cursor containing the current position and 
                  the bounds within the buffer for the parsing operation</param>
        <summary>Parses the textual representation of a protocol version.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses the textual representation of a protocol version.
 This is needed for parsing request lines (last element)
 as well as status lines (first element).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#parseProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException" />
      </Docs>
    </Member>
    <Member MemberName="ParseProtocolVersion">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.ProtocolVersion ParseProtocolVersion (string value, Org.Apache.Http.Message.ILineParser parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.ProtocolVersion ParseProtocolVersion(string value, class Org.Apache.Http.Message.ILineParser parser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseProtocolVersion", "(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/ProtocolVersion;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.ProtocolVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="parser" Type="Org.Apache.Http.Message.ILineParser" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#parseProtocolVersion(java.lang.String, org.apache.http.message.LineParser)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException" />
      </Docs>
    </Member>
    <Member MemberName="ParseRequestLine">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.IRequestLine ParseRequestLine (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IRequestLine ParseRequestLine(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseRequestLine", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/RequestLine;", "GetParseRequestLine_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IRequestLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the line to parse</param>
        <param name="cursor">the parser cursor containing the current position and 
                  the bounds within the buffer for the parsing operation</param>
        <summary>Parses a request line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses a request line.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#parseRequestLine(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException">in case of a parse error
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseRequestLine">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.IRequestLine ParseRequestLine (string value, Org.Apache.Http.Message.ILineParser parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.IRequestLine ParseRequestLine(string value, class Org.Apache.Http.Message.ILineParser parser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseRequestLine", "(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/RequestLine;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IRequestLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="parser" Type="Org.Apache.Http.Message.ILineParser" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#parseRequestLine(java.lang.String, org.apache.http.message.LineParser)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException" />
      </Docs>
    </Member>
    <Member MemberName="ParseStatusLine">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.IStatusLine ParseStatusLine (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IStatusLine ParseStatusLine(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseStatusLine", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/StatusLine;", "GetParseStatusLine_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IStatusLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">a buffer holding the line to parse</param>
        <param name="cursor">the parser cursor containing the current position and 
                  the bounds within the buffer for the parsing operation</param>
        <summary>Parses a status line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses a status line.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#parseStatusLine(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException" />
      </Docs>
    </Member>
    <Member MemberName="ParseStatusLine">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.IStatusLine ParseStatusLine (string value, Org.Apache.Http.Message.ILineParser parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.IStatusLine ParseStatusLine(string value, class Org.Apache.Http.Message.ILineParser parser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseStatusLine", "(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/StatusLine;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IStatusLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="parser" Type="Org.Apache.Http.Message.ILineParser" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#parseStatusLine(java.lang.String, org.apache.http.message.LineParser)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.ParseException" />
      </Docs>
    </Member>
    <Member MemberName="Protocol">
      <MemberSignature Language="C#" Value="protected Org.Apache.Http.ProtocolVersion Protocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Apache.Http.ProtocolVersion Protocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("protocol")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.ProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A version of the protocol to parse.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">A version of the protocol to parse.
 The version is typically not relevant, but the protocol name.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#protocol" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SkipWhitespace">
      <MemberSignature Language="C#" Value="protected virtual void SkipWhitespace (Org.Apache.Http.Util.CharArrayBuffer buffer, Org.Apache.Http.Message.ParserCursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SkipWhitespace(class Org.Apache.Http.Util.CharArrayBuffer buffer, class Org.Apache.Http.Message.ParserCursor cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("skipWhitespace", "(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)V", "GetSkipWhitespace_Lorg_apache_http_util_CharArrayBuffer_Lorg_apache_http_message_ParserCursor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Org.Apache.Http.Util.CharArrayBuffer" />
        <Parameter Name="cursor" Type="Org.Apache.Http.Message.ParserCursor" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cursor">To be added.</param>
        <summary>Helper to skip whitespace.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Helper to skip whitespace.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/message/BasicLineParser.html#skipWhitespace(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
