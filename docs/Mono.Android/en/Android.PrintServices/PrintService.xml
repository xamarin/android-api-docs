<Type Name="PrintService" FullName="Android.PrintServices.PrintService">
  <TypeSignature Language="C#" Value="public abstract class PrintService : Android.App.Service" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PrintService extends Android.App.Service" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Service</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/printservice/PrintService", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary tool="true">
      <format type="text/html">
        <h3>Printer discovery</h3>
      </format>
      <format type="text/html">
        <h3>Print jobs</h3>
      </format>
      <format type="text/html">
        <h3>Lifecycle</h3>
      </format>
      <format type="text/html">
        <h3>Declaration</h3>
      </format>
      <example>
        <code lang="xml">
 &lt;service android:name=".MyPrintService"
         android:permission="android.permission.BIND_PRINT_SERVICE"&gt;
     &lt;intent-filter&gt;
         &lt;action android:name="android.printservice.PrintService" /&gt;
     &lt;/intent-filter&gt;
     . . .
 &lt;/service&gt;
 </code>
      </example>
      <format type="text/html">
        <h3>Configuration</h3>
      </format>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <h3>Printer discovery</h3>
        </format>
        <format type="text/html">
          <h3>Print jobs</h3>
        </format>
        <format type="text/html">
          <h3>Lifecycle</h3>
        </format>
        <format type="text/html">
          <h3>Declaration</h3>
        </format>
        <example>
          <code lang="xml">
 &lt;service android:name=".MyPrintService"
         android:permission="android.permission.BIND_PRINT_SERVICE"&gt;
     &lt;intent-filter&gt;
         &lt;action android:name="android.printservice.PrintService" /&gt;
     &lt;/intent-filter&gt;
     . . .
 &lt;/service&gt;
 </code>
        </example>
        <format type="text/html">
          <h3>Configuration</h3>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
 This is the base class for implementing print services. A print service knows
 how to discover and interact one or more printers via one or more protocols.
 </para>
      <para tool="javadoc-to-mdoc">
 A print service is responsible for discovering printers, adding discovered printers,
 removing added printers, and updating added printers. When the system is interested
 in printers managed by your service it will call <c><see cref="M:Android.PrintServices.PrintService.OnCreatePrinterDiscoverySession" /></c> from which you must return a new <c><see cref="T:Android.PrintServices.PrinterDiscoverySession" /></c> instance. The returned session encapsulates the interaction
 between the system and your service during printer discovery. For description of this
 interaction refer to the documentation for <c><see cref="T:Android.PrintServices.PrinterDiscoverySession" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 For every printer discovery session all printers have to be added since system does
 not retain printers across sessions. Hence, each printer known to this print service
 should be added only once during a discovery session. Only an already added printer
 can be removed or updated. Removed printers can be added again.
 </para>
      <para tool="javadoc-to-mdoc">
 When a new print job targeted to a printer managed by this print service is is queued,
 i.e. ready for processing by the print service, you will receive a call to <c><see cref="M:Android.PrintServices.PrintService.OnPrintJobQueued(Android.PrintServices.PrintJob)" /></c>. The print service may handle the print job immediately
 or schedule that for an appropriate time in the future. The list of all active print
 jobs for this service is obtained by calling <c><see cref="P:Android.PrintServices.PrintService.ActivePrintJobs" /></c>. Active
 print jobs are ones that are queued or started.
 </para>
      <para tool="javadoc-to-mdoc">
 A print service is responsible for setting a print job's state as appropriate
 while processing it. Initially, a print job is queued, i.e. <c><see cref="P:Android.PrintServices.PrintJob.IsQueued" /></c> returns true, which means that the document to be printed is
 spooled by the system and the print service can begin processing it. You can obtain
 the printed document by calling <c><see cref="P:Android.PrintServices.PrintJob.Document" /></c>
 whose data is accessed via <c><see cref="P:Android.PrintServices.PrintDocument.Data" /></c>.
 After the print service starts printing the data it should set the print job's
 state to started by calling <c><see cref="M:Android.PrintServices.PrintJob.Start" /></c> after which
 <c><see cref="P:Android.PrintServices.PrintJob.IsStarted" /></c> would return true. Upon successful
 completion, the print job should be marked as completed by calling <c><see cref="M:Android.PrintServices.PrintJob.Complete" /></c> after which <c><see cref="P:Android.PrintServices.PrintJob.IsCompleted" /></c> would return true. In case of a failure, the print job should
 be marked as failed by calling <c><see cref="M:Android.PrintServices.PrintJob.Fail(System.String)" /></c> after which <c><see cref="P:Android.PrintServices.PrintJob.IsFailed" /></c> would
 return true.
 </para>
      <para tool="javadoc-to-mdoc">
 If a print job is queued or started and the user requests to cancel it, the print
 service will receive a call to <c><see cref="M:Android.PrintServices.PrintService.OnRequestCancelPrintJob(Android.PrintServices.PrintJob)" /></c> which
 requests from the service to do best effort in canceling the job. In case the job
 is successfully canceled, its state has to be marked as cancelled by calling <c><see cref="M:Android.PrintServices.PrintJob.Cancel" /></c> after which <c><see cref="P:Android.PrintServices.PrintJob.IsCancelled" /></c> would return true.
 </para>
      <para tool="javadoc-to-mdoc">
 The lifecycle of a print service is managed exclusively by the system and follows
 the established service lifecycle. Additionally, starting or stopping a print service
 is triggered exclusively by an explicit user action through enabling or disabling it
 in the device settings. After the system binds to a print service, it calls <c><see cref="M:Android.PrintServices.PrintService.OnConnected" /></c>. This method can be overriden by clients to perform post binding setup.
 Also after the system unbinds from a print service, it calls <c><see cref="M:Android.PrintServices.PrintService.OnDisconnected" /></c>.
 This method can be overriden by clients to perform post unbinding cleanup. Your should
 not do any work after the system disconnected from your print service since the
 service can be killed at any time to reclaim memory. The system will not disconnect
 from a print service if there are active print jobs for the printers managed by it.
 </para>
      <para tool="javadoc-to-mdoc">
 A print service is declared as any other service in an AndroidManifest.xml but it must
 also specify that it handles the <c><see cref="T:Android.Content.Intent" /></c> with action <c><see cref="F:Android.PrintServices.PrintService.ServiceInterface" /></c>. Failure to declare this intent
 will cause the system to ignore the print service. Additionally, a print service must
 request the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#BIND_PRINT_SERVICE" /></c> permission to ensure that only the system can
 bind to it. Failure to declare this intent will cause the system to ignore the print
 service. Following is an example declaration:
 </para>
      <para tool="javadoc-to-mdoc">
 A print service can be configured by specifying an optional settings activity which
 exposes service specific settings, an optional add printers activity which is used for
 manual addition of printers, vendor name ,etc. It is a responsibility of the system
 to launch the settings and add printers activities when appropriate.
 </para>
      <para tool="javadoc-to-mdoc">
 A print service is configured by providing a <c><see cref="F:Android.PrintServices.PrintService.ServiceMetaData" /></c>
 entry in the manifest when declaring the service. A service declaration with a meta-data
 tag is presented below:
 <example><code lang="xml"> &lt;service android:name=".MyPrintService"
         android:permission="android.permission.BIND_PRINT_SERVICE"&gt;
     &lt;intent-filter&gt;
         &lt;action android:name="android.printservice.PrintService" /&gt;
     &lt;/intent-filter&gt;
     &lt;meta-data android:name="android.printservice" android:resource="@xml/printservice" /&gt;
 &lt;/service&gt;</code></example></para>
      <para tool="javadoc-to-mdoc">
 For more details for how to configure your print service via the meta-data refer to
 <c><see cref="F:Android.PrintServices.PrintService.ServiceMetaData" /></c> and <c>&lt;<c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#PrintService" /></c>&gt;</c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <i>Note: </i> All callbacks in this class are executed on the main
 application thread. You should also invoke any method of this class on the main
 application thread.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/printservice/PrintService.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#PrintService()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrintService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrintJobs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.PrintServices.PrintJob&gt; ActivePrintJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.PrintServices.PrintJob&gt; ActivePrintJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getActivePrintJobs", "()Ljava/util/List;", "GetGetActivePrintJobsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.PrintServices.PrintJob&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the active print jobs for the printers managed by this service.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the active print jobs for the printers managed by this service.
 Active print jobs are ones that are not in a final state, i.e. whose
 state is queued or started.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#getActivePrintJobs()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.PrintServices.PrintJob.IsQueued" />
        <altmember cref="P:Android.PrintServices.PrintJob.IsStarted" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="AttachBaseContext">
      <MemberSignature Language="C#" Value="protected override sealed void AttachBaseContext (Android.Content.Context base);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AttachBaseContext(class Android.Content.Context base) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("attachBaseContext", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="base">The new base context for this wrapper.
</param>
        <summary>Set the base context for this ContextWrapper.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the base context for this ContextWrapper.  All calls will then be
 delegated to the base context.  Throws
 IllegalStateException if a base context has already been set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#attachBaseContext(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraPrinterInfo">
      <MemberSignature Language="C#" Value="public const string ExtraPrinterInfo;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPrinterInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PRINTER_INFO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If you declared an optional activity with advanced print options via the
 <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#advancedPrintOptionsActivity" /></c>
 attribute, this extra is used to pass in the currently selected printer's
 <c><see cref="T:Android.Print.PrinterInfo" /></c> to your activity allowing you to inspect it.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If you declared an optional activity with advanced print options via the
 <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#advancedPrintOptionsActivity" /></c>
 attribute, this extra is used to pass in the currently selected printer's
 <c><see cref="T:Android.Print.PrinterInfo" /></c> to your activity allowing you to inspect it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#EXTRA_PRINTER_INFO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="F:Android.PrintServices.PrintService.ExtraPrintJobInfo" />
      </Docs>
    </Member>
    <Member MemberName="ExtraPrintJobInfo">
      <MemberSignature Language="C#" Value="public const string ExtraPrintJobInfo;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPrintJobInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PRINT_JOB_INFO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If you declared an optional activity with advanced print options via the
 <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#advancedPrintOptionsActivity" /></c>
 attribute, this extra is used to pass in the currently constructed <c><see cref="T:Android.Print.PrintJobInfo" /></c> to your activity allowing you to modify it.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If you declared an optional activity with advanced print options via the
 <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#advancedPrintOptionsActivity" /></c>
 attribute, this extra is used to pass in the currently constructed <c><see cref="T:Android.Print.PrintJobInfo" /></c> to your activity allowing you to modify it. After you are
 done, you must return the modified <c><see cref="T:Android.Print.PrintJobInfo" /></c> via the same extra.
 </para>
          <para tool="javadoc-to-mdoc">
 You cannot modify the passed in <c><see cref="T:Android.Print.PrintJobInfo" /></c> directly, rather you
 should build another one using the <c><see cref="!:NoType:android/print/PrintJobInfo$Builder;Href=../../../reference/android/print/PrintJobInfo.Builder.html" /></c> class. You
 can specify any standard properties and add advanced, printer specific,
 ones via <c><see cref="!:NoType:android/print/PrintJobInfo$Builder;Href=../../../reference/android/print/PrintJobInfo.Builder.html#putAdvancedOption(java.lang.String,java.lang.String)" /></c> and <c><see cref="!:NoType:android/print/PrintJobInfo$Builder;Href=../../../reference/android/print/PrintJobInfo.Builder.html#putAdvancedOption(java.lang.String,int)" /></c>. The advanced options
 are not interpreted by the system, they will not be visible to applications,
 and can only be accessed by your print service via <c><see cref="M:Android.PrintServices.PrintJob.GetAdvancedStringOption(System.String)" /></c>
 and <c><see cref="M:Android.PrintServices.PrintJob.GetAdvancedIntOption(System.String)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If the advanced print options activity offers changes to the standard print
 options, you can get the current <c><see cref="T:Android.Print.PrinterInfo" /></c> using the
 <c><see cref="F:Android.PrintServices.PrintService.ExtraPrinterInfo" /></c> extra which will allow you to present the user
 with UI options supported by the current printer. For example, if the current
 printer does not support a given media size, you should not offer it in the
 advanced print options UI.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#EXTRA_PRINT_JOB_INFO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="F:Android.PrintServices.PrintService.ExtraPrinterInfo" />
      </Docs>
    </Member>
    <Member MemberName="GeneratePrinterId">
      <MemberSignature Language="C#" Value="public Android.Print.PrinterId GeneratePrinterId (string localId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Print.PrinterId GeneratePrinterId(string localId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("generatePrinterId", "(Ljava/lang/String;)Landroid/print/PrinterId;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Print.PrinterId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localId">A locally unique id in the context of your print service.</param>
        <summary>Generates a global printer id given the printer's locally unique one.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates a global printer id given the printer's locally unique one.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#generatePrinterId(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public override sealed Android.OS.IBinder OnBind (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>Return the communication channel to the service.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the communication channel to the service.  May return null if 
 clients can not bind to the service.  The returned
 <c><see cref="T:Android.OS.BinderConsts" /></c> is usually for a complex interface
 that has been <format type="text/html"><a href="http://developer.android.com/reference/../guide/components/aidl.html">described using
 aidl</a></format>.
 
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note that unlike other application components, calls on to the
 IBinder interface returned here may not happen on the main thread
 of the process</i>.  More information about the main thread can be found in
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/fundamentals/processes-and-threads.html">Processes and
 Threads</a></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#onBind(android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnConnected ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnected() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onConnected", "()V", "GetOnConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The system has connected to this service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The system has connected to this service.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#onConnected()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreatePrinterDiscoverySession">
      <MemberSignature Language="C#" Value="protected abstract Android.PrintServices.PrinterDiscoverySession OnCreatePrinterDiscoverySession ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.PrintServices.PrinterDiscoverySession OnCreatePrinterDiscoverySession() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreatePrinterDiscoverySession", "()Landroid/printservice/PrinterDiscoverySession;", "GetOnCreatePrinterDiscoverySessionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.PrintServices.PrinterDiscoverySession</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Callback asking you to create a new <c><see cref="T:Android.PrintServices.PrinterDiscoverySession" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Callback asking you to create a new <c><see cref="T:Android.PrintServices.PrinterDiscoverySession" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#onCreatePrinterDiscoverySession()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="T:Android.PrintServices.PrinterDiscoverySession" />
      </Docs>
    </Member>
    <Member MemberName="OnDisconnected">
      <MemberSignature Language="C#" Value="protected virtual void OnDisconnected ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisconnected() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDisconnected", "()V", "GetOnDisconnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The system has disconnected from this service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The system has disconnected from this service.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#onDisconnected()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrintJobQueued">
      <MemberSignature Language="C#" Value="protected abstract void OnPrintJobQueued (Android.PrintServices.PrintJob printJob);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrintJobQueued(class Android.PrintServices.PrintJob printJob) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPrintJobQueued", "(Landroid/printservice/PrintJob;)V", "GetOnPrintJobQueued_Landroid_printservice_PrintJob_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printJob" Type="Android.PrintServices.PrintJob" />
      </Parameters>
      <Docs>
        <param name="printJob">The new queued print job.</param>
        <summary>Called when there is a queued print job for one of the printers
 managed by this print service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when there is a queued print job for one of the printers
 managed by this print service.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#onPrintJobQueued(android.printservice.PrintJob)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.PrintServices.PrintJob.IsQueued" />
        <altmember cref="P:Android.PrintServices.PrintService.ActivePrintJobs" />
      </Docs>
    </Member>
    <Member MemberName="OnRequestCancelPrintJob">
      <MemberSignature Language="C#" Value="protected abstract void OnRequestCancelPrintJob (Android.PrintServices.PrintJob printJob);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRequestCancelPrintJob(class Android.PrintServices.PrintJob printJob) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRequestCancelPrintJob", "(Landroid/printservice/PrintJob;)V", "GetOnRequestCancelPrintJob_Landroid_printservice_PrintJob_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printJob" Type="Android.PrintServices.PrintJob" />
      </Parameters>
      <Docs>
        <param name="printJob">The print job to cancel.</param>
        <summary>Called when cancellation of a print job is requested.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when cancellation of a print job is requested. The service
 should do best effort to fulfill the request. After the cancellation
 is performed, the print job should be marked as cancelled state by
 calling <c><see cref="M:Android.PrintServices.PrintJob.Cancel" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#onRequestCancelPrintJob(android.printservice.PrintJob)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.PrintServices.PrintJob.Cancel" />
        <altmember cref="P:Android.PrintServices.PrintJob.IsCancelled" />
      </Docs>
    </Member>
    <Member MemberName="ServiceInterface">
      <MemberSignature Language="C#" Value="public const string ServiceInterface;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceInterface" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SERVICE_INTERFACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c><see cref="T:Android.Content.Intent" /></c> action that must be declared as handled by a service
 in its manifest for the system to recognize it as a print service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The <c><see cref="T:Android.Content.Intent" /></c> action that must be declared as handled by a service
 in its manifest for the system to recognize it as a print service.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#SERVICE_INTERFACE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceMetaData">
      <MemberSignature Language="C#" Value="public const string ServiceMetaData;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceMetaData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SERVICE_META_DATA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name under which a <c><see cref="T:Android.PrintServices.PrintService" /></c> component publishes additional information
 about itself.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Name under which a <c><see cref="T:Android.PrintServices.PrintService" /></c> component publishes additional information
 about itself. This meta-data must reference a XML resource containing a <c>
 &lt;<c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#PrintService" /></c>&gt;</c> tag. This is
 a sample XML file configuring a print service:
 <example><code lang="xml"> &lt;print-service
     android:vendor="SomeVendor"
     android:settingsActivity="foo.bar.MySettingsActivity"
     andorid:addPrintersActivity="foo.bar.MyAddPrintersActivity."
     . . .
 /&gt;</code></example></para>
          <para tool="javadoc-to-mdoc">
 For detailed configuration options that can be specified via the meta-data
 refer to <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#PrintService" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If you declare a settings or add a printers activity, they have to be exported,
 by setting the <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#exported" /></c> activity attribute to <c>true
 </c>. Also in case you want only the system to be able to start any of these
 activities you can specify that they request the android.permission
 .START_PRINT_SERVICE_CONFIG_ACTIVITY permission by setting the
 <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#permission" /></c> activity attribute.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrintService.html#SERVICE_META_DATA" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
