<Type Name="ServerSocketFactory" FullName="Javax.Net.ServerSocketFactory">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServerSocketFactory&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServerSocketFactory abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class ServerSocketFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServerSocketFactory extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Net.ServerSocketFactory" />
  <TypeSignature Language="F#" Value="type ServerSocketFactory = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/net/ServerSocketFactory", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/net/ServerSocketFactory", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class creates server sockets.</summary>
    <remarks>
      <para>This class creates server sockets.  It may be subclassed by other
            factories, which create particular types of server sockets.  This
            provides a general framework for the addition of public socket-level
            functionality.  It is the server side analogue of a socket factory,
            and similarly provides a way to capture a variety of policies related
            to the sockets being constructed.</para>
      <para>Like socket factories, server Socket factory instances have
            methods used to create sockets. There is also an environment
            specific default server socket factory; frameworks will often use
            their own customized factory.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/net/ServerSocketFactory" title="Reference documentation">Java documentation for <code>javax.net.ServerSocketFactory</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServerSocketFactory();" />
      <MemberSignature Language="C#" Value="protected ServerSocketFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.ServerSocketFactory.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a server socket factory.</summary>
        <remarks>
          <para>Creates a server socket factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ServerSocketFactory#ServerSocketFactory()" title="Reference documentation">Java documentation for <code>javax.net.ServerSocketFactory.ServerSocketFactory()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServerSocketFactory(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ServerSocketFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.ServerSocketFactory.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Net.ServerSocketFactory : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Net.ServerSocketFactory" Usage="new Javax.Net.ServerSocketFactory (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServerSocket">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateServerSocket () As ServerSocket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Net::ServerSocket ^ CreateServerSocket();" />
      <MemberSignature Language="C#" Value="public virtual Java.Net.ServerSocket? CreateServerSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.ServerSocket CreateServerSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.ServerSocketFactory.CreateServerSocket" />
      <MemberSignature Language="F#" Value="abstract member CreateServerSocket : unit -&gt; Java.Net.ServerSocket&#xA;override this.CreateServerSocket : unit -&gt; Java.Net.ServerSocket" Usage="serverSocketFactory.CreateServerSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createServerSocket", "()Ljava/net/ServerSocket;", "GetCreateServerSocketHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createServerSocket", "()Ljava/net/ServerSocket;", "GetCreateServerSocketHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.ServerSocket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an unbound server socket.</summary>
        <returns>the unbound socket</returns>
        <remarks>
          <para>Returns an unbound server socket.  The socket is configured with
            the socket options (such as accept timeout) given to this factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ServerSocketFactory#createServerSocket()" title="Reference documentation">Java documentation for <code>javax.net.ServerSocketFactory.createServerSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new server socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateServerSocket">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateServerSocket (port As Integer) As ServerSocket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Net::ServerSocket ^ CreateServerSocket(int port);" />
      <MemberSignature Language="C#" Value="public abstract Java.Net.ServerSocket? CreateServerSocket (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.ServerSocket CreateServerSocket(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.ServerSocketFactory.CreateServerSocket(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreateServerSocket : int -&gt; Java.Net.ServerSocket" Usage="serverSocketFactory.CreateServerSocket port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createServerSocket", "(I)Ljava/net/ServerSocket;", "GetCreateServerSocket_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createServerSocket", "(I)Ljava/net/ServerSocket;", "GetCreateServerSocket_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.ServerSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">the port to listen to</param>
        <summary>Returns a server socket bound to the specified port.</summary>
        <returns>the <c>ServerSocket</c></returns>
        <remarks>
          <para>Returns a server socket bound to the specified port.
            The socket is configured with the socket options
            (such as accept timeout) given to this factory.</para>
          <para>If there is a security manager, its <c>checkListen</c>
            method is called with the <c>port</c> argument as its
            argument to ensure the operation is allowed. This could result
            in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ServerSocketFactory#createServerSocket(int)" title="Reference documentation">Java documentation for <code>javax.net.ServerSocketFactory.createServerSocket(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new server socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateServerSocket">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateServerSocket (port As Integer, backlog As Integer) As ServerSocket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Net::ServerSocket ^ CreateServerSocket(int port, int backlog);" />
      <MemberSignature Language="C#" Value="public abstract Java.Net.ServerSocket? CreateServerSocket (int port, int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.ServerSocket CreateServerSocket(int32 port, int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.ServerSocketFactory.CreateServerSocket(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreateServerSocket : int * int -&gt; Java.Net.ServerSocket" Usage="serverSocketFactory.CreateServerSocket (port, backlog)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createServerSocket", "(II)Ljava/net/ServerSocket;", "GetCreateServerSocket_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createServerSocket", "(II)Ljava/net/ServerSocket;", "GetCreateServerSocket_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.ServerSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">the port to listen to</param>
        <param name="backlog">how many connections are queued</param>
        <summary>Returns a server socket bound to the specified port, and uses the
            specified connection backlog.</summary>
        <returns>the <c>ServerSocket</c></returns>
        <remarks>
          <para>Returns a server socket bound to the specified port, and uses the
            specified connection backlog.  The socket is configured with
            the socket options (such as accept timeout) given to this factory.</para>
          <para>The <c>backlog</c> argument must be a positive
            value greater than 0. If the value passed if equal or less
            than 0, then the default value will be assumed.</para>
          <para>If there is a security manager, its <c>checkListen</c>
            method is called with the <c>port</c> argument as its
            argument to ensure the operation is allowed. This could result
            in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ServerSocketFactory#createServerSocket(int,%20int)" title="Reference documentation">Java documentation for <code>javax.net.ServerSocketFactory.createServerSocket(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new server socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateServerSocket">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateServerSocket (port As Integer, backlog As Integer, ifAddress As InetAddress) As ServerSocket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Net::ServerSocket ^ CreateServerSocket(int port, int backlog, Java::Net::InetAddress ^ ifAddress);" />
      <MemberSignature Language="C#" Value="public abstract Java.Net.ServerSocket? CreateServerSocket (int port, int backlog, Java.Net.InetAddress? ifAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.ServerSocket CreateServerSocket(int32 port, int32 backlog, class Java.Net.InetAddress ifAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.ServerSocketFactory.CreateServerSocket(System.Int32,System.Int32,Java.Net.InetAddress)" />
      <MemberSignature Language="F#" Value="abstract member CreateServerSocket : int * int * Java.Net.InetAddress -&gt; Java.Net.ServerSocket" Usage="serverSocketFactory.CreateServerSocket (port, backlog, ifAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createServerSocket", "(IILjava/net/InetAddress;)Ljava/net/ServerSocket;", "GetCreateServerSocket_IILjava_net_InetAddress_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createServerSocket", "(IILjava/net/InetAddress;)Ljava/net/ServerSocket;", "GetCreateServerSocket_IILjava_net_InetAddress_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.ServerSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="backlog" Type="System.Int32" />
        <Parameter Name="ifAddress" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="port">the port to listen to</param>
        <param name="backlog">how many connections are queued</param>
        <param name="ifAddress">the network interface address to use</param>
        <summary>Returns a server socket bound to the specified port,
            with a specified listen backlog and local IP.</summary>
        <returns>the <c>ServerSocket</c></returns>
        <remarks>
          <para>Returns a server socket bound to the specified port,
            with a specified listen backlog and local IP.</para>
          <para>The <c>ifAddress</c> argument can be used on a multi-homed
            host for a <c>ServerSocket</c> that will only accept connect
            requests to one of its addresses. If <c>ifAddress</c> is null,
            it will accept connections on all local addresses. The socket is
            configured with the socket options (such as accept timeout) given
            to this factory.</para>
          <para>The <c>backlog</c> argument must be a positive
            value greater than 0. If the value passed if equal or less
            than 0, then the default value will be assumed.</para>
          <para>If there is a security manager, its <c>checkListen</c>
            method is called with the <c>port</c> argument as its
            argument to ensure the operation is allowed. This could result
            in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ServerSocketFactory#createServerSocket(int,%20int,%20java.net.InetAddress)" title="Reference documentation">Java documentation for <code>javax.net.ServerSocketFactory.createServerSocket(int, int, java.net.InetAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new server socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As ServerSocketFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Javax::Net::ServerSocketFactory ^ Default { Javax::Net::ServerSocketFactory ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Javax.Net.ServerSocketFactory? Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Javax.Net.ServerSocketFactory Default" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.ServerSocketFactory.Default" />
      <MemberSignature Language="F#" Value="member this.Default : Javax.Net.ServerSocketFactory" Usage="Javax.Net.ServerSocketFactory.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDefault", "()Ljavax/net/ServerSocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDefault", "()Ljavax/net/ServerSocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.ServerSocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a copy of the environment's default socket factory.</summary>
        <value>the <c>ServerSocketFactory</c></value>
        <remarks>
          <para>Returns a copy of the environment's default socket factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ServerSocketFactory#getDefault()" title="Reference documentation">Java documentation for <code>javax.net.ServerSocketFactory.getDefault()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.ServerSocketFactory.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Net.ServerSocketFactory.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.ServerSocketFactory.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Net.ServerSocketFactory.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.ServerSocketFactory.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Net.ServerSocketFactory.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
