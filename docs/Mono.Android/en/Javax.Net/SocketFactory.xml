<Type Name="SocketFactory" FullName="Javax.Net.SocketFactory">
  <TypeSignature Language="C#" Value="public abstract class SocketFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SocketFactory extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Net.SocketFactory" />
  <TypeSignature Language="F#" Value="type SocketFactory = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/net/SocketFactory", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/net/SocketFactory", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class creates sockets.</summary>
    <remarks>
      <para>This class creates sockets.  It may be subclassed by other factories,
            which create particular subclasses of sockets and thus provide a general
            framework for the addition of public socket-level functionality.</para>
      <para>Socket factories are a simple way to capture a variety of policies
            related to the sockets being constructed, producing such sockets in
            a way which does not require special configuration of the code which
            asks for the sockets:  &lt;UL&gt;
            
                 &lt;LI&gt; Due to polymorphism of both factories and sockets, different
                 kinds of sockets can be used by the same application code just
                 by passing it different kinds of factories.
            
                 &lt;LI&gt; Factories can themselves be customized with parameters used
                 in socket construction.  So for example, factories could be
                 customized to return sockets with different networking timeouts
                 or security parameters already configured.
            
                 &lt;LI&gt; The sockets returned to the application can be subclasses
                 of java.net.Socket, so that they can directly expose new APIs
                 for features such as compression, security, record marking,
                 statistics collection, or firewall tunneling.
            
                 &lt;/UL&gt;</para>
      <para>Factory classes are specified by environment-specific configuration
            mechanisms.  For example, the &lt;em&gt;getDefault&lt;/em&gt; method could return
            a factory that was appropriate for a particular user or applet, and a
            framework could use a factory customized to its own purposes.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/net/SocketFactory" title="Reference documentation">Java documentation for <code>javax.net.SocketFactory</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SocketFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.SocketFactory.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a <c>SocketFactory</c>.</summary>
        <remarks>
          <para>Creates a <c>SocketFactory</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/SocketFactory#SocketFactory()" title="Reference documentation">Java documentation for <code>javax.net.SocketFactory.SocketFactory()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SocketFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.SocketFactory.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Net.SocketFactory : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Net.SocketFactory" Usage="new Javax.Net.SocketFactory (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public virtual Java.Net.Socket? CreateSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket CreateSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.SocketFactory.CreateSocket" />
      <MemberSignature Language="F#" Value="abstract member CreateSocket : unit -&gt; Java.Net.Socket&#xA;override this.CreateSocket : unit -&gt; Java.Net.Socket" Usage="socketFactory.CreateSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "()Ljava/net/Socket;", "GetCreateSocketHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "()Ljava/net/Socket;", "GetCreateSocketHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an unconnected socket.</summary>
        <returns>the unconnected socket</returns>
        <remarks>
          <para>Creates an unconnected socket.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/SocketFactory#createSocket()" title="Reference documentation">Java documentation for <code>javax.net.SocketFactory.createSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public abstract Java.Net.Socket? CreateSocket (Java.Net.InetAddress? host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket CreateSocket(class Java.Net.InetAddress host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.SocketFactory.CreateSocket(Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreateSocket : Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="socketFactory.CreateSocket (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the server host</param>
        <param name="port">the server port</param>
        <summary>Creates a socket and connects it to the specified port number
            at the specified address.</summary>
        <returns>the <c>Socket</c></returns>
        <remarks>
          <para>Creates a socket and connects it to the specified port number
            at the specified address.  This socket is configured using
            the socket options established for this factory.</para>
          <para>If there is a security manager, its <c>checkConnect</c>
            method is called with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/SocketFactory#createSocket(java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>javax.net.SocketFactory.createSocket(java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public abstract Java.Net.Socket? CreateSocket (string? host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket CreateSocket(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.SocketFactory.CreateSocket(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreateSocket : string * int -&gt; Java.Net.Socket" Usage="socketFactory.CreateSocket (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/lang/String;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/lang/String;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the server host name with which to connect, or
                   <c>null</c> for the loopback address.</param>
        <param name="port">the server port</param>
        <summary>Creates a socket and connects it to the specified remote host
            at the specified remote port.</summary>
        <returns>the <c>Socket</c></returns>
        <remarks>
          <para>Creates a socket and connects it to the specified remote host
            at the specified remote port.  This socket is configured using
            the socket options established for this factory.</para>
          <para>If there is a security manager, its <c>checkConnect</c>
            method is called with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/SocketFactory#createSocket(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>javax.net.SocketFactory.createSocket(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new socket.</exception>
        <exception cref="T:Java.Net.UnknownHostException">if the specified host is unknown or the IP address could not
             be resolved.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public abstract Java.Net.Socket? CreateSocket (Java.Net.InetAddress? address, int port, Java.Net.InetAddress? localAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket CreateSocket(class Java.Net.InetAddress address, int32 port, class Java.Net.InetAddress localAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.SocketFactory.CreateSocket(Java.Net.InetAddress,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreateSocket : Java.Net.InetAddress * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="socketFactory.CreateSocket (address, port, localAddress, localPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_ILjava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_ILjava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddress" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">the server network address</param>
        <param name="port">the server port</param>
        <param name="localAddress">the client network address</param>
        <param name="localPort">the client port</param>
        <summary>Creates a socket and connect it to the specified remote address
            on the specified remote port.</summary>
        <returns>the <c>Socket</c></returns>
        <remarks>
          <para>Creates a socket and connect it to the specified remote address
            on the specified remote port.  The socket will also be bound
            to the local address and port suplied.  The socket is configured using
            the socket options established for this factory.</para>
          <para>If there is a security manager, its <c>checkConnect</c>
            method is called with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/SocketFactory#createSocket(java.net.InetAddress,%20int,%20java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>javax.net.SocketFactory.createSocket(java.net.InetAddress, int, java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public abstract Java.Net.Socket? CreateSocket (string? host, int port, Java.Net.InetAddress? localHost, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket CreateSocket(string host, int32 port, class Java.Net.InetAddress localHost, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.SocketFactory.CreateSocket(System.String,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreateSocket : string * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="socketFactory.CreateSocket (host, port, localHost, localPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_ILjava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_ILjava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localHost" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the server host name with which to connect, or
                   <c>null</c> for the loopback address.</param>
        <param name="port">the server port</param>
        <param name="localHost">the local address the socket is bound to</param>
        <param name="localPort">the local port the socket is bound to</param>
        <summary>Creates a socket and connects it to the specified remote host
            on the specified remote port.</summary>
        <returns>the <c>Socket</c></returns>
        <remarks>
          <para>Creates a socket and connects it to the specified remote host
            on the specified remote port.
            The socket will also be bound to the local address and port supplied.
            This socket is configured using
            the socket options established for this factory.</para>
          <para>If there is a security manager, its <c>checkConnect</c>
            method is called with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/SocketFactory#createSocket(java.lang.String,%20int,%20java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>javax.net.SocketFactory.createSocket(java.lang.String, int, java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating a new socket.</exception>
        <exception cref="T:Java.Net.UnknownHostException">if the specified host is unknown or the IP address could not
             be resolved.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Javax.Net.SocketFactory? Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Javax.Net.SocketFactory Default" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.SocketFactory.Default" />
      <MemberSignature Language="F#" Value="static member Default : Javax.Net.SocketFactory" Usage="Javax.Net.SocketFactory.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDefault", "()Ljavax/net/SocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDefault", "()Ljavax/net/SocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.SocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a copy of the environment's default socket factory.</summary>
        <value>the default <c>SocketFactory</c></value>
        <remarks>
          <para>Returns a copy of the environment's default socket factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/SocketFactory#getDefault()" title="Reference documentation">Java documentation for <code>javax.net.SocketFactory.getDefault()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.SocketFactory.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Net.SocketFactory.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.SocketFactory.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Net.SocketFactory.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.SocketFactory.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Net.SocketFactory.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
