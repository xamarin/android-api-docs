<Type Name="ClassValue" FullName="Java.Lang.ClassValue">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ClassValue&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClassValue abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class ClassValue : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ClassValue extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.ClassValue" />
  <TypeSignature Language="F#" Value="type ClassValue = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/ClassValue", ApiSince=34, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/ClassValue", ApiSince=34, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Lazily associate a computed value with (potentially) every type.</summary>
    <remarks>
      <para>Lazily associate a computed value with (potentially) every type.
            For example, if a dynamic language needs to construct a message dispatch
            table for each class encountered at a message send call site,
            it can use a <c>ClassValue</c> to cache information needed to
            perform the message send quickly, for each class encountered.</para>
      <para>Added in 1.7.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/ClassValue" title="Reference documentation">Java documentation for <code>java.lang.ClassValue</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClassValue();" />
      <MemberSignature Language="C#" Value="protected ClassValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassValue.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Sole constructor.</summary>
        <remarks>
          <para>Sole constructor.  (For invocation by subclass constructors, typically
            implicit.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassValue#ClassValue()" title="Reference documentation">Java documentation for <code>java.lang.ClassValue.ClassValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClassValue(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ClassValue (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassValue.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ClassValue : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.ClassValue" Usage="new Java.Lang.ClassValue (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeValue">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ComputeValue (type As Class) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Java::Lang::Object ^ ComputeValue(Java::Lang::Class ^ type);" />
      <MemberSignature Language="C#" Value="protected abstract Java.Lang.Object? ComputeValue (Java.Lang.Class? type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ComputeValue(class Java.Lang.Class type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassValue.ComputeValue(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member ComputeValue : Java.Lang.Class -&gt; Java.Lang.Object" Usage="classValue.ComputeValue type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeValue", "(Ljava/lang/Class;)Ljava/lang/Object;", "GetComputeValue_Ljava_lang_Class_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeValue", "(Ljava/lang/Class;)Ljava/lang/Object;", "GetComputeValue_Ljava_lang_Class_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="type">the type whose class value must be computed</param>
        <summary>Computes the given class's derived value for this <c>ClassValue</c>.</summary>
        <returns>the newly computed value associated with this <c>ClassValue</c>, for the given class or interface</returns>
        <remarks>
          <para>Computes the given class's derived value for this <c>ClassValue</c>.</para>
          <para>This method will be invoked within the first thread that accesses
            the value with the <c>#get get</c> method.</para>
          <para>Normally, this method is invoked at most once per class,
            but it may be invoked again if there has been a call to
            <c>#remove remove</c>.</para>
          <para>If this method throws an exception, the corresponding call to <c>get</c>
            will terminate abnormally with that exception, and no class value will be recorded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassValue#computeValue(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>java.lang.ClassValue.computeValue(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (type As Class) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::Object ^ Get(Java::Lang::Class ^ type);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Get (Java.Lang.Class? type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Get(class Java.Lang.Class type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassValue.Get(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member Get : Java.Lang.Class -&gt; Java.Lang.Object&#xA;override this.Get : Java.Lang.Class -&gt; Java.Lang.Object" Usage="classValue.Get type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(Ljava/lang/Class;)Ljava/lang/Object;", "GetGet_Ljava_lang_Class_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(Ljava/lang/Class;)Ljava/lang/Object;", "GetGet_Ljava_lang_Class_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="type">the type whose class value must be computed or retrieved</param>
        <summary>Returns the value for the given class.</summary>
        <returns>the current value associated with this <c>ClassValue</c>, for the given class or interface</returns>
        <remarks>
          <para>Returns the value for the given class.
            If no value has yet been computed, it is obtained by
            an invocation of the <c>#computeValue computeValue</c> method.</para>
          <para>The actual installation of the value on the class
            is performed atomically.
            At that point, if several racing threads have
            computed values, one is chosen, and returned to
            all the racing threads.</para>
          <para>The <c>type</c> parameter is typically a class, but it may be any type,
            such as an interface, a primitive type (like <c>int.class</c>), or <c>void.class</c>.</para>
          <para>In the absence of <c>remove</c> calls, a class value has a simple
            state diagram:  uninitialized and initialized.
            When <c>remove</c> calls are made,
            the rules for value observation are more complex.
            See the documentation for <c>#remove remove</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassValue#get(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>java.lang.ClassValue.get(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ClassValue.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.ClassValue.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (type As Class)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(Java::Lang::Class ^ type);" />
      <MemberSignature Language="C#" Value="public virtual void Remove (Java.Lang.Class? type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class Java.Lang.Class type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassValue.Remove(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member Remove : Java.Lang.Class -&gt; unit&#xA;override this.Remove : Java.Lang.Class -&gt; unit" Usage="classValue.Remove type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "(Ljava/lang/Class;)V", "GetRemove_Ljava_lang_Class_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "(Ljava/lang/Class;)V", "GetRemove_Ljava_lang_Class_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="type">the type whose class value must be removed</param>
        <summary>Removes the associated value for the given class.</summary>
        <remarks>
          <para>Removes the associated value for the given class.
            If this value is subsequently #get read for the same class,
            its value will be reinitialized by invoking its <c>#computeValue computeValue</c> method.
            This may result in an additional invocation of the
            <c>computeValue</c> method for the given class.</para>
          <para>In order to explain the interaction between <c>get</c> and <c>remove</c> calls,
            we must model the state transitions of a class value to take into account
            the alternation between uninitialized and initialized states.
            To do this, number these states sequentially from zero, and note that
            uninitialized (or removed) states are numbered with even numbers,
            while initialized (or re-initialized) states have odd numbers.</para>
          <para>When a thread <c>T</c> removes a class value in state <c>2N</c>,
            nothing happens, since the class value is already uninitialized.
            Otherwise, the state is advanced atomically to <c>2N+1</c>.</para>
          <para>When a thread <c>T</c> queries a class value in state <c>2N</c>,
            the thread first attempts to initialize the class value to state <c>2N+1</c>
            by invoking <c>computeValue</c> and installing the resulting value.</para>
          <para>When <c>T</c> attempts to install the newly computed value,
            if the state is still at <c>2N</c>, the class value will be initialized
            with the computed value, advancing it to state <c>2N+1</c>.</para>
          <para>Otherwise, whether the new state is even or odd,
            <c>T</c> will discard the newly computed value
            and retry the <c>get</c> operation.</para>
          <para>Discarding and retrying is an important proviso,
            since otherwise <c>T</c> could potentially install
            a disastrously stale value.  For example:
            &lt;ul&gt;
            &lt;li&gt;<c>T</c> calls <c>CV.get(C)</c> and sees state <c>2N</c>&lt;li&gt;<c>T</c> quickly computes a time-dependent value <c>V0</c> and gets ready to install it
            &lt;li&gt;<c>T</c> is hit by an unlucky paging or scheduling event, and goes to sleep for a long time
            &lt;li&gt;...meanwhile, <c>T2</c> also calls <c>CV.get(C)</c> and sees state <c>2N</c>&lt;li&gt;<c>T2</c> quickly computes a similar time-dependent value <c>V1</c> and installs it on <c>CV.get(C)</c>&lt;li&gt;<c>T2</c> (or a third thread) then calls <c>CV.remove(C)</c>, undoing <c>T2</c>'s work
            &lt;li&gt; the previous actions of <c>T2</c> are repeated several times
            &lt;li&gt; also, the relevant computed values change over time: <c>V1</c>, <c>V2</c>, ...
            &lt;li&gt;...meanwhile, <c>T</c> wakes up and attempts to install <c>V0</c>; &lt;em&gt;this must fail&lt;/em&gt;
            &lt;/ul&gt;
            We can assume in the above scenario that <c>CV.computeValue</c> uses locks to properly
            observe the time-dependent states as it computes <c>V1</c>, etc.
            This does not remove the threat of a stale value, since there is a window of time
            between the return of <c>computeValue</c> in <c>T</c> and the installation
            of the new value.  No user synchronization is possible during this time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassValue#remove(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>java.lang.ClassValue.remove(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ClassValue.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.ClassValue.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ClassValue.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.ClassValue.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
