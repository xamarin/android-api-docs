<Type Name="ClassLoader" FullName="Java.Lang.ClassLoader">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ClassLoader&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClassLoader abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class ClassLoader : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ClassLoader extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.ClassLoader" />
  <TypeSignature Language="F#" Value="type ClassLoader = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/ClassLoader", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/ClassLoader", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A class loader is an object that is responsible for loading classes.</summary>
    <remarks>
      <para>A class loader is an object that is responsible for loading classes. The
            class <c>ClassLoader</c> is an abstract class.  Given the binary name of a class, a class loader should attempt to
            locate or generate data that constitutes a definition for the class.  A
            typical strategy is to transform the name into a file name and then read a
            "class file" of that name from a file system.</para>
      <para>Every <c>Class &lt;tt&gt;Class&lt;/tt&gt;</c> object contains a <c>Class#getClassLoader() reference</c> to the <c>ClassLoader</c> that defined
            it.</para>
      <para>
        <c>Class</c> objects for array classes are not created by class
            loaders, but are created automatically as required by the Java runtime.
            The class loader for an array class, as returned by <c>Class#getClassLoader()</c> is the same as the class loader for its element
            type; if the element type is a primitive type, then the array class has no
            class loader.</para>
      <para>Applications implement subclasses of <c>ClassLoader</c> in order to
            extend the manner in which the Java virtual machine dynamically loads
            classes.</para>
      <para>Class loaders may typically be used by security managers to indicate
            security domains.</para>
      <para>The <c>ClassLoader</c> class uses a delegation model to search for
            classes and resources.  Each instance of <c>ClassLoader</c> has an
            associated parent class loader.  When requested to find a class or
            resource, a <c>ClassLoader</c> instance will delegate the search for the
            class or resource to its parent class loader before attempting to find the
            class or resource itself.  The virtual machine's built-in class loader,
            called the "bootstrap class loader", does not itself have a parent but may
            serve as the parent of a <c>ClassLoader</c> instance.</para>
      <para>Class loaders that support concurrent loading of classes are known as
            &lt;em&gt;parallel capable&lt;/em&gt; class loaders and are required to register
            themselves at their class initialization time by invoking the
            <c>#registerAsParallelCapable &lt;tt&gt;ClassLoader.registerAsParallelCapable&lt;/tt&gt;</c>
            method. Note that the <c>ClassLoader</c> class is registered as parallel
            capable by default. However, its subclasses still need to register themselves
            if they are parallel capable. &lt;br&gt;
            In environments in which the delegation model is not strictly
            hierarchical, class loaders need to be parallel capable, otherwise class
            loading can lead to deadlocks because the loader lock is held for the
            duration of the class loading process (see <c>#loadClass
            &lt;tt&gt;loadClass&lt;/tt&gt;</c> methods).</para>
      <para>Normally, the Java virtual machine loads classes from the local file
            system in a platform-dependent manner.  For example, on UNIX systems, the
            virtual machine loads classes from the directory defined by the
            <c>CLASSPATH</c> environment variable.</para>
      <para>However, some classes may not originate from a file; they may originate
            from other sources, such as the network, or they could be constructed by an
            application.  The method <c>#defineClass(String, byte[], int, int)
            &lt;tt&gt;defineClass&lt;/tt&gt;</c> converts an array of bytes into an instance of class
            <c>Class</c>. Instances of this newly defined class can be created using
            <c>Class#newInstance &lt;tt&gt;Class.newInstance&lt;/tt&gt;</c>.</para>
      <para>The methods and constructors of objects created by a class loader may
            reference other classes.  To determine the class(es) referred to, the Java
            virtual machine invokes the <c>#loadClass &lt;tt&gt;loadClass&lt;/tt&gt;</c> method of
            the class loader that originally created the class.</para>
      <para>For example, an application could create a network class loader to
            download class files from a server.  Sample code might look like:
            
            &lt;blockquote&gt;</para>
      <code lang="text/java">ClassLoader loader&amp;nbsp;= new NetworkClassLoader(host,&amp;nbsp;port);
              Object main&amp;nbsp;= loader.loadClass("Main", true).newInstance();
                  &amp;nbsp;.&amp;nbsp;.&amp;nbsp;.
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>The network class loader subclass must define the methods <c>#findClass &lt;tt&gt;findClass&lt;/tt&gt;</c> and <c>loadClassData</c> to load a class
            from the network.  Once it has downloaded the bytes that make up the class,
            it should use the method <c>#defineClass &lt;tt&gt;defineClass&lt;/tt&gt;</c> to
            create a class instance.  A sample implementation is:
            
            &lt;blockquote&gt;</para>
      <code lang="text/java">class NetworkClassLoader extends ClassLoader {
                    String host;
                    int port;
            
                    public Class findClass(String name) {
                        byte[] b = loadClassData(name);
                        return defineClass(name, b, 0, b.length);
                    }
            
                    private byte[] loadClassData(String name) {
                        // load the class data from the connection
                        &amp;nbsp;.&amp;nbsp;.&amp;nbsp;.
                    }
                }
            </code>
      <para>&lt;/blockquote&gt;
            
            &lt;h3&gt; "name"&gt;Binary names&lt;/h3&gt;</para>
      <para>Any class name provided as a <c>String</c> parameter to methods in
            <c>ClassLoader</c> must be a binary name as defined by
            &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.</para>
      <para>Examples of valid class names include:
            &lt;blockquote&gt;</para>
      <code lang="text/java">"java.lang.String"
              "javax.swing.JSpinner$DefaultEditor"
              "java.security.KeyStore$Builder$FileBuilder$1"
              "java.net.URLClassLoader$3$1"
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/ClassLoader" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClassLoader();" />
      <MemberSignature Language="C#" Value="protected ClassLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new class loader using the <c>ClassLoader</c> returned by
            the method <c>#getSystemClassLoader()
            &lt;tt&gt;getSystemClassLoader()&lt;/tt&gt;</c> as the parent class loader.</summary>
        <remarks>
          <para>Creates a new class loader using the <c>ClassLoader</c> returned by
            the method <c>#getSystemClassLoader()
            &lt;tt&gt;getSystemClassLoader()&lt;/tt&gt;</c> as the parent class loader.</para>
          <para>If there is a security manager, its <c>SecurityManager#checkCreateClassLoader()
            &lt;tt&gt;checkCreateClassLoader&lt;/tt&gt;</c> method is invoked.  This may result in
            a security exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#ClassLoader()" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.ClassLoader()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As ClassLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClassLoader(Java::Lang::ClassLoader ^ parent);" />
      <MemberSignature Language="C#" Value="protected ClassLoader (Java.Lang.ClassLoader? parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ClassLoader parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.#ctor(Java.Lang.ClassLoader)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ClassLoader : Java.Lang.ClassLoader -&gt; Java.Lang.ClassLoader" Usage="new Java.Lang.ClassLoader parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/ClassLoader;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/ClassLoader;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="parent">The parent class loader</param>
        <summary>Creates a new class loader using the specified parent class loader for
            delegation.</summary>
        <remarks>
          <para>Creates a new class loader using the specified parent class loader for
            delegation.</para>
          <para>If there is a security manager, its <c>SecurityManager#checkCreateClassLoader()
            &lt;tt&gt;checkCreateClassLoader&lt;/tt&gt;</c> method is invoked.  This may result in
            a security exception.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#ClassLoader(java.lang.ClassLoader)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.ClassLoader(java.lang.ClassLoader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClassLoader(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ClassLoader (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ClassLoader : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.ClassLoader" Usage="new Java.Lang.ClassLoader (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAssertionStatus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearAssertionStatus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearAssertionStatus();" />
      <MemberSignature Language="C#" Value="public virtual void ClearAssertionStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAssertionStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.ClearAssertionStatus" />
      <MemberSignature Language="F#" Value="abstract member ClearAssertionStatus : unit -&gt; unit&#xA;override this.ClearAssertionStatus : unit -&gt; unit" Usage="classLoader.ClearAssertionStatus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearAssertionStatus", "()V", "GetClearAssertionStatusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearAssertionStatus", "()V", "GetClearAssertionStatusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the default assertion status for this class loader to
            <c>false</c> and discards any package defaults or class assertion
            status settings associated with the class loader.</summary>
        <remarks>
          <para>Sets the default assertion status for this class loader to
            <c>false</c> and discards any package defaults or class assertion
            status settings associated with the class loader.  This method is
            provided so that class loaders can be made to ignore any command line or
            persistent assertion status settings and "start with a clean slate."
            
            Android-note: AssertionStatuses are unsupported. This method is a no-op.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#clearAssertionStatus()" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.clearAssertionStatus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefineClass">
      <MemberSignature Language="VB.NET" Value="Protected Function DefineClass (b As Byte(), off As Integer, len As Integer) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Java::Lang::Class ^ DefineClass(cli::array &lt;System::Byte&gt; ^ b, int off, int len);" />
      <MemberSignature Language="C#" Value="protected Java.Lang.Class? DefineClass (byte[]? b, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Java.Lang.Class DefineClass(unsigned int8[] b, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.DefineClass(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DefineClass : byte[] * int * int -&gt; Java.Lang.Class" Usage="classLoader.DefineClass (b, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("defineClass", "([BII)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("defineClass", "([BII)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="b">The bytes that make up the class data.  The bytes in positions
                    <c>off</c> through <c>off+len-1</c> should have the format
                    of a valid class file as defined by
                    &lt;cite&gt;The Java&amp;trade; Virtual Machine Specification&lt;/cite&gt;.</param>
        <param name="off">The start offset in <c>b</c> of the class data</param>
        <param name="len">The length of the class data</param>
        <summary>Converts an array of bytes into an instance of class <c>Class</c>.</summary>
        <returns>The <c>Class</c> object that was created from the specified
                     class data</returns>
        <remarks>
          <para>Converts an array of bytes into an instance of class <c>Class</c>.
            Before the <c>Class</c> can be used it must be resolved.  This method
            is deprecated in favor of the version that takes a binary name as its first argument, and is more secure.</para>
          <para>This member is deprecated. Replaced by <c>#defineClass(String, byte[], int, int)
            defineClass(String, byte[], int, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#defineClass(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.defineClass(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassFormatError">if <c>classRep</c> does not contain a valid class.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c>, <c>length </c> or if
             <c>offset + length</c> is greater than the length of
             <c>classRep</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefineClass">
      <MemberSignature Language="VB.NET" Value="Protected Function DefineClass (name As String, b As ByteBuffer, protectionDomain As ProtectionDomain) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Java::Lang::Class ^ DefineClass(System::String ^ name, Java::Nio::ByteBuffer ^ b, Java::Security::ProtectionDomain ^ protectionDomain);" />
      <MemberSignature Language="C#" Value="protected Java.Lang.Class? DefineClass (string? name, Java.Nio.ByteBuffer? b, Java.Security.ProtectionDomain? protectionDomain);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Java.Lang.Class DefineClass(string name, class Java.Nio.ByteBuffer b, class Java.Security.ProtectionDomain protectionDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.DefineClass(System.String,Java.Nio.ByteBuffer,Java.Security.ProtectionDomain)" />
      <MemberSignature Language="F#" Value="member this.DefineClass : string * Java.Nio.ByteBuffer * Java.Security.ProtectionDomain -&gt; Java.Lang.Class" Usage="classLoader.DefineClass (name, b, protectionDomain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("defineClass", "(Ljava/lang/String;Ljava/nio/ByteBuffer;Ljava/security/ProtectionDomain;)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("defineClass", "(Ljava/lang/String;Ljava/nio/ByteBuffer;Ljava/security/ProtectionDomain;)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="b" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="protectionDomain" Type="Java.Security.ProtectionDomain" />
      </Parameters>
      <Docs>
        <param name="name">The expected binary name. of the class, or
                    <c>null</c> if not known</param>
        <param name="b">The bytes that make up the class data. The bytes from positions
                    <c>b.position()</c> through <c>b.position() + b.limit() -1
                    </c> should have the format of a valid class file as defined by
                    &lt;cite&gt;The Java&amp;trade; Virtual Machine Specification&lt;/cite&gt;.</param>
        <param name="protectionDomain">The ProtectionDomain of the class, or <c>null</c>.</param>
        <summary>Converts a <c>java.nio.ByteBuffer &lt;tt&gt;ByteBuffer&lt;/tt&gt;</c>
            into an instance of class <c>Class</c>,
            with an optional <c>ProtectionDomain</c>.</summary>
        <returns>The <c>Class</c> object created from the data,
                     and optional <c>ProtectionDomain</c>.</returns>
        <remarks>
          <para>Converts a <c>java.nio.ByteBuffer &lt;tt&gt;ByteBuffer&lt;/tt&gt;</c>
            into an instance of class <c>Class</c>,
            with an optional <c>ProtectionDomain</c>.  If the domain is
            <c>null</c>, then a default domain will be assigned to the class as
            specified in the documentation for <c>#defineClass(String, byte[],
            int, int)</c>.  Before the class can be used it must be resolved.</para>
          <para>The rules about the first class defined in a package determining the
            set of certificates for the package, and the restrictions on class names
            are identical to those specified in the documentation for <c>#defineClass(String, byte[], int, int, ProtectionDomain)</c>.</para>
          <para>An invocation of this method of the form
            <i>cl</i><c>.defineClass(</c><i>name</i><c>,</c><i>bBuffer</i><c>,</c><i>pd</i><c>)</c> yields exactly the same
            result as the statements</para>
          <para>
            <c>
            ...&lt;br&gt;
            byte[] temp = new byte[bBuffer.<c>java.nio.ByteBuffer#remaining remaining</c>()];&lt;br&gt;
                bBuffer.<c>java.nio.ByteBuffer#get(byte[])
            get</c>(temp);&lt;br&gt;
                return <c>#defineClass(String, byte[], int, int, ProtectionDomain)
            cl.defineClass</c>(name, temp, 0,
            temp.length, pd);&lt;br&gt;
            </c>
          </para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#defineClass(java.lang.String,%20java.nio.ByteBuffer,%20java.security.ProtectionDomain)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.defineClass(java.lang.String, java.nio.ByteBuffer, java.security.ProtectionDomain)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassFormatError">if <c>b</c> does not contain a valid class.</exception>
        <exception cref="T:Java.Lang.NoClassDefFoundError">if <c>className</c> is not equal to the name of the class
             contained in <c>b</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DefineClass">
      <MemberSignature Language="VB.NET" Value="Protected Function DefineClass (name As String, b As Byte(), off As Integer, len As Integer) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Java::Lang::Class ^ DefineClass(System::String ^ name, cli::array &lt;System::Byte&gt; ^ b, int off, int len);" />
      <MemberSignature Language="C#" Value="protected Java.Lang.Class? DefineClass (string? name, byte[]? b, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Java.Lang.Class DefineClass(string name, unsigned int8[] b, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.DefineClass(System.String,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DefineClass : string * byte[] * int * int -&gt; Java.Lang.Class" Usage="classLoader.DefineClass (name, b, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("defineClass", "(Ljava/lang/String;[BII)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("defineClass", "(Ljava/lang/String;[BII)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">The expected binary name of the class, or
                    <c>null</c> if not known</param>
        <param name="b">The bytes that make up the class data.  The bytes in positions
                    <c>off</c> through <c>off+len-1</c> should have the format
                    of a valid class file as defined by
                    &lt;cite&gt;The Java&amp;trade; Virtual Machine Specification&lt;/cite&gt;.</param>
        <param name="off">The start offset in <c>b</c> of the class data</param>
        <param name="len">The length of the class data</param>
        <summary>Converts an array of bytes into an instance of class <c>Class</c>.</summary>
        <returns>The <c>Class</c> object that was created from the specified
                     class data.</returns>
        <remarks>
          <para>Converts an array of bytes into an instance of class <c>Class</c>.
            Before the <c>Class</c> can be used it must be resolved.</para>
          <para>This method assigns a default <c>java.security.ProtectionDomain
            &lt;tt&gt;ProtectionDomain&lt;/tt&gt;</c> to the newly defined class.  The
            <c>ProtectionDomain</c> is effectively granted the same set of
            permissions returned when <c>java.security.Policy#getPermissions(java.security.CodeSource)
            &lt;tt&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/tt&gt;</c>
            is invoked.  The default domain is created on the first invocation of
            <c>#defineClass(String, byte[], int, int) &lt;tt&gt;defineClass&lt;/tt&gt;</c>,
            and re-used on subsequent invocations.</para>
          <para>To assign a specific <c>ProtectionDomain</c> to the class, use
            the <c>#defineClass(String, byte[], int, int,
            java.security.ProtectionDomain) &lt;tt&gt;defineClass&lt;/tt&gt;</c> method that takes a
            <c>ProtectionDomain</c> as one of its arguments.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#defineClass(java.lang.String,%20byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.defineClass(java.lang.String, byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassFormatError">if <c>classRep</c> does not contain a valid class.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c>, <c>length </c> or if
             <c>offset + length</c> is greater than the length of
             <c>classRep</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DefineClass">
      <MemberSignature Language="VB.NET" Value="Protected Function DefineClass (name As String, b As Byte(), off As Integer, len As Integer, protectionDomain As ProtectionDomain) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Java::Lang::Class ^ DefineClass(System::String ^ name, cli::array &lt;System::Byte&gt; ^ b, int off, int len, Java::Security::ProtectionDomain ^ protectionDomain);" />
      <MemberSignature Language="C#" Value="protected Java.Lang.Class? DefineClass (string? name, byte[]? b, int off, int len, Java.Security.ProtectionDomain? protectionDomain);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Java.Lang.Class DefineClass(string name, unsigned int8[] b, int32 off, int32 len, class Java.Security.ProtectionDomain protectionDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.DefineClass(System.String,System.Byte[],System.Int32,System.Int32,Java.Security.ProtectionDomain)" />
      <MemberSignature Language="F#" Value="member this.DefineClass : string * byte[] * int * int * Java.Security.ProtectionDomain -&gt; Java.Lang.Class" Usage="classLoader.DefineClass (name, b, off, len, protectionDomain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("defineClass", "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("defineClass", "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
        <Parameter Name="protectionDomain" Type="Java.Security.ProtectionDomain" />
      </Parameters>
      <Docs>
        <param name="name">The expected binary name of the class, or
                    <c>null</c> if not known</param>
        <param name="b">The bytes that make up the class data. The bytes in positions
                    <c>off</c> through <c>off+len-1</c> should have the format
                    of a valid class file as defined by
                    &lt;cite&gt;The Java&amp;trade; Virtual Machine Specification&lt;/cite&gt;.</param>
        <param name="off">The start offset in <c>b</c> of the class data</param>
        <param name="len">The length of the class data</param>
        <param name="protectionDomain">The ProtectionDomain of the class</param>
        <summary>Converts an array of bytes into an instance of class <c>Class</c>,
            with an optional <c>ProtectionDomain</c>.</summary>
        <returns>The <c>Class</c> object created from the data,
                     and optional <c>ProtectionDomain</c>.</returns>
        <remarks>
          <para>Converts an array of bytes into an instance of class <c>Class</c>,
            with an optional <c>ProtectionDomain</c>.  If the domain is
            <c>null</c>, then a default domain will be assigned to the class as
            specified in the documentation for <c>#defineClass(String, byte[],
            int, int)</c>.  Before the class can be used it must be resolved.</para>
          <para>The first class defined in a package determines the exact set of
            certificates that all subsequent classes defined in that package must
            contain.  The set of certificates for a class is obtained from the
            <c>java.security.CodeSource &lt;tt&gt;CodeSource&lt;/tt&gt;</c> within the
            <c>ProtectionDomain</c> of the class.  Any classes added to that
            package must contain the same set of certificates or a
            <c>SecurityException</c> will be thrown.  Note that if
            <c>name</c> is <c>null</c>, this check is not performed.
            You should always pass in the binary name of the
            class you are defining as well as the bytes.  This ensures that the
            class you are defining is indeed the class you think it is.</para>
          <para>The specified <c>name</c> cannot begin with "<c>java.</c>", since
            all classes in the "<c>java.*</c> packages can only be defined by the
            bootstrap class loader.  If <c>name</c> is not <c>null</c>, it
            must be equal to the binary name of the class
            specified by the byte array "<c>b</c>", otherwise a <c>NoClassDefFoundError &lt;tt&gt;NoClassDefFoundError&lt;/tt&gt;</c> will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#defineClass(java.lang.String,%20byte[],%20int,%20int,%20java.security.ProtectionDomain)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.defineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassFormatError">if <c>classRep</c> does not contain a valid class.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c>, <c>length </c> or if
             <c>offset + length</c> is greater than the length of
             <c>classRep</c>.</exception>
        <exception cref="T:Java.Lang.NoClassDefFoundError">if <c>className</c> is not equal to the name of the class
             contained in <c>classRep</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DefinePackage">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DefinePackage (name As String, specTitle As String, specVersion As String, specVendor As String, implTitle As String, implVersion As String, implVendor As String, sealBase As URL) As Package" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Lang::Package ^ DefinePackage(System::String ^ name, System::String ^ specTitle, System::String ^ specVersion, System::String ^ specVendor, System::String ^ implTitle, System::String ^ implVersion, System::String ^ implVendor, Java::Net::URL ^ sealBase);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Package? DefinePackage (string? name, string? specTitle, string? specVersion, string? specVendor, string? implTitle, string? implVersion, string? implVendor, Java.Net.URL? sealBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Package DefinePackage(string name, string specTitle, string specVersion, string specVendor, string implTitle, string implVersion, string implVendor, class Java.Net.URL sealBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.DefinePackage(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Java.Net.URL)" />
      <MemberSignature Language="F#" Value="abstract member DefinePackage : string * string * string * string * string * string * string * Java.Net.URL -&gt; Java.Lang.Package&#xA;override this.DefinePackage : string * string * string * string * string * string * string * Java.Net.URL -&gt; Java.Lang.Package" Usage="classLoader.DefinePackage (name, specTitle, specVersion, specVendor, implTitle, implVersion, implVendor, sealBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("definePackage", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;", "GetDefinePackage_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_net_URL_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("definePackage", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;", "GetDefinePackage_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_net_URL_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="specTitle" Type="System.String" />
        <Parameter Name="specVersion" Type="System.String" />
        <Parameter Name="specVendor" Type="System.String" />
        <Parameter Name="implTitle" Type="System.String" />
        <Parameter Name="implVersion" Type="System.String" />
        <Parameter Name="implVendor" Type="System.String" />
        <Parameter Name="sealBase" Type="Java.Net.URL" />
      </Parameters>
      <Docs>
        <param name="name">The package name</param>
        <param name="specTitle">The specification title</param>
        <param name="specVersion">The specification version</param>
        <param name="specVendor">The specification vendor</param>
        <param name="implTitle">The implementation title</param>
        <param name="implVersion">The implementation version</param>
        <param name="implVendor">The implementation vendor</param>
        <param name="sealBase">If not <c>null</c>, then this package is sealed with
                    respect to the given code source <c>java.net.URL
                    &lt;tt&gt;URL&lt;/tt&gt;</c>  object.  Otherwise, the package is not sealed.</param>
        <summary>Defines a package by name in this <c>ClassLoader</c>.</summary>
        <returns>The newly defined <c>Package</c> object</returns>
        <remarks>
          <para>Defines a package by name in this <c>ClassLoader</c>.  This allows
            class loaders to define the packages for their classes. Packages must
            be created before the class is defined, and package names must be
            unique within a class loader and cannot be redefined or changed once
            created.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#definePackage(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.net.URL)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.definePackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if a package with the specified name already exists.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FindClass">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindClass (name As String) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Lang::Class ^ FindClass(System::String ^ name);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Class? FindClass (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Class FindClass(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.FindClass(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FindClass : string -&gt; Java.Lang.Class&#xA;override this.FindClass : string -&gt; Java.Lang.Class" Usage="classLoader.FindClass name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findClass", "(Ljava/lang/String;)Ljava/lang/Class;", "GetFindClass_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findClass", "(Ljava/lang/String;)Ljava/lang/Class;", "GetFindClass_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The binary name of the class</param>
        <summary>Finds the class with the specified binary name.</summary>
        <returns>The resulting <c>Class</c> object</returns>
        <remarks>
          <para>Finds the class with the specified binary name.
            This method should be overridden by class loader implementations that
            follow the delegation model for loading classes, and will be invoked by
            the <c>#loadClass &lt;tt&gt;loadClass&lt;/tt&gt;</c> method after checking the
            parent class loader for the requested class.  The default implementation
            throws a <c>ClassNotFoundException</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#findClass(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.findClass(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FindLibrary">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindLibrary (libname As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FindLibrary(System::String ^ libname);" />
      <MemberSignature Language="C#" Value="protected virtual string? FindLibrary (string? libname);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FindLibrary(string libname) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.FindLibrary(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FindLibrary : string -&gt; string&#xA;override this.FindLibrary : string -&gt; string" Usage="classLoader.FindLibrary libname" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findLibrary", "(Ljava/lang/String;)Ljava/lang/String;", "GetFindLibrary_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findLibrary", "(Ljava/lang/String;)Ljava/lang/String;", "GetFindLibrary_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="libname">The library name</param>
        <summary>Returns the absolute path name of a native library.</summary>
        <returns>The absolute path of the native library</returns>
        <remarks>
          <para>Returns the absolute path name of a native library.  The VM invokes this
            method to locate the native libraries that belong to classes loaded with
            this class loader. If this method returns <c>null</c>, the VM
            searches the library along the path specified as the
            "<c>java.library.path</c>" property.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#findLibrary(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.findLibrary(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindLoadedClass">
      <MemberSignature Language="VB.NET" Value="Protected Function FindLoadedClass (name As String) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Java::Lang::Class ^ FindLoadedClass(System::String ^ name);" />
      <MemberSignature Language="C#" Value="protected Java.Lang.Class? FindLoadedClass (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Java.Lang.Class FindLoadedClass(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.FindLoadedClass(System.String)" />
      <MemberSignature Language="F#" Value="member this.FindLoadedClass : string -&gt; Java.Lang.Class" Usage="classLoader.FindLoadedClass name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findLoadedClass", "(Ljava/lang/String;)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findLoadedClass", "(Ljava/lang/String;)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The binary name of the class</param>
        <summary>Returns the class with the given binary name if this
            loader has been recorded by the Java virtual machine as an initiating
            loader of a class with that binary name.</summary>
        <returns>The <c>Class</c> object, or <c>null</c> if the class has
                     not been loaded</returns>
        <remarks>
          <para>Returns the class with the given binary name if this
            loader has been recorded by the Java virtual machine as an initiating
            loader of a class with that binary name.  Otherwise
            <c>null</c> is returned.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#findLoadedClass(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.findLoadedClass(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindResource">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindResource (name As String) As URL" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Net::URL ^ FindResource(System::String ^ name);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Net.URL? FindResource (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Net.URL FindResource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.FindResource(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FindResource : string -&gt; Java.Net.URL&#xA;override this.FindResource : string -&gt; Java.Net.URL" Usage="classLoader.FindResource name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findResource", "(Ljava/lang/String;)Ljava/net/URL;", "GetFindResource_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findResource", "(Ljava/lang/String;)Ljava/net/URL;", "GetFindResource_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URL</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name</param>
        <summary>Finds the resource with the given name.</summary>
        <returns>A <c>URL</c> object for reading the resource, or
                     <c>null</c> if the resource could not be found</returns>
        <remarks>
          <para>Finds the resource with the given name. Class loader implementations
            should override this method to specify where to find resources.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#findResource(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.findResource(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindResources">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindResources (name As String) As IEnumeration" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Util::IEnumeration ^ FindResources(System::String ^ name);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Util.IEnumeration? FindResources (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Util.IEnumeration FindResources(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.FindResources(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FindResources : string -&gt; Java.Util.IEnumeration&#xA;override this.FindResources : string -&gt; Java.Util.IEnumeration" Usage="classLoader.FindResources name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findResources", "(Ljava/lang/String;)Ljava/util/Enumeration;", "GetFindResources_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findResources", "(Ljava/lang/String;)Ljava/util/Enumeration;", "GetFindResources_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name</param>
        <summary>Returns an enumeration of <c>java.net.URL &lt;tt&gt;URL&lt;/tt&gt;</c> objects
            representing all the resources with the given name.</summary>
        <returns>An enumeration of <c>java.net.URL &lt;tt&gt;URL&lt;/tt&gt;</c> objects for
                     the resources</returns>
        <remarks>
          <para>Returns an enumeration of <c>java.net.URL &lt;tt&gt;URL&lt;/tt&gt;</c> objects
            representing all the resources with the given name. Class loader
            implementations should override this method to specify where to load
            resources from.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#findResources(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.findResources(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FindSystemClass">
      <MemberSignature Language="VB.NET" Value="Protected Function FindSystemClass (name As String) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Java::Lang::Class ^ FindSystemClass(System::String ^ name);" />
      <MemberSignature Language="C#" Value="protected Java.Lang.Class? FindSystemClass (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Java.Lang.Class FindSystemClass(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.FindSystemClass(System.String)" />
      <MemberSignature Language="F#" Value="member this.FindSystemClass : string -&gt; Java.Lang.Class" Usage="classLoader.FindSystemClass name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findSystemClass", "(Ljava/lang/String;)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findSystemClass", "(Ljava/lang/String;)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The binary name of the class</param>
        <summary>Finds a class with the specified binary name,
            loading it if necessary.</summary>
        <returns>The <c>Class</c> object for the specified <c>name</c></returns>
        <remarks>
          <para>Finds a class with the specified binary name,
            loading it if necessary.</para>
          <para>This method loads the class through the system class loader (see
            <c>#getSystemClassLoader()</c>).  The <c>Class</c> object returned
            might have more than one <c>ClassLoader</c> associated with it.
            Subclasses of <c>ClassLoader</c> need not usually invoke this method,
            because most class loaders need to override just <c>#findClass(String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#findSystemClass(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.findSystemClass(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class can not be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPackage (name As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Lang::Package ^ GetPackage(System::String ^ name);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Package? GetPackage (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Package GetPackage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.GetPackage(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetPackage : string -&gt; Java.Lang.Package&#xA;override this.GetPackage : string -&gt; Java.Lang.Package" Usage="classLoader.GetPackage name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackage", "(Ljava/lang/String;)Ljava/lang/Package;", "GetGetPackage_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackage", "(Ljava/lang/String;)Ljava/lang/Package;", "GetGetPackage_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The package name</param>
        <summary>Returns a <c>Package</c> that has been defined by this class loader
            or any of its ancestors.</summary>
        <returns>The <c>Package</c> corresponding to the given name, or
                     <c>null</c> if not found</returns>
        <remarks>
          <para>Returns a <c>Package</c> that has been defined by this class loader
            or any of its ancestors.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getPackage(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getPackage(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPackages">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPackages () As Package()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;Java::Lang::Package ^&gt; ^ GetPackages();" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Package[]? GetPackages ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Package[] GetPackages() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.GetPackages" />
      <MemberSignature Language="F#" Value="abstract member GetPackages : unit -&gt; Java.Lang.Package[]&#xA;override this.GetPackages : unit -&gt; Java.Lang.Package[]" Usage="classLoader.GetPackages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackages", "()[Ljava/lang/Package;", "GetGetPackagesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackages", "()[Ljava/lang/Package;", "GetGetPackagesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Package[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns all of the <c>Packages</c> defined by this class loader and
            its ancestors.</summary>
        <returns>The array of <c>Package</c> objects defined by this
                     <c>ClassLoader</c></returns>
        <remarks>
          <para>Returns all of the <c>Packages</c> defined by this class loader and
            its ancestors.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getPackages()" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getPackages()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetResource">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResource (name As String) As URL" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Net::URL ^ GetResource(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public virtual Java.Net.URL? GetResource (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.URL GetResource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.GetResource(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetResource : string -&gt; Java.Net.URL&#xA;override this.GetResource : string -&gt; Java.Net.URL" Usage="classLoader.GetResource name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResource", "(Ljava/lang/String;)Ljava/net/URL;", "GetGetResource_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResource", "(Ljava/lang/String;)Ljava/net/URL;", "GetGetResource_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URL</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name</param>
        <summary>Finds the resource with the given name.</summary>
        <returns>A <c>URL</c> object for reading the resource, or
                     <c>null</c> if the resource could not be found or the invoker
                     doesn't have adequate  privileges to get the resource.</returns>
        <remarks>
          <para>Finds the resource with the given name.  A resource is some data
            (images, audio, text, etc) that can be accessed by class code in a way
            that is independent of the location of the code.</para>
          <para>The name of a resource is a '<c>/</c>'-separated path name that
            identifies the resource.</para>
          <para>This method will first search the parent class loader for the
            resource; if the parent is <c>null</c> the path of the class loader
            built-in to the virtual machine is searched.  That failing, this method
            will invoke <c>#findResource(String)</c> to find the resource.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getResource(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getResource(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetResource(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceAsStream">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceAsStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResourceAsStream(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream? GetResourceAsStream (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResourceAsStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.GetResourceAsStream(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceAsStream : string -&gt; System.IO.Stream&#xA;override this.GetResourceAsStream : string -&gt; System.IO.Stream" Usage="classLoader.GetResourceAsStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", "GetGetResourceAsStream_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", "GetGetResourceAsStream_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name</param>
        <summary>Returns an input stream for reading the specified resource.</summary>
        <returns>An input stream for reading the resource, or <c>null</c>
                     if the resource could not be found</returns>
        <remarks>
          <para>Returns an input stream for reading the specified resource.</para>
          <para>The search order is described in the documentation for <c>#getResource(String)</c>.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getResourceAsStream(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getResourceAsStream(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetResourceAsStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetResources">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResources (name As String) As IEnumeration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Util::IEnumeration ^ GetResources(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.IEnumeration? GetResources (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IEnumeration GetResources(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.GetResources(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetResources : string -&gt; Java.Util.IEnumeration&#xA;override this.GetResources : string -&gt; Java.Util.IEnumeration" Usage="classLoader.GetResources name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResources", "(Ljava/lang/String;)Ljava/util/Enumeration;", "GetGetResources_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResources", "(Ljava/lang/String;)Ljava/util/Enumeration;", "GetGetResources_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name</param>
        <summary>Finds all the resources with the given name.</summary>
        <returns>An enumeration of <c>java.net.URL &lt;tt&gt;URL&lt;/tt&gt;</c> objects for
                     the resource.  If no resources could  be found, the enumeration
                     will be empty.  Resources that the class loader doesn't have
                     access to will not be in the enumeration.</returns>
        <remarks>
          <para>Finds all the resources with the given name. A resource is some data
            (images, audio, text, etc) that can be accessed by class code in a way
            that is independent of the location of the code.</para>
          <para>The name of a resource is a <c>/</c>-separated path name that
            identifies the resource.</para>
          <para>The search order is described in the documentation for <c>#getResource(String)</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getResources(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getResources(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSystemResource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemResource (name As String) As URL" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Net::URL ^ GetSystemResource(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public static Java.Net.URL? GetSystemResource (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.URL GetSystemResource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.GetSystemResource(System.String)" />
      <MemberSignature Language="F#" Value="static member GetSystemResource : string -&gt; Java.Net.URL" Usage="Java.Lang.ClassLoader.GetSystemResource name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSystemResource", "(Ljava/lang/String;)Ljava/net/URL;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSystemResource", "(Ljava/lang/String;)Ljava/net/URL;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URL</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name</param>
        <summary>Find a resource of the specified name from the search path used to load
            classes.</summary>
        <returns>A <c>java.net.URL &lt;tt&gt;URL&lt;/tt&gt;</c> object for reading the
                     resource, or <c>null</c> if the resource could not be found</returns>
        <remarks>
          <para>Find a resource of the specified name from the search path used to load
            classes.  This method locates the resource through the system class
            loader (see <c>#getSystemClassLoader()</c>).</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getSystemResource(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getSystemResource(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetResource(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetSystemResourceAsStream">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemResourceAsStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetSystemResourceAsStream(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream? GetSystemResourceAsStream (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetSystemResourceAsStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.GetSystemResourceAsStream(System.String)" />
      <MemberSignature Language="F#" Value="static member GetSystemResourceAsStream : string -&gt; System.IO.Stream" Usage="Java.Lang.ClassLoader.GetSystemResourceAsStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSystemResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSystemResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name</param>
        <summary>Open for reading, a resource of the specified name from the search path
            used to load classes.</summary>
        <returns>An input stream for reading the resource, or <c>null</c>
                     if the resource could not be found</returns>
        <remarks>
          <para>Open for reading, a resource of the specified name from the search path
            used to load classes.  This method locates the resource through the
            system class loader (see <c>#getSystemClassLoader()</c>).</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getSystemResourceAsStream(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getSystemResourceAsStream(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetResourceAsStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetSystemResources">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemResources (name As String) As IEnumeration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::IEnumeration ^ GetSystemResources(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public static Java.Util.IEnumeration? GetSystemResources (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.IEnumeration GetSystemResources(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.GetSystemResources(System.String)" />
      <MemberSignature Language="F#" Value="static member GetSystemResources : string -&gt; Java.Util.IEnumeration" Usage="Java.Lang.ClassLoader.GetSystemResources name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSystemResources", "(Ljava/lang/String;)Ljava/util/Enumeration;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSystemResources", "(Ljava/lang/String;)Ljava/util/Enumeration;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The resource name</param>
        <summary>Finds all resources of the specified name from the search path used to
            load classes.</summary>
        <returns>An enumeration of resource <c>java.net.URL &lt;tt&gt;URL&lt;/tt&gt;</c>
                     objects</returns>
        <remarks>
          <para>Finds all resources of the specified name from the search path used to
            load classes.  The resources thus found are returned as an
            <c>java.util.Enumeration &lt;tt&gt;Enumeration&lt;/tt&gt;</c> of <c>java.net.URL &lt;tt&gt;URL&lt;/tt&gt;</c> objects.</para>
          <para>The search order is described in the documentation for <c>#getSystemResource(String)</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getSystemResources(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getSystemResources(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ClassLoader.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.ClassLoader.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadClass">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadClass (name As String) As Class" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::Class ^ LoadClass(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Class? LoadClass (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Class LoadClass(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.LoadClass(System.String)" />
      <MemberSignature Language="F#" Value="abstract member LoadClass : string -&gt; Java.Lang.Class&#xA;override this.LoadClass : string -&gt; Java.Lang.Class" Usage="classLoader.LoadClass name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", "GetLoadClass_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("loadClass", "(Ljava/lang/String;)Ljava/lang/Class;", "GetLoadClass_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The binary name of the class</param>
        <summary>Loads the class with the specified binary name.</summary>
        <returns>The resulting <c>Class</c> object</returns>
        <remarks>
          <para>Loads the class with the specified binary name.
            This method searches for classes in the same manner as the <c>#loadClass(String, boolean)</c> method.  It is invoked by the Java virtual
            machine to resolve class references.  Invoking this method is equivalent
            to invoking <c>#loadClass(String, boolean) &lt;tt&gt;loadClass(name,
            false)&lt;/tt&gt;</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#loadClass(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.loadClass(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class can not be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadClass">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadClass (name As String, resolve As Boolean) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Lang::Class ^ LoadClass(System::String ^ name, bool resolve);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Class? LoadClass (string? name, bool resolve);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Class LoadClass(string name, bool resolve) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.LoadClass(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member LoadClass : string * bool -&gt; Java.Lang.Class&#xA;override this.LoadClass : string * bool -&gt; Java.Lang.Class" Usage="classLoader.LoadClass (name, resolve)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("loadClass", "(Ljava/lang/String;Z)Ljava/lang/Class;", "GetLoadClass_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("loadClass", "(Ljava/lang/String;Z)Ljava/lang/Class;", "GetLoadClass_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resolve" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The binary name of the class</param>
        <param name="resolve">If <c>true</c> then resolve the class</param>
        <summary>Loads the class with the specified binary name.</summary>
        <returns>The resulting <c>Class</c> object</returns>
        <remarks>
          <para>Loads the class with the specified binary name.  The
            default implementation of this method searches for classes in the
            following order:
            
            &lt;ol&gt;
            
              &lt;li&gt;</para>
          <para>Invoke <c>#findLoadedClass(String)</c> to check if the class
              has already been loaded.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>Invoke the <c>#loadClass(String) &lt;tt&gt;loadClass&lt;/tt&gt;</c> method
              on the parent class loader.  If the parent is <c>null</c> the class
              loader built-in to the virtual machine is used, instead.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>Invoke the <c>#findClass(String)</c> method to find the
              class.</para>
          <para>&lt;/li&gt;
            
            &lt;/ol&gt;</para>
          <para>If the class was found using the above steps, and the
            <c>resolve</c> flag is true, this method will then invoke the <c>#resolveClass(Class)</c> method on the resulting <c>Class</c> object.</para>
          <para>Subclasses of <c>ClassLoader</c> are encouraged to override <c>#findClass(String)</c>, rather than this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#loadClass(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.loadClass(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class can not be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadClassAsync">
      <MemberSignature Language="VB.NET" Value="Public Function LoadClassAsync (name As String) As Task(Of Class)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Java::Lang::Class ^&gt; ^ LoadClassAsync(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Lang.Class?&gt; LoadClassAsync (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Lang.Class&gt; LoadClassAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.LoadClassAsync(System.String)" />
      <MemberSignature Language="F#" Value="member this.LoadClassAsync : string -&gt; System.Threading.Tasks.Task&lt;Java.Lang.Class&gt;" Usage="classLoader.LoadClassAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Lang.Class&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadClassAsync">
      <MemberSignature Language="VB.NET" Value="Protected Function LoadClassAsync (name As String, resolve As Boolean) As Task(Of Class)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Threading::Tasks::Task&lt;Java::Lang::Class ^&gt; ^ LoadClassAsync(System::String ^ name, bool resolve);" />
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;Java.Lang.Class?&gt; LoadClassAsync (string? name, bool resolve);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Lang.Class&gt; LoadClassAsync(string name, bool resolve) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.LoadClassAsync(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.LoadClassAsync : string * bool -&gt; System.Threading.Tasks.Task&lt;Java.Lang.Class&gt;" Usage="classLoader.LoadClassAsync (name, resolve)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Lang.Class&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resolve" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="resolve">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As ClassLoader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Java::Lang::ClassLoader ^ Parent { Java::Lang::ClassLoader ^ get(); };" />
      <MemberSignature Language="C#" Value="public Java.Lang.ClassLoader? Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ClassLoader Parent" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ClassLoader.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : Java.Lang.ClassLoader" Usage="Java.Lang.ClassLoader.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParent", "()Ljava/lang/ClassLoader;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParent", "()Ljava/lang/ClassLoader;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ClassLoader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parent class loader for delegation.</summary>
        <value>The parent <c>ClassLoader</c></value>
        <remarks>
          <para>Returns the parent class loader for delegation. Some implementations may
            use <c>null</c> to represent the bootstrap class loader. This method
            will return <c>null</c> in such implementations if this class loader's
            parent is the bootstrap class loader.</para>
          <para>If a security manager is present, and the invoker's class loader is
            not <c>null</c> and is not an ancestor of this class loader, then this
            method invokes the security manager's <c>SecurityManager#checkPermission(java.security.Permission)
            &lt;tt&gt;checkPermission&lt;/tt&gt;</c> method with a <c>RuntimePermission#RuntimePermission(String)
            &lt;tt&gt;RuntimePermission("getClassLoader")&lt;/tt&gt;</c> permission to verify
            access to the parent class loader is permitted.  If not, a
            <c>SecurityException</c> will be thrown.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getParent()" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getParent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsParallelCapable">
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RegisterAsParallelCapable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool RegisterAsParallelCapable();" />
      <MemberSignature Language="C#" Value="protected static bool RegisterAsParallelCapable ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool RegisterAsParallelCapable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.RegisterAsParallelCapable" />
      <MemberSignature Language="F#" Value="static member RegisterAsParallelCapable : unit -&gt; bool" Usage="Java.Lang.ClassLoader.RegisterAsParallelCapable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAsParallelCapable", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAsParallelCapable", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Registers the caller as parallel capable.</summary>
        <returns>true if the caller is successfully registered as
                     parallel capable and false if otherwise.</returns>
        <remarks>
          <para>Registers the caller as parallel capable.
            The registration succeeds if and only if all of the following
            conditions are met:
            &lt;ol&gt;
            &lt;li&gt; no instance of the caller has been created&lt;/li&gt;
            &lt;li&gt; all of the super classes (except class Object) of the caller are
            registered as parallel capable&lt;/li&gt;
            &lt;/ol&gt;</para>
          <para>Note that once a class loader is registered as parallel capable, there
            is no way to change it back.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#registerAsParallelCapable()" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.registerAsParallelCapable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveClass">
      <MemberSignature Language="VB.NET" Value="Protected Sub ResolveClass (c As Class)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResolveClass(Java::Lang::Class ^ c);" />
      <MemberSignature Language="C#" Value="protected void ResolveClass (Java.Lang.Class? c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResolveClass(class Java.Lang.Class c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.ResolveClass(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="member this.ResolveClass : Java.Lang.Class -&gt; unit" Usage="classLoader.ResolveClass c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveClass", "(Ljava/lang/Class;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveClass", "(Ljava/lang/Class;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="c">The class to link</param>
        <summary>Links the specified class.</summary>
        <remarks>
          <para>Links the specified class.  This (misleadingly named) method may be
            used by a class loader to link a class.  If the class <c>c</c> has
            already been linked, then this method simply returns. Otherwise, the
            class is linked as described in the "Execution" chapter of
            &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#resolveClass(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.resolveClass(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClassAssertionStatus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetClassAssertionStatus (className As String, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetClassAssertionStatus(System::String ^ className, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetClassAssertionStatus (string? className, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClassAssertionStatus(string className, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.SetClassAssertionStatus(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetClassAssertionStatus : string * bool -&gt; unit&#xA;override this.SetClassAssertionStatus : string * bool -&gt; unit" Usage="classLoader.SetClassAssertionStatus (className, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setClassAssertionStatus", "(Ljava/lang/String;Z)V", "GetSetClassAssertionStatus_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setClassAssertionStatus", "(Ljava/lang/String;Z)V", "GetSetClassAssertionStatus_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">The fully qualified class name of the top-level class whose
                    assertion status is to be set.</param>
        <param name="enabled">
          <c>true</c> if the named class is to have assertions
                    enabled when (and if) it is initialized, <c>false</c> if the
                    class is to have assertions disabled.</param>
        <summary>Sets the desired assertion status for the named top-level class in this
            class loader and any nested classes contained therein.</summary>
        <remarks>
          <para>Sets the desired assertion status for the named top-level class in this
            class loader and any nested classes contained therein.  This setting
            takes precedence over the class loader's default assertion status, and
            over any applicable per-package default.  This method has no effect if
            the named class has already been initialized.  (Once a class is
            initialized, its assertion status cannot change.)</para>
          <para>If the named class is not a top-level class, this invocation will
            have no effect on the actual assertion status of any class.</para>
          <para>Android-note: AssertionStatuses are unsupported. This method is a no-op.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#setClassAssertionStatus(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.setClassAssertionStatus(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDefaultAssertionStatus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDefaultAssertionStatus (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDefaultAssertionStatus(bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetDefaultAssertionStatus (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultAssertionStatus(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.SetDefaultAssertionStatus(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultAssertionStatus : bool -&gt; unit&#xA;override this.SetDefaultAssertionStatus : bool -&gt; unit" Usage="classLoader.SetDefaultAssertionStatus enabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDefaultAssertionStatus", "(Z)V", "GetSetDefaultAssertionStatus_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDefaultAssertionStatus", "(Z)V", "GetSetDefaultAssertionStatus_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">
          <c>true</c> if classes loaded by this class loader will
                    henceforth have assertions enabled by default, <c>false</c>
                    if they will have assertions disabled by default.</param>
        <summary>Sets the default assertion status for this class loader.</summary>
        <remarks>
          <para>Sets the default assertion status for this class loader.  This setting
            determines whether classes loaded by this class loader and initialized
            in the future will have assertions enabled or disabled by default.
            This setting may be overridden on a per-package or per-class basis by
            invoking <c>#setPackageAssertionStatus(String, boolean)</c> or <c>#setClassAssertionStatus(String, boolean)</c>.
            
            Android-note: AssertionStatuses are unsupported. This method is a no-op.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#setDefaultAssertionStatus(boolean)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.setDefaultAssertionStatus(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPackageAssertionStatus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPackageAssertionStatus (packageName As String, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPackageAssertionStatus(System::String ^ packageName, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetPackageAssertionStatus (string? packageName, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPackageAssertionStatus(string packageName, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.SetPackageAssertionStatus(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetPackageAssertionStatus : string * bool -&gt; unit&#xA;override this.SetPackageAssertionStatus : string * bool -&gt; unit" Usage="classLoader.SetPackageAssertionStatus (packageName, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPackageAssertionStatus", "(Ljava/lang/String;Z)V", "GetSetPackageAssertionStatus_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPackageAssertionStatus", "(Ljava/lang/String;Z)V", "GetSetPackageAssertionStatus_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package whose package default assertion status
                    is to be set. A <c>null</c> value indicates the unnamed
                    package that is "current"
                    (see section 7.4.2 of
                    &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.)</param>
        <param name="enabled">
          <c>true</c> if classes loaded by this classloader and
                    belonging to the named package or any of its subpackages will
                    have assertions enabled by default, <c>false</c> if they will
                    have assertions disabled by default.</param>
        <summary>Sets the package default assertion status for the named package.</summary>
        <remarks>
          <para>Sets the package default assertion status for the named package.  The
            package default assertion status determines the assertion status for
            classes initialized in the future that belong to the named package or
            any of its "subpackages".</para>
          <para>A subpackage of a package named p is any package whose name begins
            with "<c>p.</c>".  For example, <c>javax.swing.text</c> is a
            subpackage of <c>javax.swing</c>, and both <c>java.util</c> and
            <c>java.lang.reflect</c> are subpackages of <c>java</c>.</para>
          <para>In the event that multiple package defaults apply to a given class,
            the package default pertaining to the most specific package takes
            precedence over the others.  For example, if <c>javax.lang</c> and
            <c>javax.lang.reflect</c> both have package defaults associated with
            them, the latter package default applies to classes in
            <c>javax.lang.reflect</c>.</para>
          <para>Package defaults take precedence over the class loader's default
            assertion status, and may be overridden on a per-class basis by invoking
            <c>#setClassAssertionStatus(String, boolean)</c>.</para>
          <para>Android-note: AssertionStatuses are unsupported. This method is a no-op.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#setPackageAssertionStatus(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.setPackageAssertionStatus(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSigners">
      <MemberSignature Language="VB.NET" Value="Protected Sub SetSigners (c As Class, signers As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSigners(Java::Lang::Class ^ c, cli::array &lt;Java::Lang::Object ^&gt; ^ signers);" />
      <MemberSignature Language="C#" Value="protected void SetSigners (Java.Lang.Class? c, Java.Lang.Object[]? signers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSigners(class Java.Lang.Class c, class Java.Lang.Object[] signers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ClassLoader.SetSigners(Java.Lang.Class,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="member this.SetSigners : Java.Lang.Class * Java.Lang.Object[] -&gt; unit" Usage="classLoader.SetSigners (c, signers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSigners", "(Ljava/lang/Class;[Ljava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSigners", "(Ljava/lang/Class;[Ljava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Java.Lang.Class" />
        <Parameter Name="signers" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="c">The <c>Class</c> object</param>
        <param name="signers">The signers for the class</param>
        <summary>Sets the signers of a class.</summary>
        <remarks>
          <para>Sets the signers of a class.  This should be invoked after defining a
            class.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#setSigners(java.lang.Class%3C?%3E,%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.setSigners(java.lang.Class&lt;?&gt;, java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemClassLoader">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemClassLoader As ClassLoader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Lang::ClassLoader ^ SystemClassLoader { Java::Lang::ClassLoader ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Lang.ClassLoader? SystemClassLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Lang.ClassLoader SystemClassLoader" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ClassLoader.SystemClassLoader" />
      <MemberSignature Language="F#" Value="member this.SystemClassLoader : Java.Lang.ClassLoader" Usage="Java.Lang.ClassLoader.SystemClassLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSystemClassLoader", "()Ljava/lang/ClassLoader;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSystemClassLoader", "()Ljava/lang/ClassLoader;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ClassLoader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the system class loader for delegation.</summary>
        <value>The system <c>ClassLoader</c> for delegation, or
                     <c>null</c> if none</value>
        <remarks>
          <para>Returns the system class loader for delegation.  This is the default
            delegation parent for new <c>ClassLoader</c> instances, and is
            typically the class loader used to start the application.</para>
          <para>This method is first invoked early in the runtime's startup
            sequence, at which point it creates the system class loader and sets it
            as the context class loader of the invoking <c>Thread</c>.</para>
          <para>The default system class loader is an implementation-dependent
            instance of this class.</para>
          <para>If a security manager is present, and the invoker's class loader is
            not <c>null</c> and the invoker's class loader is not the same as or
            an ancestor of the system class loader, then this method invokes the
            security manager's <c>SecurityManager#checkPermission(java.security.Permission)
            &lt;tt&gt;checkPermission&lt;/tt&gt;</c> method with a <c>RuntimePermission#RuntimePermission(String)
            &lt;tt&gt;RuntimePermission("getClassLoader")&lt;/tt&gt;</c> permission to verify
            access to the system class loader.  If not, a
            <c>SecurityException</c> will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ClassLoader#getSystemClassLoader()" title="Reference documentation">Java documentation for <code>java.lang.ClassLoader.getSystemClassLoader()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ClassLoader.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.ClassLoader.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ClassLoader.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.ClassLoader.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
