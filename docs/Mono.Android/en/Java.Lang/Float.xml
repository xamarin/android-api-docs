<Type Name="Float" FullName="Java.Lang.Float">
  <TypeSignature Language="C#" Value="public sealed class Float : Java.Lang.Number, IConvertible, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Float extends Java.Lang.Number implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IComparable, class System.IConvertible, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Float" />
  <TypeSignature Language="F#" Value="type Float = class&#xA;    inherit Number&#xA;    interface IConvertible&#xA;    interface IComparable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Number</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/Float", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/Float", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>Float</c> class wraps a value of primitive type
            <c>float</c> in an object.</summary>
    <remarks>
      <para>The <c>Float</c> class wraps a value of primitive type
            <c>float</c> in an object. An object of type
            <c>Float</c> contains a single field whose type is
            <c>float</c>.</para>
      <para>In addition, this class provides several methods for converting a
            <c>float</c> to a <c>String</c> and a
            <c>String</c> to a <c>float</c>, as well as other
            constants and methods useful when dealing with a
            <c>float</c>.
            
            &lt;!-- Android-removed: paragraph on ValueBased</para>
      <para>This is a <see href="https://developer.android.com//java.base/java/lang/doc-files/ValueBased.html">value-based</see>
            class; programmers should treat instances that are
            #equals(Object) equal as interchangeable and should not
            use instances for synchronization, or unpredictable behavior may
            occur. For example, in a future release, synchronization may fail.
            --&gt;
            
            &lt;h2&gt;equivalenceRelation&gt;Floating-point Equality, Equivalence,
            and Comparison&lt;/h2&gt;
            
            The class <c>java.lang.Double</c> has a discussion of equality,
            equivalence, and comparison of floating-point values that is
            equality applicable to <c>float</c> values.</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/Float" title="Reference documentation">Java documentation for <code>java.lang.Float</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Float (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.#ctor(System.Double)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Float : double -&gt; Java.Lang.Float" Usage="new Java.Lang.Float value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(D)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(D)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">the value to be represented by the <c>Float</c>.</param>
        <summary>Constructs a newly allocated <c>Float</c> object that
            represents the argument converted to type <c>float</c>.</summary>
        <remarks>
          <para>Constructs a newly allocated <c>Float</c> object that
            represents the argument converted to type <c>float</c>.</para>
          <para>This member is deprecated. It is rarely appropriate to use this constructor. Instead, use the
            static factory method <c>#valueOf(float)</c> method as follows:
            <c>Float.valueOf((float)value)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#Float(double)" title="Reference documentation">Java documentation for <code>java.lang.Float.Float(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Float (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.#ctor(System.Single)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Float : single -&gt; Java.Lang.Float" Usage="new Java.Lang.Float value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(F)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(F)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">the value to be represented by the <c>Float</c>.</param>
        <summary>Constructs a newly allocated <c>Float</c> object that
            represents the primitive <c>float</c> argument.</summary>
        <remarks>
          <para>Constructs a newly allocated <c>Float</c> object that
            represents the primitive <c>float</c> argument.</para>
          <para>This member is deprecated. It is rarely appropriate to use this constructor. The static factory
            <c>#valueOf(float)</c> is generally a better choice, as it is
            likely to yield significantly better space and time performance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#Float(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.Float(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Float (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Float : string -&gt; Java.Lang.Float" Usage="new Java.Lang.Float s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">a string to be converted to a <c>Float</c>.</param>
        <summary>Constructs a newly allocated <c>Float</c> object that
            represents the floating-point value of type <c>float</c>
            represented by the string.</summary>
        <remarks>
          <para>Constructs a newly allocated <c>Float</c> object that
            represents the floating-point value of type <c>float</c>
            represented by the string. The string is converted to a
            <c>float</c> value as if by the <c>valueOf</c> method.</para>
          <para>This member is deprecated. It is rarely appropriate to use this constructor.
            Use <c>#parseFloat(String)</c> to convert a string to a
            <c>float</c> primitive, or use <c>#valueOf(String)</c>
            to convert a string to a <c>Float</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#Float(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Float.Float(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>string</c> can not be parsed as a float value.</exception>
        <altmember cref="M:Java.Lang.Float.ParseFloat(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Bytes">
      <MemberSignature Language="C#" Value="public const int Bytes = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Bytes = (4)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Float.Bytes" />
      <MemberSignature Language="F#" Value="val mutable Bytes : int" Usage="Java.Lang.Float.Bytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BYTES", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BYTES", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>The number of bytes used to represent a <c>float</c> value.</summary>
        <remarks>
          <para>The number of bytes used to represent a <c>float</c> value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#BYTES" title="Reference documentation">Java documentation for <code>java.lang.Float.BYTES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (float f1, float f2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(float32 f1, float32 f2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.Compare(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="static member Compare : single * single -&gt; int" Usage="Java.Lang.Float.Compare (f1, f2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "(FF)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "(FF)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f1" Type="System.Single" />
        <Parameter Name="f2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f1">the first <c>float</c> to compare.</param>
        <param name="f2">the second <c>float</c> to compare.</param>
        <summary>Compares the two specified <c>float</c> values.</summary>
        <returns>the value <c>0</c> if <c>f1</c> is
                     numerically equal to <c>f2</c>; a value less than
                     <c>0</c> if <c>f1</c> is numerically less than
                     <c>f2</c>; and a value greater than <c>0</c>
                     if <c>f1</c> is numerically greater than
                     <c>f2</c>.</returns>
        <remarks>
          <para>Compares the two specified <c>float</c> values. The sign
            of the integer value returned is the same as that of the
            integer that would be returned by the call:</para>
          <code lang="text/java">new Float(f1).compareTo(new Float(f2))
            </code>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#compare(float,%20float)" title="Reference documentation">Java documentation for <code>java.lang.Float.compare(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Java.Lang.Float anotherFloat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class Java.Lang.Float anotherFloat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.CompareTo(Java.Lang.Float)" />
      <MemberSignature Language="F#" Value="member this.CompareTo : Java.Lang.Float -&gt; int" Usage="float.CompareTo anotherFloat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/lang/Float;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/lang/Float;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anotherFloat" Type="Java.Lang.Float" />
      </Parameters>
      <Docs>
        <param name="anotherFloat">the <c>Float</c> to be compared.</param>
        <summary>Compares two <c>Float</c> objects numerically.</summary>
        <returns>the value <c>0</c> if <c>anotherFloat</c> is
                     numerically equal to this <c>Float</c>; a value
                     less than <c>0</c> if this <c>Float</c>
                     is numerically less than <c>anotherFloat</c>;
                     and a value greater than <c>0</c> if this
                     <c>Float</c> is numerically greater than
                     <c>anotherFloat</c>.</returns>
        <remarks>
          <para>Compares two <c>Float</c> objects numerically.
            
            This method imposes a total order on <c>Float</c> objects
            with two differences compared to the incomplete order defined by
            the Java language numerical comparison operators (<c>&lt;, &lt;=,
            ==, &gt;=, &gt;</c>) on <c>float</c> values.
            
            &lt;ul&gt;&lt;li&gt; A NaN is &lt;em&gt;unordered&lt;/em&gt; with respect to other
                     values and unequal to itself under the comparison
                     operators.  This method chooses to define <c>Float.NaN</c> to be equal to itself and greater than all
                     other <c>double</c> values (including <c>Float.POSITIVE_INFINITY</c>).
            
                 &lt;li&gt; Positive zero and negative zero compare equal
                 numerically, but are distinct and distinguishable values.
                 This method chooses to define positive zero (<c>+0.0f</c>),
                 to be greater than negative zero (<c>-0.0f</c>).
            &lt;/ul&gt;
            
            This ensures that the <i>natural ordering</i> of <c>Float</c>
            objects imposed by this method is <i>consistent with
            equals</i>; see this
            discussion for details of floating-point comparison and
            ordering.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#compareTo(java.lang.Float)" title="Reference documentation">Java documentation for <code>java.lang.Float.compareTo(java.lang.Float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="C#" Value="public override double DoubleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 DoubleValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.DoubleValue" />
      <MemberSignature Language="F#" Value="override this.DoubleValue : unit -&gt; double" Usage="float.DoubleValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doubleValue", "()D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doubleValue", "()D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>Float</c> as a <c>double</c>
            after a widening primitive conversion.</summary>
        <returns>the <c>float</c> value represented by this
                    object converted to type <c>double</c></returns>
        <remarks>
          <para>Returns the value of this <c>Float</c> as a <c>double</c>
            after a widening primitive conversion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#doubleValue()" title="Reference documentation">Java documentation for <code>java.lang.Float.doubleValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FloatToIntBits">
      <MemberSignature Language="C#" Value="public static int FloatToIntBits (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FloatToIntBits(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.FloatToIntBits(System.Single)" />
      <MemberSignature Language="F#" Value="static member FloatToIntBits : single -&gt; int" Usage="Java.Lang.Float.FloatToIntBits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("floatToIntBits", "(F)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("floatToIntBits", "(F)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">a floating-point number.</param>
        <summary>Returns a representation of the specified floating-point value
            according to the IEEE 754 floating-point "single format" bit
            layout.</summary>
        <returns>the bits that represent the floating-point number.</returns>
        <remarks>
          <para>Returns a representation of the specified floating-point value
            according to the IEEE 754 floating-point "single format" bit
            layout.</para>
          <para>Bit 31 (the bit that is selected by the mask
            <c>0x80000000</c>) represents the sign of the floating-point
            number.
            Bits 30-23 (the bits that are selected by the mask
            <c>0x7f800000</c>) represent the exponent.
            Bits 22-0 (the bits that are selected by the mask
            <c>0x007fffff</c>) represent the significand (sometimes called
            the mantissa) of the floating-point number.</para>
          <para>If the argument is positive infinity, the result is
            <c>0x7f800000</c>.</para>
          <para>If the argument is negative infinity, the result is
            <c>0xff800000</c>.</para>
          <para>If the argument is NaN, the result is <c>0x7fc00000</c>.</para>
          <para>In all cases, the result is an integer that, when given to the
            <c>#intBitsToFloat(int)</c> method, will produce a floating-point
            value the same as the argument to <c>floatToIntBits</c>
            (except all NaN values are collapsed to a single
            "canonical" NaN value).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#floatToIntBits(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.floatToIntBits(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FloatToRawIntBits">
      <MemberSignature Language="C#" Value="public static int FloatToRawIntBits (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FloatToRawIntBits(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.FloatToRawIntBits(System.Single)" />
      <MemberSignature Language="F#" Value="static member FloatToRawIntBits : single -&gt; int" Usage="Java.Lang.Float.FloatToRawIntBits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("floatToRawIntBits", "(F)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("floatToRawIntBits", "(F)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">a floating-point number.</param>
        <summary>Returns a representation of the specified floating-point value
            according to the IEEE 754 floating-point "single format" bit
            layout, preserving Not-a-Number (NaN) values.</summary>
        <returns>the bits that represent the floating-point number.</returns>
        <remarks>
          <para>Returns a representation of the specified floating-point value
            according to the IEEE 754 floating-point "single format" bit
            layout, preserving Not-a-Number (NaN) values.</para>
          <para>Bit 31 (the bit that is selected by the mask
            <c>0x80000000</c>) represents the sign of the floating-point
            number.
            Bits 30-23 (the bits that are selected by the mask
            <c>0x7f800000</c>) represent the exponent.
            Bits 22-0 (the bits that are selected by the mask
            <c>0x007fffff</c>) represent the significand (sometimes called
            the mantissa) of the floating-point number.</para>
          <para>If the argument is positive infinity, the result is
            <c>0x7f800000</c>.</para>
          <para>If the argument is negative infinity, the result is
            <c>0xff800000</c>.</para>
          <para>If the argument is NaN, the result is the integer representing
            the actual NaN value.  Unlike the <c>floatToIntBits</c>
            method, <c>floatToRawIntBits</c> does not collapse all the
            bit patterns encoding a NaN to a single "canonical"
            NaN value.</para>
          <para>In all cases, the result is an integer that, when given to the
            <c>#intBitsToFloat(int)</c> method, will produce a
            floating-point value the same as the argument to
            <c>floatToRawIntBits</c>.</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#floatToRawIntBits(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.floatToRawIntBits(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FloatValue">
      <MemberSignature Language="C#" Value="public override float FloatValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 FloatValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.FloatValue" />
      <MemberSignature Language="F#" Value="override this.FloatValue : unit -&gt; single" Usage="float.FloatValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("floatValue", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("floatValue", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c>float</c> value of this <c>Float</c> object.</summary>
        <returns>the <c>float</c> value represented by this object</returns>
        <remarks>
          <para>Returns the <c>float</c> value of this <c>Float</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#floatValue()" title="Reference documentation">Java documentation for <code>java.lang.Float.floatValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="C#" Value="public static int HashCode (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.HashCode(System.Single)" />
      <MemberSignature Language="F#" Value="static member HashCode : single -&gt; int" Usage="Java.Lang.Float.HashCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "(F)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "(F)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">the value to hash</param>
        <summary>Returns a hash code for a <c>float</c> value; compatible with
            <c>Float.hashCode()</c>.</summary>
        <returns>a hash code value for a <c>float</c> value.</returns>
        <remarks>
          <para>Returns a hash code for a <c>float</c> value; compatible with
            <c>Float.hashCode()</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#hashCode(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.hashCode(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntBitsToFloat">
      <MemberSignature Language="C#" Value="public static float IntBitsToFloat (int bits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 IntBitsToFloat(int32 bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.IntBitsToFloat(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IntBitsToFloat : int -&gt; single" Usage="Java.Lang.Float.IntBitsToFloat bits" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("intBitsToFloat", "(I)F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("intBitsToFloat", "(I)F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bits">an integer.</param>
        <summary>Returns the <c>float</c> value corresponding to a given
            bit representation.</summary>
        <returns>the <c>float</c> floating-point value with the same bit
                     pattern.</returns>
        <remarks>
          <para>Returns the <c>float</c> value corresponding to a given
            bit representation.
            The argument is considered to be a representation of a
            floating-point value according to the IEEE 754 floating-point
            "single format" bit layout.</para>
          <para>If the argument is <c>0x7f800000</c>, the result is positive
            infinity.</para>
          <para>If the argument is <c>0xff800000</c>, the result is negative
            infinity.</para>
          <para>If the argument is any value in the range
            <c>0x7f800001</c> through <c>0x7fffffff</c> or in
            the range <c>0xff800001</c> through
            <c>0xffffffff</c>, the result is a NaN.  No IEEE 754
            floating-point operation provided by Java can distinguish
            between two NaN values of the same type with different bit
            patterns.  Distinct values of NaN are only distinguishable by
            use of the <c>Float.floatToRawIntBits</c> method.</para>
          <para>In all other cases, let <i>s</i>, <i>e</i>, and <i>m</i> be three
            values that can be computed from the argument:
            
            &lt;blockquote&gt;</para>
          <code lang="text/java">{@code
            int s = ((bits &gt;&gt; 31) == 0) ? 1 : -1;
            int e = ((bits &gt;&gt; 23) &amp; 0xff);
            int m = (e == 0) ?
                            (bits &amp; 0x7fffff) &lt;&lt; 1 :
                            (bits &amp; 0x7fffff) | 0x800000;
            }</code>
          <para>&lt;/blockquote&gt;
            
            Then the floating-point result equals the value of the mathematical
            expression <i>s</i>&amp;middot;<i>m</i>&amp;middot;2&lt;sup&gt;<i>e</i>-150&lt;/sup&gt;.</para>
          <para>Note that this method may not be able to return a
            <c>float</c> NaN with exactly same bit pattern as the
            <c>int</c> argument.  IEEE 754 distinguishes between two
            kinds of NaNs, quiet NaNs and <i>signaling NaNs</i>.  The
            differences between the two kinds of NaN are generally not
            visible in Java.  Arithmetic operations on signaling NaNs turn
            them into quiet NaNs with a different, but often similar, bit
            pattern.  However, on some processors merely copying a
            signaling NaN also performs that conversion.  In particular,
            copying a signaling NaN to return it to the calling method may
            perform this conversion.  So <c>intBitsToFloat</c> may
            not be able to return a <c>float</c> with a signaling NaN
            bit pattern.  Consequently, for some <c>int</c> values,
            <c>floatToRawIntBits(intBitsToFloat(start))</c> may
            <i>not</i> equal <c>start</c>.  Moreover, which
            particular bit patterns represent signaling NaNs is platform
            dependent; although all NaN bit patterns, quiet or signaling,
            must be in the NaN range identified above.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#intBitsToFloat(int)" title="Reference documentation">Java documentation for <code>java.lang.Float.intBitsToFloat(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntValue">
      <MemberSignature Language="C#" Value="public override int IntValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IntValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.IntValue" />
      <MemberSignature Language="F#" Value="override this.IntValue : unit -&gt; int" Usage="float.IntValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("intValue", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("intValue", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>Float</c> as an <c>int</c> after
            a narrowing primitive conversion.</summary>
        <returns>the <c>float</c> value represented by this object
                     converted to type <c>int</c></returns>
        <remarks>
          <para>Returns the value of this <c>Float</c> as an <c>int</c> after
            a narrowing primitive conversion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#intValue()" title="Reference documentation">Java documentation for <code>java.lang.Float.intValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeIsInfinite">
      <MemberSignature Language="C#" Value="public static bool InvokeIsInfinite (float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsInfinite(float32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.InvokeIsInfinite(System.Single)" />
      <MemberSignature Language="F#" Value="static member InvokeIsInfinite : single -&gt; bool" Usage="Java.Lang.Float.InvokeIsInfinite v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isInfinite", "(F)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isInfinite", "(F)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v">the value to be tested.</param>
        <summary>Returns <c>true</c> if the specified number is infinitely
            large in magnitude, <c>false</c> otherwise.</summary>
        <returns>
          <c>true</c> if the argument is positive infinity or
                     negative infinity; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Returns <c>true</c> if the specified number is infinitely
            large in magnitude, <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#isInfinite(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.isInfinite(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeIsNaN">
      <MemberSignature Language="C#" Value="public static bool InvokeIsNaN (float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsNaN(float32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.InvokeIsNaN(System.Single)" />
      <MemberSignature Language="F#" Value="static member InvokeIsNaN : single -&gt; bool" Usage="Java.Lang.Float.InvokeIsNaN v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isNaN", "(F)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isNaN", "(F)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v">the value to be tested.</param>
        <summary>Returns <c>true</c> if the specified number is a
            Not-a-Number (NaN) value, <c>false</c> otherwise.</summary>
        <returns>
          <c>true</c> if the argument is NaN;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Returns <c>true</c> if the specified number is a
            Not-a-Number (NaN) value, <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#isNaN(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.isNaN(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="C#" Value="public static bool IsFinite (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFinite(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.IsFinite(System.Single)" />
      <MemberSignature Language="F#" Value="static member IsFinite : single -&gt; bool" Usage="Java.Lang.Float.IsFinite f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isFinite", "(F)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isFinite", "(F)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">the <c>float</c> value to be tested</param>
        <summary>Returns <c>true</c> if the argument is a finite floating-point
            value; returns <c>false</c> otherwise (for NaN and infinity
            arguments).</summary>
        <returns>
          <c>true</c> if the argument is a finite
            floating-point value, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Returns <c>true</c> if the argument is a finite floating-point
            value; returns <c>false</c> otherwise (for NaN and infinity
            arguments).</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#isFinite(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.isFinite(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinite">
      <MemberSignature Language="C#" Value="public bool IsInfinite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInfinite" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Float.IsInfinite" />
      <MemberSignature Language="F#" Value="member this.IsInfinite : bool" Usage="Java.Lang.Float.IsInfinite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInfinite", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInfinite", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this <c>Float</c> value is
            infinitely large in magnitude, <c>false</c> otherwise.</summary>
        <value>
          <c>true</c> if the value represented by this object is
                     positive infinity or negative infinity;
                     <c>false</c> otherwise.</value>
        <remarks>
          <para>Returns <c>true</c> if this <c>Float</c> value is
            infinitely large in magnitude, <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#isInfinite()" title="Reference documentation">Java documentation for <code>java.lang.Float.isInfinite()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public bool IsNaN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNaN" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Float.IsNaN" />
      <MemberSignature Language="F#" Value="member this.IsNaN : bool" Usage="Java.Lang.Float.IsNaN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isNaN", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isNaN", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this <c>Float</c> value is a
            Not-a-Number (NaN), <c>false</c> otherwise.</summary>
        <value>
          <c>true</c> if the value represented by this object is
                     NaN; <c>false</c> otherwise.</value>
        <remarks>
          <para>Returns <c>true</c> if this <c>Float</c> value is a
            Not-a-Number (NaN), <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#isNaN()" title="Reference documentation">Java documentation for <code>java.lang.Float.isNaN()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="float.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Float.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Float.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LongValue">
      <MemberSignature Language="C#" Value="public override long LongValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 LongValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.LongValue" />
      <MemberSignature Language="F#" Value="override this.LongValue : unit -&gt; int64" Usage="float.LongValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("longValue", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("longValue", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns value of this <c>Float</c> as a <c>long</c> after a
            narrowing primitive conversion.</summary>
        <returns>the <c>float</c> value represented by this object
                     converted to type <c>long</c></returns>
        <remarks>
          <para>Returns value of this <c>Float</c> as a <c>long</c> after a
            narrowing primitive conversion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#longValue()" title="Reference documentation">Java documentation for <code>java.lang.Float.longValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float a, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 a, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.Max(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="Java.Lang.Float.Max (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("max", "(FF)F", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("max", "(FF)F", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">the first operand</param>
        <param name="b">the second operand</param>
        <summary>Returns the greater of two <c>float</c> values
            as if by calling <c>Math#max(float, float) Math.max</c>.</summary>
        <returns>the greater of <c>a</c> and <c>b</c></returns>
        <remarks>
          <para>Returns the greater of two <c>float</c> values
            as if by calling <c>Math#max(float, float) Math.max</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#max(float,%20float)" title="Reference documentation">Java documentation for <code>java.lang.Float.max(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxExponent">
      <MemberSignature Language="C#" Value="public const int MaxExponent = 127;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxExponent = (127)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Float.MaxExponent" />
      <MemberSignature Language="F#" Value="val mutable MaxExponent : int" Usage="Java.Lang.Float.MaxExponent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_EXPONENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_EXPONENT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>127</MemberValue>
      <Docs>
        <summary>Maximum exponent a finite <c>float</c> variable may have.</summary>
        <remarks>
          <para>Maximum exponent a finite <c>float</c> variable may have.  It
            is equal to the value returned by <c>Math.getExponent(Float.MAX_VALUE)</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#MAX_EXPONENT" title="Reference documentation">Java documentation for <code>java.lang.Float.MAX_EXPONENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float a, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 a, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.Min(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="Java.Lang.Float.Min (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("min", "(FF)F", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("min", "(FF)F", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">the first operand</param>
        <param name="b">the second operand</param>
        <summary>Returns the smaller of two <c>float</c> values
            as if by calling <c>Math#min(float, float) Math.min</c>.</summary>
        <returns>the smaller of <c>a</c> and <c>b</c></returns>
        <remarks>
          <para>Returns the smaller of two <c>float</c> values
            as if by calling <c>Math#min(float, float) Math.min</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#min(float,%20float)" title="Reference documentation">Java documentation for <code>java.lang.Float.min(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinExponent">
      <MemberSignature Language="C#" Value="public const int MinExponent = -126;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinExponent = (-126)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Float.MinExponent" />
      <MemberSignature Language="F#" Value="val mutable MinExponent : int" Usage="Java.Lang.Float.MinExponent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_EXPONENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_EXPONENT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-126</MemberValue>
      <Docs>
        <summary>Minimum exponent a normalized <c>float</c> variable may have.</summary>
        <remarks>
          <para>Minimum exponent a normalized <c>float</c> variable may have.
            It is equal to the value returned by <c>Math.getExponent(Float.MIN_NORMAL)</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#MIN_EXPONENT" title="Reference documentation">Java documentation for <code>java.lang.Float.MIN_EXPONENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNormal">
      <MemberSignature Language="C#" Value="public const float MinNormal = 1.17549435E-38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 MinNormal = (1.17549435E-38)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Float.MinNormal" />
      <MemberSignature Language="F#" Value="val mutable MinNormal : single" Usage="Java.Lang.Float.MinNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_NORMAL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_NORMAL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1.17549435E-38</MemberValue>
      <Docs>
        <summary>A constant holding the smallest positive normal value of type
            <c>float</c>, 2&lt;sup&gt;-126&lt;/sup&gt;.</summary>
        <remarks>
          <para>A constant holding the smallest positive normal value of type
            <c>float</c>, 2&lt;sup&gt;-126&lt;/sup&gt;.  It is equal to the
            hexadecimal floating-point literal <c>0x1.0p-126f</c> and also
            equal to <c>Float.intBitsToFloat(0x00800000)</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#MIN_NORMAL" title="Reference documentation">Java documentation for <code>java.lang.Float.MIN_NORMAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (Java.Lang.Float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(class Java.Lang.Float value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.op_Explicit(Java.Lang.Float)~System.Single" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Java.Lang.Float -&gt; single" Usage="Java.Lang.Float.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Float" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseFloat">
      <MemberSignature Language="C#" Value="public static float ParseFloat (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ParseFloat(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.ParseFloat(System.String)" />
      <MemberSignature Language="F#" Value="static member ParseFloat : string -&gt; single" Usage="Java.Lang.Float.ParseFloat s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parseFloat", "(Ljava/lang/String;)F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parseFloat", "(Ljava/lang/String;)F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string to be parsed.</param>
        <summary>Returns a new <c>float</c> initialized to the value
            represented by the specified <c>String</c>, as performed
            by the <c>valueOf</c> method of class <c>Float</c>.</summary>
        <returns>the <c>float</c> value represented by the string
                    argument.</returns>
        <remarks>
          <para>Returns a new <c>float</c> initialized to the value
            represented by the specified <c>String</c>, as performed
            by the <c>valueOf</c> method of class <c>Float</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#parseFloat(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Float.parseFloat(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>string</c> can not be parsed as a float value.</exception>
        <altmember cref="M:Java.Lang.Float.ValueOf(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public const int Size = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Size = (32)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Float.Size" />
      <MemberSignature Language="F#" Value="val mutable Size : int" Usage="Java.Lang.Float.Size" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SIZE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SIZE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>The number of bits used to represent a <c>float</c> value.</summary>
        <remarks>
          <para>The number of bits used to represent a <c>float</c> value.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#SIZE" title="Reference documentation">Java documentation for <code>java.lang.Float.SIZE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float Sum (float a, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum(float32 a, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.Sum(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="static member Sum : single * single -&gt; single" Usage="Java.Lang.Float.Sum (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sum", "(FF)F", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sum", "(FF)F", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">the first operand</param>
        <param name="b">the second operand</param>
        <summary>Adds two <c>float</c> values together as per the + operator.</summary>
        <returns>the sum of <c>a</c> and <c>b</c></returns>
        <remarks>
          <para>Adds two <c>float</c> values together as per the + operator.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#sum(float,%20float)" title="Reference documentation">Java documentation for <code>java.lang.Float.sum(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="float.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="float.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="float.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="float.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="float.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="float.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="float.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="float.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="float.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="float.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="float.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="float.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToString : IFormatProvider -&gt; string&#xA;override this.System.IConvertible.ToString : IFormatProvider -&gt; string" Usage="float.System.IConvertible.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type conversionType, IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="float.System.IConvertible.ToType (conversionType, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="conversionType">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="float.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="float.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="float.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Float.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Float.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Float.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Float.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToHexString">
      <MemberSignature Language="C#" Value="public static string ToHexString (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToHexString(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.ToHexString(System.Single)" />
      <MemberSignature Language="F#" Value="static member ToHexString : single -&gt; string" Usage="Java.Lang.Float.ToHexString f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toHexString", "(F)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toHexString", "(F)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">the <c>float</c> to be converted.</param>
        <summary>Returns a hexadecimal string representation of the
            <c>float</c> argument.</summary>
        <returns>a hex string representation of the argument.</returns>
        <remarks>
          <para>Returns a hexadecimal string representation of the
            <c>float</c> argument. All characters mentioned below are
            ASCII characters.
            
            &lt;ul&gt;
            &lt;li&gt;If the argument is NaN, the result is the string
                "<c>NaN</c>".
            &lt;li&gt;Otherwise, the result is a string that represents the sign and
            magnitude (absolute value) of the argument. If the sign is negative,
            the first character of the result is '<c>-</c>'
            (<c>'\u005Cu002D'</c>); if the sign is positive, no sign character
            appears in the result. As for the magnitude <i>m</i>:
            
            &lt;ul&gt;
            &lt;li&gt;If <i>m</i> is infinity, it is represented by the string
            <c>"Infinity"</c>; thus, positive infinity produces the
            result <c>"Infinity"</c> and negative infinity produces
            the result <c>"-Infinity"</c>.
            
            &lt;li&gt;If <i>m</i> is zero, it is represented by the string
            <c>"0x0.0p0"</c>; thus, negative zero produces the result
            <c>"-0x0.0p0"</c> and positive zero produces the result
            <c>"0x0.0p0"</c>.
            
            &lt;li&gt;If <i>m</i> is a <c>float</c> value with a
            normalized representation, substrings are used to represent the
            significand and exponent fields.  The significand is
            represented by the characters <c>"0x1."</c>
            followed by a lowercase hexadecimal representation of the rest
            of the significand as a fraction.  Trailing zeros in the
            hexadecimal representation are removed unless all the digits
            are zero, in which case a single zero is used. Next, the
            exponent is represented by <c>"p"</c> followed
            by a decimal string of the unbiased exponent as if produced by
            a call to <c>Integer#toString(int) Integer.toString</c> on the
            exponent value.
            
            &lt;li&gt;If <i>m</i> is a <c>float</c> value with a subnormal
            representation, the significand is represented by the
            characters <c>"0x0."</c> followed by a
            hexadecimal representation of the rest of the significand as a
            fraction.  Trailing zeros in the hexadecimal representation are
            removed. Next, the exponent is represented by
            <c>"p-126"</c>.  Note that there must be at
            least one nonzero digit in a subnormal significand.
            
            &lt;/ul&gt;
            
            &lt;/ul&gt;
            
            &lt;table class="striped"&gt;
            &lt;caption&gt;Examples&lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;&lt;th scope="col"&gt;Floating-point Value&lt;/th&gt;&lt;th scope="col"&gt;Hexadecimal String&lt;/th&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>1.0</c>&lt;/th&gt; &lt;td&gt;<c>0x1.0p0</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>-1.0</c>&lt;/th&gt;        &lt;td&gt;<c>-0x1.0p0</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>2.0</c>&lt;/th&gt; &lt;td&gt;<c>0x1.0p1</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>3.0</c>&lt;/th&gt; &lt;td&gt;<c>0x1.8p1</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>0.5</c>&lt;/th&gt; &lt;td&gt;<c>0x1.0p-1</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>0.25</c>&lt;/th&gt;        &lt;td&gt;<c>0x1.0p-2</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>Float.MAX_VALUE</c>&lt;/th&gt;
                &lt;td&gt;<c>0x1.fffffep127</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>Minimum Normal Value</c>&lt;/th&gt;
                &lt;td&gt;<c>0x1.0p-126</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>Maximum Subnormal Value</c>&lt;/th&gt;
                &lt;td&gt;<c>0x0.fffffep-126</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>Float.MIN_VALUE</c>&lt;/th&gt;
                &lt;td&gt;<c>0x0.000002p-126</c>&lt;/td&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#toHexString(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.toHexString(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.ToString(System.Single)" />
      <MemberSignature Language="F#" Value="static member ToString : single -&gt; string" Usage="Java.Lang.Float.ToString f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "(F)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "(F)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">the float to be converted.</param>
        <summary>Returns a string representation of the <c>float</c>
            argument.</summary>
        <returns>a string representation of the argument.</returns>
        <remarks>
          <para>Returns a string representation of the <c>float</c>
            argument. All characters mentioned below are ASCII characters.
            &lt;ul&gt;
            &lt;li&gt;If the argument is NaN, the result is the string
            "<c>NaN</c>".
            &lt;li&gt;Otherwise, the result is a string that represents the sign and
                magnitude (absolute value) of the argument. If the sign is
                negative, the first character of the result is
                '<c>-</c>' (<c>'\u005Cu002D'</c>); if the sign is
                positive, no sign character appears in the result. As for
                the magnitude <i>m</i>:
            &lt;ul&gt;
            &lt;li&gt;If <i>m</i> is infinity, it is represented by the characters
                <c>"Infinity"</c>; thus, positive infinity produces
                the result <c>"Infinity"</c> and negative infinity
                produces the result <c>"-Infinity"</c>.
            &lt;li&gt;If <i>m</i> is zero, it is represented by the characters
                <c>"0.0"</c>; thus, negative zero produces the result
                <c>"-0.0"</c> and positive zero produces the result
                <c>"0.0"</c>.
            &lt;li&gt; If <i>m</i> is greater than or equal to 10&lt;sup&gt;-3&lt;/sup&gt; but
                 less than 10&lt;sup&gt;7&lt;/sup&gt;, then it is represented as the
                 integer part of <i>m</i>, in decimal form with no leading
                 zeroes, followed by '<c>.</c>'
                 (<c>'\u005Cu002E'</c>), followed by one or more
                 decimal digits representing the fractional part of
                 <i>m</i>.
            &lt;li&gt; If <i>m</i> is less than 10&lt;sup&gt;-3&lt;/sup&gt; or greater than or
                 equal to 10&lt;sup&gt;7&lt;/sup&gt;, then it is represented in
                 so-called "computerized scientific notation." Let <i>n</i>
                 be the unique integer such that 10&lt;sup&gt;<i>n</i>&lt;/sup&gt;&amp;le;
                 <i>m</i>&lt; 10&lt;sup&gt;<i>n</i>+1&lt;/sup&gt;; then let <i>a</i>
                 be the mathematically exact quotient of <i>m</i> and
                 10&lt;sup&gt;<i>n</i>&lt;/sup&gt; so that 1 &amp;le; <i>a</i>&lt; 10.
                 The magnitude is then represented as the integer part of
                 <i>a</i>, as a single decimal digit, followed by
                 '<c>.</c>' (<c>'\u005Cu002E'</c>), followed by
                 decimal digits representing the fractional part of
                 <i>a</i>, followed by the letter '<c>E</c>'
                 (<c>'\u005Cu0045'</c>), followed by a representation
                 of <i>n</i> as a decimal integer, as produced by the
                 method <c>java.lang.Integer#toString(int)</c>.
            
            &lt;/ul&gt;
            &lt;/ul&gt;
            How many digits must be printed for the fractional part of
            <i>m</i> or <i>a</i>? There must be at least one digit
            to represent the fractional part, and beyond that as many, but
            only as many, more digits as are needed to uniquely distinguish
            the argument value from adjacent values of type
            <c>float</c>. That is, suppose that <i>x</i> is the
            exact mathematical value represented by the decimal
            representation produced by this method for a finite nonzero
            argument <i>f</i>. Then <i>f</i> must be the <c>float</c>
            value nearest to <i>x</i>; or, if two <c>float</c> values are
            equally close to <i>x</i>, then <i>f</i> must be one of
            them and the least significant bit of the significand of
            <i>f</i> must be <c>0</c>.</para>
          <para>To create localized string representations of a floating-point
            value, use subclasses of <c>java.text.NumberFormat</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#toString(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.toString(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public static Java.Lang.Class? Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Lang.Class Type" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Float.Type" />
      <MemberSignature Language="F#" Value="static member Type : Java.Lang.Class" Usage="Java.Lang.Float.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TYPE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TYPE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Class</c> instance representing the primitive type
            <c>float</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <c>Class</c> instance representing the primitive type
            <c>float</c>.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#TYPE" title="Reference documentation">Java documentation for <code>java.lang.Float.TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Lang.Float ValueOf (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Float ValueOf(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.ValueOf(System.Single)" />
      <MemberSignature Language="F#" Value="static member ValueOf : single -&gt; Java.Lang.Float" Usage="Java.Lang.Float.ValueOf f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(F)Ljava/lang/Float;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(F)Ljava/lang/Float;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Float</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">a float value.</param>
        <summary>Returns a <c>Float</c> instance representing the specified
            <c>float</c> value.</summary>
        <returns>a <c>Float</c> instance representing <c>f</c>.</returns>
        <remarks>
          <para>Returns a <c>Float</c> instance representing the specified
            <c>float</c> value.
            If a new <c>Float</c> instance is not required, this method
            should generally be used in preference to the constructor
            <c>#Float(float)</c>, as this method is likely to yield
            significantly better space and time performance by caching
            frequently requested values.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#valueOf(float)" title="Reference documentation">Java documentation for <code>java.lang.Float.valueOf(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Lang.Float ValueOf (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Float ValueOf(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Float.ValueOf(System.String)" />
      <MemberSignature Language="F#" Value="static member ValueOf : string -&gt; Java.Lang.Float" Usage="Java.Lang.Float.ValueOf s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(Ljava/lang/String;)Ljava/lang/Float;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(Ljava/lang/String;)Ljava/lang/Float;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Float</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string to be parsed.</param>
        <summary>Returns a <c>Float</c> object holding the
            <c>float</c> value represented by the argument string
            <c>s</c>.</summary>
        <returns>a <c>Float</c> object holding the value
                     represented by the <c>String</c> argument.</returns>
        <remarks>
          <para>Returns a <c>Float</c> object holding the
            <c>float</c> value represented by the argument string
            <c>s</c>.</para>
          <para>If <c>s</c> is <c>null</c>, then a
            <c>NullPointerException</c> is thrown.</para>
          <para>Leading and trailing whitespace characters in <c>s</c>
            are ignored.  Whitespace is removed as if by the <c>String#trim</c> method; that is, both ASCII space and control
            characters are removed. The rest of <c>s</c> should
            constitute a <i>FloatValue</i> as described by the lexical
            syntax rules:
            
            &lt;blockquote&gt;
            &lt;dl&gt;
            &lt;dt&gt;<i>FloatValue:</i>&lt;dd&gt;<i>Sign&lt;sub&gt;opt&lt;/sub&gt;</i><c>NaN</c>&lt;dd&gt;<i>Sign&lt;sub&gt;opt&lt;/sub&gt;</i><c>Infinity</c>&lt;dd&gt;<i>Sign&lt;sub&gt;opt&lt;/sub&gt; FloatingPointLiteral</i>&lt;dd&gt;<i>Sign&lt;sub&gt;opt&lt;/sub&gt; HexFloatingPointLiteral</i>&lt;dd&gt;<i>SignedInteger</i>&lt;/dl&gt;
            
            &lt;dl&gt;
            &lt;dt&gt;<i>HexFloatingPointLiteral</i>:
            &lt;dd&gt; <i>HexSignificand BinaryExponent FloatTypeSuffix&lt;sub&gt;opt&lt;/sub&gt;</i>&lt;/dl&gt;
            
            &lt;dl&gt;
            &lt;dt&gt;<i>HexSignificand:</i>&lt;dd&gt;<i>HexNumeral</i>&lt;dd&gt;<i>HexNumeral</i><c>.</c>&lt;dd&gt;<c>0x</c><i>HexDigits&lt;sub&gt;opt&lt;/sub&gt;
                </i><c>.</c><i> HexDigits</i>&lt;dd&gt;<c>0X</c><i> HexDigits&lt;sub&gt;opt&lt;/sub&gt;
                </i><c>.</c><i>HexDigits</i>&lt;/dl&gt;
            
            &lt;dl&gt;
            &lt;dt&gt;<i>BinaryExponent:</i>&lt;dd&gt;<i>BinaryExponentIndicator SignedInteger</i>&lt;/dl&gt;
            
            &lt;dl&gt;
            &lt;dt&gt;<i>BinaryExponentIndicator:</i>&lt;dd&gt;<c>p</c>&lt;dd&gt;<c>P</c>&lt;/dl&gt;
            
            &lt;/blockquote&gt;
            
            where <i>Sign</i>, <i>FloatingPointLiteral</i>,
            <i>HexNumeral</i>, <i>HexDigits</i>, <i>SignedInteger</i> and
            <i>FloatTypeSuffix</i> are as defined in the lexical structure
            sections of
            &lt;cite&gt;The Java Language Specification&lt;/cite&gt;,
            except that underscores are not accepted between digits.
            If <c>s</c> does not have the form of
            a <i>FloatValue</i>, then a <c>NumberFormatException</c>
            is thrown. Otherwise, <c>s</c> is regarded as
            representing an exact decimal value in the usual
            "computerized scientific notation" or as an exact
            hexadecimal value; this exact numerical value is then
            conceptually converted to an "infinitely precise"
            binary value that is then rounded to type <c>float</c>
            by the usual round-to-nearest rule of IEEE 754 floating-point
            arithmetic, which includes preserving the sign of a zero
            value.
            
            Note that the round-to-nearest rule also implies overflow and
            underflow behaviour; if the exact value of <c>s</c> is large
            enough in magnitude (greater than or equal to (<c>#MAX_VALUE</c> + <c>Math#ulp(float) ulp(MAX_VALUE)</c>/2),
            rounding to <c>float</c> will result in an infinity and if the
            exact value of <c>s</c> is small enough in magnitude (less
            than or equal to <c>#MIN_VALUE</c>/2), rounding to float will
            result in a zero.
            
            Finally, after rounding a <c>Float</c> object representing
            this <c>float</c> value is returned.</para>
          <para>To interpret localized string representations of a
            floating-point value, use subclasses of <c>java.text.NumberFormat</c>.</para>
          <para>Note that trailing format specifiers, specifiers that
            determine the type of a floating-point literal
            (<c>1.0f</c> is a <c>float</c> value;
            <c>1.0d</c> is a <c>double</c> value), do
            &lt;em&gt;not&lt;/em&gt; influence the results of this method.  In other
            words, the numerical value of the input string is converted
            directly to the target floating-point type.  In general, the
            two-step sequence of conversions, string to <c>double</c>
            followed by <c>double</c> to <c>float</c>, is
            &lt;em&gt;not&lt;/em&gt; equivalent to converting a string directly to
            <c>float</c>.  For example, if first converted to an
            intermediate <c>double</c> and then to
            <c>float</c>, the string&lt;br&gt;
            <c>"1.00000017881393421514957253748434595763683319091796875001d"</c>&lt;br&gt;
            results in the <c>float</c> value
            <c>1.0000002f</c>; if the string is converted directly to
            <c>float</c>, <c>1.000000&lt;b&gt;1&lt;/b&gt;f</c> results.</para>
          <para>To avoid calling this method on an invalid string and having
            a <c>NumberFormatException</c> be thrown, the documentation
            for <c>Double#valueOf Double.valueOf</c> lists a regular
            expression which can be used to screen the input.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Float#valueOf(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Float.valueOf(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>string</c> can not be parsed as a float value.</exception>
        <altmember cref="M:Java.Lang.Float.ParseFloat(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
