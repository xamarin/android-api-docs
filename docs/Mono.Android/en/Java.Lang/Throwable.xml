<Type Name="Throwable" FullName="Java.Lang.Throwable">
  <TypeSignature Language="C#" Value="public class Throwable : Exception, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Throwable extends System.Exception implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Throwable" />
  <TypeSignature Language="F#" Value="type Throwable = class&#xA;    inherit Exception&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/Throwable", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/Throwable", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>Throwable</c> class is the superclass of all errors and
            exceptions in the Java language.</summary>
    <remarks>
      <para>The <c>Throwable</c> class is the superclass of all errors and
            exceptions in the Java language. Only objects that are instances of this
            class (or one of its subclasses) are thrown by the Java Virtual Machine or
            can be thrown by the Java <c>throw</c> statement. Similarly, only
            this class or one of its subclasses can be the argument type in a
            <c>catch</c> clause.
            
            For the purposes of compile-time checking of exceptions, <c>Throwable</c> and any subclass of <c>Throwable</c> that is not also a
            subclass of either <c>RuntimeException</c> or <c>Error</c> are
            regarded as checked exceptions.</para>
      <para>Instances of two subclasses, <c>java.lang.Error</c> and
            <c>java.lang.Exception</c>, are conventionally used to indicate
            that exceptional situations have occurred. Typically, these instances
            are freshly created in the context of the exceptional situation so
            as to include relevant information (such as stack trace data).</para>
      <para>A throwable contains a snapshot of the execution stack of its
            thread at the time it was created. It can also contain a message
            string that gives more information about the error. Over time, a
            throwable can Throwable#addSuppressed suppress other
            throwables from being propagated.  Finally, the throwable can also
            contain a <i>cause</i>: another throwable that caused this
            throwable to be constructed.  The recording of this causal information
            is referred to as the <i>chained exception</i> facility, as the
            cause can, itself, have a cause, and so on, leading to a "chain" of
            exceptions, each caused by another.</para>
      <para>One reason that a throwable may have a cause is that the class that
            throws it is built atop a lower layered abstraction, and an operation on
            the upper layer fails due to a failure in the lower layer.  It would be bad
            design to let the throwable thrown by the lower layer propagate outward, as
            it is generally unrelated to the abstraction provided by the upper layer.
            Further, doing so would tie the API of the upper layer to the details of
            its implementation, assuming the lower layer's exception was a checked
            exception.  Throwing a "wrapped exception" (i.e., an exception containing a
            cause) allows the upper layer to communicate the details of the failure to
            its caller without incurring either of these shortcomings.  It preserves
            the flexibility to change the implementation of the upper layer without
            changing its API (in particular, the set of exceptions thrown by its
            methods).</para>
      <para>A second reason that a throwable may have a cause is that the method
            that throws it must conform to a general-purpose interface that does not
            permit the method to throw the cause directly.  For example, suppose
            a persistent collection conforms to the <c>java.util.Collection
            Collection</c> interface, and that its persistence is implemented atop
            <c>java.io</c>.  Suppose the internals of the <c>add</c> method
            can throw an <c>java.io.IOException IOException</c>.  The implementation
            can communicate the details of the <c>IOException</c> to its caller
            while conforming to the <c>Collection</c> interface by wrapping the
            <c>IOException</c> in an appropriate unchecked exception.  (The
            specification for the persistent collection should indicate that it is
            capable of throwing such exceptions.)</para>
      <para>A cause can be associated with a throwable in two ways: via a
            constructor that takes the cause as an argument, or via the
            <c>#initCause(Throwable)</c> method.  New throwable classes that
            wish to allow causes to be associated with them should provide constructors
            that take a cause and delegate (perhaps indirectly) to one of the
            <c>Throwable</c> constructors that takes a cause.
            
            Because the <c>initCause</c> method is public, it allows a cause to be
            associated with any throwable, even a "legacy throwable" whose
            implementation predates the addition of the exception chaining mechanism to
            <c>Throwable</c>.</para>
      <para>By convention, class <c>Throwable</c> and its subclasses have two
            constructors, one that takes no arguments and one that takes a
            <c>String</c> argument that can be used to produce a detail message.
            Further, those subclasses that might likely have a cause associated with
            them should have two more constructors, one that takes a
            <c>Throwable</c> (the cause), and one that takes a
            <c>String</c> (the detail message) and a <c>Throwable</c> (the
            cause).</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/Throwable" title="Reference documentation">Java documentation for <code>java.lang.Throwable</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new throwable with <c>null</c> as its detail message.</summary>
        <remarks>
          <para>Constructs a new throwable with <c>null</c> as its detail message.
            The cause is not initialized, and may subsequently be initialized by a
            call to <c>#initCause</c>.</para>
          <para>The <c>#fillInStackTrace()</c> method is called to initialize
            the stack trace data in the newly created throwable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#Throwable()" title="Reference documentation">Java documentation for <code>java.lang.Throwable.Throwable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable (Java.Lang.Throwable? cause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.Throwable cause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.#ctor(Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Throwable : Java.Lang.Throwable -&gt; Java.Lang.Throwable" Usage="new Java.Lang.Throwable cause" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/Throwable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/Throwable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cause" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="cause">the cause (which is saved for later retrieval by the
                    <c>#getCause()</c> method).  (A <c>null</c> value is
                    permitted, and indicates that the cause is nonexistent or
                    unknown.)</param>
        <summary>Constructs a new throwable with the specified cause and a detail
            message of <c>(cause==null ? null : cause.toString())</c> (which
            typically contains the class and detail message of <c>cause</c>).</summary>
        <remarks>
          <para>Constructs a new throwable with the specified cause and a detail
            message of <c>(cause==null ? null : cause.toString())</c> (which
            typically contains the class and detail message of <c>cause</c>).
            This constructor is useful for throwables that are little more than
            wrappers for other throwables (for example, <c>java.security.PrivilegedActionException</c>).</para>
          <para>The <c>#fillInStackTrace()</c> method is called to initialize
            the stack trace data in the newly created throwable.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#Throwable(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.lang.Throwable.Throwable(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Throwable : string -&gt; Java.Lang.Throwable" Usage="new Java.Lang.Throwable message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">the detail message. The detail message is saved for
                     later retrieval by the <c>#getMessage()</c> method.</param>
        <summary>Constructs a new throwable with the specified detail message.</summary>
        <remarks>
          <para>Constructs a new throwable with the specified detail message.  The
            cause is not initialized, and may subsequently be initialized by
            a call to <c>#initCause</c>.</para>
          <para>The <c>#fillInStackTrace()</c> method is called to initialize
            the stack trace data in the newly created throwable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#Throwable(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Throwable.Throwable(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable (IntPtr handle, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Throwable : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.Throwable" Usage="new Java.Lang.Throwable (handle, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="handle">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="handle" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable (string? message, Java.Lang.Throwable? cause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class Java.Lang.Throwable cause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.#ctor(System.String,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Throwable : string * Java.Lang.Throwable -&gt; Java.Lang.Throwable" Usage="new Java.Lang.Throwable (message, cause)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="cause" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="message">the detail message (which is saved for later retrieval
                    by the <c>#getMessage()</c> method).</param>
        <param name="cause">the cause (which is saved for later retrieval by the
                    <c>#getCause()</c> method).  (A <c>null</c> value is
                    permitted, and indicates that the cause is nonexistent or
                    unknown.)</param>
        <summary>Constructs a new throwable with the specified detail message and
            cause.</summary>
        <remarks>
          <para>Constructs a new throwable with the specified detail message and
            cause.</para>
          <para>Note that the detail message associated with
            <c>cause</c> is <i>not</i> automatically incorporated in
            this throwable's detail message.</para>
          <para>The <c>#fillInStackTrace()</c> method is called to initialize
            the stack trace data in the newly created throwable.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#Throwable(java.lang.String,%20java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.lang.Throwable.Throwable(java.lang.String, java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Throwable (string? message, Java.Lang.Throwable? cause, bool enableSuppression, bool writableStackTrace);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string message, class Java.Lang.Throwable cause, bool enableSuppression, bool writableStackTrace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.#ctor(System.String,Java.Lang.Throwable,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Throwable : string * Java.Lang.Throwable * bool * bool -&gt; Java.Lang.Throwable" Usage="new Java.Lang.Throwable (message, cause, enableSuppression, writableStackTrace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="cause" Type="Java.Lang.Throwable" />
        <Parameter Name="enableSuppression" Type="System.Boolean" />
        <Parameter Name="writableStackTrace" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">the detail message.</param>
        <param name="cause">the cause.  (A <c>null</c> value is permitted,
            and indicates that the cause is nonexistent or unknown.)</param>
        <param name="enableSuppression">whether or not suppression is enabled or disabled</param>
        <param name="writableStackTrace">whether or not the stack trace should be
                                      writable</param>
        <summary>Constructs a new throwable with the specified detail message,
            cause, #addSuppressed suppression enabled or
            disabled, and writable stack trace enabled or disabled.</summary>
        <remarks>
          <para>Constructs a new throwable with the specified detail message,
            cause, #addSuppressed suppression enabled or
            disabled, and writable stack trace enabled or disabled.  If
            suppression is disabled, <c>#getSuppressed</c> for this object
            will return a zero-length array and calls to <c>#addSuppressed</c> that would otherwise append an exception to the
            suppressed list will have no effect.  If the writable stack
            trace is false, this constructor will not call <c>#fillInStackTrace()</c>, a <c>null</c> will be written to the
            <c>stackTrace</c> field, and subsequent calls to <c>fillInStackTrace</c> and <c>#setStackTrace(StackTraceElement[])</c> will not set the stack
            trace.  If the writable stack trace is false, <c>#getStackTrace</c> will return a zero length array.</para>
          <para>Note that the other constructors of <c>Throwable</c> treat
            suppression as being enabled and the stack trace as being
            writable.  Subclasses of <c>Throwable</c> should document any
            conditions under which suppression is disabled and document
            conditions under which the stack trace is not writable.
            Disabling of suppression should only occur in exceptional
            circumstances where special requirements exist, such as a
            virtual machine reusing exception objects under low-memory
            situations.  Circumstances where a given exception object is
            repeatedly caught and rethrown, such as to implement control
            flow between two sub-systems, is another situation where
            immutable throwable objects would be appropriate.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#Throwable(java.lang.String,%20java.lang.Throwable,%20boolean,%20boolean)" title="Reference documentation">Java documentation for <code>java.lang.Throwable.Throwable(java.lang.String, java.lang.Throwable, boolean, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSuppressed">
      <MemberSignature Language="C#" Value="public void AddSuppressed (Java.Lang.Throwable exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSuppressed(class Java.Lang.Throwable exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.AddSuppressed(Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="member this.AddSuppressed : Java.Lang.Throwable -&gt; unit" Usage="throwable.AddSuppressed exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addSuppressed", "(Ljava/lang/Throwable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addSuppressed", "(Ljava/lang/Throwable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="exception">the exception to be added to the list of
                   suppressed exceptions</param>
        <summary>Appends the specified exception to the exceptions that were
            suppressed in order to deliver this exception.</summary>
        <remarks>
          <para>Appends the specified exception to the exceptions that were
            suppressed in order to deliver this exception. This method is
            thread-safe and typically called (automatically and implicitly)
            by the <c>try</c>-with-resources statement.</para>
          <para>The suppression behavior is enabled &lt;em&gt;unless&lt;/em&gt; disabled
            #Throwable(String, Throwable, boolean, boolean) via
            a constructor.  When suppression is disabled, this method does
            nothing other than to validate its argument.</para>
          <para>Note that when one exception #initCause(Throwable) causes another exception, the first
            exception is usually caught and then the second exception is
            thrown in response.  In other words, there is a causal
            connection between the two exceptions.
            
            In contrast, there are situations where two independent
            exceptions can be thrown in sibling code blocks, in particular
            in the <c>try</c> block of a <c>try</c>-with-resources
            statement and the compiler-generated <c>finally</c> block
            which closes the resource.
            
            In these situations, only one of the thrown exceptions can be
            propagated.  In the <c>try</c>-with-resources statement, when
            there are two such exceptions, the exception originating from
            the <c>try</c> block is propagated and the exception from the
            <c>finally</c> block is added to the list of exceptions
            suppressed by the exception from the <c>try</c> block.  As an
            exception unwinds the stack, it can accumulate multiple
            suppressed exceptions.</para>
          <para>An exception may have suppressed exceptions while also being
            caused by another exception.  Whether or not an exception has a
            cause is semantically known at the time of its creation, unlike
            whether or not an exception will suppress other exceptions
            which is typically only determined after an exception is
            thrown.</para>
          <para>Note that programmer written code is also able to take
            advantage of calling this method in situations where there are
            multiple sibling exceptions and only one can be propagated.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#addSuppressed(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.lang.Throwable.addSuppressed(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 19" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>throwable == this</c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>throwable == null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cause">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Throwable? Cause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Throwable Cause" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.Cause" />
      <MemberSignature Language="F#" Value="member this.Cause : Java.Lang.Throwable" Usage="Java.Lang.Throwable.Cause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCause", "()Ljava/lang/Throwable;", "GetGetCauseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCause", "()Ljava/lang/Throwable;", "GetGetCauseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the cause of this throwable or <c>null</c> if the
            cause is nonexistent or unknown.</summary>
        <value>the cause of this throwable or <c>null</c> if the
                     cause is nonexistent or unknown.</value>
        <remarks>
          <para>Returns the cause of this throwable or <c>null</c> if the
            cause is nonexistent or unknown.  (The cause is the throwable that
            caused this throwable to get thrown.)</para>
          <para>This implementation returns the cause that was supplied via one of
            the constructors requiring a <c>Throwable</c>, or that was set after
            creation with the <c>#initCause(Throwable)</c> method.  While it is
            typically unnecessary to override this method, a subclass can override
            it to return a cause set by some other means.  This is appropriate for
            a "legacy chained throwable" that predates the addition of chained
            exceptions to <c>Throwable</c>.  Note that it is <i>not</i>
            necessary to override any of the <c>PrintStackTrace</c> methods,
            all of which invoke the <c>getCause</c> method to determine the
            cause of a throwable.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#getCause()" title="Reference documentation">Java documentation for <code>java.lang.Throwable.getCause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Java.Lang.Class? Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class Class" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.Class" />
      <MemberSignature Language="F#" Value="member this.Class : Java.Lang.Class" Usage="Java.Lang.Throwable.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getClass", "()Ljava/lang/Class;", "GetGetClassHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getClass", "()Ljava/lang/Class;", "GetGetClassHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="throwable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="throwable.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillInStackTrace">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Throwable FillInStackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Throwable FillInStackTrace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.FillInStackTrace" />
      <MemberSignature Language="F#" Value="abstract member FillInStackTrace : unit -&gt; Java.Lang.Throwable&#xA;override this.FillInStackTrace : unit -&gt; Java.Lang.Throwable" Usage="throwable.FillInStackTrace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fillInStackTrace", "()Ljava/lang/Throwable;", "GetFillInStackTraceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fillInStackTrace", "()Ljava/lang/Throwable;", "GetFillInStackTraceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fills in the execution stack trace.</summary>
        <returns>a reference to this <c>Throwable</c> instance.</returns>
        <remarks>
          <para>Fills in the execution stack trace. This method records within this
            <c>Throwable</c> object information about the current state of
            the stack frames for the current thread.</para>
          <para>If the stack trace of this <c>Throwable</c>Throwable#Throwable(String, Throwable, boolean, boolean) is not
            writable, calling this method has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#fillInStackTrace()" title="Reference documentation">Java documentation for <code>java.lang.Throwable.fillInStackTrace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Throwable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="throwable.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromException">
      <MemberSignature Language="C#" Value="public static Java.Lang.Throwable FromException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Throwable FromException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.FromException(System.Exception)" />
      <MemberSignature Language="F#" Value="static member FromException : Exception -&gt; Java.Lang.Throwable" Usage="Java.Lang.Throwable.FromException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          A <see cref="T:System.Exception" /> to convert to the closest
          matching <see cref="T:Java.Lang.Throwable" /> type.
        </param>
        <summary>
          Converts a <see cref="T:System.Exception" /> into a
          <see cref="T:Java.Lang.Throwable" />.
        </summary>
        <returns>
          A <see cref="T:Java.Lang.Throwable" />.
        </returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> is <see langword="null" />.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStackTrace">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.StackTraceElement[] GetStackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StackTraceElement[] GetStackTrace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.GetStackTrace" />
      <MemberSignature Language="F#" Value="abstract member GetStackTrace : unit -&gt; Java.Lang.StackTraceElement[]&#xA;override this.GetStackTrace : unit -&gt; Java.Lang.StackTraceElement[]" Usage="throwable.GetStackTrace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStackTrace", "()[Ljava/lang/StackTraceElement;", "GetGetStackTraceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStackTrace", "()[Ljava/lang/StackTraceElement;", "GetGetStackTraceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StackTraceElement[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides programmatic access to the stack trace information printed by
            <c>#printStackTrace()</c>.</summary>
        <returns>an array of stack trace elements representing the stack trace
                    pertaining to this throwable.</returns>
        <remarks>
          <para>Provides programmatic access to the stack trace information printed by
            <c>#printStackTrace()</c>.  Returns an array of stack trace elements,
            each representing one stack frame.  The zeroth element of the array
            (assuming the array's length is non-zero) represents the top of the
            stack, which is the last method invocation in the sequence.  Typically,
            this is the point at which this throwable was created and thrown.
            The last element of the array (assuming the array's length is non-zero)
            represents the bottom of the stack, which is the first method invocation
            in the sequence.</para>
          <para>Some virtual machines may, under some circumstances, omit one
            or more stack frames from the stack trace.  In the extreme case,
            a virtual machine that has no stack trace information concerning
            this throwable is permitted to return a zero-length array from this
            method.  Generally speaking, the array returned by this method will
            contain one element for every frame that would be printed by
            <c>printStackTrace</c>.  Writes to the returned array do not
            affect future calls to this method.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#getStackTrace()" title="Reference documentation">Java documentation for <code>java.lang.Throwable.getStackTrace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Throwable.PrintStackTrace" />
      </Docs>
    </Member>
    <Member MemberName="GetSuppressed">
      <MemberSignature Language="C#" Value="public Java.Lang.Throwable[] GetSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Throwable[] GetSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.GetSuppressed" />
      <MemberSignature Language="F#" Value="member this.GetSuppressed : unit -&gt; Java.Lang.Throwable[]" Usage="throwable.GetSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSuppressed", "()[Ljava/lang/Throwable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSuppressed", "()[Ljava/lang/Throwable;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing all of the exceptions that were
            suppressed, typically by the <c>try</c>-with-resources
            statement, in order to deliver this exception.</summary>
        <returns>an array containing all of the exceptions that were
                    suppressed to deliver this exception.</returns>
        <remarks>
          <para>Returns an array containing all of the exceptions that were
            suppressed, typically by the <c>try</c>-with-resources
            statement, in order to deliver this exception.
            
            If no exceptions were suppressed or #Throwable(String, Throwable, boolean, boolean) suppression is
            disabled, an empty array is returned.  This method is
            thread-safe.  Writes to the returned array do not affect future
            calls to this method.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#getSuppressed()" title="Reference documentation">Java documentation for <code>java.lang.Throwable.getSuppressed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="Java.Lang.Throwable.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Runtime.IJavaObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          The handle to the underlying Android instance.
        </summary>
        <value>
          A <see cref="T:System.IntPtr" /> containing the value of the handle
          of the underlying Android instance.
        </value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitCause">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Throwable InitCause (Java.Lang.Throwable? cause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Throwable InitCause(class Java.Lang.Throwable cause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.InitCause(Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member InitCause : Java.Lang.Throwable -&gt; Java.Lang.Throwable&#xA;override this.InitCause : Java.Lang.Throwable -&gt; Java.Lang.Throwable" Usage="throwable.InitCause cause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initCause", "(Ljava/lang/Throwable;)Ljava/lang/Throwable;", "GetInitCause_Ljava_lang_Throwable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initCause", "(Ljava/lang/Throwable;)Ljava/lang/Throwable;", "GetInitCause_Ljava_lang_Throwable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cause" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="cause">the cause (which is saved for later retrieval by the
                    <c>#getCause()</c> method).  (A <c>null</c> value is
                    permitted, and indicates that the cause is nonexistent or
                    unknown.)</param>
        <summary>Initializes the <i>cause</i> of this throwable to the specified value.</summary>
        <returns>a reference to this <c>Throwable</c> instance.</returns>
        <remarks>
          <para>Initializes the <i>cause</i> of this throwable to the specified value.
            (The cause is the throwable that caused this throwable to get thrown.)</para>
          <para>This method can be called at most once.  It is generally called from
            within the constructor, or immediately after creating the
            throwable.  If this throwable was created
            with <c>#Throwable(Throwable)</c> or
            <c>#Throwable(String,Throwable)</c>, this method cannot be called
            even once.</para>
          <para>An example of using this method on a legacy throwable type
            without other support for setting the cause is:</para>
          <code lang="text/java">try {
                lowLevelOp();
            } catch (LowLevelException le) {
                throw (HighLevelException)
                      new HighLevelException().initCause(le); // Legacy constructor
            }
            </code>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#initCause(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.lang.Throwable.initCause(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>Throwable</c> is this object.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the cause has already been initialized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="is_generated">
      <MemberSignature Language="C#" Value="protected bool is_generated;" />
      <MemberSignature Language="ILAsm" Value=".field family bool is_generated" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Throwable.is_generated" />
      <MemberSignature Language="F#" Value="val mutable is_generated : bool" Usage="Java.Lang.Throwable.is_generated" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.Disposed">
      <MemberSignature Language="C#" Value="void IJavaPeerable.Disposed ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Java.Interop.IJavaPeerable.Disposed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Java#Interop#IJavaPeerable#Disposed" />
      <MemberSignature Language="F#" Value="abstract member Java.Interop.IJavaPeerable.Disposed : unit -&gt; unit&#xA;override this.Java.Interop.IJavaPeerable.Disposed : unit -&gt; unit" Usage="throwable.Java.Interop.IJavaPeerable.Disposed " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.Disposed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.DisposeUnlessReferenced">
      <MemberSignature Language="C#" Value="void IJavaPeerable.DisposeUnlessReferenced ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Java.Interop.IJavaPeerable.DisposeUnlessReferenced() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Java#Interop#IJavaPeerable#DisposeUnlessReferenced" />
      <MemberSignature Language="F#" Value="abstract member Java.Interop.IJavaPeerable.DisposeUnlessReferenced : unit -&gt; unit&#xA;override this.Java.Interop.IJavaPeerable.DisposeUnlessReferenced : unit -&gt; unit" Usage="throwable.Java.Interop.IJavaPeerable.DisposeUnlessReferenced " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.DisposeUnlessReferenced</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.Finalized">
      <MemberSignature Language="C#" Value="void IJavaPeerable.Finalized ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Java.Interop.IJavaPeerable.Finalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Java#Interop#IJavaPeerable#Finalized" />
      <MemberSignature Language="F#" Value="abstract member Java.Interop.IJavaPeerable.Finalized : unit -&gt; unit&#xA;override this.Java.Interop.IJavaPeerable.Finalized : unit -&gt; unit" Usage="throwable.Java.Interop.IJavaPeerable.Finalized " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.Finalized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.JniManagedPeerState">
      <MemberSignature Language="C#" Value="Java.Interop.JniManagedPeerStates Java.Interop.IJavaPeerable.JniManagedPeerState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Java.Interop.JniManagedPeerStates Java.Interop.IJavaPeerable.JniManagedPeerState" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.Java#Interop#IJavaPeerable#JniManagedPeerState" />
      <MemberSignature Language="F#" Value="member this.Java.Interop.IJavaPeerable.JniManagedPeerState : Java.Interop.JniManagedPeerStates" Usage="Java.Interop.IJavaPeerable.JniManagedPeerState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniManagedPeerState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniManagedPeerStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.SetJniIdentityHashCode">
      <MemberSignature Language="C#" Value="void IJavaPeerable.SetJniIdentityHashCode (int value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Java.Interop.IJavaPeerable.SetJniIdentityHashCode(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Java#Interop#IJavaPeerable#SetJniIdentityHashCode(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Java.Interop.IJavaPeerable.SetJniIdentityHashCode : int -&gt; unit&#xA;override this.Java.Interop.IJavaPeerable.SetJniIdentityHashCode : int -&gt; unit" Usage="throwable.Java.Interop.IJavaPeerable.SetJniIdentityHashCode value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.SetJniIdentityHashCode(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.SetJniManagedPeerState">
      <MemberSignature Language="C#" Value="void IJavaPeerable.SetJniManagedPeerState (Java.Interop.JniManagedPeerStates value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Java.Interop.IJavaPeerable.SetJniManagedPeerState(valuetype Java.Interop.JniManagedPeerStates value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Java#Interop#IJavaPeerable#SetJniManagedPeerState(Java.Interop.JniManagedPeerStates)" />
      <MemberSignature Language="F#" Value="abstract member Java.Interop.IJavaPeerable.SetJniManagedPeerState : Java.Interop.JniManagedPeerStates -&gt; unit&#xA;override this.Java.Interop.IJavaPeerable.SetJniManagedPeerState : Java.Interop.JniManagedPeerStates -&gt; unit" Usage="throwable.Java.Interop.IJavaPeerable.SetJniManagedPeerState value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.SetJniManagedPeerState(Java.Interop.JniManagedPeerStates)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Interop.JniManagedPeerStates" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.SetPeerReference">
      <MemberSignature Language="C#" Value="void IJavaPeerable.SetPeerReference (Java.Interop.JniObjectReference reference);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Java.Interop.IJavaPeerable.SetPeerReference(valuetype Java.Interop.JniObjectReference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.Java#Interop#IJavaPeerable#SetPeerReference(Java.Interop.JniObjectReference)" />
      <MemberSignature Language="F#" Value="abstract member Java.Interop.IJavaPeerable.SetPeerReference : Java.Interop.JniObjectReference -&gt; unit&#xA;override this.Java.Interop.IJavaPeerable.SetPeerReference : Java.Interop.JniObjectReference -&gt; unit" Usage="throwable.Java.Interop.IJavaPeerable.SetPeerReference reference" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.SetPeerReference(Java.Interop.JniObjectReference)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="Java.Interop.JniObjectReference" />
      </Parameters>
      <Docs>
        <param name="reference">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniIdentityHashCode">
      <MemberSignature Language="C#" Value="public int JniIdentityHashCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JniIdentityHashCode" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.JniIdentityHashCode" />
      <MemberSignature Language="F#" Value="member this.JniIdentityHashCode : int" Usage="Java.Lang.Throwable.JniIdentityHashCode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniIdentityHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public virtual Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Throwable.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedMessage">
      <MemberSignature Language="C#" Value="public virtual string? LocalizedMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedMessage" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.LocalizedMessage" />
      <MemberSignature Language="F#" Value="member this.LocalizedMessage : string" Usage="Java.Lang.Throwable.LocalizedMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalizedMessage", "()Ljava/lang/String;", "GetGetLocalizedMessageHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalizedMessage", "()Ljava/lang/String;", "GetGetLocalizedMessageHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Creates a localized description of this throwable.</summary>
        <value>The localized description of this throwable.</value>
        <remarks>
          <para>Creates a localized description of this throwable.
            Subclasses may override this method in order to produce a
            locale-specific message.  For subclasses that do not override this
            method, the default implementation returns the same result as
            <c>getMessage()</c>.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#getLocalizedMessage()" title="Reference documentation">Java documentation for <code>java.lang.Throwable.getLocalizedMessage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string? Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.Message" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="Java.Lang.Throwable.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMessage", "()Ljava/lang/String;", "GetGetMessageHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMessage", "()Ljava/lang/String;", "GetGetMessageHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the detail message string of this throwable.</summary>
        <value>the detail message string of this <c>Throwable</c> instance
                     (which may be <c>null</c>).</value>
        <remarks>
          <para>Returns the detail message string of this throwable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#getMessage()" title="Reference documentation">Java documentation for <code>java.lang.Throwable.getMessage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PeerReference">
      <MemberSignature Language="C#" Value="public Java.Interop.JniObjectReference PeerReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Java.Interop.JniObjectReference PeerReference" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.PeerReference" />
      <MemberSignature Language="F#" Value="member this.PeerReference : Java.Interop.JniObjectReference" Usage="Java.Lang.Throwable.PeerReference" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.PeerReference</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniObjectReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintStackTrace">
      <MemberSignature Language="C#" Value="public virtual void PrintStackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintStackTrace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.PrintStackTrace" />
      <MemberSignature Language="F#" Value="abstract member PrintStackTrace : unit -&gt; unit&#xA;override this.PrintStackTrace : unit -&gt; unit" Usage="throwable.PrintStackTrace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("printStackTrace", "()V", "GetPrintStackTraceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("printStackTrace", "()V", "GetPrintStackTraceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prints this throwable and its backtrace to the
            standard error stream.</summary>
        <remarks>
          <para>Prints this throwable and its backtrace to the
            standard error stream. This method prints a stack trace for this
            <c>Throwable</c> object on the error output stream that is
            the value of the field <c>System.err</c>. The first line of
            output contains the result of the <c>#toString()</c> method for
            this object.  Remaining lines represent data previously recorded by
            the method <c>#fillInStackTrace()</c>. The format of this
            information depends on the implementation, but the following
            example may be regarded as typical:
            &lt;blockquote&gt;</para>
          <code lang="text/java">java.lang.NullPointerException
                    at MyClass.mash(MyClass.java:9)
                    at MyClass.crunch(MyClass.java:6)
                    at MyClass.main(MyClass.java:3)
            </code>
          <para>&lt;/blockquote&gt;
            This example was produced by running the program:</para>
          <code lang="text/java">class MyClass {
                public static void main(String[] args) {
                    crunch(null);
                }
                static void crunch(int[] a) {
                    mash(a);
                }
                static void mash(int[] b) {
                    System.out.println(b[0]);
                }
            }
            </code>
          <para>The backtrace for a throwable with an initialized, non-null cause
            should generally include the backtrace for the cause.  The format
            of this information depends on the implementation, but the following
            example may be regarded as typical:</para>
          <code lang="text/java">HighLevelException: MidLevelException: LowLevelException
                    at Junk.a(Junk.java:13)
                    at Junk.main(Junk.java:4)
            Caused by: MidLevelException: LowLevelException
                    at Junk.c(Junk.java:23)
                    at Junk.b(Junk.java:17)
                    at Junk.a(Junk.java:11)
                    ... 1 more
            Caused by: LowLevelException
                    at Junk.e(Junk.java:30)
                    at Junk.d(Junk.java:27)
                    at Junk.c(Junk.java:21)
                    ... 3 more
            </code>
          <para>Note the presence of lines containing the characters <c>"..."</c>.
            These lines indicate that the remainder of the stack trace for this
            exception matches the indicated number of frames from the bottom of the
            stack trace of the exception that was caused by this exception (the
            "enclosing" exception).  This shorthand can greatly reduce the length
            of the output in the common case where a wrapped exception is thrown
            from same method as the "causative exception" is caught.  The above
            example was produced by running the program:</para>
          <code lang="text/java">public class Junk {
                public static void main(String args[]) {
                    try {
                        a();
                    } catch(HighLevelException e) {
                        e.printStackTrace();
                    }
                }
                static void a() throws HighLevelException {
                    try {
                        b();
                    } catch(MidLevelException e) {
                        throw new HighLevelException(e);
                    }
                }
                static void b() throws MidLevelException {
                    c();
                }
                static void c() throws MidLevelException {
                    try {
                        d();
                    } catch(LowLevelException e) {
                        throw new MidLevelException(e);
                    }
                }
                static void d() throws LowLevelException {
                   e();
                }
                static void e() throws LowLevelException {
                    throw new LowLevelException();
                }
            }
            
            class HighLevelException extends Exception {
                HighLevelException(Throwable cause) { super(cause); }
            }
            
            class MidLevelException extends Exception {
                MidLevelException(Throwable cause)  { super(cause); }
            }
            
            class LowLevelException extends Exception {
            }
            </code>
          <para>As of release 7, the platform supports the notion of
            <i>suppressed exceptions</i> (in conjunction with the <c>try</c>-with-resources statement). Any exceptions that were
            suppressed in order to deliver an exception are printed out
            beneath the stack trace.  The format of this information
            depends on the implementation, but the following example may be
            regarded as typical:</para>
          <code lang="text/java">Exception in thread "main" java.lang.Exception: Something happened
             at Foo.bar(Foo.java:10)
             at Foo.main(Foo.java:5)
             Suppressed: Resource$CloseFailException: Resource ID = 0
                     at Resource.close(Resource.java:26)
                     at Foo.bar(Foo.java:9)
                     ... 1 more
            </code>
          <para>Note that the "... n more" notation is used on suppressed exceptions
            just as it is used on causes. Unlike causes, suppressed exceptions are
            indented beyond their "containing exceptions."</para>
          <para>An exception can have both a cause and one or more suppressed
            exceptions:</para>
          <code lang="text/java">Exception in thread "main" java.lang.Exception: Main block
             at Foo3.main(Foo3.java:7)
             Suppressed: Resource$CloseFailException: Resource ID = 2
                     at Resource.close(Resource.java:26)
                     at Foo3.main(Foo3.java:5)
             Suppressed: Resource$CloseFailException: Resource ID = 1
                     at Resource.close(Resource.java:26)
                     at Foo3.main(Foo3.java:5)
            Caused by: java.lang.Exception: I did it
             at Foo3.main(Foo3.java:8)
            </code>
          <para>Likewise, a suppressed exception can have a cause:</para>
          <code lang="text/java">Exception in thread "main" java.lang.Exception: Main block
             at Foo4.main(Foo4.java:6)
             Suppressed: Resource2$CloseFailException: Resource ID = 1
                     at Resource2.close(Resource2.java:20)
                     at Foo4.main(Foo4.java:5)
             Caused by: java.lang.Exception: Rats, you caught me
                     at Resource2$CloseFailException.&amp;lt;init&amp;gt;(Resource2.java:45)
                     ... 2 more
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#printStackTrace()" title="Reference documentation">Java documentation for <code>java.lang.Throwable.printStackTrace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrintStackTrace">
      <MemberSignature Language="C#" Value="public virtual void PrintStackTrace (Java.IO.PrintStream s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintStackTrace(class Java.IO.PrintStream s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.PrintStackTrace(Java.IO.PrintStream)" />
      <MemberSignature Language="F#" Value="abstract member PrintStackTrace : Java.IO.PrintStream -&gt; unit&#xA;override this.PrintStackTrace : Java.IO.PrintStream -&gt; unit" Usage="throwable.PrintStackTrace s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("printStackTrace", "(Ljava/io/PrintStream;)V", "GetPrintStackTrace_Ljava_io_PrintStream_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("printStackTrace", "(Ljava/io/PrintStream;)V", "GetPrintStackTrace_Ljava_io_PrintStream_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.IO.PrintStream" />
      </Parameters>
      <Docs>
        <param name="s">
          <c>PrintStream</c> to use for output</param>
        <summary>Prints this throwable and its backtrace to the specified print stream.</summary>
        <remarks>
          <para>Prints this throwable and its backtrace to the specified print stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#printStackTrace(java.io.PrintStream)" title="Reference documentation">Java documentation for <code>java.lang.Throwable.printStackTrace(java.io.PrintStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrintStackTrace">
      <MemberSignature Language="C#" Value="public virtual void PrintStackTrace (Java.IO.PrintWriter s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintStackTrace(class Java.IO.PrintWriter s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.PrintStackTrace(Java.IO.PrintWriter)" />
      <MemberSignature Language="F#" Value="abstract member PrintStackTrace : Java.IO.PrintWriter -&gt; unit&#xA;override this.PrintStackTrace : Java.IO.PrintWriter -&gt; unit" Usage="throwable.PrintStackTrace s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("printStackTrace", "(Ljava/io/PrintWriter;)V", "GetPrintStackTrace_Ljava_io_PrintWriter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("printStackTrace", "(Ljava/io/PrintWriter;)V", "GetPrintStackTrace_Ljava_io_PrintWriter_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.IO.PrintWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <c>PrintWriter</c> to use for output</param>
        <summary>Prints this throwable and its backtrace to the specified
            print writer.</summary>
        <remarks>
          <para>Prints this throwable and its backtrace to the specified
            print writer.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#printStackTrace(java.io.PrintWriter)" title="Reference documentation">Java documentation for <code>java.lang.Throwable.printStackTrace(java.io.PrintWriter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetHandle">
      <MemberSignature Language="C#" Value="protected void SetHandle (IntPtr value, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHandle(native int value, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.SetHandle(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="member this.SetHandle : nativeint * Android.Runtime.JniHandleOwnership -&gt; unit" Usage="throwable.SetHandle (value, transfer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="value">
          An <see cref="T:System.IntPtr" /> containing the new value to return
          from <see cref="P:Java.Lang.Object.Handle" />.
        </param>
        <param name="transfer">To be added.</param>
        <summary>
          Sets the <see cref="P:Java.Lang.Object.Handle" /> property.
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStackTrace">
      <MemberSignature Language="C#" Value="public virtual void SetStackTrace (Java.Lang.StackTraceElement[] stackTrace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStackTrace(class Java.Lang.StackTraceElement[] stackTrace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.SetStackTrace(Java.Lang.StackTraceElement[])" />
      <MemberSignature Language="F#" Value="abstract member SetStackTrace : Java.Lang.StackTraceElement[] -&gt; unit&#xA;override this.SetStackTrace : Java.Lang.StackTraceElement[] -&gt; unit" Usage="throwable.SetStackTrace stackTrace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStackTrace", "([Ljava/lang/StackTraceElement;)V", "GetSetStackTrace_arrayLjava_lang_StackTraceElement_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStackTrace", "([Ljava/lang/StackTraceElement;)V", "GetSetStackTrace_arrayLjava_lang_StackTraceElement_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackTrace" Type="Java.Lang.StackTraceElement[]" />
      </Parameters>
      <Docs>
        <param name="stackTrace">the stack trace elements to be associated with
            this <c>Throwable</c>.  The specified array is copied by this
            call; changes in the specified array after the method invocation
            returns will have no affect on this <c>Throwable</c>'s stack
            trace.</param>
        <summary>Sets the stack trace elements that will be returned by
            <c>#getStackTrace()</c> and printed by <c>#printStackTrace()</c>
            and related methods.</summary>
        <remarks>
          <para>Sets the stack trace elements that will be returned by
            <c>#getStackTrace()</c> and printed by <c>#printStackTrace()</c>
            and related methods.
            
            This method, which is designed for use by RPC frameworks and other
            advanced systems, allows the client to override the default
            stack trace that is either generated by <c>#fillInStackTrace()</c>
            when a throwable is constructed or deserialized when a throwable is
            read from a serialization stream.</para>
          <para>If the stack trace of this <c>Throwable</c>Throwable#Throwable(String, Throwable, boolean, boolean) is not
            writable, calling this method has no effect other than
            validating its argument.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Throwable#setStackTrace(java.lang.StackTraceElement[])" title="Reference documentation">Java documentation for <code>java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if any element in <c>trace</c> is <c>null</c>.</exception>
        <altmember cref="M:Java.Lang.Throwable.PrintStackTrace" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public override string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.StackTrace" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="Java.Lang.Throwable.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected virtual IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Throwable.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected virtual Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Throwable.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Throwable.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToException">
      <MemberSignature Language="C#" Value="public static Exception ToException (Java.Lang.Throwable e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ToException(class Java.Lang.Throwable e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.ToException(Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="static member ToException : Java.Lang.Throwable -&gt; Exception" Usage="Java.Lang.Throwable.ToException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="throwable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterFromRuntime">
      <MemberSignature Language="C#" Value="public void UnregisterFromRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterFromRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Throwable.UnregisterFromRuntime" />
      <MemberSignature Language="F#" Value="abstract member UnregisterFromRuntime : unit -&gt; unit&#xA;override this.UnregisterFromRuntime : unit -&gt; unit" Usage="throwable.UnregisterFromRuntime " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.UnregisterFromRuntime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
