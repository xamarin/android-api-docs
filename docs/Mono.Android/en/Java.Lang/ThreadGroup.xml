<Type Name="ThreadGroup" FullName="Java.Lang.ThreadGroup">
  <TypeSignature Language="C#" Value="public class ThreadGroup : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.Thread.IUncaughtExceptionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadGroup extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.Thread/IUncaughtExceptionHandler, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.ThreadGroup" />
  <TypeSignature Language="F#" Value="type ThreadGroup = class&#xA;    inherit Object&#xA;    interface Thread.IUncaughtExceptionHandler&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Thread+IUncaughtExceptionHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/ThreadGroup", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/ThreadGroup", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A thread group represents a set of threads.</summary>
    <remarks>
      <para>A thread group represents a set of threads. In addition, a thread
            group can also include other thread groups. The thread groups form
            a tree in which every thread group except the initial thread group
            has a parent.</para>
      <para>A thread is allowed to access information about its own thread
            group, but not to access information about its thread group's
            parent thread group or any other thread groups.</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/ThreadGroup" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadGroup (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ThreadGroup : string -&gt; Java.Lang.ThreadGroup" Usage="new Java.Lang.ThreadGroup name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name of the new thread group.</param>
        <summary>Constructs a new thread group.</summary>
        <remarks>
          <para>Constructs a new thread group. The parent of this new group is
            the thread group of the currently running thread.</para>
          <para>The <c>checkAccess</c> method of the parent thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#ThreadGroup(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.ThreadGroup(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.CurrentThread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadGroup (Java.Lang.ThreadGroup? parent, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup parent, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.#ctor(Java.Lang.ThreadGroup,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ThreadGroup : Java.Lang.ThreadGroup * string -&gt; Java.Lang.ThreadGroup" Usage="new Java.Lang.ThreadGroup (parent, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">the parent thread group.</param>
        <param name="name">the name of the new thread group.</param>
        <summary>Creates a new thread group.</summary>
        <remarks>
          <para>Creates a new thread group. The parent of this new group is the
            specified thread group.</para>
          <para>The <c>checkAccess</c> method of the parent thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#ThreadGroup(java.lang.ThreadGroup,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.ThreadGroup(java.lang.ThreadGroup, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>parent == null</c></exception>
        <exception cref="T:Java.Lang.IllegalThreadStateException">if <c>parent</c> has been
         destroyed already
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ThreadGroup (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ThreadGroup : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.ThreadGroup" Usage="new Java.Lang.ThreadGroup (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCount">
      <MemberSignature Language="C#" Value="public virtual int ActiveCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ActiveCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.ActiveCount" />
      <MemberSignature Language="F#" Value="abstract member ActiveCount : unit -&gt; int&#xA;override this.ActiveCount : unit -&gt; int" Usage="threadGroup.ActiveCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("activeCount", "()I", "GetActiveCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("activeCount", "()I", "GetActiveCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an estimate of the number of active threads in this thread
            group and its subgroups.</summary>
        <returns>an estimate of the number of active threads in this thread
                     group and in any other thread group that has this thread
                     group as an ancestor</returns>
        <remarks>
          <para>Returns an estimate of the number of active threads in this thread
            group and its subgroups. Recursively iterates over all subgroups in
            this thread group.</para>
          <para>The value returned is only an estimate because the number of
            threads may change dynamically while this method traverses internal
            data structures, and might be affected by the presence of certain
            system threads. This method is intended primarily for debugging
            and monitoring purposes.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#activeCount()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.activeCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ActiveGroupCount">
      <MemberSignature Language="C#" Value="public virtual int ActiveGroupCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ActiveGroupCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.ActiveGroupCount" />
      <MemberSignature Language="F#" Value="abstract member ActiveGroupCount : unit -&gt; int&#xA;override this.ActiveGroupCount : unit -&gt; int" Usage="threadGroup.ActiveGroupCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("activeGroupCount", "()I", "GetActiveGroupCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("activeGroupCount", "()I", "GetActiveGroupCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an estimate of the number of active groups in this
            thread group and its subgroups.</summary>
        <returns>the number of active thread groups with this thread group as
                     an ancestor</returns>
        <remarks>
          <para>Returns an estimate of the number of active groups in this
            thread group and its subgroups. Recursively iterates over
            all subgroups in this thread group.</para>
          <para>The value returned is only an estimate because the number of
            thread groups may change dynamically while this method traverses
            internal data structures. This method is intended primarily for
            debugging and monitoring purposes.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#activeGroupCount()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.activeGroupCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllowThreadSuspension">
      <MemberSignature Language="C#" Value="public virtual bool AllowThreadSuspension (bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowThreadSuspension(bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.AllowThreadSuspension(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AllowThreadSuspension : bool -&gt; bool&#xA;override this.AllowThreadSuspension : bool -&gt; bool" Usage="threadGroup.AllowThreadSuspension b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("allowThreadSuspension", "(Z)Z", "GetAllowThreadSuspension_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("allowThreadSuspension", "(Z)Z", "GetAllowThreadSuspension_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="b">boolean to allow or disallow suspension</param>
        <summary>Used by VM to control lowmem implicit suspension.</summary>
        <returns>true on success</returns>
        <remarks>
          <para>Used by VM to control lowmem implicit suspension.</para>
          <para>Added in 1.1.</para>
          <para>This member is deprecated. The definition of this call depends on <c>#suspend</c>,
                        which is deprecated.  Further, the behavior of this call
                        was never specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#allowThreadSuspension(boolean)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.allowThreadSuspension(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public void CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.CheckAccess" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; unit" Usage="threadGroup.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkAccess", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkAccess", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines if the currently running thread has permission to
            modify this thread group.</summary>
        <remarks>
          <para>Determines if the currently running thread has permission to
            modify this thread group.</para>
          <para>If there is a security manager, its <c>checkAccess</c> method
            is called with this thread group as its argument. This may result
            in throwing a <c>SecurityException</c>.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#checkAccess()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.checkAccess()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Daemon">
      <MemberSignature Language="C#" Value="public bool Daemon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Daemon" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.Daemon" />
      <MemberSignature Language="F#" Value="member this.Daemon : bool with get, set" Usage="Java.Lang.ThreadGroup.Daemon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDaemon", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDaemon", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDaemon", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDaemon", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="daemon">if <c>true</c>, marks this thread group as
                                 a daemon thread group; otherwise, marks this
                                 thread group as normal.</param>
        <summary>Tests if this thread group is a daemon thread group. -or- Changes the daemon status of this thread group.</summary>
        <value>
          <c>true</c> if this thread group is a daemon thread group;
                     <c>false</c> otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tests if this thread group is a daemon thread group. A
            daemon thread group is automatically destroyed when its last
            thread is stopped or its last thread group is destroyed.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#isDaemon()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.isDaemon()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Changes the daemon status of this thread group.</para>
          <para>First, the <c>checkAccess</c> method of this thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>A daemon thread group is automatically destroyed when its last
            thread is stopped or its last thread group is destroyed.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#setDaemon(boolean)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.setDaemon(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Lang.ThreadGroup.Daemon" />
        <altmember cref="M:Java.Lang.ThreadGroup.Destroy" />
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Destroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Destroy" />
      <MemberSignature Language="F#" Value="member this.Destroy : unit -&gt; unit" Usage="threadGroup.Destroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("destroy", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("destroy", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroys this thread group and all of its subgroups.</summary>
        <remarks>
          <para>Destroys this thread group and all of its subgroups. This thread
            group must be empty, indicating that all threads that had been in
            this thread group have since stopped.</para>
          <para>First, the <c>checkAccess</c> method of this thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#destroy()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.destroy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">if this thread group or any of its
         subgroups has been destroyed already or if it still contains
         threads.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.Thread[]? list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.Thread[] list) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Enumerate(Java.Lang.Thread[])" />
      <MemberSignature Language="F#" Value="abstract member Enumerate : Java.Lang.Thread[] -&gt; int&#xA;override this.Enumerate : Java.Lang.Thread[] -&gt; int" Usage="threadGroup.Enumerate list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;)I", "GetEnumerate_arrayLjava_lang_Thread_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;)I", "GetEnumerate_arrayLjava_lang_Thread_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Java.Lang.Thread[]" />
      </Parameters>
      <Docs>
        <param name="list">an array into which to put the list of threads</param>
        <summary>Copies into the specified array every active thread in this
            thread group and its subgroups.</summary>
        <returns>the number of threads put into the array</returns>
        <remarks>
          <para>Copies into the specified array every active thread in this
            thread group and its subgroups.</para>
          <para>An invocation of this method behaves in exactly the same
            way as the invocation
            
            &lt;blockquote&gt;
            #enumerate(Thread[], boolean) enumerate<c>(list, true)</c>&lt;/blockquote&gt;</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#enumerate(java.lang.Thread[])" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.enumerate(java.lang.Thread[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.ThreadGroup[]? list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.ThreadGroup[] list) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Enumerate(Java.Lang.ThreadGroup[])" />
      <MemberSignature Language="F#" Value="abstract member Enumerate : Java.Lang.ThreadGroup[] -&gt; int&#xA;override this.Enumerate : Java.Lang.ThreadGroup[] -&gt; int" Usage="threadGroup.Enumerate list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enumerate", "([Ljava/lang/ThreadGroup;)I", "GetEnumerate_arrayLjava_lang_ThreadGroup_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enumerate", "([Ljava/lang/ThreadGroup;)I", "GetEnumerate_arrayLjava_lang_ThreadGroup_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Java.Lang.ThreadGroup[]" />
      </Parameters>
      <Docs>
        <param name="list">an array into which to put the list of thread groups</param>
        <summary>Copies into the specified array references to every active
            subgroup in this thread group and its subgroups.</summary>
        <returns>the number of thread groups put into the array</returns>
        <remarks>
          <para>Copies into the specified array references to every active
            subgroup in this thread group and its subgroups.</para>
          <para>An invocation of this method behaves in exactly the same
            way as the invocation
            
            &lt;blockquote&gt;
            #enumerate(ThreadGroup[], boolean) enumerate<c>(list, true)</c>&lt;/blockquote&gt;</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#enumerate(java.lang.ThreadGroup[])" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.enumerate(java.lang.ThreadGroup[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.Thread[]? list, bool recurse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.Thread[] list, bool recurse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Enumerate(Java.Lang.Thread[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Enumerate : Java.Lang.Thread[] * bool -&gt; int&#xA;override this.Enumerate : Java.Lang.Thread[] * bool -&gt; int" Usage="threadGroup.Enumerate (list, recurse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;Z)I", "GetEnumerate_arrayLjava_lang_Thread_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;Z)I", "GetEnumerate_arrayLjava_lang_Thread_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Java.Lang.Thread[]" />
        <Parameter Name="recurse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="list">an array into which to put the list of threads</param>
        <param name="recurse">if <c>true</c>, recursively enumerate all subgroups of this
                    thread group</param>
        <summary>Copies into the specified array every active thread in this
            thread group.</summary>
        <returns>the number of threads put into the array</returns>
        <remarks>
          <para>Copies into the specified array every active thread in this
            thread group. If <c>recurse</c> is <c>true</c>,
            this method recursively enumerates all subgroups of this
            thread group and references to every active thread in these
            subgroups are also included. If the array is too short to
            hold all the threads, the extra threads are silently ignored.</para>
          <para>An application might use the #activeCount activeCount
            method to get an estimate of how big the array should be, however
            <i>if the array is too short to hold all the threads, the extra threads
            are silently ignored.</i>  If it is critical to obtain every active
            thread in this thread group, the caller should verify that the returned
            int value is strictly less than the length of <c>list</c>.</para>
          <para>Due to the inherent race condition in this method, it is recommended
            that the method only be used for debugging and monitoring purposes.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#enumerate(java.lang.Thread[],%20boolean)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.enumerate(java.lang.Thread[], boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.ThreadGroup[]? list, bool recurse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.ThreadGroup[] list, bool recurse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Enumerate(Java.Lang.ThreadGroup[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Enumerate : Java.Lang.ThreadGroup[] * bool -&gt; int&#xA;override this.Enumerate : Java.Lang.ThreadGroup[] * bool -&gt; int" Usage="threadGroup.Enumerate (list, recurse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enumerate", "([Ljava/lang/ThreadGroup;Z)I", "GetEnumerate_arrayLjava_lang_ThreadGroup_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enumerate", "([Ljava/lang/ThreadGroup;Z)I", "GetEnumerate_arrayLjava_lang_ThreadGroup_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Java.Lang.ThreadGroup[]" />
        <Parameter Name="recurse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="list">an array into which to put the list of thread groups</param>
        <param name="recurse">if <c>true</c>, recursively enumerate all subgroups</param>
        <summary>Copies into the specified array references to every active
            subgroup in this thread group.</summary>
        <returns>the number of thread groups put into the array</returns>
        <remarks>
          <para>Copies into the specified array references to every active
            subgroup in this thread group. If <c>recurse</c> is
            <c>true</c>, this method recursively enumerates all subgroups of this
            thread group and references to every active thread group in these
            subgroups are also included.</para>
          <para>An application might use the
            #activeGroupCount activeGroupCount method to
            get an estimate of how big the array should be, however <i>if the
            array is too short to hold all the thread groups, the extra thread
            groups are silently ignored.</i>  If it is critical to obtain every
            active subgroup in this thread group, the caller should verify that
            the returned int value is strictly less than the length of
            <c>list</c>.</para>
          <para>Due to the inherent race condition in this method, it is recommended
            that the method only be used for debugging and monitoring purposes.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#enumerate(java.lang.ThreadGroup[],%20boolean)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.enumerate(java.lang.ThreadGroup[], boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Interrupt" />
      <MemberSignature Language="F#" Value="member this.Interrupt : unit -&gt; unit" Usage="threadGroup.Interrupt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("interrupt", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("interrupt", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrupts all threads in this thread group.</summary>
        <remarks>
          <para>Interrupts all threads in this thread group.</para>
          <para>First, the <c>checkAccess</c> method of this thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>This method then calls the <c>interrupt</c> method on all the
            threads in this thread group and in all of its subgroups.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#interrupt()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.interrupt()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Interrupt" />
      </Docs>
    </Member>
    <Member MemberName="IsDestroyed">
      <MemberSignature Language="C#" Value="public virtual bool IsDestroyed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestroyed" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.IsDestroyed" />
      <MemberSignature Language="F#" Value="member this.IsDestroyed : bool" Usage="Java.Lang.ThreadGroup.IsDestroyed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests if this thread group has been destroyed.</summary>
        <value>true if this object is destroyed</value>
        <remarks>
          <para>Tests if this thread group has been destroyed.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#isDestroyed()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.isDestroyed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.ThreadGroup.Destroy" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.ThreadGroup.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual void List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void List() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.List" />
      <MemberSignature Language="F#" Value="abstract member List : unit -&gt; unit&#xA;override this.List : unit -&gt; unit" Usage="threadGroup.List " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("list", "()V", "GetListHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("list", "()V", "GetListHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prints information about this thread group to the standard
            output.</summary>
        <remarks>
          <para>Prints information about this thread group to the standard
            output. This method is useful only for debugging.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#list()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.list()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxPriority">
      <MemberSignature Language="C#" Value="public int MaxPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPriority" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.MaxPriority" />
      <MemberSignature Language="F#" Value="member this.MaxPriority : int with get, set" Usage="Java.Lang.ThreadGroup.MaxPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxPriority", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxPriority", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMaxPriority", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMaxPriority", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="pri">the new priority of the thread group.</param>
        <summary>Returns the maximum priority of this thread group. -or- Sets the maximum priority of the group.</summary>
        <value>the maximum priority that a thread in this thread group
                     can have.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the maximum priority of this thread group. Threads that are
            part of this group cannot have a higher priority than the maximum
            priority.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#getMaxPriority()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.getMaxPriority()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the maximum priority of the group. Threads in the thread
            group that already have a higher priority are not affected.</para>
          <para>First, the <c>checkAccess</c> method of this thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>If the <c>pri</c> argument is less than
            <c>Thread#MIN_PRIORITY</c> or greater than
            <c>Thread#MAX_PRIORITY</c>, it is clamped to those values.</para>
          <para>Otherwise, the priority of this ThreadGroup object is set to the
            smaller of the specified <c>pri</c> and the maximum permitted
            priority of the parent of this thread group. (If this thread group
            is the system thread group, which has no parent, then its maximum
            priority is simply set to <c>pri</c>.) Then this method is
            called recursively, with <c>pri</c> as its argument, for
            every thread group that belongs to this thread group.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#setMaxPriority(int)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.setMaxPriority(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <altmember cref="P:Java.Lang.ThreadGroup.MaxPriority" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string? Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Java.Lang.ThreadGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this thread group.</summary>
        <value>the name of this thread group.</value>
        <remarks>
          <para>Returns the name of this thread group.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#getName()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Java.Lang.ThreadGroup? Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ThreadGroup Parent" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : Java.Lang.ThreadGroup" Usage="Java.Lang.ThreadGroup.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParent", "()Ljava/lang/ThreadGroup;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParent", "()Ljava/lang/ThreadGroup;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ThreadGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parent of this thread group.</summary>
        <value>the parent of this thread group. The top-level thread group
                     is the only thread group whose parent is <c>null</c>.</value>
        <remarks>
          <para>Returns the parent of this thread group.</para>
          <para>First, if the parent is not <c>null</c>, the
            <c>checkAccess</c> method of the parent thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#getParent()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.getParent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParentOf">
      <MemberSignature Language="C#" Value="public bool ParentOf (Java.Lang.ThreadGroup? g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ParentOf(class Java.Lang.ThreadGroup g) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.ParentOf(Java.Lang.ThreadGroup)" />
      <MemberSignature Language="F#" Value="member this.ParentOf : Java.Lang.ThreadGroup -&gt; bool" Usage="threadGroup.ParentOf g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parentOf", "(Ljava/lang/ThreadGroup;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parentOf", "(Ljava/lang/ThreadGroup;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="Java.Lang.ThreadGroup" />
      </Parameters>
      <Docs>
        <param name="g">a thread group.</param>
        <summary>Tests if this thread group is either the thread group
            argument or one of its ancestor thread groups.</summary>
        <returns>
          <c>true</c> if this thread group is the thread group
                     argument or one of its ancestor thread groups;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Tests if this thread group is either the thread group
            argument or one of its ancestor thread groups.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#parentOf(java.lang.ThreadGroup)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.parentOf(java.lang.ThreadGroup)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Resume" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="threadGroup.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resume", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resume", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes all threads in this thread group.</summary>
        <remarks>
          <para>Resumes all threads in this thread group.</para>
          <para>First, the <c>checkAccess</c> method of this thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>This method then calls the <c>resume</c> method on all the
            threads in this thread group and in all of its sub groups.</para>
          <para>Added in 1.0.</para>
          <para>This member is deprecated. This method is used solely in conjunction with
                  <c>Thread.suspend</c> and <c>ThreadGroup.suspend</c>,
                  both of which have been deprecated, as they are inherently
                  deadlock-prone.  See <c>Thread#suspend</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#resume()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.resume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Resume" />
        <altmember cref="M:Java.Lang.ThreadGroup.Suspend" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Stop" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="threadGroup.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops all threads in this thread group.</summary>
        <remarks>
          <para>Stops all threads in this thread group.</para>
          <para>First, the <c>checkAccess</c> method of this thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>This method then calls the <c>stop</c> method on all the
            threads in this thread group and in all of its subgroups.</para>
          <para>Added in 1.0.</para>
          <para>This member is deprecated. This method is inherently unsafe.  See
                <c>Thread#stop</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#stop()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Stop" />
        <altmember cref="M:Java.Lang.Thread.Stop(Java.Lang.Throwable)" />
        <altmember cref="T:Java.Lang.ThreadDeath" />
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Suspend" />
      <MemberSignature Language="F#" Value="member this.Suspend : unit -&gt; unit" Usage="threadGroup.Suspend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("suspend", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("suspend", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Suspends all threads in this thread group.</summary>
        <remarks>
          <para>Suspends all threads in this thread group.</para>
          <para>First, the <c>checkAccess</c> method of this thread group is
            called with no arguments; this may result in a security exception.</para>
          <para>This method then calls the <c>suspend</c> method on all the
            threads in this thread group and in all of its subgroups.</para>
          <para>Added in 1.0.</para>
          <para>This member is deprecated. This method is inherently deadlock-prone.  See
                <c>Thread#suspend</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#suspend()" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.suspend()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Suspend" />
        <altmember cref="M:Java.Lang.ThreadGroup.Resume" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.ThreadGroup.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.ThreadGroup.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncaughtException">
      <MemberSignature Language="C#" Value="public virtual void UncaughtException (Java.Lang.Thread? t, Java.Lang.Throwable? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UncaughtException(class Java.Lang.Thread t, class Java.Lang.Throwable e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.UncaughtException(Java.Lang.Thread,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member UncaughtException : Java.Lang.Thread * Java.Lang.Throwable -&gt; unit&#xA;override this.UncaughtException : Java.Lang.Thread * Java.Lang.Throwable -&gt; unit" Usage="threadGroup.UncaughtException (t, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Thread.IUncaughtExceptionHandler.UncaughtException(Java.Lang.Thread,Java.Lang.Throwable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("uncaughtException", "(Ljava/lang/Thread;Ljava/lang/Throwable;)V", "GetUncaughtException_Ljava_lang_Thread_Ljava_lang_Throwable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("uncaughtException", "(Ljava/lang/Thread;Ljava/lang/Throwable;)V", "GetUncaughtException_Ljava_lang_Thread_Ljava_lang_Throwable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Java.Lang.Thread" />
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="t">the thread that is about to exit.</param>
        <param name="e">the uncaught exception.</param>
        <summary>Called by the Java Virtual Machine when a thread in this
            thread group stops because of an uncaught exception, and the thread
            does not have a specific <c>Thread.UncaughtExceptionHandler</c>
            installed.</summary>
        <remarks>
          <para>Called by the Java Virtual Machine when a thread in this
            thread group stops because of an uncaught exception, and the thread
            does not have a specific <c>Thread.UncaughtExceptionHandler</c>
            installed.</para>
          <para>The <c>uncaughtException</c> method of
            <c>ThreadGroup</c> does the following:
            &lt;ul&gt;
            &lt;li&gt;If this thread group has a parent thread group, the
                <c>uncaughtException</c> method of that parent is called
                with the same two arguments.
            &lt;li&gt;Otherwise, this method checks to see if there is a
                Thread#getDefaultUncaughtExceptionHandler default
                uncaught exception handler installed, and if so, its
                <c>uncaughtException</c> method is called with the same
                two arguments.
            &lt;li&gt;Otherwise, this method determines if the <c>Throwable</c>
                argument is an instance of <c>ThreadDeath</c>. If so, nothing
                special is done. Otherwise, a message containing the
                thread's name, as returned from the thread's <c>Thread#getName getName</c> method, and a stack backtrace,
                using the <c>Throwable</c>'s <c>Throwable#printStackTrace printStackTrace</c> method, is
                printed to the System#err standard error stream.
            &lt;/ul&gt;</para>
          <para>Applications can override this method in subclasses of
            <c>ThreadGroup</c> to provide alternative handling of
            uncaught exceptions.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ThreadGroup#uncaughtException(java.lang.Thread,%20java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.lang.ThreadGroup.uncaughtException(java.lang.Thread, java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
