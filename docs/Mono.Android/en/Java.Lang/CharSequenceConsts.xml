<Type Name="CharSequenceConsts" FullName="Java.Lang.CharSequenceConsts">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CharSequenceConsts&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharSequenceConsts abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class CharSequenceConsts : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CharSequenceConsts extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.CharSequenceConsts" />
  <TypeSignature Language="F#" Value="type CharSequenceConsts = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/CharSequence", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/CharSequence", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("Use the 'Java.Lang.ICharSequence' type. This class will be removed in a future release.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use the 'Java.Lang.ICharSequence' type. This class will be removed in a future release.")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (cs1 As ICharSequence, cs2 As ICharSequence) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(Java::Lang::ICharSequence ^ cs1, Java::Lang::ICharSequence ^ cs2);" />
      <MemberSignature Language="C#" Value="public static int Compare (Java.Lang.ICharSequence cs1, Java.Lang.ICharSequence cs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class Java.Lang.ICharSequence cs1, class Java.Lang.ICharSequence cs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.CharSequenceConsts.Compare(Java.Lang.ICharSequence,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="static member Compare : Java.Lang.ICharSequence * Java.Lang.ICharSequence -&gt; int" Usage="Java.Lang.CharSequenceConsts.Compare (cs1, cs2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Java.Lang.ICharSequence.Compare'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Java.Lang.ICharSequence.Compare'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cs1" Type="Java.Lang.ICharSequence" />
        <Parameter Name="cs2" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="cs1">the first <c>CharSequence</c></param>
        <param name="cs2">the second <c>CharSequence</c></param>
        <summary>Compares two <c>CharSequence</c> instances lexicographically.</summary>
        <returns>the value <c>0</c> if the two <c>CharSequence</c> are equal;
                     a negative integer if the first <c>CharSequence</c>
                     is lexicographically less than the second; or a
                     positive integer if the first <c>CharSequence</c> is
                     lexicographically greater than the second.</returns>
        <remarks>
          <para>Compares two <c>CharSequence</c> instances lexicographically. Returns a
            negative value, zero, or a positive value if the first sequence is lexicographically
            less than, equal to, or greater than the second, respectively.</para>
          <para>The lexicographical ordering of <c>CharSequence</c> is defined as follows.
            Consider a <c>CharSequence</c><i>cs</i> of length <i>len</i> to be a
            sequence of char values, <i>cs[0]</i> to <i>cs[len-1]</i>. Suppose <i>k</i>
            is the lowest index at which the corresponding char values from each sequence
            differ. The lexicographic ordering of the sequences is determined by a numeric
            comparison of the char values <i>cs1[k]</i> with <i>cs2[k]</i>. If there is
            no such index <i>k</i>, the shorter sequence is considered lexicographically
            less than the other. If the sequences have the same length, the sequences are
            considered lexicographically equal.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/CharSequence#compare(java.lang.CharSequence,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.lang.CharSequence.compare(java.lang.CharSequence, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (cs1 As String, cs2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ cs1, System::String ^ cs2);" />
      <MemberSignature Language="C#" Value="public static int Compare (string cs1, string cs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string cs1, string cs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.CharSequenceConsts.Compare(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member Compare : string * string -&gt; int" Usage="Java.Lang.CharSequenceConsts.Compare (cs1, cs2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Java.Lang.ICharSequence.Compare'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Java.Lang.ICharSequence.Compare'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cs1" Type="System.String" />
        <Parameter Name="cs2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cs1">the first <c>CharSequence</c></param>
        <param name="cs2">the second <c>CharSequence</c></param>
        <summary>Compares two <c>CharSequence</c> instances lexicographically.</summary>
        <returns>the value <c>0</c> if the two <c>CharSequence</c> are equal;
                     a negative integer if the first <c>CharSequence</c>
                     is lexicographically less than the second; or a
                     positive integer if the first <c>CharSequence</c> is
                     lexicographically greater than the second.</returns>
        <remarks>
          <para>Compares two <c>CharSequence</c> instances lexicographically. Returns a
            negative value, zero, or a positive value if the first sequence is lexicographically
            less than, equal to, or greater than the second, respectively.</para>
          <para>The lexicographical ordering of <c>CharSequence</c> is defined as follows.
            Consider a <c>CharSequence</c><i>cs</i> of length <i>len</i> to be a
            sequence of char values, <i>cs[0]</i> to <i>cs[len-1]</i>. Suppose <i>k</i>
            is the lowest index at which the corresponding char values from each sequence
            differ. The lexicographic ordering of the sequences is determined by a numeric
            comparison of the char values <i>cs1[k]</i> with <i>cs2[k]</i>. If there is
            no such index <i>k</i>, the shorter sequence is considered lexicographically
            less than the other. If the sequences have the same length, the sequences are
            considered lexicographically equal.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/CharSequence#compare(java.lang.CharSequence,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.lang.CharSequence.compare(java.lang.CharSequence, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
