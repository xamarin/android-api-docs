<Type Name="Character" FullName="Java.Lang.Character">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Character&#xA;Inherits Object&#xA;Implements IComparable, IConvertible, IDisposable, IJavaPeerable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Character sealed : Java::Lang::Object, IConvertible, IDisposable, Java::Interop::IJavaPeerable, Java::IO::ISerializable, Java::Lang::IComparable" />
  <TypeSignature Language="C#" Value="public sealed class Character : Java.Lang.Object, IConvertible, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Character extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Lang.IComparable, class System.IConvertible, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Character" />
  <TypeSignature Language="F#" Value="type Character = class&#xA;    inherit Object&#xA;    interface IConvertible&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/Character", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/Character", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>Character</c> class wraps a value of the primitive
            type <c>char</c> in an object.</summary>
    <remarks>
      <para>The <c>Character</c> class wraps a value of the primitive
            type <c>char</c> in an object. An object of class
            <c>Character</c> contains a single field whose type is
            <c>char</c>.</para>
      <para>In addition, this class provides several methods for determining
            a character's category (lowercase letter, digit, etc.) and for converting
            characters from uppercase to lowercase and vice versa.</para>
      <para>Character information is based on the Unicode Standard</para>
      <para>The methods and data of class <c>Character</c> are defined by
            the information in the <i>UnicodeData</i> file that is part of the
            Unicode Character Database maintained by the Unicode
            Consortium. This file specifies various properties including name
            and general category for every defined Unicode code point or
            character range.</para>
      <para>The file and its description are available from the Unicode Consortium at:
            &lt;ul&gt;
            &lt;li&gt;<see href="http://www.unicode.org">http://www.unicode.org</see>&lt;/ul&gt;
            
            &lt;h2&gt;"conformance"&gt;Unicode Conformance&lt;/h2&gt;</para>
      <para>The fields and methods of class <c>Character</c> are defined in terms
            of character information from the Unicode Standard, specifically the
            <i>UnicodeData</i> file that is part of the Unicode Character Database.
            This file specifies properties including name and category for every
            assigned Unicode code point or character range. The file is available
            from the Unicode Consortium at
            <see href="http://www.unicode.org">http://www.unicode.org</see>.</para>
      <para>Character information is based on the Unicode Standard, version 13.0.</para>
      <para>The Java platform has supported different versions of the Unicode
            Standard over time. Upgrades to newer versions of the Unicode Standard
            occurred in the following Java releases, each indicating the new version:
            &lt;table class="striped"&gt;
            &lt;caption style="display:none"&gt;Shows Java releases and supported Unicode versions&lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;&lt;th scope="col"&gt;Java release&lt;/th&gt;
                &lt;th scope="col"&gt;Unicode version&lt;/th&gt;&lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 15&lt;/td&gt;
                &lt;td&gt;Unicode 13.0&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 13&lt;/td&gt;
                &lt;td&gt;Unicode 12.1&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 12&lt;/td&gt;
                &lt;td&gt;Unicode 11.0&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 11&lt;/td&gt;
                &lt;td&gt;Unicode 10.0&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 9&lt;/td&gt;
                &lt;td&gt;Unicode 8.0&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 8&lt;/td&gt;
                &lt;td&gt;Unicode 6.2&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 7&lt;/td&gt;
                &lt;td&gt;Unicode 6.0&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 5.0&lt;/td&gt;
                &lt;td&gt;Unicode 4.0&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;Java SE 1.4&lt;/td&gt;
                &lt;td&gt;Unicode 3.0&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;JDK 1.1&lt;/td&gt;
                &lt;td&gt;Unicode 2.0&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;td&gt;JDK 1.0.2&lt;/td&gt;
                &lt;td&gt;Unicode 1.1.5&lt;/td&gt;&lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;
            Variations from these base Unicode versions, such as recognized appendixes,
            are documented elsewhere.
            &lt;h2&gt;"unicode"&gt;Unicode Character Representations&lt;/h2&gt;</para>
      <para>The <c>char</c> data type (and therefore the value that a
            <c>Character</c> object encapsulates) are based on the
            original Unicode specification, which defined characters as
            fixed-width 16-bit entities. The Unicode Standard has since been
            changed to allow for characters whose representation requires more
            than 16 bits.  The range of legal &lt;em&gt;code point&lt;/em&gt;s is now
            U+0000 to U+10FFFF, known as &lt;em&gt;Unicode scalar value&lt;/em&gt;.
            (Refer to the <see href="http://www.unicode.org/reports/tr27/#notation"><i>
            definition</i></see> of the U+<i>n</i> notation in the Unicode
            Standard.)</para>
      <para>"BMP"&gt;The set of characters from U+0000 to U+FFFF is
            sometimes referred to as the &lt;em&gt;Basic Multilingual Plane (BMP)&lt;/em&gt;.
            "supplementary"&gt;Characters whose code points are greater
            than U+FFFF are called &lt;em&gt;supplementary character&lt;/em&gt;s.  The Java
            platform uses the UTF-16 representation in <c>char</c> arrays and
            in the <c>String</c> and <c>StringBuffer</c> classes. In
            this representation, supplementary characters are represented as a pair
            of <c>char</c> values, the first from the &lt;em&gt;high-surrogates&lt;/em&gt;
            range, (&amp;#92;uD800-&amp;#92;uDBFF), the second from the
            &lt;em&gt;low-surrogates&lt;/em&gt; range (&amp;#92;uDC00-&amp;#92;uDFFF).</para>
      <para>A <c>char</c> value, therefore, represents Basic
            Multilingual Plane (BMP) code points, including the surrogate
            code points, or code units of the UTF-16 encoding. An
            <c>int</c> value represents all Unicode code points,
            including supplementary code points. The lower (least significant)
            21 bits of <c>int</c> are used to represent Unicode code
            points and the upper (most significant) 11 bits must be zero.
            Unless otherwise specified, the behavior with respect to
            supplementary characters and surrogate <c>char</c> values is
            as follows:
            
            &lt;ul&gt;
            &lt;li&gt;The methods that only accept a <c>char</c> value cannot support
            supplementary characters. They treat <c>char</c> values from the
            surrogate ranges as undefined characters. For example,
            <c>Character.isLetter('\u005CuD840')</c> returns <c>false</c>, even though
            this specific value if followed by any low-surrogate value in a string
            would represent a letter.
            
            &lt;li&gt;The methods that accept an <c>int</c> value support all
            Unicode characters, including supplementary characters. For
            example, <c>Character.isLetter(0x2F81A)</c> returns
            <c>true</c> because the code point value represents a letter
            (a CJK ideograph).
            &lt;/ul&gt;</para>
      <para>In the Java SE API documentation, &lt;em&gt;Unicode code point&lt;/em&gt; is
            used for character values in the range between U+0000 and U+10FFFF,
            and &lt;em&gt;Unicode code unit&lt;/em&gt; is used for 16-bit
            <c>char</c> values that are code units of the &lt;em&gt;UTF-16&lt;/em&gt;
            encoding. For more information on Unicode terminology, refer to the
            <see href="http://www.unicode.org/glossary/">Unicode Glossary</see>.
            
            &lt;!-- Android-removed: paragraph on ValueBased</para>
      <para>This is a <see href="https://developer.android.com//java.base/java/lang/doc-files/ValueBased.html">value-based</see>
            class; programmers should treat instances that are
            #equals(Object) equal as interchangeable and should not
            use instances for synchronization, or unpredictable behavior may
            occur. For example, in a future release, synchronization may fail.
            --&gt;</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/Character" title="Reference documentation">Java documentation for <code>java.lang.Character</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Character(char value);" />
      <MemberSignature Language="C#" Value="public Character (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.#ctor(System.Char)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Character : char -&gt; Java.Lang.Character" Usage="new Java.Lang.Character value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(C)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(C)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">the value to be represented by the
                             <c>Character</c> object.</param>
        <summary>Returns an <c>Optional</c> containing the nominal descriptor for this
            instance.</summary>
        <returns>an <c>Optional</c> describing the Character instance</returns>
        <remarks>
          <para>Returns an <c>Optional</c> containing the nominal descriptor for this
            instance.</para>
          <para>Added in 15.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#Character(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.Character(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Bytes">
      <MemberSignature Language="VB.NET" Value="Public Const Bytes As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int Bytes = 2;" />
      <MemberSignature Language="C#" Value="public const int Bytes = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Bytes = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Bytes" />
      <MemberSignature Language="F#" Value="val mutable Bytes : int" Usage="Java.Lang.Character.Bytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BYTES", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BYTES", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The number of bytes used to represent a <c>char</c> value in unsigned
            binary form.</summary>
        <remarks>
          <para>The number of bytes used to represent a <c>char</c> value in unsigned
            binary form.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#BYTES" title="Reference documentation">Java documentation for <code>java.lang.Character.BYTES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharCount">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CharCount (codePoint As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CharCount(int codePoint);" />
      <MemberSignature Language="C#" Value="public static int CharCount (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CharCount(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CharCount(System.Int32)" />
      <MemberSignature Language="F#" Value="static member CharCount : int -&gt; int" Usage="Java.Lang.Character.CharCount codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("charCount", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("charCount", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines the number of <c>char</c> values needed to
            represent the specified character (Unicode code point).</summary>
        <returns>2 if the character is a valid supplementary character; 1 otherwise.</returns>
        <remarks>
          <para>Determines the number of <c>char</c> values needed to
            represent the specified character (Unicode code point). If the
            specified character is equal to or greater than 0x10000, then
            the method returns 2. Otherwise, the method returns 1.</para>
          <para>This method doesn't validate the specified character to be a
            valid Unicode code point. The caller must validate the
            character value using <c>#isValidCodePoint(int) isValidCodePoint</c>
            if necessary.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#charCount(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.charCount(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsValidCodePoint(System.Int32)" />
        <altmember cref="M:Java.Lang.Character.IsSupplementaryCodePoint(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CharValue">
      <MemberSignature Language="VB.NET" Value="Public Function CharValue () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; char CharValue();" />
      <MemberSignature Language="C#" Value="public char CharValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char CharValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CharValue" />
      <MemberSignature Language="F#" Value="member this.CharValue : unit -&gt; char" Usage="character.CharValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("charValue", "()C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("charValue", "()C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>Character</c> object.</summary>
        <returns>the primitive <c>char</c> value represented by
                     this object.</returns>
        <remarks>
          <para>Returns the value of this <c>Character</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#charValue()" title="Reference documentation">Java documentation for <code>java.lang.Character.charValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointAt (seq As ICharSequence, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointAt(Java::Lang::ICharSequence ^ seq, int index);" />
      <MemberSignature Language="C#" Value="public static int CodePointAt (Java.Lang.ICharSequence seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(class Java.Lang.ICharSequence seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointAt(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : Java.Lang.ICharSequence * int -&gt; int" Usage="Java.Lang.Character.CodePointAt (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointAt", "(Ljava/lang/CharSequence;I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointAt", "(Ljava/lang/CharSequence;I)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">a sequence of <c>char</c> values (Unicode code
            units)</param>
        <param name="index">the index to the <c>char</c> values (Unicode
            code units) in <c>seq</c> to be converted</param>
        <summary>Returns the code point at the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point at the given index</returns>
        <remarks>
          <para>Returns the code point at the given index of the
            <c>CharSequence</c>. If the <c>char</c> value at
            the given index in the <c>CharSequence</c> is in the
            high-surrogate range, the following index is less than the
            length of the <c>CharSequence</c>, and the
            <c>char</c> value at the following index is in the
            low-surrogate range, then the supplementary code point
            corresponding to this surrogate pair is returned. Otherwise,
            the <c>char</c> value at the given index is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointAt(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointAt(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index</c> is negative or greater than or equal to
             the length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointAt (a As Char(), index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointAt(cli::array &lt;char&gt; ^ a, int index);" />
      <MemberSignature Language="C#" Value="public static int CodePointAt (char[]? a, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(char[] a, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointAt(System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : char[] * int -&gt; int" Usage="Java.Lang.Character.CodePointAt (a, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointAt", "([CI)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointAt", "([CI)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the <c>char</c> array</param>
        <param name="index">the index to the <c>char</c> values (Unicode
            code units) in the <c>char</c> array to be converted</param>
        <summary>Returns the code point at the given index of the
            <c>char</c> array.</summary>
        <returns>the Unicode code point at the given index</returns>
        <remarks>
          <para>Returns the code point at the given index of the
            <c>char</c> array. If the <c>char</c> value at
            the given index in the <c>char</c> array is in the
            high-surrogate range, the following index is less than the
            length of the <c>char</c> array, and the
            <c>char</c> value at the following index is in the
            low-surrogate range, then the supplementary code point
            corresponding to this surrogate pair is returned. Otherwise,
            the <c>char</c> value at the given index is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointAt(char[],%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointAt(char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index</c> is negative or greater than or equal to
             the length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointAt (seq As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointAt(System::String ^ seq, int index);" />
      <MemberSignature Language="C#" Value="public static int CodePointAt (string seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(string seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointAt(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : string * int -&gt; int" Usage="Java.Lang.Character.CodePointAt (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">a sequence of <c>char</c> values (Unicode code
            units)</param>
        <param name="index">the index to the <c>char</c> values (Unicode
            code units) in <c>seq</c> to be converted</param>
        <summary>Returns the code point at the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point at the given index</returns>
        <remarks>
          <para>Returns the code point at the given index of the
            <c>CharSequence</c>. If the <c>char</c> value at
            the given index in the <c>CharSequence</c> is in the
            high-surrogate range, the following index is less than the
            length of the <c>CharSequence</c>, and the
            <c>char</c> value at the following index is in the
            low-surrogate range, then the supplementary code point
            corresponding to this surrogate pair is returned. Otherwise,
            the <c>char</c> value at the given index is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointAt(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointAt(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointAt (a As Char(), index As Integer, limit As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointAt(cli::array &lt;char&gt; ^ a, int index, int limit);" />
      <MemberSignature Language="C#" Value="public static int CodePointAt (char[]? a, int index, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(char[] a, int32 index, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointAt(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : char[] * int * int -&gt; int" Usage="Java.Lang.Character.CodePointAt (a, index, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointAt", "([CII)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointAt", "([CII)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the <c>char</c> array</param>
        <param name="index">the index to the <c>char</c> values (Unicode
            code units) in the <c>char</c> array to be converted</param>
        <param name="limit">the index after the last array element that
            can be used in the <c>char</c> array</param>
        <summary>Returns the code point at the given index of the
            <c>char</c> array, where only array elements with
            <c>index</c> less than <c>limit</c> can be used.</summary>
        <returns>the Unicode code point at the given index</returns>
        <remarks>
          <para>Returns the code point at the given index of the
            <c>char</c> array, where only array elements with
            <c>index</c> less than <c>limit</c> can be used. If
            the <c>char</c> value at the given index in the
            <c>char</c> array is in the high-surrogate range, the
            following index is less than the <c>limit</c>, and the
            <c>char</c> value at the following index is in the
            low-surrogate range, then the supplementary code point
            corresponding to this surrogate pair is returned. Otherwise,
            the <c>char</c> value at the given index is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointAt(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointAt(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>, <c>index &gt;= limit</c>,
             <c>limit </c> or if <c>limit</c> is greater than the
             length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointBefore (seq As ICharSequence, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointBefore(Java::Lang::ICharSequence ^ seq, int index);" />
      <MemberSignature Language="C#" Value="public static int CodePointBefore (Java.Lang.ICharSequence seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(class Java.Lang.ICharSequence seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointBefore(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : Java.Lang.ICharSequence * int -&gt; int" Usage="Java.Lang.Character.CodePointBefore (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointBefore", "(Ljava/lang/CharSequence;I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointBefore", "(Ljava/lang/CharSequence;I)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the <c>CharSequence</c> instance</param>
        <param name="index">the index following the code point that should be returned</param>
        <summary>Returns the code point preceding the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point value before the given index.</returns>
        <remarks>
          <para>Returns the code point preceding the given index of the
            <c>CharSequence</c>. If the <c>char</c> value at
            <c>(index - 1)</c> in the <c>CharSequence</c> is in
            the low-surrogate range, <c>(index - 2)</c> is not
            negative, and the <c>char</c> value at <c>(index - 2)</c>
            in the <c>CharSequence</c> is in the
            high-surrogate range, then the supplementary code point
            corresponding to this surrogate pair is returned. Otherwise,
            the <c>char</c> value at <c>(index - 1)</c> is
            returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointBefore(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointBefore(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index</c> is less than 1 or greater than the
             length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointBefore (a As Char(), index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointBefore(cli::array &lt;char&gt; ^ a, int index);" />
      <MemberSignature Language="C#" Value="public static int CodePointBefore (char[]? a, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(char[] a, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointBefore(System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : char[] * int -&gt; int" Usage="Java.Lang.Character.CodePointBefore (a, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointBefore", "([CI)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointBefore", "([CI)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the <c>char</c> array</param>
        <param name="index">the index following the code point that should be returned</param>
        <summary>Returns the code point preceding the given index of the
            <c>char</c> array.</summary>
        <returns>the Unicode code point value before the given index.</returns>
        <remarks>
          <para>Returns the code point preceding the given index of the
            <c>char</c> array. If the <c>char</c> value at
            <c>(index - 1)</c> in the <c>char</c> array is in
            the low-surrogate range, <c>(index - 2)</c> is not
            negative, and the <c>char</c> value at <c>(index - 2)</c>
            in the <c>char</c> array is in the
            high-surrogate range, then the supplementary code point
            corresponding to this surrogate pair is returned. Otherwise,
            the <c>char</c> value at <c>(index - 1)</c> is
            returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointBefore(char[],%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointBefore(char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index</c> is less than 1 or greater than the
             length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointBefore (seq As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointBefore(System::String ^ seq, int index);" />
      <MemberSignature Language="C#" Value="public static int CodePointBefore (string seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(string seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointBefore(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : string * int -&gt; int" Usage="Java.Lang.Character.CodePointBefore (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the <c>CharSequence</c> instance</param>
        <param name="index">the index following the code point that should be returned</param>
        <summary>Returns the code point preceding the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point value before the given index.</returns>
        <remarks>
          <para>Returns the code point preceding the given index of the
            <c>CharSequence</c>. If the <c>char</c> value at
            <c>(index - 1)</c> in the <c>CharSequence</c> is in
            the low-surrogate range, <c>(index - 2)</c> is not
            negative, and the <c>char</c> value at <c>(index - 2)</c>
            in the <c>CharSequence</c> is in the
            high-surrogate range, then the supplementary code point
            corresponding to this surrogate pair is returned. Otherwise,
            the <c>char</c> value at <c>(index - 1)</c> is
            returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointBefore(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointBefore(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointBefore (a As Char(), index As Integer, start As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointBefore(cli::array &lt;char&gt; ^ a, int index, int start);" />
      <MemberSignature Language="C#" Value="public static int CodePointBefore (char[]? a, int index, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(char[] a, int32 index, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointBefore(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : char[] * int * int -&gt; int" Usage="Java.Lang.Character.CodePointBefore (a, index, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointBefore", "([CII)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointBefore", "([CII)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the <c>char</c> array</param>
        <param name="index">the index following the code point that should be returned</param>
        <param name="start">the index of the first array element in the
            <c>char</c> array</param>
        <summary>Returns the code point preceding the given index of the
            <c>char</c> array, where only array elements with
            <c>index</c> greater than or equal to <c>start</c>
            can be used.</summary>
        <returns>the Unicode code point value before the given index.</returns>
        <remarks>
          <para>Returns the code point preceding the given index of the
            <c>char</c> array, where only array elements with
            <c>index</c> greater than or equal to <c>start</c>
            can be used. If the <c>char</c> value at <c>(index - 1)</c>
            in the <c>char</c> array is in the
            low-surrogate range, <c>(index - 2)</c> is not less than
            <c>start</c>, and the <c>char</c> value at
            <c>(index - 2)</c> in the <c>char</c> array is in
            the high-surrogate range, then the supplementary code point
            corresponding to this surrogate pair is returned. Otherwise,
            the <c>char</c> value at <c>(index - 1)</c> is
            returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointBefore(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointBefore(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index &lt;= start</c>, <c>start </c>,
             <c>index</c> is greater than the length of <c>seq</c>, or
             if <c>start</c> is equal or greater than the length of
             <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointCount (seq As ICharSequence, beginIndex As Integer, endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointCount(Java::Lang::ICharSequence ^ seq, int beginIndex, int endIndex);" />
      <MemberSignature Language="C#" Value="public static int CodePointCount (Java.Lang.ICharSequence seq, int beginIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(class Java.Lang.ICharSequence seq, int32 beginIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointCount(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : Java.Lang.ICharSequence * int * int -&gt; int" Usage="Java.Lang.Character.CodePointCount (seq, beginIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointCount", "(Ljava/lang/CharSequence;II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointCount", "(Ljava/lang/CharSequence;II)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="beginIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the char sequence</param>
        <param name="beginIndex">the index to the first <c>char</c> of
            the text range.</param>
        <param name="endIndex">the index after the last <c>char</c> of
            the text range.</param>
        <summary>Returns the number of Unicode code points in the text range of
            the specified char sequence.</summary>
        <returns>the number of Unicode code points in the specified text
            range</returns>
        <remarks>
          <para>Returns the number of Unicode code points in the text range of
            the specified char sequence. The text range begins at the
            specified <c>beginIndex</c> and extends to the
            <c>char</c> at index <c>endIndex - 1</c>. Thus the
            length (in <c>char</c>s) of the text range is
            <c>endIndex-beginIndex</c>. Unpaired surrogates within
            the text range count as one code point each.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointCount(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointCount(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>beginIndex </c>, <c>beginIndex &gt; endIndex</c> or
             if <c>endIndex</c> is greater than the length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointCount (a As Char(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointCount(cli::array &lt;char&gt; ^ a, int offset, int count);" />
      <MemberSignature Language="C#" Value="public static int CodePointCount (char[]? a, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(char[] a, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : char[] * int * int -&gt; int" Usage="Java.Lang.Character.CodePointCount (a, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointCount", "([CII)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointCount", "([CII)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the <c>char</c> array</param>
        <param name="offset">the index of the first <c>char</c> in the
            given <c>char</c> array</param>
        <param name="count">the length of the subarray in <c>char</c>s</param>
        <summary>Returns the number of Unicode code points in a subarray of the
            <c>char</c> array argument.</summary>
        <returns>the number of Unicode code points in the specified subarray</returns>
        <remarks>
          <para>Returns the number of Unicode code points in a subarray of the
            <c>char</c> array argument. The <c>offset</c>
            argument is the index of the first <c>char</c> of the
            subarray and the <c>count</c> argument specifies the
            length of the subarray in <c>char</c>s. Unpaired
            surrogates within the subarray count as one code point each.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointCount(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointCount(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c>, <c>count </c> or if
             <c>offset + count</c> is greater than the length of
             <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodePointCount (seq As String, beginIndex As Integer, endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CodePointCount(System::String ^ seq, int beginIndex, int endIndex);" />
      <MemberSignature Language="C#" Value="public static int CodePointCount (string seq, int beginIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(string seq, int32 beginIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : string * int * int -&gt; int" Usage="Java.Lang.Character.CodePointCount (seq, beginIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="beginIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the char sequence</param>
        <param name="beginIndex">the index to the first <c>char</c> of
            the text range.</param>
        <param name="endIndex">the index after the last <c>char</c> of
            the text range.</param>
        <summary>Returns the number of Unicode code points in the text range of
            the specified char sequence.</summary>
        <returns>the number of Unicode code points in the specified text
            range</returns>
        <remarks>
          <para>Returns the number of Unicode code points in the text range of
            the specified char sequence. The text range begins at the
            specified <c>beginIndex</c> and extends to the
            <c>char</c> at index <c>endIndex - 1</c>. Thus the
            length (in <c>char</c>s) of the text range is
            <c>endIndex-beginIndex</c>. Unpaired surrogates within
            the text range count as one code point each.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#codePointCount(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.codePointCount(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombiningSpacingMark">
      <MemberSignature Language="VB.NET" Value="Public Const CombiningSpacingMark As SByte  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte CombiningSpacingMark = 8;" />
      <MemberSignature Language="C#" Value="public const sbyte CombiningSpacingMark = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 CombiningSpacingMark = (8)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.CombiningSpacingMark" />
      <MemberSignature Language="F#" Value="val mutable CombiningSpacingMark : sbyte" Usage="Java.Lang.Character.CombiningSpacingMark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("COMBINING_SPACING_MARK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("COMBINING_SPACING_MARK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>General category "Mc" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Mc" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#COMBINING_SPACING_MARK" title="Reference documentation">Java documentation for <code>java.lang.Character.COMBINING_SPACING_MARK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (x As Char, y As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(char x, char y);" />
      <MemberSignature Language="C#" Value="public static int Compare (char x, char y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(char x, char y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.Compare(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member Compare : char * char -&gt; int" Usage="Java.Lang.Character.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "(CC)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "(CC)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Char" />
        <Parameter Name="y" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="x">the first <c>char</c> to compare</param>
        <param name="y">the second <c>char</c> to compare</param>
        <summary>Compares two <c>char</c> values numerically.</summary>
        <returns>the value <c>0</c> if <c>x == y</c>;
                    a value less than <c>0</c> if <c>x &lt; y</c>; and
                    a value greater than <c>0</c> if <c>x &gt; y</c></returns>
        <remarks>
          <para>Compares two <c>char</c> values numerically.
            The value returned is identical to what would be returned by:</para>
          <code lang="text/java">Character.valueOf(x).compareTo(Character.valueOf(y))
            </code>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#compare(char,%20char)" title="Reference documentation">Java documentation for <code>java.lang.Character.compare(char, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (anotherCharacter As Character) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(Java::Lang::Character ^ anotherCharacter);" />
      <MemberSignature Language="C#" Value="public int CompareTo (Java.Lang.Character anotherCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class Java.Lang.Character anotherCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CompareTo(Java.Lang.Character)" />
      <MemberSignature Language="F#" Value="member this.CompareTo : Java.Lang.Character -&gt; int" Usage="character.CompareTo anotherCharacter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/lang/Character;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/lang/Character;)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anotherCharacter" Type="Java.Lang.Character" />
      </Parameters>
      <Docs>
        <param name="anotherCharacter">the <c>Character</c> to be compared.</param>
        <summary>Compares two <c>Character</c> objects numerically.</summary>
        <returns>the value <c>0</c> if the argument <c>Character</c>
                     is equal to this <c>Character</c>; a value less than
                     <c>0</c> if this <c>Character</c> is numerically less
                     than the <c>Character</c> argument; and a value greater than
                     <c>0</c> if this <c>Character</c> is numerically greater
                     than the <c>Character</c> argument (unsigned comparison).
                     Note that this is strictly a numerical comparison; it is not
                     locale-dependent.</returns>
        <remarks>
          <para>Compares two <c>Character</c> objects numerically.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#compareTo(java.lang.Character)" title="Reference documentation">Java documentation for <code>java.lang.Character.compareTo(java.lang.Character)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="ConnectorPunctuation">
      <MemberSignature Language="VB.NET" Value="Public Const ConnectorPunctuation As SByte  = 23" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte ConnectorPunctuation = 23;" />
      <MemberSignature Language="C#" Value="public const sbyte ConnectorPunctuation = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 ConnectorPunctuation = (23)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.ConnectorPunctuation" />
      <MemberSignature Language="F#" Value="val mutable ConnectorPunctuation : sbyte" Usage="Java.Lang.Character.ConnectorPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONNECTOR_PUNCTUATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONNECTOR_PUNCTUATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>General category "Pc" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Pc" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#CONNECTOR_PUNCTUATION" title="Reference documentation">Java documentation for <code>java.lang.Character.CONNECTOR_PUNCTUATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="VB.NET" Value="Public Const Control As SByte  = 15" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte Control = 15;" />
      <MemberSignature Language="C#" Value="public const sbyte Control = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 Control = (15)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Control" />
      <MemberSignature Language="F#" Value="val mutable Control : sbyte" Usage="Java.Lang.Character.Control" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONTROL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONTROL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>General category "Cc" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Cc" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#CONTROL" title="Reference documentation">Java documentation for <code>java.lang.Character.CONTROL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="VB.NET" Value="Public Const CurrencySymbol As SByte  = 26" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte CurrencySymbol = 26;" />
      <MemberSignature Language="C#" Value="public const sbyte CurrencySymbol = 26;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 CurrencySymbol = (26)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.CurrencySymbol" />
      <MemberSignature Language="F#" Value="val mutable CurrencySymbol : sbyte" Usage="Java.Lang.Character.CurrencySymbol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CURRENCY_SYMBOL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CURRENCY_SYMBOL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>General category "Sc" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Sc" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#CURRENCY_SYMBOL" title="Reference documentation">Java documentation for <code>java.lang.Character.CURRENCY_SYMBOL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DashPunctuation">
      <MemberSignature Language="VB.NET" Value="Public Const DashPunctuation As SByte  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DashPunctuation = 20;" />
      <MemberSignature Language="C#" Value="public const sbyte DashPunctuation = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DashPunctuation = (20)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DashPunctuation" />
      <MemberSignature Language="F#" Value="val mutable DashPunctuation : sbyte" Usage="Java.Lang.Character.DashPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DASH_PUNCTUATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DASH_PUNCTUATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>General category "Pd" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Pd" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DASH_PUNCTUATION" title="Reference documentation">Java documentation for <code>java.lang.Character.DASH_PUNCTUATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecimalDigitNumber">
      <MemberSignature Language="VB.NET" Value="Public Const DecimalDigitNumber As SByte  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DecimalDigitNumber = 9;" />
      <MemberSignature Language="C#" Value="public const sbyte DecimalDigitNumber = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DecimalDigitNumber = (9)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DecimalDigitNumber" />
      <MemberSignature Language="F#" Value="val mutable DecimalDigitNumber : sbyte" Usage="Java.Lang.Character.DecimalDigitNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DECIMAL_DIGIT_NUMBER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DECIMAL_DIGIT_NUMBER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>General category "Nd" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Nd" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DECIMAL_DIGIT_NUMBER" title="Reference documentation">Java documentation for <code>java.lang.Character.DECIMAL_DIGIT_NUMBER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Digit">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Digit (ch As Char, radix As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Digit(char ch, int radix);" />
      <MemberSignature Language="C#" Value="public static int Digit (char ch, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Digit(char ch, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.Digit(System.Char,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Digit : char * int -&gt; int" Usage="Java.Lang.Character.Digit (ch, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("digit", "(CI)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("digit", "(CI)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <param name="radix">the radix.</param>
        <summary>Returns the numeric value of the character <c>ch</c> in the
            specified radix.</summary>
        <returns>the numeric value represented by the character in the
                     specified radix.</returns>
        <remarks>
          <para>Returns the numeric value of the character <c>ch</c> in the
            specified radix.</para>
          <para>If the radix is not in the range <c>MIN_RADIX</c> &amp;le;
            <c>radix</c> &amp;le; <c>MAX_RADIX</c> or if the
            value of <c>ch</c> is not a valid digit in the specified
            radix, <c>-1</c> is returned. A character is a valid digit
            if at least one of the following is true:
            &lt;ul&gt;
            &lt;li&gt;The method <c>isDigit</c> is <c>true</c> of the character
                and the Unicode decimal digit value of the character (or its
                single-character decomposition) is less than the specified radix.
                In this case the decimal digit value is returned.
            &lt;li&gt;The character is one of the uppercase Latin letters
                <c>'A'</c> through <c>'Z'</c> and its code is less than
                <c>radix + 'A' - 10</c>.
                In this case, <c>ch - 'A' + 10</c>
                is returned.
            &lt;li&gt;The character is one of the lowercase Latin letters
                <c>'a'</c> through <c>'z'</c> and its code is less than
                <c>radix + 'a' - 10</c>.
                In this case, <c>ch - 'a' + 10</c>
                is returned.
            &lt;li&gt;The character is one of the fullwidth uppercase Latin letters A
                (<c>'\u005CuFF21'</c>) through Z (<c>'\u005CuFF3A'</c>)
                and its code is less than
                <c>radix + '\u005CuFF21' - 10</c>.
                In this case, <c>ch - '\u005CuFF21' + 10</c>
                is returned.
            &lt;li&gt;The character is one of the fullwidth lowercase Latin letters a
                (<c>'\u005CuFF41'</c>) through z (<c>'\u005CuFF5A'</c>)
                and its code is less than
                <c>radix + '\u005CuFF41' - 10</c>.
                In this case, <c>ch - '\u005CuFF41' + 10</c>
                is returned.
            &lt;/ul&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#digit(int, int)</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#digit(char,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.digit(char, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Digit">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Digit (codePoint As Integer, radix As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Digit(int codePoint, int radix);" />
      <MemberSignature Language="C#" Value="public static int Digit (int codePoint, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Digit(int32 codePoint, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.Digit(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Digit : int * int -&gt; int" Usage="Java.Lang.Character.Digit (codePoint, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("digit", "(II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("digit", "(II)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be converted.</param>
        <param name="radix">the radix.</param>
        <summary>Returns the numeric value of the specified character (Unicode
            code point) in the specified radix.</summary>
        <returns>the numeric value represented by the character in the
                     specified radix.</returns>
        <remarks>
          <para>Returns the numeric value of the specified character (Unicode
            code point) in the specified radix.</para>
          <para>If the radix is not in the range <c>MIN_RADIX</c> &amp;le;
            <c>radix</c> &amp;le; <c>MAX_RADIX</c> or if the
            character is not a valid digit in the specified
            radix, <c>-1</c> is returned. A character is a valid digit
            if at least one of the following is true:
            &lt;ul&gt;
            &lt;li&gt;The method <c>#isDigit(int) isDigit(codePoint)</c> is <c>true</c> of the character
                and the Unicode decimal digit value of the character (or its
                single-character decomposition) is less than the specified radix.
                In this case the decimal digit value is returned.
            &lt;li&gt;The character is one of the uppercase Latin letters
                <c>'A'</c> through <c>'Z'</c> and its code is less than
                <c>radix + 'A' - 10</c>.
                In this case, <c>codePoint - 'A' + 10</c>
                is returned.
            &lt;li&gt;The character is one of the lowercase Latin letters
                <c>'a'</c> through <c>'z'</c> and its code is less than
                <c>radix + 'a' - 10</c>.
                In this case, <c>codePoint - 'a' + 10</c>
                is returned.
            &lt;li&gt;The character is one of the fullwidth uppercase Latin letters A
                (<c>'\u005CuFF21'</c>) through Z (<c>'\u005CuFF3A'</c>)
                and its code is less than
                <c>radix + '\u005CuFF21' - 10</c>.
                In this case,
                <c>codePoint - '\u005CuFF21' + 10</c>
                is returned.
            &lt;li&gt;The character is one of the fullwidth lowercase Latin letters a
                (<c>'\u005CuFF41'</c>) through z (<c>'\u005CuFF5A'</c>)
                and its code is less than
                <c>radix + '\u005CuFF41'- 10</c>.
                In this case,
                <c>codePoint - '\u005CuFF41' + 10</c>
                is returned.
            &lt;/ul&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#digit(int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.digit(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityArabicNumber">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityArabicNumber As SByte  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityArabicNumber = 6;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityArabicNumber = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityArabicNumber = (6)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityArabicNumber" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityArabicNumber : sbyte" Usage="Java.Lang.Character.DirectionalityArabicNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_ARABIC_NUMBER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_ARABIC_NUMBER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "AN" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "AN" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_ARABIC_NUMBER" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_ARABIC_NUMBER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityBoundaryNeutral">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityBoundaryNeutral As SByte  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityBoundaryNeutral = 9;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityBoundaryNeutral = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityBoundaryNeutral = (9)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityBoundaryNeutral" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityBoundaryNeutral : sbyte" Usage="Java.Lang.Character.DirectionalityBoundaryNeutral" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_BOUNDARY_NEUTRAL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_BOUNDARY_NEUTRAL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "BN" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "BN" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_BOUNDARY_NEUTRAL" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_BOUNDARY_NEUTRAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityCommonNumberSeparator">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityCommonNumberSeparator As SByte  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityCommonNumberSeparator = 7;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityCommonNumberSeparator = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityCommonNumberSeparator = (7)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityCommonNumberSeparator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityCommonNumberSeparator : sbyte" Usage="Java.Lang.Character.DirectionalityCommonNumberSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_COMMON_NUMBER_SEPARATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_COMMON_NUMBER_SEPARATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "CS" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "CS" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_COMMON_NUMBER_SEPARATOR" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_COMMON_NUMBER_SEPARATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityEuropeanNumber">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityEuropeanNumber As SByte  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityEuropeanNumber = 3;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityEuropeanNumber = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityEuropeanNumber = (3)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityEuropeanNumber" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityEuropeanNumber : sbyte" Usage="Java.Lang.Character.DirectionalityEuropeanNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "EN" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "EN" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_EUROPEAN_NUMBER" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_EUROPEAN_NUMBER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityEuropeanNumberSeparator">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityEuropeanNumberSeparator As SByte  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityEuropeanNumberSeparator = 4;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityEuropeanNumberSeparator = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityEuropeanNumberSeparator = (4)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityEuropeanNumberSeparator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityEuropeanNumberSeparator : sbyte" Usage="Java.Lang.Character.DirectionalityEuropeanNumberSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "ES" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "ES" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityEuropeanNumberTerminator">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityEuropeanNumberTerminator As SByte  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityEuropeanNumberTerminator = 5;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityEuropeanNumberTerminator = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityEuropeanNumberTerminator = (5)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityEuropeanNumberTerminator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityEuropeanNumberTerminator : sbyte" Usage="Java.Lang.Character.DirectionalityEuropeanNumberTerminator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "ET" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "ET" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityFirstStrongIsolate">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityFirstStrongIsolate As SByte  = 21" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityFirstStrongIsolate = 21;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityFirstStrongIsolate = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityFirstStrongIsolate = (21)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityFirstStrongIsolate" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityFirstStrongIsolate : sbyte" Usage="Java.Lang.Character.DirectionalityFirstStrongIsolate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_FIRST_STRONG_ISOLATE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_FIRST_STRONG_ISOLATE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "FSI" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "FSI" in the Unicode specification.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_FIRST_STRONG_ISOLATE" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_FIRST_STRONG_ISOLATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectionalityLeftToRight">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityLeftToRight As SByte  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityLeftToRight = 0;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityLeftToRight = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityLeftToRight = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityLeftToRight" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityLeftToRight : sbyte" Usage="Java.Lang.Character.DirectionalityLeftToRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "L" in the Unicode specification.</summary>
        <remarks>
          <para>Strong bidirectional character type "L" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_LEFT_TO_RIGHT" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_LEFT_TO_RIGHT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityLeftToRightEmbedding">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityLeftToRightEmbedding As SByte  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityLeftToRightEmbedding = 14;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityLeftToRightEmbedding = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityLeftToRightEmbedding = (14)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityLeftToRightEmbedding" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityLeftToRightEmbedding : sbyte" Usage="Java.Lang.Character.DirectionalityLeftToRightEmbedding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "LRE" in the Unicode specification.</summary>
        <remarks>
          <para>Strong bidirectional character type "LRE" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityLeftToRightIsolate">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityLeftToRightIsolate As SByte  = 19" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityLeftToRightIsolate = 19;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityLeftToRightIsolate = 19;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityLeftToRightIsolate = (19)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityLeftToRightIsolate" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityLeftToRightIsolate : sbyte" Usage="Java.Lang.Character.DirectionalityLeftToRightIsolate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "LRI" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "LRI" in the Unicode specification.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectionalityLeftToRightOverride">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityLeftToRightOverride As SByte  = 15" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityLeftToRightOverride = 15;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityLeftToRightOverride = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityLeftToRightOverride = (15)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityLeftToRightOverride" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityLeftToRightOverride : sbyte" Usage="Java.Lang.Character.DirectionalityLeftToRightOverride" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "LRO" in the Unicode specification.</summary>
        <remarks>
          <para>Strong bidirectional character type "LRO" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityNonspacingMark">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityNonspacingMark As SByte  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityNonspacingMark = 8;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityNonspacingMark = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityNonspacingMark = (8)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityNonspacingMark" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityNonspacingMark : sbyte" Usage="Java.Lang.Character.DirectionalityNonspacingMark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_NONSPACING_MARK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_NONSPACING_MARK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "NSM" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "NSM" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_NONSPACING_MARK" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_NONSPACING_MARK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityOtherNeutrals">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityOtherNeutrals As SByte  = 13" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityOtherNeutrals = 13;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityOtherNeutrals = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityOtherNeutrals = (13)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityOtherNeutrals" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityOtherNeutrals : sbyte" Usage="Java.Lang.Character.DirectionalityOtherNeutrals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_OTHER_NEUTRALS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_OTHER_NEUTRALS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>Neutral bidirectional character type "ON" in the Unicode specification.</summary>
        <remarks>
          <para>Neutral bidirectional character type "ON" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_OTHER_NEUTRALS" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_OTHER_NEUTRALS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityParagraphSeparator">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityParagraphSeparator As SByte  = 10" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityParagraphSeparator = 10;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityParagraphSeparator = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityParagraphSeparator = (10)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityParagraphSeparator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityParagraphSeparator : sbyte" Usage="Java.Lang.Character.DirectionalityParagraphSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_PARAGRAPH_SEPARATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_PARAGRAPH_SEPARATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Neutral bidirectional character type "B" in the Unicode specification.</summary>
        <remarks>
          <para>Neutral bidirectional character type "B" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_PARAGRAPH_SEPARATOR" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_PARAGRAPH_SEPARATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityPopDirectionalFormat">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityPopDirectionalFormat As SByte  = 18" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityPopDirectionalFormat = 18;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityPopDirectionalFormat = 18;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityPopDirectionalFormat = (18)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityPopDirectionalFormat" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityPopDirectionalFormat : sbyte" Usage="Java.Lang.Character.DirectionalityPopDirectionalFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_POP_DIRECTIONAL_FORMAT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_POP_DIRECTIONAL_FORMAT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "PDF" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "PDF" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_POP_DIRECTIONAL_FORMAT" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_POP_DIRECTIONAL_FORMAT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityPopDirectionalIsolate">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityPopDirectionalIsolate As SByte  = 22" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityPopDirectionalIsolate = 22;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityPopDirectionalIsolate = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityPopDirectionalIsolate = (22)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityPopDirectionalIsolate" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityPopDirectionalIsolate : sbyte" Usage="Java.Lang.Character.DirectionalityPopDirectionalIsolate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "PDI" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "PDI" in the Unicode specification.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeft">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityRightToLeft As SByte  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityRightToLeft = 1;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeft = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeft = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeft" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeft : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "R" in the Unicode specification.</summary>
        <remarks>
          <para>Strong bidirectional character type "R" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_RIGHT_TO_LEFT" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_RIGHT_TO_LEFT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeftArabic">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityRightToLeftArabic As SByte  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityRightToLeftArabic = 2;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeftArabic = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeftArabic = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeftArabic" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeftArabic : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeftArabic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "AL" in the Unicode specification.</summary>
        <remarks>
          <para>Strong bidirectional character type "AL" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeftEmbedding">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityRightToLeftEmbedding As SByte  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityRightToLeftEmbedding = 16;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeftEmbedding = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeftEmbedding = (16)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeftEmbedding" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeftEmbedding : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeftEmbedding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "RLE" in the Unicode specification.</summary>
        <remarks>
          <para>Strong bidirectional character type "RLE" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeftIsolate">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityRightToLeftIsolate As SByte  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityRightToLeftIsolate = 20;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeftIsolate = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeftIsolate = (20)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeftIsolate" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeftIsolate : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeftIsolate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "RLI" in the Unicode specification.</summary>
        <remarks>
          <para>Weak bidirectional character type "RLI" in the Unicode specification.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeftOverride">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityRightToLeftOverride As SByte  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityRightToLeftOverride = 17;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeftOverride = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeftOverride = (17)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeftOverride" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeftOverride : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeftOverride" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "RLO" in the Unicode specification.</summary>
        <remarks>
          <para>Strong bidirectional character type "RLO" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalitySegmentSeparator">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalitySegmentSeparator As SByte  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalitySegmentSeparator = 11;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalitySegmentSeparator = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalitySegmentSeparator = (11)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalitySegmentSeparator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalitySegmentSeparator : sbyte" Usage="Java.Lang.Character.DirectionalitySegmentSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_SEGMENT_SEPARATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_SEGMENT_SEPARATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>Neutral bidirectional character type "S" in the Unicode specification.</summary>
        <remarks>
          <para>Neutral bidirectional character type "S" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_SEGMENT_SEPARATOR" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_SEGMENT_SEPARATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityUndefined">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityUndefined As SByte  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityUndefined = -1;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityUndefined = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityUndefined = (-1)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityUndefined" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityUndefined : sbyte" Usage="Java.Lang.Character.DirectionalityUndefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_UNDEFINED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_UNDEFINED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Undefined bidirectional character type.</summary>
        <remarks>
          <para>Undefined bidirectional character type. Undefined <c>char</c>
            values have undefined directionality in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_UNDEFINED" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_UNDEFINED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityWhitespace">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionalityWhitespace As SByte  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte DirectionalityWhitespace = 12;" />
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityWhitespace = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityWhitespace = (12)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityWhitespace" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityWhitespace : sbyte" Usage="Java.Lang.Character.DirectionalityWhitespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTIONALITY_WHITESPACE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTIONALITY_WHITESPACE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>Neutral bidirectional character type "WS" in the Unicode specification.</summary>
        <remarks>
          <para>Neutral bidirectional character type "WS" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#DIRECTIONALITY_WHITESPACE" title="Reference documentation">Java documentation for <code>java.lang.Character.DIRECTIONALITY_WHITESPACE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnclosingMark">
      <MemberSignature Language="VB.NET" Value="Public Const EnclosingMark As SByte  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte EnclosingMark = 7;" />
      <MemberSignature Language="C#" Value="public const sbyte EnclosingMark = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 EnclosingMark = (7)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.EnclosingMark" />
      <MemberSignature Language="F#" Value="val mutable EnclosingMark : sbyte" Usage="Java.Lang.Character.EnclosingMark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCLOSING_MARK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCLOSING_MARK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>General category "Me" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Me" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#ENCLOSING_MARK" title="Reference documentation">Java documentation for <code>java.lang.Character.ENCLOSING_MARK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EndPunctuation">
      <MemberSignature Language="VB.NET" Value="Public Const EndPunctuation As SByte  = 22" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte EndPunctuation = 22;" />
      <MemberSignature Language="C#" Value="public const sbyte EndPunctuation = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 EndPunctuation = (22)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.EndPunctuation" />
      <MemberSignature Language="F#" Value="val mutable EndPunctuation : sbyte" Usage="Java.Lang.Character.EndPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("END_PUNCTUATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("END_PUNCTUATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>General category "Pe" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Pe" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#END_PUNCTUATION" title="Reference documentation">Java documentation for <code>java.lang.Character.END_PUNCTUATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FinalQuotePunctuation">
      <MemberSignature Language="VB.NET" Value="Public Const FinalQuotePunctuation As SByte  = 30" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte FinalQuotePunctuation = 30;" />
      <MemberSignature Language="C#" Value="public const sbyte FinalQuotePunctuation = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 FinalQuotePunctuation = (30)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.FinalQuotePunctuation" />
      <MemberSignature Language="F#" Value="val mutable FinalQuotePunctuation : sbyte" Usage="Java.Lang.Character.FinalQuotePunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FINAL_QUOTE_PUNCTUATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FINAL_QUOTE_PUNCTUATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>General category "Pf" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Pf" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#FINAL_QUOTE_PUNCTUATION" title="Reference documentation">Java documentation for <code>java.lang.Character.FINAL_QUOTE_PUNCTUATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ForDigit">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForDigit (digit As Integer, radix As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ForDigit(int digit, int radix);" />
      <MemberSignature Language="C#" Value="public static char ForDigit (int digit, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ForDigit(int32 digit, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ForDigit(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ForDigit : int * int -&gt; char" Usage="Java.Lang.Character.ForDigit (digit, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forDigit", "(II)C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forDigit", "(II)C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digit" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="digit">the number to convert to a character.</param>
        <param name="radix">the radix.</param>
        <summary>Determines the character representation for a specific digit in
            the specified radix.</summary>
        <returns>the <c>char</c> representation of the specified digit
                     in the specified radix.</returns>
        <remarks>
          <para>Determines the character representation for a specific digit in
            the specified radix. If the value of <c>radix</c> is not a
            valid radix, or the value of <c>digit</c> is not a valid
            digit in the specified radix, the null character
            (<c>'\u005Cu0000'</c>) is returned.</para>
          <para>The <c>radix</c> argument is valid if it is greater than or
            equal to <c>MIN_RADIX</c> and less than or equal to
            <c>MAX_RADIX</c>. The <c>digit</c> argument is valid if
            <c>0 &lt;= digit &lt; radix</c>.</para>
          <para>If the digit is less than 10, then
            <c>'0' + digit</c> is returned. Otherwise, the value
            <c>'a' + digit - 10</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#forDigit(int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.forDigit(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="VB.NET" Value="Public Const Format As SByte  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte Format = 16;" />
      <MemberSignature Language="C#" Value="public const sbyte Format = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 Format = (16)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Format" />
      <MemberSignature Language="F#" Value="val mutable Format : sbyte" Usage="Java.Lang.Character.Format" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FORMAT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FORMAT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>General category "Cf" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Cf" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#FORMAT" title="Reference documentation">Java documentation for <code>java.lang.Character.FORMAT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectionality">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectionality (ch As Char) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte GetDirectionality(char ch);" />
      <MemberSignature Language="C#" Value="public static sbyte GetDirectionality (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 GetDirectionality(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetDirectionality(System.Char)" />
      <MemberSignature Language="F#" Value="static member GetDirectionality : char -&gt; sbyte" Usage="Java.Lang.Character.GetDirectionality ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDirectionality", "(C)B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDirectionality", "(C)B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <c>char</c> for which the directionality property
                       is requested.</param>
        <summary>Returns the Unicode directionality property for the given
            character.</summary>
        <returns>the directionality property of the <c>char</c> value.</returns>
        <remarks>
          <para>Returns the Unicode directionality property for the given
            character.  Character directionality is used to calculate the
            visual ordering of text. The directionality value of undefined
            <c>char</c> values is <c>DIRECTIONALITY_UNDEFINED</c>.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#getDirectionality(int)</c> method.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#getDirectionality(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.getDirectionality(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectionality">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectionality (codePoint As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte GetDirectionality(int codePoint);" />
      <MemberSignature Language="C#" Value="public static sbyte GetDirectionality (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 GetDirectionality(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetDirectionality(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetDirectionality : int -&gt; sbyte" Usage="Java.Lang.Character.GetDirectionality codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDirectionality", "(I)B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDirectionality", "(I)B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) for which
                     the directionality property is requested.</param>
        <summary>Returns the Unicode directionality property for the given
            character (Unicode code point).</summary>
        <returns>the directionality property of the character.</returns>
        <remarks>
          <para>Returns the Unicode directionality property for the given
            character (Unicode code point).  Character directionality is
            used to calculate the visual ordering of text. The
            directionality value of undefined character is <c>#DIRECTIONALITY_UNDEFINED</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#getDirectionality(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.getDirectionality(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (codePoint As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(int codePoint);" />
      <MemberSignature Language="C#" Value="public static string? GetName (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetName(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetName : int -&gt; string" Usage="Java.Lang.Character.GetName codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getName", "(I)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getName", "(I)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point)</param>
        <summary>Returns the Unicode name of the specified character
            <c>codePoint</c>, or null if the code point is
            <c>#UNASSIGNED unassigned</c>.</summary>
        <returns>the Unicode name of the specified character, or null if
                    the code point is unassigned.</returns>
        <remarks>
          <para>Returns the Unicode name of the specified character
            <c>codePoint</c>, or null if the code point is
            <c>#UNASSIGNED unassigned</c>.</para>
          <para>Note: if the specified character is not assigned a name by
            the <i>UnicodeData</i> file (part of the Unicode Character
            Database maintained by the Unicode Consortium), the returned
            name is the same as the result of expression:
            
            &lt;blockquote&gt;<c>Character.UnicodeBlock.of(codePoint).toString().replace('_', ' ')
                + " "
                + Integer.toHexString(codePoint).toUpperCase(Locale.ROOT);</c>&lt;/blockquote&gt;</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#getName(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.getName(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>codePoint</c> is not a valid code point.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumericValue(char ch);" />
      <MemberSignature Language="C#" Value="public static int GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetNumericValue(System.Char)" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; int" Usage="Java.Lang.Character.GetNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNumericValue", "(C)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNumericValue", "(C)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <summary>Returns the <c>int</c> value that the specified Unicode
            character represents.</summary>
        <returns>the numeric value of the character, as a nonnegative <c>int</c>
                     value; -2 if the character has a numeric value but the value
                     can not be represented as a nonnegative <c>int</c> value;
                     -1 if the character has no numeric value.</returns>
        <remarks>
          <para>Returns the <c>int</c> value that the specified Unicode
            character represents. For example, the character
            <c>'\u005Cu216C'</c> (the roman numeral fifty) will return
            an int with a value of 50.</para>
          <para>The letters A-Z in their uppercase (<c>'\u005Cu0041'</c> through
            <c>'\u005Cu005A'</c>), lowercase
            (<c>'\u005Cu0061'</c> through <c>'\u005Cu007A'</c>), and
            full width variant (<c>'\u005CuFF21'</c> through
            <c>'\u005CuFF3A'</c> and <c>'\u005CuFF41'</c> through
            <c>'\u005CuFF5A'</c>) forms have numeric values from 10
            through 35. This is independent of the Unicode specification,
            which does not assign numeric values to these <c>char</c>
            values.</para>
          <para>If the character does not have a numeric value, then -1 is returned.
            If the character has a numeric value that cannot be represented as a
            nonnegative integer (for example, a fractional value), then -2
            is returned.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#getNumericValue(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#getNumericValue(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.getNumericValue(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (codePoint As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumericValue(int codePoint);" />
      <MemberSignature Language="C#" Value="public static int GetNumericValue (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumericValue(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetNumericValue(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : int -&gt; int" Usage="Java.Lang.Character.GetNumericValue codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNumericValue", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNumericValue", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be converted.</param>
        <summary>Returns the <c>int</c> value that the specified
            character (Unicode code point) represents.</summary>
        <returns>the numeric value of the character, as a nonnegative <c>int</c>
                     value; -2 if the character has a numeric value but the value
                     can not be represented as a nonnegative <c>int</c> value;
                     -1 if the character has no numeric value.</returns>
        <remarks>
          <para>Returns the <c>int</c> value that the specified
            character (Unicode code point) represents. For example, the character
            <c>'\u005Cu216C'</c> (the Roman numeral fifty) will return
            an <c>int</c> with a value of 50.</para>
          <para>The letters A-Z in their uppercase (<c>'\u005Cu0041'</c> through
            <c>'\u005Cu005A'</c>), lowercase
            (<c>'\u005Cu0061'</c> through <c>'\u005Cu007A'</c>), and
            full width variant (<c>'\u005CuFF21'</c> through
            <c>'\u005CuFF3A'</c> and <c>'\u005CuFF41'</c> through
            <c>'\u005CuFF5A'</c>) forms have numeric values from 10
            through 35. This is independent of the Unicode specification,
            which does not assign numeric values to these <c>char</c>
            values.</para>
          <para>If the character does not have a numeric value, then -1 is returned.
            If the character has a numeric value that cannot be represented as a
            nonnegative integer (for example, a fractional value), then -2
            is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#getNumericValue(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.getNumericValue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetType (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetType(char ch);" />
      <MemberSignature Language="C#" Value="public static int GetType (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetType(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetType(System.Char)" />
      <MemberSignature Language="F#" Value="static member GetType : char -&gt; int" Usage="Java.Lang.Character.GetType ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getType", "(C)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getType", "(C)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Returns a value indicating a character's general category.</summary>
        <returns>a value of type <c>int</c> representing the
                     character's general category.</returns>
        <remarks>
          <para>Returns a value indicating a character's general category.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#getType(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#getType(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.getType(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetType (codePoint As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetType(int codePoint);" />
      <MemberSignature Language="C#" Value="public static int GetType (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetType(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetType(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetType : int -&gt; int" Usage="Java.Lang.Character.GetType codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getType", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getType", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Returns a value indicating a character's general category.</summary>
        <returns>a value of type <c>int</c> representing the
                     character's general category.</returns>
        <remarks>
          <para>Returns a value indicating a character's general category.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#getType(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.getType(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(char value);" />
      <MemberSignature Language="C#" Value="public static int HashCode (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.HashCode(System.Char)" />
      <MemberSignature Language="F#" Value="static member HashCode : char -&gt; int" Usage="Java.Lang.Character.HashCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "(C)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "(C)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">The <c>char</c> for which to return a hash code.</param>
        <summary>Returns a hash code for a <c>char</c> value; compatible with
            <c>Character.hashCode()</c>.</summary>
        <returns>a hash code value for a <c>char</c> value.</returns>
        <remarks>
          <para>Returns a hash code for a <c>char</c> value; compatible with
            <c>Character.hashCode()</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#hashCode(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.hashCode(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HighSurrogate (codePoint As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char HighSurrogate(int codePoint);" />
      <MemberSignature Language="C#" Value="public static char HighSurrogate (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char HighSurrogate(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.HighSurrogate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member HighSurrogate : int -&gt; char" Usage="Java.Lang.Character.HighSurrogate codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("highSurrogate", "(I)C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("highSurrogate", "(I)C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">a supplementary character (Unicode code point)</param>
        <summary>Returns the leading surrogate (a
            <see href="http://www.unicode.org/glossary/#high_surrogate_code_unit">
            high surrogate code unit</see>) of the
            <see href="http://www.unicode.org/glossary/#surrogate_pair">
            surrogate pair</see>
            representing the specified supplementary character (Unicode
            code point) in the UTF-16 encoding.</summary>
        <returns>the leading surrogate code unit used to represent the
                     character in the UTF-16 encoding</returns>
        <remarks>
          <para>Returns the leading surrogate (a
            <see href="http://www.unicode.org/glossary/#high_surrogate_code_unit">
            high surrogate code unit</see>) of the
            <see href="http://www.unicode.org/glossary/#surrogate_pair">
            surrogate pair</see>
            representing the specified supplementary character (Unicode
            code point) in the UTF-16 encoding.  If the specified character
            is not a
            supplementary character,
            an unspecified <c>char</c> is returned.</para>
          <para>If
            <c>#isSupplementaryCodePoint isSupplementaryCodePoint(x)</c>
            is <c>true</c>, then
            <c>#isHighSurrogate isHighSurrogate</c><c>(highSurrogate(x))</c> and
            <c>#toCodePoint toCodePoint</c><c>(highSurrogate(x),</c><c>#lowSurrogate lowSurrogate</c><c>(x)) == x</c>
            are also always <c>true</c>.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#highSurrogate(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.highSurrogate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialQuotePunctuation">
      <MemberSignature Language="VB.NET" Value="Public Const InitialQuotePunctuation As SByte  = 29" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte InitialQuotePunctuation = 29;" />
      <MemberSignature Language="C#" Value="public const sbyte InitialQuotePunctuation = 29;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 InitialQuotePunctuation = (29)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.InitialQuotePunctuation" />
      <MemberSignature Language="F#" Value="val mutable InitialQuotePunctuation : sbyte" Usage="Java.Lang.Character.InitialQuotePunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INITIAL_QUOTE_PUNCTUATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INITIAL_QUOTE_PUNCTUATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>General category "Pi" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Pi" in the Unicode specification.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#INITIAL_QUOTE_PUNCTUATION" title="Reference documentation">Java documentation for <code>java.lang.Character.INITIAL_QUOTE_PUNCTUATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAlphabetic">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAlphabetic (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAlphabetic(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsAlphabetic (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAlphabetic(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsAlphabetic(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsAlphabetic : int -&gt; bool" Usage="Java.Lang.Character.IsAlphabetic codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isAlphabetic", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isAlphabetic", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is alphabetic.</summary>
        <returns>
          <c>true</c> if the character is a Unicode alphabet
                     character, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is alphabetic.</para>
          <para>A character is considered to be alphabetic if its general category type,
            provided by <c>Character#getType(int) getType(codePoint)</c>, is any of
            the following:
            &lt;ul&gt;
            &lt;li&gt; <c>UPPERCASE_LETTER</c>&lt;li&gt; <c>LOWERCASE_LETTER</c>&lt;li&gt; <c>TITLECASE_LETTER</c>&lt;li&gt; <c>MODIFIER_LETTER</c>&lt;li&gt; <c>OTHER_LETTER</c>&lt;li&gt; <c>LETTER_NUMBER</c>&lt;/ul&gt;
            or it has contributory property Other_Alphabetic as defined by the
            Unicode Standard.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isAlphabetic(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isAlphabetic(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBmpCodePoint">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBmpCodePoint (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBmpCodePoint(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsBmpCodePoint (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBmpCodePoint(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsBmpCodePoint(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsBmpCodePoint : int -&gt; bool" Usage="Java.Lang.Character.IsBmpCodePoint codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isBmpCodePoint", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isBmpCodePoint", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be to</param>
        <summary>Determines whether the specified character (Unicode code point)
            is in the Basic Multilingual Plane (BMP).</summary>
        <returns>
          <c>true</c> if the specified code point is between
                    <c>#MIN_VALUE</c> and <c>#MAX_VALUE</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines whether the specified character (Unicode code point)
            is in the Basic Multilingual Plane (BMP).
            Such code points can be represented using a single <c>char</c>.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isBmpCodePoint(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isBmpCodePoint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsDefined (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsDefined(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsDefined : char -&gt; bool" Usage="Java.Lang.Character.IsDefined ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDefined", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDefined", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested</param>
        <summary>Determines if a character is defined in Unicode.</summary>
        <returns>
          <c>true</c> if the character has a defined meaning
                     in Unicode; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if a character is defined in Unicode.</para>
          <para>A character is defined if at least one of the following is true:
            &lt;ul&gt;
            &lt;li&gt;It has an entry in the UnicodeData file.
            &lt;li&gt;It has a value in a range defined by the UnicodeData file.
            &lt;/ul&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isDefined(int)</c> method.</para>
          <para>Added in 1.0.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isDefined(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isDefined(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsDefined (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsDefined(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsDefined : int -&gt; bool" Usage="Java.Lang.Character.IsDefined codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDefined", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDefined", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if a character (Unicode code point) is defined in Unicode.</summary>
        <returns>
          <c>true</c> if the character has a defined meaning
                     in Unicode; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if a character (Unicode code point) is defined in Unicode.</para>
          <para>A character is defined if at least one of the following is true:
            &lt;ul&gt;
            &lt;li&gt;It has an entry in the UnicodeData file.
            &lt;li&gt;It has a value in a range defined by the UnicodeData file.
            &lt;/ul&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isDefined(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isDefined(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsDigit (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsDigit(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="Java.Lang.Character.IsDigit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDigit", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDigit", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a digit.</summary>
        <returns>
          <c>true</c> if the character is a digit;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is a digit.</para>
          <para>A character is a digit if its general category type, provided
            by <c>Character.getType(ch)</c>, is
            <c>DECIMAL_DIGIT_NUMBER</c>.</para>
          <para>Some Unicode character ranges that contain digits:
            &lt;ul&gt;
            &lt;li&gt;<c>'\u005Cu0030'</c> through <c>'\u005Cu0039'</c>,
                ISO-LATIN-1 digits (<c>'0'</c> through <c>'9'</c>)
            &lt;li&gt;<c>'\u005Cu0660'</c> through <c>'\u005Cu0669'</c>,
                Arabic-Indic digits
            &lt;li&gt;<c>'\u005Cu06F0'</c> through <c>'\u005Cu06F9'</c>,
                Extended Arabic-Indic digits
            &lt;li&gt;<c>'\u005Cu0966'</c> through <c>'\u005Cu096F'</c>,
                Devanagari digits
            &lt;li&gt;<c>'\u005CuFF10'</c> through <c>'\u005CuFF19'</c>,
                Fullwidth digits
            &lt;/ul&gt;
            
            Many other character ranges contain digits as well.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isDigit(int)</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isDigit(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isDigit(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsDigit (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsDigit(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsDigit : int -&gt; bool" Usage="Java.Lang.Character.IsDigit codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDigit", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDigit", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is a digit.</summary>
        <returns>
          <c>true</c> if the character is a digit;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is a digit.</para>
          <para>A character is a digit if its general category type, provided
            by <c>Character#getType(int) getType(codePoint)</c>, is
            <c>DECIMAL_DIGIT_NUMBER</c>.</para>
          <para>Some Unicode character ranges that contain digits:
            &lt;ul&gt;
            &lt;li&gt;<c>'\u005Cu0030'</c> through <c>'\u005Cu0039'</c>,
                ISO-LATIN-1 digits (<c>'0'</c> through <c>'9'</c>)
            &lt;li&gt;<c>'\u005Cu0660'</c> through <c>'\u005Cu0669'</c>,
                Arabic-Indic digits
            &lt;li&gt;<c>'\u005Cu06F0'</c> through <c>'\u005Cu06F9'</c>,
                Extended Arabic-Indic digits
            &lt;li&gt;<c>'\u005Cu0966'</c> through <c>'\u005Cu096F'</c>,
                Devanagari digits
            &lt;li&gt;<c>'\u005CuFF10'</c> through <c>'\u005CuFF19'</c>,
                Fullwidth digits
            &lt;/ul&gt;
            
            Many other character ranges contain digits as well.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isDigit(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isDigit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="Java.Lang.Character.IsHighSurrogate ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isHighSurrogate", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isHighSurrogate", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the <c>char</c> value to be tested.</param>
        <summary>Determines if the given <c>char</c> value is a
            <see href="http://www.unicode.org/glossary/#high_surrogate_code_unit">
            Unicode high-surrogate code unit</see>
            (also known as <i>leading-surrogate code unit</i>).</summary>
        <returns>
          <c>true</c> if the <c>char</c> value is between
                    <c>#MIN_HIGH_SURROGATE</c> and
                    <c>#MAX_HIGH_SURROGATE</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the given <c>char</c> value is a
            <see href="http://www.unicode.org/glossary/#high_surrogate_code_unit">
            Unicode high-surrogate code unit</see>
            (also known as <i>leading-surrogate code unit</i>).</para>
          <para>Such values do not represent characters by themselves,
            but are used in the representation of
            supplementary characters
            in the UTF-16 encoding.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isHighSurrogate(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isHighSurrogate(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsIdentifierIgnorable">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIdentifierIgnorable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsIdentifierIgnorable(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsIdentifierIgnorable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIdentifierIgnorable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsIdentifierIgnorable(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsIdentifierIgnorable : char -&gt; bool" Usage="Java.Lang.Character.IsIdentifierIgnorable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isIdentifierIgnorable", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isIdentifierIgnorable", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character should be regarded as
            an ignorable character in a Java identifier or a Unicode identifier.</summary>
        <returns>
          <c>true</c> if the character is an ignorable control
                     character that may be part of a Java or Unicode identifier;
                      <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character should be regarded as
            an ignorable character in a Java identifier or a Unicode identifier.</para>
          <para>The following Unicode characters are ignorable in a Java identifier
            or a Unicode identifier:
            &lt;ul&gt;
            &lt;li&gt;ISO control characters that are not whitespace
            &lt;ul&gt;
            &lt;li&gt;<c>'\u005Cu0000'</c> through <c>'\u005Cu0008'</c>&lt;li&gt;<c>'\u005Cu000E'</c> through <c>'\u005Cu001B'</c>&lt;li&gt;<c>'\u005Cu007F'</c> through <c>'\u005Cu009F'</c>&lt;/ul&gt;
            
            &lt;li&gt;all characters that have the <c>FORMAT</c> general
            category value
            &lt;/ul&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isIdentifierIgnorable(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isIdentifierIgnorable(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isIdentifierIgnorable(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsIdentifierIgnorable">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIdentifierIgnorable (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsIdentifierIgnorable(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsIdentifierIgnorable (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIdentifierIgnorable(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsIdentifierIgnorable(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsIdentifierIgnorable : int -&gt; bool" Usage="Java.Lang.Character.IsIdentifierIgnorable codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isIdentifierIgnorable", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isIdentifierIgnorable", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) should be regarded as
            an ignorable character in a Java identifier or a Unicode identifier.</summary>
        <returns>
          <c>true</c> if the character is an ignorable control
                     character that may be part of a Java or Unicode identifier;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) should be regarded as
            an ignorable character in a Java identifier or a Unicode identifier.</para>
          <para>The following Unicode characters are ignorable in a Java identifier
            or a Unicode identifier:
            &lt;ul&gt;
            &lt;li&gt;ISO control characters that are not whitespace
            &lt;ul&gt;
            &lt;li&gt;<c>'\u005Cu0000'</c> through <c>'\u005Cu0008'</c>&lt;li&gt;<c>'\u005Cu000E'</c> through <c>'\u005Cu001B'</c>&lt;li&gt;<c>'\u005Cu007F'</c> through <c>'\u005Cu009F'</c>&lt;/ul&gt;
            
            &lt;li&gt;all characters that have the <c>FORMAT</c> general
            category value
            &lt;/ul&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isIdentifierIgnorable(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isIdentifierIgnorable(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsIdeographic">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIdeographic (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsIdeographic(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsIdeographic (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIdeographic(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsIdeographic(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsIdeographic : int -&gt; bool" Usage="Java.Lang.Character.IsIdeographic codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isIdeographic", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isIdeographic", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is a CJKV
            (Chinese, Japanese, Korean and Vietnamese) ideograph, as defined by
            the Unicode Standard.</summary>
        <returns>
          <c>true</c> if the character is a Unicode ideograph
                     character, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is a CJKV
            (Chinese, Japanese, Korean and Vietnamese) ideograph, as defined by
            the Unicode Standard.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isIdeographic(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isIdeographic(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsISOControl">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsISOControl (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsISOControl(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsISOControl (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsISOControl(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsISOControl(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsISOControl : char -&gt; bool" Usage="Java.Lang.Character.IsISOControl ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isISOControl", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isISOControl", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is an ISO control
            character.</summary>
        <returns>
          <c>true</c> if the character is an ISO control character;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is an ISO control
            character.  A character is considered to be an ISO control
            character if its code is in the range <c>'\u005Cu0000'</c>
            through <c>'\u005Cu001F'</c> or in the range
            <c>'\u005Cu007F'</c> through <c>'\u005Cu009F'</c>.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isISOControl(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isISOControl(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isISOControl(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsISOControl">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsISOControl (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsISOControl(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsISOControl (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsISOControl(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsISOControl(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsISOControl : int -&gt; bool" Usage="Java.Lang.Character.IsISOControl codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isISOControl", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isISOControl", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the referenced character (Unicode code point) is an ISO control
            character.</summary>
        <returns>
          <c>true</c> if the character is an ISO control character;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the referenced character (Unicode code point) is an ISO control
            character.  A character is considered to be an ISO control
            character if its code is in the range <c>'\u005Cu0000'</c>
            through <c>'\u005Cu001F'</c> or in the range
            <c>'\u005Cu007F'</c> through <c>'\u005Cu009F'</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isISOControl(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isISOControl(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierPart">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsJavaIdentifierPart (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsJavaIdentifierPart(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierPart (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierPart(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaIdentifierPart(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierPart : char -&gt; bool" Usage="Java.Lang.Character.IsJavaIdentifierPart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isJavaIdentifierPart", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isJavaIdentifierPart", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character may be part of a Java
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Java identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character may be part of a Java
            identifier as other than the first character.</para>
          <para>A character may be part of a Java identifier if any of the following
            conditions are true:
            &lt;ul&gt;
            &lt;li&gt;  it is a letter
            &lt;li&gt;  it is a currency symbol (such as <c>'$'</c>)
            &lt;li&gt;  it is a connecting punctuation character (such as <c>'_'</c>)
            &lt;li&gt;  it is a digit
            &lt;li&gt;  it is a numeric letter (such as a Roman numeral character)
            &lt;li&gt;  it is a combining mark
            &lt;li&gt;  it is a non-spacing mark
            &lt;li&gt; <c>isIdentifierIgnorable</c> returns
            <c>true</c> for the character
            &lt;/ul&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isJavaIdentifierPart(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isJavaIdentifierPart(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isJavaIdentifierPart(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierPart">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsJavaIdentifierPart (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsJavaIdentifierPart(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierPart (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierPart(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaIdentifierPart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierPart : int -&gt; bool" Usage="Java.Lang.Character.IsJavaIdentifierPart codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isJavaIdentifierPart", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isJavaIdentifierPart", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the character (Unicode code point) may be part of a Java
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Java identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the character (Unicode code point) may be part of a Java
            identifier as other than the first character.</para>
          <para>A character may be part of a Java identifier if any of the following
            conditions are true:
            &lt;ul&gt;
            &lt;li&gt;  it is a letter
            &lt;li&gt;  it is a currency symbol (such as <c>'$'</c>)
            &lt;li&gt;  it is a connecting punctuation character (such as <c>'_'</c>)
            &lt;li&gt;  it is a digit
            &lt;li&gt;  it is a numeric letter (such as a Roman numeral character)
            &lt;li&gt;  it is a combining mark
            &lt;li&gt;  it is a non-spacing mark
            &lt;li&gt; <c>#isIdentifierIgnorable(int)
            isIdentifierIgnorable(codePoint)</c> returns <c>true</c> for
            the code point
            &lt;/ul&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isJavaIdentifierPart(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isJavaIdentifierPart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierStart">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsJavaIdentifierStart (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsJavaIdentifierStart(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierStart (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierStart(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaIdentifierStart(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierStart : char -&gt; bool" Usage="Java.Lang.Character.IsJavaIdentifierStart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isJavaIdentifierStart", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isJavaIdentifierStart", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is
            permissible as the first character in a Java identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Java identifier;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is
            permissible as the first character in a Java identifier.</para>
          <para>A character may start a Java identifier if and only if
            one of the following conditions is true:
            &lt;ul&gt;
            &lt;li&gt; <c>#isLetter(char) isLetter(ch)</c> returns <c>true</c>&lt;li&gt; <c>#getType(char) getType(ch)</c> returns <c>LETTER_NUMBER</c>&lt;li&gt; <c>ch</c> is a currency symbol (such as <c>'$'</c>)
            &lt;li&gt; <c>ch</c> is a connecting punctuation character (such as <c>'_'</c>).
            &lt;/ul&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isJavaIdentifierStart(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isJavaIdentifierStart(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isJavaIdentifierStart(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierStart">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsJavaIdentifierStart (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsJavaIdentifierStart(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierStart (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierStart(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaIdentifierStart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierStart : int -&gt; bool" Usage="Java.Lang.Character.IsJavaIdentifierStart codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isJavaIdentifierStart", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isJavaIdentifierStart", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the character (Unicode code point) is
            permissible as the first character in a Java identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Java identifier;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the character (Unicode code point) is
            permissible as the first character in a Java identifier.</para>
          <para>A character may start a Java identifier if and only if
            one of the following conditions is true:
            &lt;ul&gt;
            &lt;li&gt; <c>#isLetter(int) isLetter(codePoint)</c>
                 returns <c>true</c>&lt;li&gt; <c>#getType(int) getType(codePoint)</c>
                 returns <c>LETTER_NUMBER</c>&lt;li&gt; the referenced character is a currency symbol (such as <c>'$'</c>)
            &lt;li&gt; the referenced character is a connecting punctuation character
                 (such as <c>'_'</c>).
            &lt;/ul&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isJavaIdentifierStart(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isJavaIdentifierStart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaLetter">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsJavaLetter (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsJavaLetter(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsJavaLetter (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaLetter(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaLetter(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsJavaLetter : char -&gt; bool" Usage="Java.Lang.Character.IsJavaLetter ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isJavaLetter", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isJavaLetter", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is permissible as the first
            character in a Java identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Java
                     identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is permissible as the first
            character in a Java identifier.</para>
          <para>A character may start a Java identifier if and only if
            one of the following conditions is true:
            &lt;ul&gt;
            &lt;li&gt; <c>#isLetter(char) isLetter(ch)</c> returns <c>true</c>&lt;li&gt; <c>#getType(char) getType(ch)</c> returns <c>LETTER_NUMBER</c>&lt;li&gt; <c>ch</c> is a currency symbol (such as <c>'$'</c>)
            &lt;li&gt; <c>ch</c> is a connecting punctuation character (such as <c>'_'</c>).
            &lt;/ul&gt;</para>
          <para>Added in 1.0.2.</para>
          <para>This member is deprecated. Replaced by isJavaIdentifierStart(char).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isJavaLetter(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isJavaLetter(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaLetterOrDigit">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsJavaLetterOrDigit (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsJavaLetterOrDigit(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsJavaLetterOrDigit (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaLetterOrDigit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaLetterOrDigit(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsJavaLetterOrDigit : char -&gt; bool" Usage="Java.Lang.Character.IsJavaLetterOrDigit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isJavaLetterOrDigit", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isJavaLetterOrDigit", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character may be part of a Java
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Java identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character may be part of a Java
            identifier as other than the first character.</para>
          <para>A character may be part of a Java identifier if and only if one
            of the following conditions is true:
            &lt;ul&gt;
            &lt;li&gt;  it is a letter
            &lt;li&gt;  it is a currency symbol (such as <c>'$'</c>)
            &lt;li&gt;  it is a connecting punctuation character (such as <c>'_'</c>)
            &lt;li&gt;  it is a digit
            &lt;li&gt;  it is a numeric letter (such as a Roman numeral character)
            &lt;li&gt;  it is a combining mark
            &lt;li&gt;  it is a non-spacing mark
            &lt;li&gt; <c>isIdentifierIgnorable</c> returns
            <c>true</c> for the character.
            &lt;/ul&gt;</para>
          <para>Added in 1.0.2.</para>
          <para>This member is deprecated. Replaced by isJavaIdentifierPart(char).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isJavaLetterOrDigit(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isJavaLetterOrDigit(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsLetter (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLetter(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="Java.Lang.Character.IsLetter ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLetter", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLetter", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a letter.</summary>
        <returns>
          <c>true</c> if the character is a letter;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is a letter.</para>
          <para>A character is considered to be a letter if its general
            category type, provided by <c>Character.getType(ch)</c>,
            is any of the following:
            &lt;ul&gt;
            &lt;li&gt; <c>UPPERCASE_LETTER</c>&lt;li&gt; <c>LOWERCASE_LETTER</c>&lt;li&gt; <c>TITLECASE_LETTER</c>&lt;li&gt; <c>MODIFIER_LETTER</c>&lt;li&gt; <c>OTHER_LETTER</c>&lt;/ul&gt;
            
            Not all letters have case. Many characters are
            letters but are neither uppercase nor lowercase nor titlecase.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isLetter(int)</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isLetter(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isLetter(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsLetter (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLetter(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLetter : int -&gt; bool" Usage="Java.Lang.Character.IsLetter codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLetter", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLetter", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is a letter.</summary>
        <returns>
          <c>true</c> if the character is a letter;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is a letter.</para>
          <para>A character is considered to be a letter if its general
            category type, provided by <c>Character#getType(int) getType(codePoint)</c>,
            is any of the following:
            &lt;ul&gt;
            &lt;li&gt; <c>UPPERCASE_LETTER</c>&lt;li&gt; <c>LOWERCASE_LETTER</c>&lt;li&gt; <c>TITLECASE_LETTER</c>&lt;li&gt; <c>MODIFIER_LETTER</c>&lt;li&gt; <c>OTHER_LETTER</c>&lt;/ul&gt;
            
            Not all letters have case. Many characters are
            letters but are neither uppercase nor lowercase nor titlecase.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isLetter(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isLetter(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="Java.Lang.Character.IsLetterOrDigit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLetterOrDigit", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLetterOrDigit", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a letter or digit.</summary>
        <returns>
          <c>true</c> if the character is a letter or digit;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is a letter or digit.</para>
          <para>A character is considered to be a letter or digit if either
            <c>Character.isLetter(char ch)</c> or
            <c>Character.isDigit(char ch)</c> returns
            <c>true</c> for the character.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isLetterOrDigit(int)</c> method.</para>
          <para>Added in 1.0.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isLetterOrDigit(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isLetterOrDigit(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLetterOrDigit(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : int -&gt; bool" Usage="Java.Lang.Character.IsLetterOrDigit codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLetterOrDigit", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLetterOrDigit", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is a letter or digit.</summary>
        <returns>
          <c>true</c> if the character is a letter or digit;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is a letter or digit.</para>
          <para>A character is considered to be a letter or digit if either
            <c>#isLetter(int) isLetter(codePoint)</c> or
            <c>#isDigit(int) isDigit(codePoint)</c> returns
            <c>true</c> for the character.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isLetterOrDigit(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isLetterOrDigit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLowerCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowerCase (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowerCase(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsLowerCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowerCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLowerCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLowerCase : char -&gt; bool" Usage="Java.Lang.Character.IsLowerCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLowerCase", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLowerCase", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a lowercase character.</summary>
        <returns>
          <c>true</c> if the character is lowercase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is a lowercase character.</para>
          <para>A character is lowercase if its general category type, provided
            by <c>Character.getType(ch)</c>, is
            <c>LOWERCASE_LETTER</c>, or it has contributory property
            Other_Lowercase as defined by the Unicode Standard.</para>
          <para>The following are examples of lowercase characters:
            &lt;blockquote&gt;</para>
          <code lang="text/java">a b c d e f g h i j k l m n o p q r s t u v w x y z
            '&amp;#92;u00DF' '&amp;#92;u00E0' '&amp;#92;u00E1' '&amp;#92;u00E2' '&amp;#92;u00E3' '&amp;#92;u00E4' '&amp;#92;u00E5' '&amp;#92;u00E6'
            '&amp;#92;u00E7' '&amp;#92;u00E8' '&amp;#92;u00E9' '&amp;#92;u00EA' '&amp;#92;u00EB' '&amp;#92;u00EC' '&amp;#92;u00ED' '&amp;#92;u00EE'
            '&amp;#92;u00EF' '&amp;#92;u00F0' '&amp;#92;u00F1' '&amp;#92;u00F2' '&amp;#92;u00F3' '&amp;#92;u00F4' '&amp;#92;u00F5' '&amp;#92;u00F6'
            '&amp;#92;u00F8' '&amp;#92;u00F9' '&amp;#92;u00FA' '&amp;#92;u00FB' '&amp;#92;u00FC' '&amp;#92;u00FD' '&amp;#92;u00FE' '&amp;#92;u00FF'
            </code>
          <para>&lt;/blockquote&gt;</para>
          <para>Many other Unicode characters are lowercase too.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isLowerCase(int)</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isLowerCase(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isLowerCase(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLowerCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowerCase (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowerCase(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsLowerCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowerCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLowerCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLowerCase : int -&gt; bool" Usage="Java.Lang.Character.IsLowerCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLowerCase", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLowerCase", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is a
            lowercase character.</summary>
        <returns>
          <c>true</c> if the character is lowercase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is a
            lowercase character.</para>
          <para>A character is lowercase if its general category type, provided
            by <c>Character#getType getType(codePoint)</c>, is
            <c>LOWERCASE_LETTER</c>, or it has contributory property
            Other_Lowercase as defined by the Unicode Standard.</para>
          <para>The following are examples of lowercase characters:
            &lt;blockquote&gt;</para>
          <code lang="text/java">a b c d e f g h i j k l m n o p q r s t u v w x y z
            '&amp;#92;u00DF' '&amp;#92;u00E0' '&amp;#92;u00E1' '&amp;#92;u00E2' '&amp;#92;u00E3' '&amp;#92;u00E4' '&amp;#92;u00E5' '&amp;#92;u00E6'
            '&amp;#92;u00E7' '&amp;#92;u00E8' '&amp;#92;u00E9' '&amp;#92;u00EA' '&amp;#92;u00EB' '&amp;#92;u00EC' '&amp;#92;u00ED' '&amp;#92;u00EE'
            '&amp;#92;u00EF' '&amp;#92;u00F0' '&amp;#92;u00F1' '&amp;#92;u00F2' '&amp;#92;u00F3' '&amp;#92;u00F4' '&amp;#92;u00F5' '&amp;#92;u00F6'
            '&amp;#92;u00F8' '&amp;#92;u00F9' '&amp;#92;u00FA' '&amp;#92;u00FB' '&amp;#92;u00FC' '&amp;#92;u00FD' '&amp;#92;u00FE' '&amp;#92;u00FF'
            </code>
          <para>&lt;/blockquote&gt;</para>
          <para>Many other Unicode characters are lowercase too.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isLowerCase(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isLowerCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="Java.Lang.Character.IsLowSurrogate ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLowSurrogate", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLowSurrogate", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the <c>char</c> value to be tested.</param>
        <summary>Determines if the given <c>char</c> value is a
            <see href="http://www.unicode.org/glossary/#low_surrogate_code_unit">
            Unicode low-surrogate code unit</see>
            (also known as <i>trailing-surrogate code unit</i>).</summary>
        <returns>
          <c>true</c> if the <c>char</c> value is between
                    <c>#MIN_LOW_SURROGATE</c> and
                    <c>#MAX_LOW_SURROGATE</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the given <c>char</c> value is a
            <see href="http://www.unicode.org/glossary/#low_surrogate_code_unit">
            Unicode low-surrogate code unit</see>
            (also known as <i>trailing-surrogate code unit</i>).</para>
          <para>Such values do not represent characters by themselves,
            but are used in the representation of
            supplementary characters
            in the UTF-16 encoding.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isLowSurrogate(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isLowSurrogate(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsHighSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMirrored (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMirrored(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsMirrored (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMirrored(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsMirrored(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsMirrored : char -&gt; bool" Usage="Java.Lang.Character.IsMirrored ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isMirrored", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isMirrored", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <c>char</c> for which the mirrored property is requested</param>
        <summary>Determines whether the character is mirrored according to the
            Unicode specification.</summary>
        <returns>
          <c>true</c> if the char is mirrored, <c>false</c>
                    if the <c>char</c> is not mirrored or is not defined.</returns>
        <remarks>
          <para>Determines whether the character is mirrored according to the
            Unicode specification.  Mirrored characters should have their
            glyphs horizontally mirrored when displayed in text that is
            right-to-left.  For example, <c>'\u005Cu0028'</c> LEFT
            PARENTHESIS is semantically defined to be an <i>opening
            parenthesis</i>.  This will appear as a "(" in text that is
            left-to-right but as a ")" in text that is right-to-left.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isMirrored(int)</c> method.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isMirrored(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isMirrored(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMirrored (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMirrored(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsMirrored (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMirrored(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsMirrored(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsMirrored : int -&gt; bool" Usage="Java.Lang.Character.IsMirrored codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isMirrored", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isMirrored", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines whether the specified character (Unicode code point)
            is mirrored according to the Unicode specification.</summary>
        <returns>
          <c>true</c> if the character is mirrored, <c>false</c>
                     if the character is not mirrored or is not defined.</returns>
        <remarks>
          <para>Determines whether the specified character (Unicode code point)
            is mirrored according to the Unicode specification.  Mirrored
            characters should have their glyphs horizontally mirrored when
            displayed in text that is right-to-left.  For example,
            <c>'\u005Cu0028'</c> LEFT PARENTHESIS is semantically
            defined to be an <i>opening parenthesis</i>.  This will appear
            as a "(" in text that is left-to-right but as a ")" in text
            that is right-to-left.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isMirrored(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isMirrored(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSpace">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSpace (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSpace(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsSpace (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSpace(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSpace(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSpace : char -&gt; bool" Usage="Java.Lang.Character.IsSpace ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSpace", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSpace", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is ISO-LATIN-1 white space.</summary>
        <returns>
          <c>true</c> if the character is ISO-LATIN-1 white
                        space; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is ISO-LATIN-1 white space.
            This method returns <c>true</c> for the following five
            characters only:
            &lt;table class="striped"&gt;
            &lt;caption style="display:none"&gt;truechars&lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;&lt;th scope="col"&gt;Character
                &lt;th scope="col"&gt;Code
                &lt;th scope="col"&gt;Name
            &lt;/thead&gt;
            &lt;tbody&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>'\t'</c>&lt;/th&gt;            &lt;td&gt;<c>U+0009</c>&lt;/td&gt;
                &lt;td&gt;<c>HORIZONTAL TABULATION</c>&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>'\n'</c>&lt;/th&gt;            &lt;td&gt;<c>U+000A</c>&lt;/td&gt;
                &lt;td&gt;<c>NEW LINE</c>&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>'\f'</c>&lt;/th&gt;            &lt;td&gt;<c>U+000C</c>&lt;/td&gt;
                &lt;td&gt;<c>FORM FEED</c>&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>'\r'</c>&lt;/th&gt;            &lt;td&gt;<c>U+000D</c>&lt;/td&gt;
                &lt;td&gt;<c>CARRIAGE RETURN</c>&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>' '</c>&lt;/th&gt;  &lt;td&gt;<c>U+0020</c>&lt;/td&gt;
                &lt;td&gt;<c>SPACE</c>&lt;/td&gt;&lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;</para>
          <para>This member is deprecated. Replaced by isWhitespace(char).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isSpace(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isSpace(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSpaceChar">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSpaceChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSpaceChar(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsSpaceChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSpaceChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSpaceChar(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSpaceChar : char -&gt; bool" Usage="Java.Lang.Character.IsSpaceChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSpaceChar", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSpaceChar", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a Unicode space character.</summary>
        <returns>
          <c>true</c> if the character is a space character;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is a Unicode space character.
            A character is considered to be a space character if and only if
            it is specified to be a space character by the Unicode Standard. This
            method returns true if the character's general category type is any of
            the following:
            &lt;ul&gt;
            &lt;li&gt; <c>SPACE_SEPARATOR</c>&lt;li&gt; <c>LINE_SEPARATOR</c>&lt;li&gt; <c>PARAGRAPH_SEPARATOR</c>&lt;/ul&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isSpaceChar(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isSpaceChar(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isSpaceChar(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSpaceChar">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSpaceChar (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSpaceChar(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsSpaceChar (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSpaceChar(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSpaceChar(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsSpaceChar : int -&gt; bool" Usage="Java.Lang.Character.IsSpaceChar codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSpaceChar", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSpaceChar", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is a
            Unicode space character.</summary>
        <returns>
          <c>true</c> if the character is a space character;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is a
            Unicode space character.  A character is considered to be a
            space character if and only if it is specified to be a space
            character by the Unicode Standard. This method returns true if
            the character's general category type is any of the following:
            
            &lt;ul&gt;
            &lt;li&gt; <c>#SPACE_SEPARATOR</c>&lt;li&gt; <c>#LINE_SEPARATOR</c>&lt;li&gt; <c>#PARAGRAPH_SEPARATOR</c>&lt;/ul&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isSpaceChar(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isSpaceChar(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSupplementaryCodePoint">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSupplementaryCodePoint (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSupplementaryCodePoint(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsSupplementaryCodePoint (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupplementaryCodePoint(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSupplementaryCodePoint(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsSupplementaryCodePoint : int -&gt; bool" Usage="Java.Lang.Character.IsSupplementaryCodePoint codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSupplementaryCodePoint", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSupplementaryCodePoint", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested</param>
        <summary>Determines whether the specified character (Unicode code point)
            is in the supplementary character range.</summary>
        <returns>
          <c>true</c> if the specified code point is between
                    <c>#MIN_SUPPLEMENTARY_CODE_POINT</c> and
                    <c>#MAX_CODE_POINT</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines whether the specified character (Unicode code point)
            is in the supplementary character range.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isSupplementaryCodePoint(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isSupplementaryCodePoint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSurrogate(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="Java.Lang.Character.IsSurrogate ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSurrogate", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSurrogate", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the <c>char</c> value to be tested.</param>
        <summary>Determines if the given <c>char</c> value is a Unicode
            <i>surrogate code unit</i>.</summary>
        <returns>
          <c>true</c> if the <c>char</c> value is between
                    <c>#MIN_SURROGATE</c> and
                    <c>#MAX_SURROGATE</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the given <c>char</c> value is a Unicode
            <i>surrogate code unit</i>.</para>
          <para>Such values do not represent characters by themselves,
            but are used in the representation of
            supplementary characters
            in the UTF-16 encoding.</para>
          <para>A char value is a surrogate code unit if and only if it is either
            a #isLowSurrogate(char) low-surrogate code unit or
            a #isHighSurrogate(char) high-surrogate code unit.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isSurrogate(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isSurrogate(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (high As Char, low As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char high, char low);" />
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char high, char low);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char high, char low) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="Java.Lang.Character.IsSurrogatePair (high, low)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSurrogatePair", "(CC)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSurrogatePair", "(CC)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="high" Type="System.Char" />
        <Parameter Name="low" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="high">the high-surrogate code value to be tested</param>
        <param name="low">the low-surrogate code value to be tested</param>
        <summary>Determines whether the specified pair of <c>char</c>
            values is a valid
            <see href="http://www.unicode.org/glossary/#surrogate_pair">
            Unicode surrogate pair</see>.</summary>
        <returns>
          <c>true</c> if the specified high and
            low-surrogate code values represent a valid surrogate pair;
            <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines whether the specified pair of <c>char</c>
            values is a valid
            <see href="http://www.unicode.org/glossary/#surrogate_pair">
            Unicode surrogate pair</see>.</para>
          <para>This method is equivalent to the expression:
            &lt;blockquote&gt;</para>
          <code lang="text/java">{@code
            isHighSurrogate(high) &amp;&amp; isLowSurrogate(low)
            }</code>
          <para>&lt;/blockquote&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isSurrogatePair(char,%20char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isSurrogatePair(char, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsHighSurrogate(System.Char)" />
        <altmember cref="M:Java.Lang.Character.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsTitleCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTitleCase (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTitleCase(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsTitleCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTitleCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsTitleCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsTitleCase : char -&gt; bool" Usage="Java.Lang.Character.IsTitleCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isTitleCase", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isTitleCase", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a titlecase character.</summary>
        <returns>
          <c>true</c> if the character is titlecase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is a titlecase character.</para>
          <para>A character is a titlecase character if its general
            category type, provided by <c>Character.getType(ch)</c>,
            is <c>TITLECASE_LETTER</c>.</para>
          <para>Some characters look like pairs of Latin letters. For example, there
            is an uppercase letter that looks like "LJ" and has a corresponding
            lowercase letter that looks like "lj". A third form, which looks like "Lj",
            is the appropriate form to use when rendering a word in lowercase
            with initial capitals, as for a book title.</para>
          <para>These are some of the Unicode characters for which this method returns
            <c>true</c>:
            &lt;ul&gt;
            &lt;li&gt;<c>LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON</c>&lt;li&gt;<c>LATIN CAPITAL LETTER L WITH SMALL LETTER J</c>&lt;li&gt;<c>LATIN CAPITAL LETTER N WITH SMALL LETTER J</c>&lt;li&gt;<c>LATIN CAPITAL LETTER D WITH SMALL LETTER Z</c>&lt;/ul&gt;</para>
          <para>Many other Unicode characters are titlecase too.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isTitleCase(int)</c> method.</para>
          <para>Added in 1.0.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isTitleCase(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isTitleCase(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsTitleCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTitleCase (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTitleCase(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsTitleCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTitleCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsTitleCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsTitleCase : int -&gt; bool" Usage="Java.Lang.Character.IsTitleCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isTitleCase", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isTitleCase", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is a titlecase character.</summary>
        <returns>
          <c>true</c> if the character is titlecase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is a titlecase character.</para>
          <para>A character is a titlecase character if its general
            category type, provided by <c>Character#getType(int) getType(codePoint)</c>,
            is <c>TITLECASE_LETTER</c>.</para>
          <para>Some characters look like pairs of Latin letters. For example, there
            is an uppercase letter that looks like "LJ" and has a corresponding
            lowercase letter that looks like "lj". A third form, which looks like "Lj",
            is the appropriate form to use when rendering a word in lowercase
            with initial capitals, as for a book title.</para>
          <para>These are some of the Unicode characters for which this method returns
            <c>true</c>:
            &lt;ul&gt;
            &lt;li&gt;<c>LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON</c>&lt;li&gt;<c>LATIN CAPITAL LETTER L WITH SMALL LETTER J</c>&lt;li&gt;<c>LATIN CAPITAL LETTER N WITH SMALL LETTER J</c>&lt;li&gt;<c>LATIN CAPITAL LETTER D WITH SMALL LETTER Z</c>&lt;/ul&gt;</para>
          <para>Many other Unicode characters are titlecase too.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isTitleCase(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isTitleCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierPart">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUnicodeIdentifierPart (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUnicodeIdentifierPart(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierPart (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierPart(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUnicodeIdentifierPart(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierPart : char -&gt; bool" Usage="Java.Lang.Character.IsUnicodeIdentifierPart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUnicodeIdentifierPart", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUnicodeIdentifierPart", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character may be part of a Unicode
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Unicode identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character may be part of a Unicode
            identifier as other than the first character.</para>
          <para>A character may be part of a Unicode identifier if and only if
            one of the following statements is true:
            &lt;ul&gt;
            &lt;li&gt;  it is a letter
            &lt;li&gt;  it is a connecting punctuation character (such as <c>'_'</c>)
            &lt;li&gt;  it is a digit
            &lt;li&gt;  it is a numeric letter (such as a Roman numeral character)
            &lt;li&gt;  it is a combining mark
            &lt;li&gt;  it is a non-spacing mark
            &lt;li&gt; <c>isIdentifierIgnorable</c> returns
            <c>true</c> for this character.
            &lt;li&gt; it is an <see href="http://www.unicode.org/reports/tr44/#Other_ID_Start"><c>Other_ID_Start</c></see> character.
            &lt;li&gt; it is an <see href="http://www.unicode.org/reports/tr44/#Other_ID_Continue"><c>Other_ID_Continue</c></see> character.
            &lt;/ul&gt;</para>
          <para>This method conforms to <see href="https://unicode.org/reports/tr31/#R1">
            UAX31-R1: Default Identifiers</see> requirement of the Unicode Standard,
            with the following profile of UAX31:</para>
          <code lang="text/java">Continue := Start + ID_Continue + ignorable
            Medial := empty
            ignorable := isIdentifierIgnorable(char) returns true for the character
            </code>
          <para>
            <c>ignorable</c> is added to <c>Continue</c> for backward
            compatibility.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isUnicodeIdentifierPart(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isUnicodeIdentifierPart(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isUnicodeIdentifierPart(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierPart">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUnicodeIdentifierPart (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUnicodeIdentifierPart(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierPart (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierPart(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUnicodeIdentifierPart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierPart : int -&gt; bool" Usage="Java.Lang.Character.IsUnicodeIdentifierPart codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUnicodeIdentifierPart", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUnicodeIdentifierPart", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) may be part of a Unicode
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Unicode identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) may be part of a Unicode
            identifier as other than the first character.</para>
          <para>A character may be part of a Unicode identifier if and only if
            one of the following statements is true:
            &lt;ul&gt;
            &lt;li&gt;  it is a letter
            &lt;li&gt;  it is a connecting punctuation character (such as <c>'_'</c>)
            &lt;li&gt;  it is a digit
            &lt;li&gt;  it is a numeric letter (such as a Roman numeral character)
            &lt;li&gt;  it is a combining mark
            &lt;li&gt;  it is a non-spacing mark
            &lt;li&gt; <c>isIdentifierIgnorable</c> returns
            <c>true</c> for this character.
            &lt;li&gt; it is an <see href="http://www.unicode.org/reports/tr44/#Other_ID_Start"><c>Other_ID_Start</c></see> character.
            &lt;li&gt; it is an <see href="http://www.unicode.org/reports/tr44/#Other_ID_Continue"><c>Other_ID_Continue</c></see> character.
            &lt;/ul&gt;</para>
          <para>This method conforms to <see href="https://unicode.org/reports/tr31/#R1">
            UAX31-R1: Default Identifiers</see> requirement of the Unicode Standard,
            with the following profile of UAX31:</para>
          <code lang="text/java">Continue := Start + ID_Continue + ignorable
            Medial := empty
            ignorable := isIdentifierIgnorable(int) returns true for the character
            </code>
          <para>
            <c>ignorable</c> is added to <c>Continue</c> for backward
            compatibility.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isUnicodeIdentifierPart(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isUnicodeIdentifierPart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierStart">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUnicodeIdentifierStart (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUnicodeIdentifierStart(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierStart (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierStart(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUnicodeIdentifierStart(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierStart : char -&gt; bool" Usage="Java.Lang.Character.IsUnicodeIdentifierStart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUnicodeIdentifierStart", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUnicodeIdentifierStart", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is permissible as the
            first character in a Unicode identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Unicode
                     identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is permissible as the
            first character in a Unicode identifier.</para>
          <para>A character may start a Unicode identifier if and only if
            one of the following conditions is true:
            &lt;ul&gt;
            &lt;li&gt; <c>#isLetter(char) isLetter(ch)</c> returns <c>true</c>&lt;li&gt; <c>#getType(char) getType(ch)</c> returns
                 <c>LETTER_NUMBER</c>.
            &lt;li&gt; it is an <see href="http://www.unicode.org/reports/tr44/#Other_ID_Start"><c>Other_ID_Start</c></see> character.
            &lt;/ul&gt;</para>
          <para>This method conforms to <see href="https://unicode.org/reports/tr31/#R1">
            UAX31-R1: Default Identifiers</see> requirement of the Unicode Standard,
            with the following profile of UAX31:</para>
          <code lang="text/java">Start := ID_Start + 'VERTICAL TILDE' (U+2E2F)
            </code>
          <para>
            <c>'VERTICAL TILDE'</c> is added to <c>Start</c> for backward
            compatibility.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isUnicodeIdentifierStart(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isUnicodeIdentifierStart(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isUnicodeIdentifierStart(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierStart">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUnicodeIdentifierStart (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUnicodeIdentifierStart(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierStart (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierStart(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUnicodeIdentifierStart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierStart : int -&gt; bool" Usage="Java.Lang.Character.IsUnicodeIdentifierStart codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUnicodeIdentifierStart", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUnicodeIdentifierStart", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is permissible as the
            first character in a Unicode identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Unicode
                     identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is permissible as the
            first character in a Unicode identifier.</para>
          <para>A character may start a Unicode identifier if and only if
            one of the following conditions is true:
            &lt;ul&gt;
            &lt;li&gt; <c>#isLetter(int) isLetter(codePoint)</c>
                 returns <c>true</c>&lt;li&gt; <c>#getType(int) getType(codePoint)</c>
                 returns <c>LETTER_NUMBER</c>.
            &lt;li&gt; it is an <see href="http://www.unicode.org/reports/tr44/#Other_ID_Start"><c>Other_ID_Start</c></see> character.
            &lt;/ul&gt;</para>
          <para>This method conforms to <see href="https://unicode.org/reports/tr31/#R1">
            UAX31-R1: Default Identifiers</see> requirement of the Unicode Standard,
            with the following profile of UAX31:</para>
          <code lang="text/java">Start := ID_Start + 'VERTICAL TILDE' (U+2E2F)
            </code>
          <para>
            <c>'VERTICAL TILDE'</c> is added to <c>Start</c> for backward
            compatibility.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isUnicodeIdentifierStart(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isUnicodeIdentifierStart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUpperCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpperCase (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpperCase(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsUpperCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpperCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUpperCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsUpperCase : char -&gt; bool" Usage="Java.Lang.Character.IsUpperCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUpperCase", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUpperCase", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is an uppercase character.</summary>
        <returns>
          <c>true</c> if the character is uppercase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is an uppercase character.</para>
          <para>A character is uppercase if its general category type, provided by
            <c>Character.getType(ch)</c>, is <c>UPPERCASE_LETTER</c>.
            or it has contributory property Other_Uppercase as defined by the Unicode Standard.</para>
          <para>The following are examples of uppercase characters:
            &lt;blockquote&gt;</para>
          <code lang="text/java">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
            '&amp;#92;u00C0' '&amp;#92;u00C1' '&amp;#92;u00C2' '&amp;#92;u00C3' '&amp;#92;u00C4' '&amp;#92;u00C5' '&amp;#92;u00C6' '&amp;#92;u00C7'
            '&amp;#92;u00C8' '&amp;#92;u00C9' '&amp;#92;u00CA' '&amp;#92;u00CB' '&amp;#92;u00CC' '&amp;#92;u00CD' '&amp;#92;u00CE' '&amp;#92;u00CF'
            '&amp;#92;u00D0' '&amp;#92;u00D1' '&amp;#92;u00D2' '&amp;#92;u00D3' '&amp;#92;u00D4' '&amp;#92;u00D5' '&amp;#92;u00D6' '&amp;#92;u00D8'
            '&amp;#92;u00D9' '&amp;#92;u00DA' '&amp;#92;u00DB' '&amp;#92;u00DC' '&amp;#92;u00DD' '&amp;#92;u00DE'
            </code>
          <para>&lt;/blockquote&gt;</para>
          <para>Many other Unicode characters are uppercase too.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isUpperCase(int)</c> method.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isUpperCase(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isUpperCase(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUpperCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpperCase (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpperCase(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsUpperCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpperCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUpperCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUpperCase : int -&gt; bool" Usage="Java.Lang.Character.IsUpperCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUpperCase", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUpperCase", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is an uppercase character.</summary>
        <returns>
          <c>true</c> if the character is uppercase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is an uppercase character.</para>
          <para>A character is uppercase if its general category type, provided by
            <c>Character#getType(int) getType(codePoint)</c>, is <c>UPPERCASE_LETTER</c>,
            or it has contributory property Other_Uppercase as defined by the Unicode Standard.</para>
          <para>The following are examples of uppercase characters:
            &lt;blockquote&gt;</para>
          <code lang="text/java">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
            '&amp;#92;u00C0' '&amp;#92;u00C1' '&amp;#92;u00C2' '&amp;#92;u00C3' '&amp;#92;u00C4' '&amp;#92;u00C5' '&amp;#92;u00C6' '&amp;#92;u00C7'
            '&amp;#92;u00C8' '&amp;#92;u00C9' '&amp;#92;u00CA' '&amp;#92;u00CB' '&amp;#92;u00CC' '&amp;#92;u00CD' '&amp;#92;u00CE' '&amp;#92;u00CF'
            '&amp;#92;u00D0' '&amp;#92;u00D1' '&amp;#92;u00D2' '&amp;#92;u00D3' '&amp;#92;u00D4' '&amp;#92;u00D5' '&amp;#92;u00D6' '&amp;#92;u00D8'
            '&amp;#92;u00D9' '&amp;#92;u00DA' '&amp;#92;u00DB' '&amp;#92;u00DC' '&amp;#92;u00DD' '&amp;#92;u00DE'
            </code>
          <para>&lt;/blockquote&gt;</para>
          <para>Many other Unicode characters are uppercase too.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isUpperCase(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isUpperCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsValidCodePoint">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidCodePoint (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidCodePoint(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsValidCodePoint (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidCodePoint(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsValidCodePoint(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsValidCodePoint : int -&gt; bool" Usage="Java.Lang.Character.IsValidCodePoint codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isValidCodePoint", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isValidCodePoint", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the Unicode code point to be tested</param>
        <summary>Determines whether the specified code point is a valid
            <see href="http://www.unicode.org/glossary/#code_point">
            Unicode code point value</see>.</summary>
        <returns>
          <c>true</c> if the specified code point value is between
                    <c>#MIN_CODE_POINT</c> and
                    <c>#MAX_CODE_POINT</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines whether the specified code point is a valid
            <see href="http://www.unicode.org/glossary/#code_point">
            Unicode code point value</see>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isValidCodePoint(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isValidCodePoint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespace">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhitespace (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhitespace(char ch);" />
      <MemberSignature Language="C#" Value="public static bool IsWhitespace (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhitespace(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsWhitespace(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsWhitespace : char -&gt; bool" Usage="Java.Lang.Character.IsWhitespace ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isWhitespace", "(C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isWhitespace", "(C)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is white space according to Java.</summary>
        <returns>
          <c>true</c> if the character is a Java whitespace
                     character; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character is white space according to Java.
            A character is a Java whitespace character if and only if it satisfies
            one of the following criteria:
            &lt;ul&gt;
            &lt;li&gt; It is a Unicode space character (<c>SPACE_SEPARATOR</c>,
                 <c>LINE_SEPARATOR</c>, or <c>PARAGRAPH_SEPARATOR</c>)
                 but is not also a non-breaking space (<c>'\u005Cu00A0'</c>,
                 <c>'\u005Cu2007'</c>, <c>'\u005Cu202F'</c>).
            &lt;li&gt; It is <c>'\u005Ct'</c>, U+0009 HORIZONTAL TABULATION.
            &lt;li&gt; It is <c>'\u005Cn'</c>, U+000A LINE FEED.
            &lt;li&gt; It is <c>'\u005Cu000B'</c>, U+000B VERTICAL TABULATION.
            &lt;li&gt; It is <c>'\u005Cf'</c>, U+000C FORM FEED.
            &lt;li&gt; It is <c>'\u005Cr'</c>, U+000D CARRIAGE RETURN.
            &lt;li&gt; It is <c>'\u005Cu001C'</c>, U+001C FILE SEPARATOR.
            &lt;li&gt; It is <c>'\u005Cu001D'</c>, U+001D GROUP SEPARATOR.
            &lt;li&gt; It is <c>'\u005Cu001E'</c>, U+001E RECORD SEPARATOR.
            &lt;li&gt; It is <c>'\u005Cu001F'</c>, U+001F UNIT SEPARATOR.
            &lt;/ul&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#isWhitespace(int)</c> method.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isWhitespace(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.isWhitespace(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespace">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhitespace (codePoint As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhitespace(int codePoint);" />
      <MemberSignature Language="C#" Value="public static bool IsWhitespace (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhitespace(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsWhitespace(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsWhitespace : int -&gt; bool" Usage="Java.Lang.Character.IsWhitespace codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isWhitespace", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isWhitespace", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is
            white space according to Java.</summary>
        <returns>
          <c>true</c> if the character is a Java whitespace
                     character; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the specified character (Unicode code point) is
            white space according to Java.  A character is a Java
            whitespace character if and only if it satisfies one of the
            following criteria:
            &lt;ul&gt;
            &lt;li&gt; It is a Unicode space character (<c>#SPACE_SEPARATOR</c>,
                 <c>#LINE_SEPARATOR</c>, or <c>#PARAGRAPH_SEPARATOR</c>)
                 but is not also a non-breaking space (<c>'\u005Cu00A0'</c>,
                 <c>'\u005Cu2007'</c>, <c>'\u005Cu202F'</c>).
            &lt;li&gt; It is <c>'\u005Ct'</c>, U+0009 HORIZONTAL TABULATION.
            &lt;li&gt; It is <c>'\u005Cn'</c>, U+000A LINE FEED.
            &lt;li&gt; It is <c>'\u005Cu000B'</c>, U+000B VERTICAL TABULATION.
            &lt;li&gt; It is <c>'\u005Cf'</c>, U+000C FORM FEED.
            &lt;li&gt; It is <c>'\u005Cr'</c>, U+000D CARRIAGE RETURN.
            &lt;li&gt; It is <c>'\u005Cu001C'</c>, U+001C FILE SEPARATOR.
            &lt;li&gt; It is <c>'\u005Cu001D'</c>, U+001D GROUP SEPARATOR.
            &lt;li&gt; It is <c>'\u005Cu001E'</c>, U+001E RECORD SEPARATOR.
            &lt;li&gt; It is <c>'\u005Cu001F'</c>, U+001F UNIT SEPARATOR.
            &lt;/ul&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#isWhitespace(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.isWhitespace(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="VB.NET" Value="Function CompareTo (o As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Java.Lang.IComparable.CompareTo(Java::Lang::Object ^ o) = Java::Lang::IComparable::CompareTo;" />
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="character.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Character.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Character.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LetterNumber">
      <MemberSignature Language="VB.NET" Value="Public Const LetterNumber As SByte  = 10" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte LetterNumber = 10;" />
      <MemberSignature Language="C#" Value="public const sbyte LetterNumber = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 LetterNumber = (10)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.LetterNumber" />
      <MemberSignature Language="F#" Value="val mutable LetterNumber : sbyte" Usage="Java.Lang.Character.LetterNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LETTER_NUMBER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LETTER_NUMBER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>General category "Nl" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Nl" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#LETTER_NUMBER" title="Reference documentation">Java documentation for <code>java.lang.Character.LETTER_NUMBER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LineSeparator">
      <MemberSignature Language="VB.NET" Value="Public Const LineSeparator As SByte  = 13" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte LineSeparator = 13;" />
      <MemberSignature Language="C#" Value="public const sbyte LineSeparator = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 LineSeparator = (13)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.LineSeparator" />
      <MemberSignature Language="F#" Value="val mutable LineSeparator : sbyte" Usage="Java.Lang.Character.LineSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LINE_SEPARATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LINE_SEPARATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>General category "Zl" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Zl" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#LINE_SEPARATOR" title="Reference documentation">Java documentation for <code>java.lang.Character.LINE_SEPARATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LowercaseLetter">
      <MemberSignature Language="VB.NET" Value="Public Const LowercaseLetter As SByte  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte LowercaseLetter = 2;" />
      <MemberSignature Language="C#" Value="public const sbyte LowercaseLetter = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 LowercaseLetter = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.LowercaseLetter" />
      <MemberSignature Language="F#" Value="val mutable LowercaseLetter : sbyte" Usage="Java.Lang.Character.LowercaseLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOWERCASE_LETTER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOWERCASE_LETTER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>General category "Ll" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Ll" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#LOWERCASE_LETTER" title="Reference documentation">Java documentation for <code>java.lang.Character.LOWERCASE_LETTER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LowSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Shared Function LowSurrogate (codePoint As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char LowSurrogate(int codePoint);" />
      <MemberSignature Language="C#" Value="public static char LowSurrogate (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char LowSurrogate(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.LowSurrogate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member LowSurrogate : int -&gt; char" Usage="Java.Lang.Character.LowSurrogate codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lowSurrogate", "(I)C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lowSurrogate", "(I)C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">a supplementary character (Unicode code point)</param>
        <summary>Returns the trailing surrogate (a
            <see href="http://www.unicode.org/glossary/#low_surrogate_code_unit">
            low surrogate code unit</see>) of the
            <see href="http://www.unicode.org/glossary/#surrogate_pair">
            surrogate pair</see>
            representing the specified supplementary character (Unicode
            code point) in the UTF-16 encoding.</summary>
        <returns>the trailing surrogate code unit used to represent the
                     character in the UTF-16 encoding</returns>
        <remarks>
          <para>Returns the trailing surrogate (a
            <see href="http://www.unicode.org/glossary/#low_surrogate_code_unit">
            low surrogate code unit</see>) of the
            <see href="http://www.unicode.org/glossary/#surrogate_pair">
            surrogate pair</see>
            representing the specified supplementary character (Unicode
            code point) in the UTF-16 encoding.  If the specified character
            is not a
            supplementary character,
            an unspecified <c>char</c> is returned.</para>
          <para>If
            <c>#isSupplementaryCodePoint isSupplementaryCodePoint(x)</c>
            is <c>true</c>, then
            <c>#isLowSurrogate isLowSurrogate</c><c>(lowSurrogate(x))</c> and
            <c>#toCodePoint toCodePoint</c><c>(</c><c>#highSurrogate highSurrogate</c><c>(x), lowSurrogate(x)) == x</c>
            are also always <c>true</c>.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#lowSurrogate(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.lowSurrogate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MathSymbol">
      <MemberSignature Language="VB.NET" Value="Public Const MathSymbol As SByte  = 25" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte MathSymbol = 25;" />
      <MemberSignature Language="C#" Value="public const sbyte MathSymbol = 25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 MathSymbol = (25)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MathSymbol" />
      <MemberSignature Language="F#" Value="val mutable MathSymbol : sbyte" Usage="Java.Lang.Character.MathSymbol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATH_SYMBOL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MATH_SYMBOL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>General category "Sm" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Sm" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MATH_SYMBOL" title="Reference documentation">Java documentation for <code>java.lang.Character.MATH_SYMBOL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxCodePoint">
      <MemberSignature Language="VB.NET" Value="Public Const MaxCodePoint As Integer  = 1114111" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxCodePoint = 1114111;" />
      <MemberSignature Language="C#" Value="public const int MaxCodePoint = 1114111;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxCodePoint = (1114111)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MaxCodePoint : int" Usage="Java.Lang.Character.MaxCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_CODE_POINT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_CODE_POINT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1114111</MemberValue>
      <Docs>
        <summary>The maximum value of a
            <see href="http://www.unicode.org/glossary/#code_point">
            Unicode code point</see>, constant <c>U+10FFFF</c>.</summary>
        <remarks>
          <para>The maximum value of a
            <see href="http://www.unicode.org/glossary/#code_point">
            Unicode code point</see>, constant <c>U+10FFFF</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MAX_CODE_POINT" title="Reference documentation">Java documentation for <code>java.lang.Character.MAX_CODE_POINT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxHighSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Const MaxHighSurrogate As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxHighSurrogate;" />
      <MemberSignature Language="C#" Value="public const char MaxHighSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxHighSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxHighSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxHighSurrogate : char" Usage="Java.Lang.Character.MaxHighSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_HIGH_SURROGATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_HIGH_SURROGATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum value of a
            <see href="http://www.unicode.org/glossary/#high_surrogate_code_unit">
            Unicode high-surrogate code unit</see>
            in the UTF-16 encoding, constant <c>'\u005CuDBFF'</c>.</summary>
        <remarks>
          <para>The maximum value of a
            <see href="http://www.unicode.org/glossary/#high_surrogate_code_unit">
            Unicode high-surrogate code unit</see>
            in the UTF-16 encoding, constant <c>'\u005CuDBFF'</c>.
            A high-surrogate is also known as a <i>leading-surrogate</i>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MAX_HIGH_SURROGATE" title="Reference documentation">Java documentation for <code>java.lang.Character.MAX_HIGH_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxLowSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Const MaxLowSurrogate As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxLowSurrogate;" />
      <MemberSignature Language="C#" Value="public const char MaxLowSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxLowSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxLowSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxLowSurrogate : char" Usage="Java.Lang.Character.MaxLowSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_LOW_SURROGATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_LOW_SURROGATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum value of a
            <see href="http://www.unicode.org/glossary/#low_surrogate_code_unit">
            Unicode low-surrogate code unit</see>
            in the UTF-16 encoding, constant <c>'\u005CuDFFF'</c>.</summary>
        <remarks>
          <para>The maximum value of a
            <see href="http://www.unicode.org/glossary/#low_surrogate_code_unit">
            Unicode low-surrogate code unit</see>
            in the UTF-16 encoding, constant <c>'\u005CuDFFF'</c>.
            A low-surrogate is also known as a <i>trailing-surrogate</i>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MAX_LOW_SURROGATE" title="Reference documentation">Java documentation for <code>java.lang.Character.MAX_LOW_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxRadix">
      <MemberSignature Language="VB.NET" Value="Public Const MaxRadix As Integer  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxRadix = 36;" />
      <MemberSignature Language="C#" Value="public const int MaxRadix = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxRadix = (36)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxRadix" />
      <MemberSignature Language="F#" Value="val mutable MaxRadix : int" Usage="Java.Lang.Character.MaxRadix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_RADIX")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_RADIX")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>The maximum radix available for conversion to and from strings.</summary>
        <remarks>
          <para>The maximum radix available for conversion to and from strings.
            The constant value of this field is the largest value permitted
            for the radix argument in radix-conversion methods such as the
            <c>digit</c> method, the <c>forDigit</c> method, and the
            <c>toString</c> method of class <c>Integer</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MAX_RADIX" title="Reference documentation">Java documentation for <code>java.lang.Character.MAX_RADIX</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Const MaxSurrogate As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxSurrogate;" />
      <MemberSignature Language="C#" Value="public const char MaxSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxSurrogate : char" Usage="Java.Lang.Character.MaxSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_SURROGATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_SURROGATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum value of a Unicode surrogate code unit in the
            UTF-16 encoding, constant <c>'\u005CuDFFF'</c>.</summary>
        <remarks>
          <para>The maximum value of a Unicode surrogate code unit in the
            UTF-16 encoding, constant <c>'\u005CuDFFF'</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MAX_SURROGATE" title="Reference documentation">Java documentation for <code>java.lang.Character.MAX_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxValue" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="Java.Lang.Character.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_VALUE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_VALUE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The constant value of this field is the largest value of type
            <c>char</c>, <c>'\u005CuFFFF'</c>.</summary>
        <remarks>
          <para>The constant value of this field is the largest value of type
            <c>char</c>, <c>'\u005CuFFFF'</c>.</para>
          <para>Added in 1.0.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MAX_VALUE" title="Reference documentation">Java documentation for <code>java.lang.Character.MAX_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinCodePoint">
      <MemberSignature Language="VB.NET" Value="Public Const MinCodePoint As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int MinCodePoint = 0;" />
      <MemberSignature Language="C#" Value="public const int MinCodePoint = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinCodePoint = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MinCodePoint : int" Usage="Java.Lang.Character.MinCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_CODE_POINT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_CODE_POINT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The minimum value of a
            <see href="http://www.unicode.org/glossary/#code_point">
            Unicode code point</see>, constant <c>U+0000</c>.</summary>
        <remarks>
          <para>The minimum value of a
            <see href="http://www.unicode.org/glossary/#code_point">
            Unicode code point</see>, constant <c>U+0000</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MIN_CODE_POINT" title="Reference documentation">Java documentation for <code>java.lang.Character.MIN_CODE_POINT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinHighSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Const MinHighSurrogate As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinHighSurrogate;" />
      <MemberSignature Language="C#" Value="public const char MinHighSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinHighSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinHighSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinHighSurrogate : char" Usage="Java.Lang.Character.MinHighSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_HIGH_SURROGATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_HIGH_SURROGATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum value of a
            <see href="http://www.unicode.org/glossary/#high_surrogate_code_unit">
            Unicode high-surrogate code unit</see>
            in the UTF-16 encoding, constant <c>'\u005CuD800'</c>.</summary>
        <remarks>
          <para>The minimum value of a
            <see href="http://www.unicode.org/glossary/#high_surrogate_code_unit">
            Unicode high-surrogate code unit</see>
            in the UTF-16 encoding, constant <c>'\u005CuD800'</c>.
            A high-surrogate is also known as a <i>leading-surrogate</i>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MIN_HIGH_SURROGATE" title="Reference documentation">Java documentation for <code>java.lang.Character.MIN_HIGH_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinLowSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Const MinLowSurrogate As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinLowSurrogate;" />
      <MemberSignature Language="C#" Value="public const char MinLowSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinLowSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinLowSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinLowSurrogate : char" Usage="Java.Lang.Character.MinLowSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_LOW_SURROGATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_LOW_SURROGATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum value of a
            <see href="http://www.unicode.org/glossary/#low_surrogate_code_unit">
            Unicode low-surrogate code unit</see>
            in the UTF-16 encoding, constant <c>'\u005CuDC00'</c>.</summary>
        <remarks>
          <para>The minimum value of a
            <see href="http://www.unicode.org/glossary/#low_surrogate_code_unit">
            Unicode low-surrogate code unit</see>
            in the UTF-16 encoding, constant <c>'\u005CuDC00'</c>.
            A low-surrogate is also known as a <i>trailing-surrogate</i>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MIN_LOW_SURROGATE" title="Reference documentation">Java documentation for <code>java.lang.Character.MIN_LOW_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinRadix">
      <MemberSignature Language="VB.NET" Value="Public Const MinRadix As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int MinRadix = 2;" />
      <MemberSignature Language="C#" Value="public const int MinRadix = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinRadix = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinRadix" />
      <MemberSignature Language="F#" Value="val mutable MinRadix : int" Usage="Java.Lang.Character.MinRadix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_RADIX")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_RADIX")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The minimum radix available for conversion to and from strings.</summary>
        <remarks>
          <para>The minimum radix available for conversion to and from strings.
            The constant value of this field is the smallest value permitted
            for the radix argument in radix-conversion methods such as the
            <c>digit</c> method, the <c>forDigit</c> method, and the
            <c>toString</c> method of class <c>Integer</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MIN_RADIX" title="Reference documentation">Java documentation for <code>java.lang.Character.MIN_RADIX</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinSupplementaryCodePoint">
      <MemberSignature Language="VB.NET" Value="Public Const MinSupplementaryCodePoint As Integer  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: int MinSupplementaryCodePoint = 65536;" />
      <MemberSignature Language="C#" Value="public const int MinSupplementaryCodePoint = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinSupplementaryCodePoint = (65536)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinSupplementaryCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MinSupplementaryCodePoint : int" Usage="Java.Lang.Character.MinSupplementaryCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_SUPPLEMENTARY_CODE_POINT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_SUPPLEMENTARY_CODE_POINT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>The minimum value of a
            <see href="http://www.unicode.org/glossary/#supplementary_code_point">
            Unicode supplementary code point</see>, constant <c>U+10000</c>.</summary>
        <remarks>
          <para>The minimum value of a
            <see href="http://www.unicode.org/glossary/#supplementary_code_point">
            Unicode supplementary code point</see>, constant <c>U+10000</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MIN_SUPPLEMENTARY_CODE_POINT" title="Reference documentation">Java documentation for <code>java.lang.Character.MIN_SUPPLEMENTARY_CODE_POINT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinSurrogate">
      <MemberSignature Language="VB.NET" Value="Public Const MinSurrogate As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinSurrogate;" />
      <MemberSignature Language="C#" Value="public const char MinSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinSurrogate : char" Usage="Java.Lang.Character.MinSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_SURROGATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_SURROGATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum value of a Unicode surrogate code unit in the
            UTF-16 encoding, constant <c>'\u005CuD800'</c>.</summary>
        <remarks>
          <para>The minimum value of a Unicode surrogate code unit in the
            UTF-16 encoding, constant <c>'\u005CuD800'</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MIN_SURROGATE" title="Reference documentation">Java documentation for <code>java.lang.Character.MIN_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinValue" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="Java.Lang.Character.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_VALUE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_VALUE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The constant value of this field is the smallest value of type
            <c>char</c>, <c>'\u005Cu0000'</c>.</summary>
        <remarks>
          <para>The constant value of this field is the smallest value of type
            <c>char</c>, <c>'\u005Cu0000'</c>.</para>
          <para>Added in 1.0.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MIN_VALUE" title="Reference documentation">Java documentation for <code>java.lang.Character.MIN_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ModifierLetter">
      <MemberSignature Language="VB.NET" Value="Public Const ModifierLetter As SByte  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte ModifierLetter = 4;" />
      <MemberSignature Language="C#" Value="public const sbyte ModifierLetter = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 ModifierLetter = (4)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.ModifierLetter" />
      <MemberSignature Language="F#" Value="val mutable ModifierLetter : sbyte" Usage="Java.Lang.Character.ModifierLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODIFIER_LETTER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODIFIER_LETTER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>General category "Lm" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Lm" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MODIFIER_LETTER" title="Reference documentation">Java documentation for <code>java.lang.Character.MODIFIER_LETTER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ModifierSymbol">
      <MemberSignature Language="VB.NET" Value="Public Const ModifierSymbol As SByte  = 27" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte ModifierSymbol = 27;" />
      <MemberSignature Language="C#" Value="public const sbyte ModifierSymbol = 27;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 ModifierSymbol = (27)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.ModifierSymbol" />
      <MemberSignature Language="F#" Value="val mutable ModifierSymbol : sbyte" Usage="Java.Lang.Character.ModifierSymbol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODIFIER_SYMBOL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODIFIER_SYMBOL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>General category "Sk" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Sk" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#MODIFIER_SYMBOL" title="Reference documentation">Java documentation for <code>java.lang.Character.MODIFIER_SYMBOL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NonSpacingMark">
      <MemberSignature Language="VB.NET" Value="Public Const NonSpacingMark As SByte  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte NonSpacingMark = 6;" />
      <MemberSignature Language="C#" Value="public const sbyte NonSpacingMark = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 NonSpacingMark = (6)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.NonSpacingMark" />
      <MemberSignature Language="F#" Value="val mutable NonSpacingMark : sbyte" Usage="Java.Lang.Character.NonSpacingMark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NON_SPACING_MARK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NON_SPACING_MARK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>General category "Mn" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Mn" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#NON_SPACING_MARK" title="Reference documentation">Java documentation for <code>java.lang.Character.NON_SPACING_MARK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetByCodePoints (seq As ICharSequence, index As Integer, codePointOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int OffsetByCodePoints(Java::Lang::ICharSequence ^ seq, int index, int codePointOffset);" />
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (Java.Lang.ICharSequence seq, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(class Java.Lang.ICharSequence seq, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.OffsetByCodePoints(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : Java.Lang.ICharSequence * int * int -&gt; int" Usage="Java.Lang.Character.OffsetByCodePoints (seq, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offsetByCodePoints", "(Ljava/lang/CharSequence;II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offsetByCodePoints", "(Ljava/lang/CharSequence;II)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the char sequence</param>
        <param name="index">the index to be offset</param>
        <param name="codePointOffset">the offset in code points</param>
        <summary>Returns the index within the given char sequence that is offset
            from the given <c>index</c> by <c>codePointOffset</c>
            code points.</summary>
        <returns>the index within the char sequence</returns>
        <remarks>
          <para>Returns the index within the given char sequence that is offset
            from the given <c>index</c> by <c>codePointOffset</c>
            code points. Unpaired surrogates within the text range given by
            <c>index</c> and <c>codePointOffset</c> count as
            one code point each.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#offsetByCodePoints(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.offsetByCodePoints(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>, <c>index</c> is greater than the
             length of <c>seq</c>, or if there are not enough values in
             <c>seq</c> to skip <c>codePointOffset</c> code points
             forwards or backwards (if <c>codePointOffset</c> is
             negative) from <c>index</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetByCodePoints (seq As String, index As Integer, codePointOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int OffsetByCodePoints(System::String ^ seq, int index, int codePointOffset);" />
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (string seq, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(string seq, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.OffsetByCodePoints(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : string * int * int -&gt; int" Usage="Java.Lang.Character.OffsetByCodePoints (seq, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the char sequence</param>
        <param name="index">the index to be offset</param>
        <param name="codePointOffset">the offset in code points</param>
        <summary>Returns the index within the given char sequence that is offset
            from the given <c>index</c> by <c>codePointOffset</c>
            code points.</summary>
        <returns>the index within the char sequence</returns>
        <remarks>
          <para>Returns the index within the given char sequence that is offset
            from the given <c>index</c> by <c>codePointOffset</c>
            code points. Unpaired surrogates within the text range given by
            <c>index</c> and <c>codePointOffset</c> count as
            one code point each.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#offsetByCodePoints(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.offsetByCodePoints(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetByCodePoints (a As Char(), start As Integer, count As Integer, index As Integer, codePointOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int OffsetByCodePoints(cli::array &lt;char&gt; ^ a, int start, int count, int index, int codePointOffset);" />
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (char[]? a, int start, int count, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(char[] a, int32 start, int32 count, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.OffsetByCodePoints(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : char[] * int * int * int * int -&gt; int" Usage="Java.Lang.Character.OffsetByCodePoints (a, start, count, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offsetByCodePoints", "([CIIII)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offsetByCodePoints", "([CIIII)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the <c>char</c> array</param>
        <param name="start">the index of the first <c>char</c> of the
            subarray</param>
        <param name="count">the length of the subarray in <c>char</c>s</param>
        <param name="index">the index to be offset</param>
        <param name="codePointOffset">the offset in code points</param>
        <summary>Returns the index within the given <c>char</c> subarray
            that is offset from the given <c>index</c> by
            <c>codePointOffset</c> code points.</summary>
        <returns>the index within the subarray</returns>
        <remarks>
          <para>Returns the index within the given <c>char</c> subarray
            that is offset from the given <c>index</c> by
            <c>codePointOffset</c> code points. The
            <c>start</c> and <c>count</c> arguments specify a
            subarray of the <c>char</c> array. Unpaired surrogates
            within the text range given by <c>index</c> and
            <c>codePointOffset</c> count as one code point each.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#offsetByCodePoints(char[],%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.offsetByCodePoints(char[], int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>start </c>, <c>count </c>,
             <c>index </c>, <c>index &gt; start + count</c>,
             <c>start + count</c> is greater than the length of
             <c>seq</c>, or if there are not enough values in
             <c>seq</c> to skip <c>codePointOffset</c> code points
             forward or backward (if <c>codePointOffset</c> is
             negative) from <c>index</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Character) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(Java::Lang::Character ^ value);" />
      <MemberSignature Language="C#" Value="public static explicit operator char (Java.Lang.Character value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(class Java.Lang.Character value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.op_Explicit(Java.Lang.Character)~System.Char" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Java.Lang.Character -&gt; char" Usage="Java.Lang.Character.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Character" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherLetter">
      <MemberSignature Language="VB.NET" Value="Public Const OtherLetter As SByte  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte OtherLetter = 5;" />
      <MemberSignature Language="C#" Value="public const sbyte OtherLetter = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 OtherLetter = (5)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.OtherLetter" />
      <MemberSignature Language="F#" Value="val mutable OtherLetter : sbyte" Usage="Java.Lang.Character.OtherLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("OTHER_LETTER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("OTHER_LETTER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>General category "Lo" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Lo" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#OTHER_LETTER" title="Reference documentation">Java documentation for <code>java.lang.Character.OTHER_LETTER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OtherNumber">
      <MemberSignature Language="VB.NET" Value="Public Const OtherNumber As SByte  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte OtherNumber = 11;" />
      <MemberSignature Language="C#" Value="public const sbyte OtherNumber = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 OtherNumber = (11)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.OtherNumber" />
      <MemberSignature Language="F#" Value="val mutable OtherNumber : sbyte" Usage="Java.Lang.Character.OtherNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("OTHER_NUMBER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("OTHER_NUMBER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>General category "No" in the Unicode specification.</summary>
        <remarks>
          <para>General category "No" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#OTHER_NUMBER" title="Reference documentation">Java documentation for <code>java.lang.Character.OTHER_NUMBER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OtherPunctuation">
      <MemberSignature Language="VB.NET" Value="Public Const OtherPunctuation As SByte  = 24" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte OtherPunctuation = 24;" />
      <MemberSignature Language="C#" Value="public const sbyte OtherPunctuation = 24;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 OtherPunctuation = (24)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.OtherPunctuation" />
      <MemberSignature Language="F#" Value="val mutable OtherPunctuation : sbyte" Usage="Java.Lang.Character.OtherPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("OTHER_PUNCTUATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("OTHER_PUNCTUATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>General category "Po" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Po" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#OTHER_PUNCTUATION" title="Reference documentation">Java documentation for <code>java.lang.Character.OTHER_PUNCTUATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OtherSymbol">
      <MemberSignature Language="VB.NET" Value="Public Const OtherSymbol As SByte  = 28" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte OtherSymbol = 28;" />
      <MemberSignature Language="C#" Value="public const sbyte OtherSymbol = 28;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 OtherSymbol = (28)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.OtherSymbol" />
      <MemberSignature Language="F#" Value="val mutable OtherSymbol : sbyte" Usage="Java.Lang.Character.OtherSymbol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("OTHER_SYMBOL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("OTHER_SYMBOL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>General category "So" in the Unicode specification.</summary>
        <remarks>
          <para>General category "So" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#OTHER_SYMBOL" title="Reference documentation">Java documentation for <code>java.lang.Character.OTHER_SYMBOL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParagraphSeparator">
      <MemberSignature Language="VB.NET" Value="Public Const ParagraphSeparator As SByte  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte ParagraphSeparator = 14;" />
      <MemberSignature Language="C#" Value="public const sbyte ParagraphSeparator = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 ParagraphSeparator = (14)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.ParagraphSeparator" />
      <MemberSignature Language="F#" Value="val mutable ParagraphSeparator : sbyte" Usage="Java.Lang.Character.ParagraphSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAGRAPH_SEPARATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAGRAPH_SEPARATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>General category "Zp" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Zp" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#PARAGRAPH_SEPARATOR" title="Reference documentation">Java documentation for <code>java.lang.Character.PARAGRAPH_SEPARATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrivateUse">
      <MemberSignature Language="VB.NET" Value="Public Const PrivateUse As SByte  = 18" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte PrivateUse = 18;" />
      <MemberSignature Language="C#" Value="public const sbyte PrivateUse = 18;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 PrivateUse = (18)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.PrivateUse" />
      <MemberSignature Language="F#" Value="val mutable PrivateUse : sbyte" Usage="Java.Lang.Character.PrivateUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_USE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_USE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>General category "Co" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Co" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#PRIVATE_USE" title="Reference documentation">Java documentation for <code>java.lang.Character.PRIVATE_USE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReverseBytes">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseBytes (ch As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ReverseBytes(char ch);" />
      <MemberSignature Language="C#" Value="public static char ReverseBytes (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ReverseBytes(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ReverseBytes(System.Char)" />
      <MemberSignature Language="F#" Value="static member ReverseBytes : char -&gt; char" Usage="Java.Lang.Character.ReverseBytes ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reverseBytes", "(C)C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reverseBytes", "(C)C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">The <c>char</c> of which to reverse the byte order.</param>
        <summary>Returns the value obtained by reversing the order of the bytes in the
            specified <c>char</c> value.</summary>
        <returns>the value obtained by reversing (or, equivalently, swapping)
                the bytes in the specified <c>char</c> value.</returns>
        <remarks>
          <para>Returns the value obtained by reversing the order of the bytes in the
            specified <c>char</c> value.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#reverseBytes(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.reverseBytes(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="VB.NET" Value="Public Const Size As Integer  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: int Size = 16;" />
      <MemberSignature Language="C#" Value="public const int Size = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Size = (16)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Size" />
      <MemberSignature Language="F#" Value="val mutable Size : int" Usage="Java.Lang.Character.Size" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SIZE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SIZE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>The number of bits used to represent a <c>char</c> value in unsigned
            binary form, constant <c>16</c>.</summary>
        <remarks>
          <para>The number of bits used to represent a <c>char</c> value in unsigned
            binary form, constant <c>16</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#SIZE" title="Reference documentation">Java documentation for <code>java.lang.Character.SIZE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SpaceSeparator">
      <MemberSignature Language="VB.NET" Value="Public Const SpaceSeparator As SByte  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte SpaceSeparator = 12;" />
      <MemberSignature Language="C#" Value="public const sbyte SpaceSeparator = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 SpaceSeparator = (12)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.SpaceSeparator" />
      <MemberSignature Language="F#" Value="val mutable SpaceSeparator : sbyte" Usage="Java.Lang.Character.SpaceSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SPACE_SEPARATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SPACE_SEPARATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>General category "Zs" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Zs" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#SPACE_SEPARATOR" title="Reference documentation">Java documentation for <code>java.lang.Character.SPACE_SEPARATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartPunctuation">
      <MemberSignature Language="VB.NET" Value="Public Const StartPunctuation As SByte  = 21" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte StartPunctuation = 21;" />
      <MemberSignature Language="C#" Value="public const sbyte StartPunctuation = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 StartPunctuation = (21)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.StartPunctuation" />
      <MemberSignature Language="F#" Value="val mutable StartPunctuation : sbyte" Usage="Java.Lang.Character.StartPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("START_PUNCTUATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("START_PUNCTUATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>General category "Ps" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Ps" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#START_PUNCTUATION" title="Reference documentation">Java documentation for <code>java.lang.Character.START_PUNCTUATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Surrogate">
      <MemberSignature Language="VB.NET" Value="Public Const Surrogate As SByte  = 19" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte Surrogate = 19;" />
      <MemberSignature Language="C#" Value="public const sbyte Surrogate = 19;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 Surrogate = (19)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Surrogate" />
      <MemberSignature Language="F#" Value="val mutable Surrogate : sbyte" Usage="Java.Lang.Character.Surrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SURROGATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SURROGATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>General category "Cs" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Cs" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#SURROGATE" title="Reference documentation">Java documentation for <code>java.lang.Character.SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="character.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="character.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="character.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="character.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="character.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="character.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="character.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="character.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="character.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="character.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="character.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="character.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToString : IFormatProvider -&gt; string&#xA;override this.System.IConvertible.ToString : IFormatProvider -&gt; string" Usage="character.System.IConvertible.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="VB.NET" Value="Function ToType (conversionType As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ conversionType, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type conversionType, IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="character.System.IConvertible.ToType (conversionType, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="conversionType">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="character.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="character.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="character.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Character.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Character.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Character.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Character.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitlecaseLetter">
      <MemberSignature Language="VB.NET" Value="Public Const TitlecaseLetter As SByte  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte TitlecaseLetter = 3;" />
      <MemberSignature Language="C#" Value="public const sbyte TitlecaseLetter = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 TitlecaseLetter = (3)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.TitlecaseLetter" />
      <MemberSignature Language="F#" Value="val mutable TitlecaseLetter : sbyte" Usage="Java.Lang.Character.TitlecaseLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TITLECASE_LETTER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TITLECASE_LETTER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>General category "Lt" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Lt" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#TITLECASE_LETTER" title="Reference documentation">Java documentation for <code>java.lang.Character.TITLECASE_LETTER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToChars">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChars (codePoint As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ ToChars(int codePoint);" />
      <MemberSignature Language="C#" Value="public static char[]? ToChars (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] ToChars(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToChars(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToChars : int -&gt; char[]" Usage="Java.Lang.Character.ToChars codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toChars", "(I)[C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toChars", "(I)[C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">a Unicode code point</param>
        <summary>Converts the specified character (Unicode code point) to its
            UTF-16 representation stored in a <c>char</c> array.</summary>
        <returns>a <c>char</c> array having
                    <c>codePoint</c>'s UTF-16 representation.</returns>
        <remarks>
          <para>Converts the specified character (Unicode code point) to its
            UTF-16 representation stored in a <c>char</c> array. If
            the specified code point is a BMP (Basic Multilingual Plane or
            Plane 0) value, the resulting <c>char</c> array has
            the same value as <c>codePoint</c>. If the specified code
            point is a supplementary code point, the resulting
            <c>char</c> array has the corresponding surrogate pair.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toChars(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.toChars(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>codePoint</c> is not a valid code point.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToChars">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChars (codePoint As Integer, dst As Char(), dstIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToChars(int codePoint, cli::array &lt;char&gt; ^ dst, int dstIndex);" />
      <MemberSignature Language="C#" Value="public static int ToChars (int codePoint, char[]? dst, int dstIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToChars(int32 codePoint, char[] dst, int32 dstIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToChars(System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToChars : int * char[] * int -&gt; int" Usage="Java.Lang.Character.ToChars (codePoint, dst, dstIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toChars", "(I[CI)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toChars", "(I[CI)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
        <Parameter Name="dst" Type="System.Char[]" />
        <Parameter Name="dstIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be converted.</param>
        <param name="dst">an array of <c>char</c> in which the
            <c>codePoint</c>'s UTF-16 value is stored.</param>
        <param name="dstIndex">the start index into the <c>dst</c>
            array where the converted value is stored.</param>
        <summary>Converts the specified character (Unicode code point) to its
            UTF-16 representation.</summary>
        <returns>1 if the code point is a BMP code point, 2 if the
            code point is a supplementary code point.</returns>
        <remarks>
          <para>Converts the specified character (Unicode code point) to its
            UTF-16 representation. If the specified code point is a BMP
            (Basic Multilingual Plane or Plane 0) value, the same value is
            stored in <c>dst[dstIndex]</c>, and 1 is returned. If the
            specified code point is a supplementary character, its
            surrogate values are stored in <c>dst[dstIndex]</c>
            (high-surrogate) and <c>dst[dstIndex+1]</c>
            (low-surrogate), and 2 is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toChars(int,%20char[],%20int)" title="Reference documentation">Java documentation for <code>java.lang.Character.toChars(int, char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>codePoint</c> is not a valid code point.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>dst</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>dstIndex</c> is negative, greater than or equal to
             <c>dst.length</c> or equals <c>dst.length - 1</c> when
             <c>codePoint</c> is a
             <see cref="M:Java.Lang.Character.IsSupplementaryCodePoint(System.Int32)" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToCodePoint">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToCodePoint (high As Char, low As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToCodePoint(char high, char low);" />
      <MemberSignature Language="C#" Value="public static int ToCodePoint (char high, char low);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToCodePoint(char high, char low) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToCodePoint(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member ToCodePoint : char * char -&gt; int" Usage="Java.Lang.Character.ToCodePoint (high, low)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toCodePoint", "(CC)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toCodePoint", "(CC)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="high" Type="System.Char" />
        <Parameter Name="low" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="high">the high-surrogate code unit</param>
        <param name="low">the low-surrogate code unit</param>
        <summary>Converts the specified surrogate pair to its supplementary code
            point value.</summary>
        <returns>the supplementary code point composed from the
                    specified surrogate pair.</returns>
        <remarks>
          <para>Converts the specified surrogate pair to its supplementary code
            point value. This method does not validate the specified
            surrogate pair. The caller must validate it using <c>#isSurrogatePair(char, char) isSurrogatePair</c> if necessary.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toCodePoint(char,%20char)" title="Reference documentation">Java documentation for <code>java.lang.Character.toCodePoint(char, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsSurrogatePair(System.Char, System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerCase (ch As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerCase(char ch);" />
      <MemberSignature Language="C#" Value="public static char ToLowerCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToLowerCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member ToLowerCase : char -&gt; char" Usage="Java.Lang.Character.ToLowerCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLowerCase", "(C)C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLowerCase", "(C)C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <summary>Converts the character argument to lowercase using case
            mapping information from the UnicodeData file.</summary>
        <returns>the lowercase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Converts the character argument to lowercase using case
            mapping information from the UnicodeData file.</para>
          <para>Note that
            <c>Character.isLowerCase(Character.toLowerCase(ch))</c>
            does not always return <c>true</c> for some ranges of
            characters, particularly those that are symbols or ideographs.</para>
          <para>In general, <c>String#toLowerCase()</c> should be used to map
            characters to lowercase. <c>String</c> case mapping methods
            have several benefits over <c>Character</c> case mapping methods.
            <c>String</c> case mapping methods can perform locale-sensitive
            mappings, context-sensitive mappings, and 1:M character mappings, whereas
            the <c>Character</c> case mapping methods cannot.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#toLowerCase(int)</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toLowerCase(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.toLowerCase(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerCase (codePoint As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToLowerCase(int codePoint);" />
      <MemberSignature Language="C#" Value="public static int ToLowerCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToLowerCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToLowerCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToLowerCase : int -&gt; int" Usage="Java.Lang.Character.ToLowerCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLowerCase", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLowerCase", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be converted.</param>
        <summary>Converts the character (Unicode code point) argument to
            lowercase using case mapping information from the UnicodeData
            file.</summary>
        <returns>the lowercase equivalent of the character (Unicode code
                     point), if any; otherwise, the character itself.</returns>
        <remarks>
          <para>Converts the character (Unicode code point) argument to
            lowercase using case mapping information from the UnicodeData
            file.</para>
          <para>Note that
            <c>Character.isLowerCase(Character.toLowerCase(codePoint))</c>
            does not always return <c>true</c> for some ranges of
            characters, particularly those that are symbols or ideographs.</para>
          <para>In general, <c>String#toLowerCase()</c> should be used to map
            characters to lowercase. <c>String</c> case mapping methods
            have several benefits over <c>Character</c> case mapping methods.
            <c>String</c> case mapping methods can perform locale-sensitive
            mappings, context-sensitive mappings, and 1:M character mappings, whereas
            the <c>Character</c> case mapping methods cannot.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toLowerCase(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.toLowerCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToString(System.Char)" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="Java.Lang.Character.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "(C)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "(C)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">the <c>char</c> to be converted</param>
        <summary>Returns a <c>String</c> object representing the
            specified <c>char</c>.</summary>
        <returns>the string representation of the specified <c>char</c></returns>
        <remarks>
          <para>Returns a <c>String</c> object representing the
            specified <c>char</c>.  The result is a string of length
            1 consisting solely of the specified <c>char</c>.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toString(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.toString(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToTitleCase (ch As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToTitleCase(char ch);" />
      <MemberSignature Language="C#" Value="public static char ToTitleCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToTitleCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToTitleCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : char -&gt; char" Usage="Java.Lang.Character.ToTitleCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toTitleCase", "(C)C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toTitleCase", "(C)C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <summary>Converts the character argument to titlecase using case mapping
            information from the UnicodeData file.</summary>
        <returns>the titlecase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Converts the character argument to titlecase using case mapping
            information from the UnicodeData file. If a character has no
            explicit titlecase mapping and is not itself a titlecase char
            according to UnicodeData, then the uppercase mapping is
            returned as an equivalent titlecase mapping. If the
            <c>char</c> argument is already a titlecase
            <c>char</c>, the same <c>char</c> value will be
            returned.</para>
          <para>Note that
            <c>Character.isTitleCase(Character.toTitleCase(ch))</c>
            does not always return <c>true</c> for some ranges of
            characters.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#toTitleCase(int)</c> method.</para>
          <para>Added in 1.0.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toTitleCase(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.toTitleCase(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToTitleCase (codePoint As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToTitleCase(int codePoint);" />
      <MemberSignature Language="C#" Value="public static int ToTitleCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToTitleCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToTitleCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : int -&gt; int" Usage="Java.Lang.Character.ToTitleCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toTitleCase", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toTitleCase", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be converted.</param>
        <summary>Converts the character (Unicode code point) argument to titlecase using case mapping
            information from the UnicodeData file.</summary>
        <returns>the titlecase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Converts the character (Unicode code point) argument to titlecase using case mapping
            information from the UnicodeData file. If a character has no
            explicit titlecase mapping and is not itself a titlecase char
            according to UnicodeData, then the uppercase mapping is
            returned as an equivalent titlecase mapping. If the
            character argument is already a titlecase
            character, the same character value will be
            returned.</para>
          <para>Note that
            <c>Character.isTitleCase(Character.toTitleCase(codePoint))</c>
            does not always return <c>true</c> for some ranges of
            characters.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toTitleCase(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.toTitleCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperCase (ch As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperCase(char ch);" />
      <MemberSignature Language="C#" Value="public static char ToUpperCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToUpperCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member ToUpperCase : char -&gt; char" Usage="Java.Lang.Character.ToUpperCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toUpperCase", "(C)C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toUpperCase", "(C)C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <summary>Converts the character argument to uppercase using case mapping
            information from the UnicodeData file.</summary>
        <returns>the uppercase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Converts the character argument to uppercase using case mapping
            information from the UnicodeData file.</para>
          <para>Note that
            <c>Character.isUpperCase(Character.toUpperCase(ch))</c>
            does not always return <c>true</c> for some ranges of
            characters, particularly those that are symbols or ideographs.</para>
          <para>In general, <c>String#toUpperCase()</c> should be used to map
            characters to uppercase. <c>String</c> case mapping methods
            have several benefits over <c>Character</c> case mapping methods.
            <c>String</c> case mapping methods can perform locale-sensitive
            mappings, context-sensitive mappings, and 1:M character mappings, whereas
            the <c>Character</c> case mapping methods cannot.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; This method cannot handle  supplementary characters. To support
            all Unicode characters, including supplementary characters, use
            the <c>#toUpperCase(int)</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toUpperCase(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.toUpperCase(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperCase">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperCase (codePoint As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToUpperCase(int codePoint);" />
      <MemberSignature Language="C#" Value="public static int ToUpperCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToUpperCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToUpperCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToUpperCase : int -&gt; int" Usage="Java.Lang.Character.ToUpperCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toUpperCase", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toUpperCase", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be converted.</param>
        <summary>Converts the character (Unicode code point) argument to
            uppercase using case mapping information from the UnicodeData
            file.</summary>
        <returns>the uppercase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Converts the character (Unicode code point) argument to
            uppercase using case mapping information from the UnicodeData
            file.</para>
          <para>Note that
            <c>Character.isUpperCase(Character.toUpperCase(codePoint))</c>
            does not always return <c>true</c> for some ranges of
            characters, particularly those that are symbols or ideographs.</para>
          <para>In general, <c>String#toUpperCase()</c> should be used to map
            characters to uppercase. <c>String</c> case mapping methods
            have several benefits over <c>Character</c> case mapping methods.
            <c>String</c> case mapping methods can perform locale-sensitive
            mappings, context-sensitive mappings, and 1:M character mappings, whereas
            the <c>Character</c> case mapping methods cannot.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#toUpperCase(int)" title="Reference documentation">Java documentation for <code>java.lang.Character.toUpperCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Type As Class" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Lang::Class ^ Type { Java::Lang::Class ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Class? Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Lang.Class Type" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Character.Type" />
      <MemberSignature Language="F#" Value="member this.Type : Java.Lang.Class" Usage="Java.Lang.Character.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TYPE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TYPE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Class</c> instance representing the primitive type
            <c>char</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <c>Class</c> instance representing the primitive type
            <c>char</c>.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#TYPE" title="Reference documentation">Java documentation for <code>java.lang.Character.TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Unassigned">
      <MemberSignature Language="VB.NET" Value="Public Const Unassigned As SByte  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte Unassigned = 0;" />
      <MemberSignature Language="C#" Value="public const sbyte Unassigned = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 Unassigned = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Unassigned" />
      <MemberSignature Language="F#" Value="val mutable Unassigned : sbyte" Usage="Java.Lang.Character.Unassigned" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("UNASSIGNED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("UNASSIGNED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>General category "Cn" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Cn" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#UNASSIGNED" title="Reference documentation">Java documentation for <code>java.lang.Character.UNASSIGNED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UppercaseLetter">
      <MemberSignature Language="VB.NET" Value="Public Const UppercaseLetter As SByte  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: System::SByte UppercaseLetter = 1;" />
      <MemberSignature Language="C#" Value="public const sbyte UppercaseLetter = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 UppercaseLetter = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.UppercaseLetter" />
      <MemberSignature Language="F#" Value="val mutable UppercaseLetter : sbyte" Usage="Java.Lang.Character.UppercaseLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("UPPERCASE_LETTER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("UPPERCASE_LETTER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>General category "Lu" in the Unicode specification.</summary>
        <remarks>
          <para>General category "Lu" in the Unicode specification.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#UPPERCASE_LETTER" title="Reference documentation">Java documentation for <code>java.lang.Character.UPPERCASE_LETTER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueOf (c As Char) As Character" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Lang::Character ^ ValueOf(char c);" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Character ValueOf (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Character ValueOf(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ValueOf(System.Char)" />
      <MemberSignature Language="F#" Value="static member ValueOf : char -&gt; Java.Lang.Character" Usage="Java.Lang.Character.ValueOf c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(C)Ljava/lang/Character;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(C)Ljava/lang/Character;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Character</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">a char value.</param>
        <summary>Returns a <c>Character</c> instance representing the specified
            <c>char</c> value.</summary>
        <returns>a <c>Character</c> instance representing <c>c</c>.</returns>
        <remarks>
          <para>Returns a <c>Character</c> instance representing the specified
            <c>char</c> value.
            If a new <c>Character</c> instance is not required, this method
            should generally be used in preference to the constructor
            <c>#Character(char)</c>, as this method is likely to yield
            significantly better space and time performance by caching
            frequently requested values.
            
            This method will always cache values in the range <c>'\u005Cu0000'</c> to <c>'\u005Cu007F'</c>, inclusive, and may
            cache other values outside of this range.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Character#valueOf(char)" title="Reference documentation">Java documentation for <code>java.lang.Character.valueOf(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
