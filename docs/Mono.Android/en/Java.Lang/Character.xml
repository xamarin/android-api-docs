<Type Name="Character" FullName="Java.Lang.Character">
  <TypeSignature Language="C#" Value="public sealed class Character : Java.Lang.Object, IConvertible, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Character extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Lang.IComparable, class System.IConvertible, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Character" />
  <TypeSignature Language="F#" Value="type Character = class&#xA;    inherit Object&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IComparable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/lang/Character", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>Character</c> class wraps a value of the primitive
            type <c>char</c> in an object.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/Character" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Character (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.#ctor(System.Char)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Character : char -&gt; Java.Lang.Character" Usage="new Java.Lang.Character value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(C)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">the value to be represented by the
                             <c>Character</c> object.</param>
        <summary>Constructs a newly allocated <c>Character</c> object that
            represents the specified <c>char</c> value.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Bytes">
      <MemberSignature Language="C#" Value="public const int Bytes = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Bytes = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Bytes" />
      <MemberSignature Language="F#" Value="val mutable Bytes : int" Usage="Java.Lang.Character.Bytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BYTES", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The number of bytes used to represent a <c>char</c> value in unsigned
            binary form.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharCount">
      <MemberSignature Language="C#" Value="public static int CharCount (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CharCount(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CharCount(System.Int32)" />
      <MemberSignature Language="F#" Value="static member CharCount : int -&gt; int" Usage="Java.Lang.Character.CharCount codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("charCount", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines the number of <c>char</c> values needed to
            represent the specified character (Unicode code point).</summary>
        <returns>2 if the character is a valid supplementary character; 1 otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsValidCodePoint(System.Int32)" />
        <altmember cref="M:Java.Lang.Character.IsSupplementaryCodePoint(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CharValue">
      <MemberSignature Language="C#" Value="public char CharValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char CharValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CharValue" />
      <MemberSignature Language="F#" Value="member this.CharValue : unit -&gt; char" Usage="character.CharValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("charValue", "()C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>Character</c> object.</summary>
        <returns>the primitive <c>char</c> value represented by
                     this object.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="C#" Value="public static int CodePointAt (Java.Lang.ICharSequence seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(class Java.Lang.ICharSequence seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointAt(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : Java.Lang.ICharSequence * int -&gt; int" Usage="Java.Lang.Character.CodePointAt (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("codePointAt", "(Ljava/lang/CharSequence;I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">a sequence of <c>char</c> values (Unicode code
            units)</param>
        <param name="index">the index to the <c>char</c> values (Unicode
            code units) in <c>seq</c> to be converted</param>
        <summary>Returns the code point at the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point at the given index</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index</c> is negative or greater than or equal to
             the length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="C#" Value="public static int CodePointAt (char[] a, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(char[] a, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointAt(System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : char[] * int -&gt; int" Usage="Java.Lang.Character.CodePointAt (a, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("codePointAt", "([CI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="index">the index to the <c>char</c> values (Unicode
            code units) in <c>seq</c> to be converted</param>
        <summary>Returns the code point at the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point at the given index</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index</c> is negative or greater than or equal to
             the length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="C#" Value="public static int CodePointAt (string seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(string seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointAt(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : string * int -&gt; int" Usage="Java.Lang.Character.CodePointAt (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">a sequence of <c>char</c> values (Unicode code
            units)</param>
        <param name="index">the index to the <c>char</c> values (Unicode
            code units) in <c>seq</c> to be converted</param>
        <summary>Returns the code point at the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point at the given index</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="C#" Value="public static int CodePointAt (char[] a, int index, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(char[] a, int32 index, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointAt(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : char[] * int * int -&gt; int" Usage="Java.Lang.Character.CodePointAt (a, index, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("codePointAt", "([CII)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="index">the index to the <c>char</c> values (Unicode
            code units) in <c>seq</c> to be converted</param>
        <param name="limit">the index after the last unit in <c>seq</c> that can be used.</param>
        <summary>Returns the code point at the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point at the given index</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>, <c>index &gt;= limit</c>,
             <c>limit </c> or if <c>limit</c> is greater than the
             length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="C#" Value="public static int CodePointBefore (Java.Lang.ICharSequence seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(class Java.Lang.ICharSequence seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointBefore(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : Java.Lang.ICharSequence * int -&gt; int" Usage="Java.Lang.Character.CodePointBefore (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("codePointBefore", "(Ljava/lang/CharSequence;I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the <c>CharSequence</c> instance</param>
        <param name="index">the index following the code point that should be returned</param>
        <summary>Returns the code point preceding the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point value before the given index.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index</c> is less than 1 or greater than the
             length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="C#" Value="public static int CodePointBefore (char[] a, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(char[] a, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointBefore(System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : char[] * int -&gt; int" Usage="Java.Lang.Character.CodePointBefore (a, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("codePointBefore", "([CI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="index">the index following the code point that should be returned</param>
        <summary>Returns the code point preceding the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point value before the given index.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index</c> is less than 1 or greater than the
             length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="C#" Value="public static int CodePointBefore (string seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(string seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointBefore(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : string * int -&gt; int" Usage="Java.Lang.Character.CodePointBefore (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the <c>CharSequence</c> instance</param>
        <param name="index">the index following the code point that should be returned</param>
        <summary>Returns the code point preceding the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point value before the given index.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="C#" Value="public static int CodePointBefore (char[] a, int index, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(char[] a, int32 index, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointBefore(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : char[] * int * int -&gt; int" Usage="Java.Lang.Character.CodePointBefore (a, index, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("codePointBefore", "([CII)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="index">the index following the code point that should be returned</param>
        <param name="start">the index of the first element in <c>seq</c>.</param>
        <summary>Returns the code point preceding the given index of the
            <c>CharSequence</c>.</summary>
        <returns>the Unicode code point value before the given index.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if the <c>index &lt;= start</c>, <c>start </c>,
             <c>index</c> is greater than the length of <c>seq</c>, or
             if <c>start</c> is equal or greater than the length of
             <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="C#" Value="public static int CodePointCount (Java.Lang.ICharSequence seq, int beginIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(class Java.Lang.ICharSequence seq, int32 beginIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointCount(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : Java.Lang.ICharSequence * int * int -&gt; int" Usage="Java.Lang.Character.CodePointCount (seq, beginIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("codePointCount", "(Ljava/lang/CharSequence;II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="beginIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the char sequence</param>
        <param name="beginIndex">the index to the first <c>char</c> of
            the text range.</param>
        <param name="endIndex">the index after the last <c>char</c> of
            the text range.</param>
        <summary>Returns the number of Unicode code points in the text range of
            the specified char sequence.</summary>
        <returns>the number of Unicode code points in the specified text
            range</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>beginIndex </c>, <c>beginIndex &gt; endIndex</c> or
             if <c>endIndex</c> is greater than the length of <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="C#" Value="public static int CodePointCount (char[] a, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(char[] a, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : char[] * int * int -&gt; int" Usage="Java.Lang.Character.CodePointCount (a, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("codePointCount", "([CII)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="offset">the inclusive index to begin counting at.</param>
        <param name="count">the number of <c>char</c> values to look through in
            <c>seq</c>.</param>
        <summary>Returns the number of Unicode code points in the text range of
            the specified char sequence.</summary>
        <returns>the number of Unicode code points in the specified text
            range</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c>, <c>count </c> or if
             <c>offset + count</c> is greater than the length of
             <c>seq</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="C#" Value="public static int CodePointCount (string seq, int beginIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(string seq, int32 beginIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CodePointCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : string * int * int -&gt; int" Usage="Java.Lang.Character.CodePointCount (seq, beginIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="beginIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the char sequence</param>
        <param name="beginIndex">the index to the first <c>char</c> of
            the text range.</param>
        <param name="endIndex">the index after the last <c>char</c> of
            the text range.</param>
        <summary>Returns the number of Unicode code points in the text range of
            the specified char sequence.</summary>
        <returns>the number of Unicode code points in the specified text
            range</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombiningSpacingMark">
      <MemberSignature Language="C#" Value="public const sbyte CombiningSpacingMark = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 CombiningSpacingMark = (8)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.CombiningSpacingMark" />
      <MemberSignature Language="F#" Value="val mutable CombiningSpacingMark : sbyte" Usage="Java.Lang.Character.CombiningSpacingMark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMBINING_SPACING_MARK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>General category "Mc" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (char x, char y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(char x, char y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.Compare(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member Compare : char * char -&gt; int" Usage="Java.Lang.Character.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compare", "(CC)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Char" />
        <Parameter Name="y" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="x">the first <c>char</c> to compare</param>
        <param name="y">the second <c>char</c> to compare</param>
        <summary>Compares two <c>char</c> values numerically.</summary>
        <returns>the value <c>0</c> if <c>x == y</c>;
                    a value less than <c>0</c> if <c>x &lt; y</c>; and
                    a value greater than <c>0</c> if <c>x &gt; y</c></returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Java.Lang.Character anotherCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class Java.Lang.Character anotherCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.CompareTo(Java.Lang.Character)" />
      <MemberSignature Language="F#" Value="member this.CompareTo : Java.Lang.Character -&gt; int" Usage="character.CompareTo anotherCharacter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compareTo", "(Ljava/lang/Character;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anotherCharacter" Type="Java.Lang.Character" />
      </Parameters>
      <Docs>
        <param name="anotherCharacter">the <c>Character</c> to be compared.</param>
        <summary>Compares two <c>Character</c> objects numerically.</summary>
        <returns>the value <c>0</c> if the argument <c>Character</c>
                     is equal to this <c>Character</c>; a value less than
                     <c>0</c> if this <c>Character</c> is numerically less
                     than the <c>Character</c> argument; and a value greater than
                     <c>0</c> if this <c>Character</c> is numerically greater
                     than the <c>Character</c> argument (unsigned comparison).
                     Note that this is strictly a numerical comparison; it is not
                     locale-dependent.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="ConnectorPunctuation">
      <MemberSignature Language="C#" Value="public const sbyte ConnectorPunctuation = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 ConnectorPunctuation = (23)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.ConnectorPunctuation" />
      <MemberSignature Language="F#" Value="val mutable ConnectorPunctuation : sbyte" Usage="Java.Lang.Character.ConnectorPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONNECTOR_PUNCTUATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>General category "Pc" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public const sbyte Control = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 Control = (15)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Control" />
      <MemberSignature Language="F#" Value="val mutable Control : sbyte" Usage="Java.Lang.Character.Control" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>General category "Cc" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public const sbyte CurrencySymbol = 26;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 CurrencySymbol = (26)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.CurrencySymbol" />
      <MemberSignature Language="F#" Value="val mutable CurrencySymbol : sbyte" Usage="Java.Lang.Character.CurrencySymbol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CURRENCY_SYMBOL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>General category "Sc" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DashPunctuation">
      <MemberSignature Language="C#" Value="public const sbyte DashPunctuation = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DashPunctuation = (20)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DashPunctuation" />
      <MemberSignature Language="F#" Value="val mutable DashPunctuation : sbyte" Usage="Java.Lang.Character.DashPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DASH_PUNCTUATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>General category "Pd" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecimalDigitNumber">
      <MemberSignature Language="C#" Value="public const sbyte DecimalDigitNumber = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DecimalDigitNumber = (9)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DecimalDigitNumber" />
      <MemberSignature Language="F#" Value="val mutable DecimalDigitNumber : sbyte" Usage="Java.Lang.Character.DecimalDigitNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DECIMAL_DIGIT_NUMBER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>General category "Nd" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Digit">
      <MemberSignature Language="C#" Value="public static int Digit (char ch, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Digit(char ch, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.Digit(System.Char,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Digit : char * int -&gt; int" Usage="Java.Lang.Character.Digit (ch, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("digit", "(CI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <param name="radix">the radix.</param>
        <summary>Returns the numeric value of the character <c>ch</c> in the
            specified radix.</summary>
        <returns>the numeric value represented by the character in the
                     specified radix.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Digit">
      <MemberSignature Language="C#" Value="public static int Digit (int codePoint, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Digit(int32 codePoint, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.Digit(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Digit : int * int -&gt; int" Usage="Java.Lang.Character.Digit (codePoint, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("digit", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character, including supplementary characters.</param>
        <param name="radix">the radix.</param>
        <summary>Returns the numeric value of the character <c>ch</c> in the
            specified radix.</summary>
        <returns>the numeric value represented by the character in the
                     specified radix.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityArabicNumber">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityArabicNumber = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityArabicNumber = (6)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityArabicNumber" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityArabicNumber : sbyte" Usage="Java.Lang.Character.DirectionalityArabicNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_ARABIC_NUMBER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "AN" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityBoundaryNeutral">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityBoundaryNeutral = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityBoundaryNeutral = (9)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityBoundaryNeutral" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityBoundaryNeutral : sbyte" Usage="Java.Lang.Character.DirectionalityBoundaryNeutral" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_BOUNDARY_NEUTRAL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "BN" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityCommonNumberSeparator">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityCommonNumberSeparator = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityCommonNumberSeparator = (7)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityCommonNumberSeparator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityCommonNumberSeparator : sbyte" Usage="Java.Lang.Character.DirectionalityCommonNumberSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_COMMON_NUMBER_SEPARATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "CS" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityEuropeanNumber">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityEuropeanNumber = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityEuropeanNumber = (3)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityEuropeanNumber" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityEuropeanNumber : sbyte" Usage="Java.Lang.Character.DirectionalityEuropeanNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "EN" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityEuropeanNumberSeparator">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityEuropeanNumberSeparator = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityEuropeanNumberSeparator = (4)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityEuropeanNumberSeparator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityEuropeanNumberSeparator : sbyte" Usage="Java.Lang.Character.DirectionalityEuropeanNumberSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "ES" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityEuropeanNumberTerminator">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityEuropeanNumberTerminator = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityEuropeanNumberTerminator = (5)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityEuropeanNumberTerminator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityEuropeanNumberTerminator : sbyte" Usage="Java.Lang.Character.DirectionalityEuropeanNumberTerminator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "ET" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityLeftToRight">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityLeftToRight = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityLeftToRight = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityLeftToRight" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityLeftToRight : sbyte" Usage="Java.Lang.Character.DirectionalityLeftToRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "L" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityLeftToRightEmbedding">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityLeftToRightEmbedding = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityLeftToRightEmbedding = (14)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityLeftToRightEmbedding" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityLeftToRightEmbedding : sbyte" Usage="Java.Lang.Character.DirectionalityLeftToRightEmbedding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "LRE" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityLeftToRightOverride">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityLeftToRightOverride = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityLeftToRightOverride = (15)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityLeftToRightOverride" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityLeftToRightOverride : sbyte" Usage="Java.Lang.Character.DirectionalityLeftToRightOverride" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "LRO" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityNonspacingMark">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityNonspacingMark = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityNonspacingMark = (8)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityNonspacingMark" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityNonspacingMark : sbyte" Usage="Java.Lang.Character.DirectionalityNonspacingMark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_NONSPACING_MARK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "NSM" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityOtherNeutrals">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityOtherNeutrals = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityOtherNeutrals = (13)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityOtherNeutrals" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityOtherNeutrals : sbyte" Usage="Java.Lang.Character.DirectionalityOtherNeutrals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_OTHER_NEUTRALS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>Neutral bidirectional character type "ON" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityParagraphSeparator">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityParagraphSeparator = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityParagraphSeparator = (10)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityParagraphSeparator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityParagraphSeparator : sbyte" Usage="Java.Lang.Character.DirectionalityParagraphSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_PARAGRAPH_SEPARATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Neutral bidirectional character type "B" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityPopDirectionalFormat">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityPopDirectionalFormat = 18;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityPopDirectionalFormat = (18)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityPopDirectionalFormat" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityPopDirectionalFormat : sbyte" Usage="Java.Lang.Character.DirectionalityPopDirectionalFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_POP_DIRECTIONAL_FORMAT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>Weak bidirectional character type "PDF" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeft">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeft = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeft = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeft" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeft : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "R" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeftArabic">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeftArabic = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeftArabic = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeftArabic" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeftArabic : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeftArabic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "AL" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeftEmbedding">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeftEmbedding = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeftEmbedding = (16)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeftEmbedding" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeftEmbedding : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeftEmbedding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "RLE" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityRightToLeftOverride">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityRightToLeftOverride = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityRightToLeftOverride = (17)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityRightToLeftOverride" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityRightToLeftOverride : sbyte" Usage="Java.Lang.Character.DirectionalityRightToLeftOverride" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>Strong bidirectional character type "RLO" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalitySegmentSeparator">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalitySegmentSeparator = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalitySegmentSeparator = (11)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalitySegmentSeparator" />
      <MemberSignature Language="F#" Value="val mutable DirectionalitySegmentSeparator : sbyte" Usage="Java.Lang.Character.DirectionalitySegmentSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_SEGMENT_SEPARATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>Neutral bidirectional character type "S" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityUndefined">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityUndefined = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityUndefined = (-1)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityUndefined" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityUndefined : sbyte" Usage="Java.Lang.Character.DirectionalityUndefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_UNDEFINED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Undefined bidirectional character type.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionalityWhitespace">
      <MemberSignature Language="C#" Value="public const sbyte DirectionalityWhitespace = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 DirectionalityWhitespace = (12)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.DirectionalityWhitespace" />
      <MemberSignature Language="F#" Value="val mutable DirectionalityWhitespace : sbyte" Usage="Java.Lang.Character.DirectionalityWhitespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTIONALITY_WHITESPACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>Neutral bidirectional character type "WS" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnclosingMark">
      <MemberSignature Language="C#" Value="public const sbyte EnclosingMark = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 EnclosingMark = (7)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.EnclosingMark" />
      <MemberSignature Language="F#" Value="val mutable EnclosingMark : sbyte" Usage="Java.Lang.Character.EnclosingMark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENCLOSING_MARK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>General category "Me" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EndPunctuation">
      <MemberSignature Language="C#" Value="public const sbyte EndPunctuation = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 EndPunctuation = (22)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.EndPunctuation" />
      <MemberSignature Language="F#" Value="val mutable EndPunctuation : sbyte" Usage="Java.Lang.Character.EndPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("END_PUNCTUATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>General category "Pe" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FinalQuotePunctuation">
      <MemberSignature Language="C#" Value="public const sbyte FinalQuotePunctuation = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 FinalQuotePunctuation = (30)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.FinalQuotePunctuation" />
      <MemberSignature Language="F#" Value="val mutable FinalQuotePunctuation : sbyte" Usage="Java.Lang.Character.FinalQuotePunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FINAL_QUOTE_PUNCTUATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>General category "Pf" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ForDigit">
      <MemberSignature Language="C#" Value="public static char ForDigit (int digit, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ForDigit(int32 digit, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ForDigit(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ForDigit : int * int -&gt; char" Usage="Java.Lang.Character.ForDigit (digit, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forDigit", "(II)C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digit" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="digit">the number to convert to a character.</param>
        <param name="radix">the radix.</param>
        <summary>Determines the character representation for a specific digit in
            the specified radix.</summary>
        <returns>the <c>char</c> representation of the specified digit
                     in the specified radix.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public const sbyte Format = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 Format = (16)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Format" />
      <MemberSignature Language="F#" Value="val mutable Format : sbyte" Usage="Java.Lang.Character.Format" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FORMAT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>General category "Cf" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectionality">
      <MemberSignature Language="C#" Value="public static sbyte GetDirectionality (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 GetDirectionality(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetDirectionality(System.Char)" />
      <MemberSignature Language="F#" Value="static member GetDirectionality : char -&gt; sbyte" Usage="Java.Lang.Character.GetDirectionality ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDirectionality", "(C)B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <c>char</c> for which the directionality property
                       is requested.</param>
        <summary>Returns the Unicode directionality property for the given
            character.</summary>
        <returns>the directionality property of the <c>char</c> value.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectionality">
      <MemberSignature Language="C#" Value="public static sbyte GetDirectionality (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 GetDirectionality(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetDirectionality(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetDirectionality : int -&gt; sbyte" Usage="Java.Lang.Character.GetDirectionality codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDirectionality", "(I)B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the Unicode code point to get the directionality of.</param>
        <summary>Returns the Unicode directionality property for the given
            character.</summary>
        <returns>the directionality property of the <c>char</c> value.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetName(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetName : int -&gt; string" Usage="Java.Lang.Character.GetName codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getName", "(I)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point)</param>
        <summary>Returns the Unicode name of the specified character
            <c>codePoint</c>, or null if the code point is
            <c>#UNASSIGNED unassigned</c>.</summary>
        <returns>the Unicode name of the specified character, or null if
                    the code point is unassigned.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>codePoint</c> is not a valid code point.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static int GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetNumericValue(System.Char)" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; int" Usage="Java.Lang.Character.GetNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNumericValue", "(C)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <summary>Returns the <c>int</c> value that the specified Unicode
            character represents.</summary>
        <returns>the numeric value of the character, as a nonnegative <c>int</c>
                      value; -2 if the character has a numeric value that is not a
                     nonnegative integer; -1 if the character has no numeric value.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static int GetNumericValue (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumericValue(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetNumericValue(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : int -&gt; int" Usage="Java.Lang.Character.GetNumericValue codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNumericValue", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point</param>
        <summary>Returns the <c>int</c> value that the specified Unicode
            character represents.</summary>
        <returns>the numeric value of the character, as a nonnegative <c>int</c>
                      value; -2 if the character has a numeric value that is not a
                     nonnegative integer; -1 if the character has no numeric value.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public static int GetType (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetType(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetType(System.Char)" />
      <MemberSignature Language="F#" Value="static member GetType : char -&gt; int" Usage="Java.Lang.Character.GetType ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getType", "(C)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Returns a value indicating a character's general category.</summary>
        <returns>a value of type <c>int</c> representing the
                     character's general category.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public static int GetType (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetType(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.GetType(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetType : int -&gt; int" Usage="Java.Lang.Character.GetType codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getType", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the Unicode code point to get the category of.</param>
        <summary>Returns a value indicating a character's general category.</summary>
        <returns>a value of type <c>int</c> representing the
                     character's general category.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="C#" Value="public static int HashCode (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.HashCode(System.Char)" />
      <MemberSignature Language="F#" Value="static member HashCode : char -&gt; int" Usage="Java.Lang.Character.HashCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hashCode", "(C)I", "", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Returns a hash code for this <c>Character</c>; equal to the result
            of invoking <c>charValue()</c>.</summary>
        <returns>a hash code value for this <c>Character</c></returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighSurrogate">
      <MemberSignature Language="C#" Value="public static char HighSurrogate (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char HighSurrogate(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.HighSurrogate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member HighSurrogate : int -&gt; char" Usage="Java.Lang.Character.HighSurrogate codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("highSurrogate", "(I)C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">a supplementary character (Unicode code point)</param>
        <summary>Returns the leading surrogate (a
            &lt;a href="http://www.</summary>
        <returns>the leading surrogate code unit used to represent the
                     character in the UTF-16 encoding</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialQuotePunctuation">
      <MemberSignature Language="C#" Value="public const sbyte InitialQuotePunctuation = 29;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 InitialQuotePunctuation = (29)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.InitialQuotePunctuation" />
      <MemberSignature Language="F#" Value="val mutable InitialQuotePunctuation : sbyte" Usage="Java.Lang.Character.InitialQuotePunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INITIAL_QUOTE_PUNCTUATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>General category "Pi" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAlphabetic">
      <MemberSignature Language="C#" Value="public static bool IsAlphabetic (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAlphabetic(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsAlphabetic(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsAlphabetic : int -&gt; bool" Usage="Java.Lang.Character.IsAlphabetic codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isAlphabetic", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is an alphabet.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the character is a Unicode alphabet
                     character, &lt;code&gt;false&lt;/code&gt; otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBmpCodePoint">
      <MemberSignature Language="C#" Value="public static bool IsBmpCodePoint (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBmpCodePoint(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsBmpCodePoint(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsBmpCodePoint : int -&gt; bool" Usage="Java.Lang.Character.IsBmpCodePoint codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isBmpCodePoint", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested</param>
        <summary>Determines whether the specified character (Unicode code point)
            is in the &lt;a href="#BMP"&gt;Basic Multilingual Plane (BMP)&lt;/a&gt;.</summary>
        <returns>
          <c>true</c> if the specified code point is between
                    <c>#MIN_VALUE</c> and <c>#MAX_VALUE</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsDefined(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsDefined : char -&gt; bool" Usage="Java.Lang.Character.IsDefined ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDefined", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested</param>
        <summary>Determines if a character is defined in Unicode.</summary>
        <returns>
          <c>true</c> if the character has a defined meaning
                     in Unicode; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsDefined(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsDefined : int -&gt; bool" Usage="Java.Lang.Character.IsDefined codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDefined", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if a character is defined in Unicode.</summary>
        <returns>
          <c>true</c> if the character has a defined meaning
                     in Unicode; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsDigit(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="Java.Lang.Character.IsDigit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDigit", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a digit.</summary>
        <returns>
          <c>true</c> if the character is a digit;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsDigit(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsDigit : int -&gt; bool" Usage="Java.Lang.Character.IsDigit codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDigit", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is a digit.</summary>
        <returns>
          <c>true</c> if the character is a digit;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="Java.Lang.Character.IsHighSurrogate ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isHighSurrogate", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the <c>char</c> value to be tested.</param>
        <summary>Determines if the given <c>char</c> value is a
            &lt;a href="http://www.</summary>
        <returns>
          <c>true</c> if the <c>char</c> value is between
                    <c>#MIN_HIGH_SURROGATE</c> and
                    <c>#MAX_HIGH_SURROGATE</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsIdentifierIgnorable">
      <MemberSignature Language="C#" Value="public static bool IsIdentifierIgnorable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIdentifierIgnorable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsIdentifierIgnorable(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsIdentifierIgnorable : char -&gt; bool" Usage="Java.Lang.Character.IsIdentifierIgnorable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isIdentifierIgnorable", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character should be regarded as
            an ignorable character in a Java identifier or a Unicode identifier.</summary>
        <returns>
          <c>true</c> if the character is an ignorable control
                     character that may be part of a Java or Unicode identifier;
                      <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsIdentifierIgnorable">
      <MemberSignature Language="C#" Value="public static bool IsIdentifierIgnorable (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIdentifierIgnorable(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsIdentifierIgnorable(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsIdentifierIgnorable : int -&gt; bool" Usage="Java.Lang.Character.IsIdentifierIgnorable codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isIdentifierIgnorable", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character should be regarded as
            an ignorable character in a Java identifier or a Unicode identifier.</summary>
        <returns>
          <c>true</c> if the character is an ignorable control
                     character that may be part of a Java or Unicode identifier;
                      <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsIdeographic">
      <MemberSignature Language="C#" Value="public static bool IsIdeographic (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIdeographic(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsIdeographic(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsIdeographic : int -&gt; bool" Usage="Java.Lang.Character.IsIdeographic codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isIdeographic", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested.</param>
        <summary>Determines if the specified character (Unicode code point) is a CJKV
            (Chinese, Japanese, Korean and Vietnamese) ideograph, as defined by
            the Unicode Standard.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the character is a Unicode ideograph
                     character, &lt;code&gt;false&lt;/code&gt; otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsISOControl">
      <MemberSignature Language="C#" Value="public static bool IsISOControl (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsISOControl(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsISOControl(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsISOControl : char -&gt; bool" Usage="Java.Lang.Character.IsISOControl ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isISOControl", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is an ISO control
            character.</summary>
        <returns>
          <c>true</c> if the character is an ISO control character;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsISOControl">
      <MemberSignature Language="C#" Value="public static bool IsISOControl (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsISOControl(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsISOControl(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsISOControl : int -&gt; bool" Usage="Java.Lang.Character.IsISOControl codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isISOControl", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">To be added.</param>
        <summary>Determines if the specified character is an ISO control
            character.</summary>
        <returns>
          <c>true</c> if the character is an ISO control character;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierPart">
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierPart (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierPart(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaIdentifierPart(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierPart : char -&gt; bool" Usage="Java.Lang.Character.IsJavaIdentifierPart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isJavaIdentifierPart", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character may be part of a Java
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Java identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierPart">
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierPart (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierPart(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaIdentifierPart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierPart : int -&gt; bool" Usage="Java.Lang.Character.IsJavaIdentifierPart codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isJavaIdentifierPart", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character may be part of a Java
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Java identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierStart">
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierStart (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierStart(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaIdentifierStart(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierStart : char -&gt; bool" Usage="Java.Lang.Character.IsJavaIdentifierStart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isJavaIdentifierStart", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is
            permissible as the first character in a Java identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Java identifier;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierStart">
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierStart (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierStart(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaIdentifierStart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierStart : int -&gt; bool" Usage="Java.Lang.Character.IsJavaIdentifierStart codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isJavaIdentifierStart", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is
            permissible as the first character in a Java identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Java identifier;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaLetter">
      <MemberSignature Language="C#" Value="public static bool IsJavaLetter (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaLetter(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaLetter(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsJavaLetter : char -&gt; bool" Usage="Java.Lang.Character.IsJavaLetter ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isJavaLetter", "(C)Z", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is permissible as the first
            character in a Java identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Java
                     identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsJavaLetterOrDigit (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaLetterOrDigit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsJavaLetterOrDigit(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsJavaLetterOrDigit : char -&gt; bool" Usage="Java.Lang.Character.IsJavaLetterOrDigit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isJavaLetterOrDigit", "(C)Z", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character may be part of a Java
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Java identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLetter(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="Java.Lang.Character.IsLetter ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLetter", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a letter.</summary>
        <returns>
          <c>true</c> if the character is a letter;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLetter(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLetter : int -&gt; bool" Usage="Java.Lang.Character.IsLetter codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLetter", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is a letter.</summary>
        <returns>
          <c>true</c> if the character is a letter;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="Java.Lang.Character.IsLetterOrDigit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLetterOrDigit", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a letter or digit.</summary>
        <returns>
          <c>true</c> if the character is a letter or digit;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLetterOrDigit(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : int -&gt; bool" Usage="Java.Lang.Character.IsLetterOrDigit codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLetterOrDigit", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is a letter or digit.</summary>
        <returns>
          <c>true</c> if the character is a letter or digit;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLowerCase">
      <MemberSignature Language="C#" Value="public static bool IsLowerCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowerCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLowerCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLowerCase : char -&gt; bool" Usage="Java.Lang.Character.IsLowerCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLowerCase", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a lowercase character.</summary>
        <returns>
          <c>true</c> if the character is lowercase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLowerCase">
      <MemberSignature Language="C#" Value="public static bool IsLowerCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowerCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLowerCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLowerCase : int -&gt; bool" Usage="Java.Lang.Character.IsLowerCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLowerCase", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is a lowercase character.</summary>
        <returns>
          <c>true</c> if the character is lowercase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="Java.Lang.Character.IsLowSurrogate ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLowSurrogate", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the <c>char</c> value to be tested.</param>
        <summary>Determines if the given <c>char</c> value is a
            &lt;a href="http://www.</summary>
        <returns>
          <c>true</c> if the <c>char</c> value is between
                    <c>#MIN_LOW_SURROGATE</c> and
                    <c>#MAX_LOW_SURROGATE</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsHighSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="C#" Value="public static bool IsMirrored (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMirrored(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsMirrored(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsMirrored : char -&gt; bool" Usage="Java.Lang.Character.IsMirrored ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isMirrored", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <c>char</c> for which the mirrored property is requested</param>
        <summary>Determines whether the character is mirrored according to the
            Unicode specification.</summary>
        <returns>
          <c>true</c> if the char is mirrored, <c>false</c>
                    if the <c>char</c> is not mirrored or is not defined.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="C#" Value="public static bool IsMirrored (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMirrored(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsMirrored(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsMirrored : int -&gt; bool" Usage="Java.Lang.Character.IsMirrored codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isMirrored", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines whether the character is mirrored according to the
            Unicode specification.</summary>
        <returns>
          <c>true</c> if the char is mirrored, <c>false</c>
                    if the <c>char</c> is not mirrored or is not defined.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSpace">
      <MemberSignature Language="C#" Value="public static bool IsSpace (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSpace(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSpace(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSpace : char -&gt; bool" Usage="Java.Lang.Character.IsSpace ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSpace", "(C)Z", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is ISO-LATIN-1 white space.</summary>
        <returns>
          <c>true</c> if the character is ISO-LATIN-1 white
                        space; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSpaceChar">
      <MemberSignature Language="C#" Value="public static bool IsSpaceChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSpaceChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSpaceChar(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSpaceChar : char -&gt; bool" Usage="Java.Lang.Character.IsSpaceChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSpaceChar", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a Unicode space character.</summary>
        <returns>
          <c>true</c> if the character is a space character;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSpaceChar">
      <MemberSignature Language="C#" Value="public static bool IsSpaceChar (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSpaceChar(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSpaceChar(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsSpaceChar : int -&gt; bool" Usage="Java.Lang.Character.IsSpaceChar codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSpaceChar", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is a Unicode space character.</summary>
        <returns>
          <c>true</c> if the character is a space character;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSupplementaryCodePoint">
      <MemberSignature Language="C#" Value="public static bool IsSupplementaryCodePoint (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupplementaryCodePoint(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSupplementaryCodePoint(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsSupplementaryCodePoint : int -&gt; bool" Usage="Java.Lang.Character.IsSupplementaryCodePoint codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSupplementaryCodePoint", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the character (Unicode code point) to be tested</param>
        <summary>Determines whether the specified character (Unicode code point)
            is in the &lt;a href="#supplementary"&gt;supplementary character&lt;/a&gt; range.</summary>
        <returns>
          <c>true</c> if the specified code point is between
                    <c>#MIN_SUPPLEMENTARY_CODE_POINT</c> and
                    <c>#MAX_CODE_POINT</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSurrogate(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="Java.Lang.Character.IsSurrogate ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSurrogate", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the <c>char</c> value to be tested.</param>
        <summary>Determines if the given <c>char</c> value is a Unicode
            <i>surrogate code unit</i>.</summary>
        <returns>
          <c>true</c> if the <c>char</c> value is between
                    <c>#MIN_SURROGATE</c> and
                    <c>#MAX_SURROGATE</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char high, char low);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char high, char low) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="Java.Lang.Character.IsSurrogatePair (high, low)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSurrogatePair", "(CC)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="high" Type="System.Char" />
        <Parameter Name="low" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="high">the high-surrogate code value to be tested</param>
        <param name="low">the low-surrogate code value to be tested</param>
        <summary>Determines whether the specified pair of <c>char</c>
            values is a valid
            &lt;a href="http://www.</summary>
        <returns>
          <c>true</c> if the specified high and
            low-surrogate code values represent a valid surrogate pair;
            <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsHighSurrogate(System.Char)" />
        <altmember cref="M:Java.Lang.Character.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsTitleCase">
      <MemberSignature Language="C#" Value="public static bool IsTitleCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTitleCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsTitleCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsTitleCase : char -&gt; bool" Usage="Java.Lang.Character.IsTitleCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isTitleCase", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is a titlecase character.</summary>
        <returns>
          <c>true</c> if the character is titlecase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsTitleCase">
      <MemberSignature Language="C#" Value="public static bool IsTitleCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTitleCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsTitleCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsTitleCase : int -&gt; bool" Usage="Java.Lang.Character.IsTitleCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isTitleCase", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is a titlecase character.</summary>
        <returns>
          <c>true</c> if the character is titlecase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierPart">
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierPart (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierPart(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUnicodeIdentifierPart(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierPart : char -&gt; bool" Usage="Java.Lang.Character.IsUnicodeIdentifierPart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isUnicodeIdentifierPart", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character may be part of a Unicode
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Unicode identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierPart">
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierPart (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierPart(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUnicodeIdentifierPart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierPart : int -&gt; bool" Usage="Java.Lang.Character.IsUnicodeIdentifierPart codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isUnicodeIdentifierPart", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character may be part of a Unicode
            identifier as other than the first character.</summary>
        <returns>
          <c>true</c> if the character may be part of a
                     Unicode identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierStart">
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierStart (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierStart(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUnicodeIdentifierStart(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierStart : char -&gt; bool" Usage="Java.Lang.Character.IsUnicodeIdentifierStart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isUnicodeIdentifierStart", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is permissible as the
            first character in a Unicode identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Unicode
                     identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierStart">
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierStart (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierStart(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUnicodeIdentifierStart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierStart : int -&gt; bool" Usage="Java.Lang.Character.IsUnicodeIdentifierStart codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isUnicodeIdentifierStart", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is permissible as the
            first character in a Unicode identifier.</summary>
        <returns>
          <c>true</c> if the character may start a Unicode
                     identifier; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUpperCase">
      <MemberSignature Language="C#" Value="public static bool IsUpperCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpperCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUpperCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsUpperCase : char -&gt; bool" Usage="Java.Lang.Character.IsUpperCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isUpperCase", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is an uppercase character.</summary>
        <returns>
          <c>true</c> if the character is uppercase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUpperCase">
      <MemberSignature Language="C#" Value="public static bool IsUpperCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpperCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsUpperCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUpperCase : int -&gt; bool" Usage="Java.Lang.Character.IsUpperCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isUpperCase", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is an uppercase character.</summary>
        <returns>
          <c>true</c> if the character is uppercase;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsValidCodePoint">
      <MemberSignature Language="C#" Value="public static bool IsValidCodePoint (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidCodePoint(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsValidCodePoint(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsValidCodePoint : int -&gt; bool" Usage="Java.Lang.Character.IsValidCodePoint codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isValidCodePoint", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the Unicode code point to be tested</param>
        <summary>Determines whether the specified code point is a valid
            &lt;a href="http://www.</summary>
        <returns>
          <c>true</c> if the specified code point value is between
                    <c>#MIN_CODE_POINT</c> and
                    <c>#MAX_CODE_POINT</c> inclusive;
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespace">
      <MemberSignature Language="C#" Value="public static bool IsWhitespace (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhitespace(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsWhitespace(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsWhitespace : char -&gt; bool" Usage="Java.Lang.Character.IsWhitespace ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isWhitespace", "(C)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be tested.</param>
        <summary>Determines if the specified character is white space according to Java.</summary>
        <returns>
          <c>true</c> if the character is a Java whitespace
                     character; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespace">
      <MemberSignature Language="C#" Value="public static bool IsWhitespace (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhitespace(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.IsWhitespace(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsWhitespace : int -&gt; bool" Usage="Java.Lang.Character.IsWhitespace codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isWhitespace", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Determines if the specified character is white space according to Java.</summary>
        <returns>
          <c>true</c> if the character is a Java whitespace
                     character; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Character.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Character.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LetterNumber">
      <MemberSignature Language="C#" Value="public const sbyte LetterNumber = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 LetterNumber = (10)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.LetterNumber" />
      <MemberSignature Language="F#" Value="val mutable LetterNumber : sbyte" Usage="Java.Lang.Character.LetterNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LETTER_NUMBER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>General category "Nl" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LineSeparator">
      <MemberSignature Language="C#" Value="public const sbyte LineSeparator = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 LineSeparator = (13)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.LineSeparator" />
      <MemberSignature Language="F#" Value="val mutable LineSeparator : sbyte" Usage="Java.Lang.Character.LineSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LINE_SEPARATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>General category "Zl" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LowercaseLetter">
      <MemberSignature Language="C#" Value="public const sbyte LowercaseLetter = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 LowercaseLetter = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.LowercaseLetter" />
      <MemberSignature Language="F#" Value="val mutable LowercaseLetter : sbyte" Usage="Java.Lang.Character.LowercaseLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LOWERCASE_LETTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>General category "Ll" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LowSurrogate">
      <MemberSignature Language="C#" Value="public static char LowSurrogate (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char LowSurrogate(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.LowSurrogate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member LowSurrogate : int -&gt; char" Usage="Java.Lang.Character.LowSurrogate codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lowSurrogate", "(I)C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">a supplementary character (Unicode code point)</param>
        <summary>Returns the trailing surrogate (a
            &lt;a href="http://www.</summary>
        <returns>the trailing surrogate code unit used to represent the
                     character in the UTF-16 encoding</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MathSymbol">
      <MemberSignature Language="C#" Value="public const sbyte MathSymbol = 25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 MathSymbol = (25)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MathSymbol" />
      <MemberSignature Language="F#" Value="val mutable MathSymbol : sbyte" Usage="Java.Lang.Character.MathSymbol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MATH_SYMBOL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>General category "Sm" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxCodePoint">
      <MemberSignature Language="C#" Value="public const int MaxCodePoint = 1114111;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxCodePoint = (1114111)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MaxCodePoint : int" Usage="Java.Lang.Character.MaxCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_CODE_POINT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1114111</MemberValue>
      <Docs>
        <summary>The maximum value of a
            &lt;a href="http://www.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxHighSurrogate">
      <MemberSignature Language="C#" Value="public const char MaxHighSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxHighSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxHighSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxHighSurrogate : char" Usage="Java.Lang.Character.MaxHighSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_HIGH_SURROGATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum value of a
            &lt;a href="http://www.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxLowSurrogate">
      <MemberSignature Language="C#" Value="public const char MaxLowSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxLowSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxLowSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxLowSurrogate : char" Usage="Java.Lang.Character.MaxLowSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_LOW_SURROGATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum value of a
            &lt;a href="http://www.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxRadix">
      <MemberSignature Language="C#" Value="public const int MaxRadix = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxRadix = (36)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxRadix" />
      <MemberSignature Language="F#" Value="val mutable MaxRadix : int" Usage="Java.Lang.Character.MaxRadix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_RADIX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>The maximum radix available for conversion to and from strings.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxSurrogate">
      <MemberSignature Language="C#" Value="public const char MaxSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxSurrogate : char" Usage="Java.Lang.Character.MaxSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_SURROGATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum value of a Unicode surrogate code unit in the
            UTF-16 encoding, constant <c>'\u005CuDFFF'</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MaxValue" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="Java.Lang.Character.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_VALUE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The constant value of this field is the largest value of type
            <c>char</c>, <c>'\u005CuFFFF'</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinCodePoint">
      <MemberSignature Language="C#" Value="public const int MinCodePoint = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinCodePoint = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MinCodePoint : int" Usage="Java.Lang.Character.MinCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIN_CODE_POINT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The minimum value of a
            &lt;a href="http://www.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinHighSurrogate">
      <MemberSignature Language="C#" Value="public const char MinHighSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinHighSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinHighSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinHighSurrogate : char" Usage="Java.Lang.Character.MinHighSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIN_HIGH_SURROGATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum value of a
            &lt;a href="http://www.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinLowSurrogate">
      <MemberSignature Language="C#" Value="public const char MinLowSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinLowSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinLowSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinLowSurrogate : char" Usage="Java.Lang.Character.MinLowSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIN_LOW_SURROGATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum value of a
            &lt;a href="http://www.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinRadix">
      <MemberSignature Language="C#" Value="public const int MinRadix = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinRadix = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinRadix" />
      <MemberSignature Language="F#" Value="val mutable MinRadix : int" Usage="Java.Lang.Character.MinRadix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIN_RADIX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The minimum radix available for conversion to and from strings.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinSupplementaryCodePoint">
      <MemberSignature Language="C#" Value="public const int MinSupplementaryCodePoint = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinSupplementaryCodePoint = (65536)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinSupplementaryCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MinSupplementaryCodePoint : int" Usage="Java.Lang.Character.MinSupplementaryCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIN_SUPPLEMENTARY_CODE_POINT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>The minimum value of a
            &lt;a href="http://www.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinSurrogate">
      <MemberSignature Language="C#" Value="public const char MinSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinSurrogate" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinSurrogate : char" Usage="Java.Lang.Character.MinSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIN_SURROGATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The minimum value of a Unicode surrogate code unit in the
            UTF-16 encoding, constant <c>'\u005CuD800'</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.MinValue" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="Java.Lang.Character.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIN_VALUE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The constant value of this field is the smallest value of type
            <c>char</c>, <c>'\u005Cu0000'</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ModifierLetter">
      <MemberSignature Language="C#" Value="public const sbyte ModifierLetter = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 ModifierLetter = (4)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.ModifierLetter" />
      <MemberSignature Language="F#" Value="val mutable ModifierLetter : sbyte" Usage="Java.Lang.Character.ModifierLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MODIFIER_LETTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>General category "Lm" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ModifierSymbol">
      <MemberSignature Language="C#" Value="public const sbyte ModifierSymbol = 27;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 ModifierSymbol = (27)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.ModifierSymbol" />
      <MemberSignature Language="F#" Value="val mutable ModifierSymbol : sbyte" Usage="Java.Lang.Character.ModifierSymbol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MODIFIER_SYMBOL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>General category "Sk" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NonSpacingMark">
      <MemberSignature Language="C#" Value="public const sbyte NonSpacingMark = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 NonSpacingMark = (6)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.NonSpacingMark" />
      <MemberSignature Language="F#" Value="val mutable NonSpacingMark : sbyte" Usage="Java.Lang.Character.NonSpacingMark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NON_SPACING_MARK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>General category "Mn" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (Java.Lang.ICharSequence seq, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(class Java.Lang.ICharSequence seq, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.OffsetByCodePoints(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : Java.Lang.ICharSequence * int * int -&gt; int" Usage="Java.Lang.Character.OffsetByCodePoints (seq, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("offsetByCodePoints", "(Ljava/lang/CharSequence;II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the char sequence</param>
        <param name="index">the index to be offset</param>
        <param name="codePointOffset">the offset in code points</param>
        <summary>Returns the index within the given char sequence that is offset
            from the given <c>index</c> by <c>codePointOffset</c>
            code points.</summary>
        <returns>the index within the char sequence</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>, <c>index</c> is greater than the
             length of <c>seq</c>, or if there are not enough values in
             <c>seq</c> to skip <c>codePointOffset</c> code points
             forwards or backwards (if <c>codePointOffset</c> is
             negative) from <c>index</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (string seq, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(string seq, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.OffsetByCodePoints(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : string * int * int -&gt; int" Usage="Java.Lang.Character.OffsetByCodePoints (seq, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the char sequence</param>
        <param name="index">the index to be offset</param>
        <param name="codePointOffset">the offset in code points</param>
        <summary>Returns the index within the given char sequence that is offset
            from the given <c>index</c> by <c>codePointOffset</c>
            code points.</summary>
        <returns>the index within the char sequence</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (char[] a, int start, int count, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(char[] a, int32 start, int32 count, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.OffsetByCodePoints(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : char[] * int * int * int * int -&gt; int" Usage="Java.Lang.Character.OffsetByCodePoints (a, start, count, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("offsetByCodePoints", "([CIIII)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="start">the inclusive index that marks the beginning of the
            subsequence.</param>
        <param name="count">the number of <c>char</c> values to include within the
            subsequence.</param>
        <param name="index">the index to be offset</param>
        <param name="codePointOffset">the offset in code points</param>
        <summary>Returns the index within the given char sequence that is offset
            from the given <c>index</c> by <c>codePointOffset</c>
            code points.</summary>
        <returns>the index within the char sequence</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>seq</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>start </c>, <c>count </c>,
             <c>index </c>, <c>index &gt; start + count</c>,
             <c>start + count</c> is greater than the length of
             <c>seq</c>, or if there are not enough values in
             <c>seq</c> to skip <c>codePointOffset</c> code points
             forward or backward (if <c>codePointOffset</c> is
             negative) from <c>index</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (Java.Lang.Character value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(class Java.Lang.Character value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.op_Explicit(Java.Lang.Character)~System.Char" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Java.Lang.Character -&gt; char" Usage="Java.Lang.Character.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Character" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherLetter">
      <MemberSignature Language="C#" Value="public const sbyte OtherLetter = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 OtherLetter = (5)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.OtherLetter" />
      <MemberSignature Language="F#" Value="val mutable OtherLetter : sbyte" Usage="Java.Lang.Character.OtherLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OTHER_LETTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>General category "Lo" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OtherNumber">
      <MemberSignature Language="C#" Value="public const sbyte OtherNumber = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 OtherNumber = (11)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.OtherNumber" />
      <MemberSignature Language="F#" Value="val mutable OtherNumber : sbyte" Usage="Java.Lang.Character.OtherNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OTHER_NUMBER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>General category "No" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OtherPunctuation">
      <MemberSignature Language="C#" Value="public const sbyte OtherPunctuation = 24;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 OtherPunctuation = (24)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.OtherPunctuation" />
      <MemberSignature Language="F#" Value="val mutable OtherPunctuation : sbyte" Usage="Java.Lang.Character.OtherPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OTHER_PUNCTUATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>General category "Po" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OtherSymbol">
      <MemberSignature Language="C#" Value="public const sbyte OtherSymbol = 28;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 OtherSymbol = (28)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.OtherSymbol" />
      <MemberSignature Language="F#" Value="val mutable OtherSymbol : sbyte" Usage="Java.Lang.Character.OtherSymbol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OTHER_SYMBOL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>General category "So" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParagraphSeparator">
      <MemberSignature Language="C#" Value="public const sbyte ParagraphSeparator = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 ParagraphSeparator = (14)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.ParagraphSeparator" />
      <MemberSignature Language="F#" Value="val mutable ParagraphSeparator : sbyte" Usage="Java.Lang.Character.ParagraphSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PARAGRAPH_SEPARATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>General category "Zp" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrivateUse">
      <MemberSignature Language="C#" Value="public const sbyte PrivateUse = 18;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 PrivateUse = (18)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.PrivateUse" />
      <MemberSignature Language="F#" Value="val mutable PrivateUse : sbyte" Usage="Java.Lang.Character.PrivateUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRIVATE_USE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>General category "Co" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReverseBytes">
      <MemberSignature Language="C#" Value="public static char ReverseBytes (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ReverseBytes(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ReverseBytes(System.Char)" />
      <MemberSignature Language="F#" Value="static member ReverseBytes : char -&gt; char" Usage="Java.Lang.Character.ReverseBytes ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reverseBytes", "(C)C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">The <c>char</c> of which to reverse the byte order.</param>
        <summary>Returns the value obtained by reversing the order of the bytes in the
            specified <c>char</c> value.</summary>
        <returns>the value obtained by reversing (or, equivalently, swapping)
                the bytes in the specified <c>char</c> value.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public const int Size = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Size = (16)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Size" />
      <MemberSignature Language="F#" Value="val mutable Size : int" Usage="Java.Lang.Character.Size" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>The number of bits used to represent a <c>char</c> value in unsigned
            binary form, constant <c>16</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SpaceSeparator">
      <MemberSignature Language="C#" Value="public const sbyte SpaceSeparator = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 SpaceSeparator = (12)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.SpaceSeparator" />
      <MemberSignature Language="F#" Value="val mutable SpaceSeparator : sbyte" Usage="Java.Lang.Character.SpaceSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SPACE_SEPARATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>General category "Zs" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartPunctuation">
      <MemberSignature Language="C#" Value="public const sbyte StartPunctuation = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 StartPunctuation = (21)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.StartPunctuation" />
      <MemberSignature Language="F#" Value="val mutable StartPunctuation : sbyte" Usage="Java.Lang.Character.StartPunctuation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("START_PUNCTUATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>General category "Ps" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Surrogate">
      <MemberSignature Language="C#" Value="public const sbyte Surrogate = 19;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 Surrogate = (19)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Surrogate" />
      <MemberSignature Language="F#" Value="val mutable Surrogate : sbyte" Usage="Java.Lang.Character.Surrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SURROGATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>General category "Cs" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#GetTypeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type conversionType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="conversionType">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Character.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Character.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Character.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Character.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitlecaseLetter">
      <MemberSignature Language="C#" Value="public const sbyte TitlecaseLetter = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 TitlecaseLetter = (3)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.TitlecaseLetter" />
      <MemberSignature Language="F#" Value="val mutable TitlecaseLetter : sbyte" Usage="Java.Lang.Character.TitlecaseLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TITLECASE_LETTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>General category "Lt" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToChars">
      <MemberSignature Language="C#" Value="public static char[] ToChars (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] ToChars(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToChars(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToChars : int -&gt; char[]" Usage="Java.Lang.Character.ToChars codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toChars", "(I)[C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">a Unicode code point</param>
        <summary>Converts the specified character (Unicode code point) to its
            UTF-16 representation stored in a <c>char</c> array.</summary>
        <returns>a <c>char</c> array having
                    <c>codePoint</c>'s UTF-16 representation.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>codePoint</c> is not a valid code point.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToChars">
      <MemberSignature Language="C#" Value="public static int ToChars (int codePoint, char[] dst, int dstIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToChars(int32 codePoint, char[] dst, int32 dstIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToChars(System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToChars : int * char[] * int -&gt; int" Usage="Java.Lang.Character.ToChars (codePoint, dst, dstIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toChars", "(I[CI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
        <Parameter Name="dst" Type="System.Char[]" />
        <Parameter Name="dstIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">a Unicode code point</param>
        <param name="dst">the destination array to copy the encoded value into.</param>
        <param name="dstIndex">the index in <c>dst</c> from where to start copying.</param>
        <summary>Converts the specified character (Unicode code point) to its
            UTF-16 representation stored in a <c>char</c> array.</summary>
        <returns>a <c>char</c> array having
                    <c>codePoint</c>'s UTF-16 representation.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>codePoint</c> is not a valid code point.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>dst</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>dstIndex</c> is negative, greater than or equal to
             <c>dst.length</c> or equals <c>dst.length - 1</c> when
             <c>codePoint</c> is a
             <see cref="M:Java.Lang.Character.IsSupplementaryCodePoint(System.Int32)" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToCodePoint">
      <MemberSignature Language="C#" Value="public static int ToCodePoint (char high, char low);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToCodePoint(char high, char low) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToCodePoint(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member ToCodePoint : char * char -&gt; int" Usage="Java.Lang.Character.ToCodePoint (high, low)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toCodePoint", "(CC)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="high" Type="System.Char" />
        <Parameter Name="low" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="high">the high-surrogate code unit</param>
        <param name="low">the low-surrogate code unit</param>
        <summary>Converts the specified surrogate pair to its supplementary code
            point value.</summary>
        <returns>the supplementary code point composed from the
                    specified surrogate pair.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Character.IsSurrogatePair(System.Char, System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerCase">
      <MemberSignature Language="C#" Value="public static char ToLowerCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToLowerCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member ToLowerCase : char -&gt; char" Usage="Java.Lang.Character.ToLowerCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toLowerCase", "(C)C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <summary>Converts the character argument to lowercase using case
            mapping information from the UnicodeData file.</summary>
        <returns>the lowercase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerCase">
      <MemberSignature Language="C#" Value="public static int ToLowerCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToLowerCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToLowerCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToLowerCase : int -&gt; int" Usage="Java.Lang.Character.ToLowerCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toLowerCase", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check.</param>
        <summary>Converts the character argument to lowercase using case
            mapping information from the UnicodeData file.</summary>
        <returns>the lowercase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToString(System.Char)" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="Java.Lang.Character.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toString", "(C)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>Returns a <c>String</c> object representing this
            <c>Character</c>'s value.</summary>
        <returns>a string representation of this object.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public static char ToTitleCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToTitleCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToTitleCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : char -&gt; char" Usage="Java.Lang.Character.ToTitleCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toTitleCase", "(C)C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <summary>Converts the character argument to titlecase using case mapping
            information from the UnicodeData file.</summary>
        <returns>the titlecase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public static int ToTitleCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToTitleCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToTitleCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : int -&gt; int" Usage="Java.Lang.Character.ToTitleCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toTitleCase", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to convert.</param>
        <summary>Converts the character argument to titlecase using case mapping
            information from the UnicodeData file.</summary>
        <returns>the titlecase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperCase">
      <MemberSignature Language="C#" Value="public static char ToUpperCase (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperCase(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToUpperCase(System.Char)" />
      <MemberSignature Language="F#" Value="static member ToUpperCase : char -&gt; char" Usage="Java.Lang.Character.ToUpperCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toUpperCase", "(C)C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted.</param>
        <summary>Converts the character argument to uppercase using case mapping
            information from the UnicodeData file.</summary>
        <returns>the uppercase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperCase">
      <MemberSignature Language="C#" Value="public static int ToUpperCase (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToUpperCase(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ToUpperCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToUpperCase : int -&gt; int" Usage="Java.Lang.Character.ToUpperCase codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toUpperCase", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to convert.</param>
        <summary>Converts the character argument to uppercase using case mapping
            information from the UnicodeData file.</summary>
        <returns>the uppercase equivalent of the character, if any;
                     otherwise, the character itself.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public static Java.Lang.Class Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Lang.Class Type" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Character.Type" />
      <MemberSignature Language="F#" Value="member this.Type : Java.Lang.Class" Usage="Java.Lang.Character.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Class</c> instance representing the primitive type
            <c>char</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Unassigned">
      <MemberSignature Language="C#" Value="public const sbyte Unassigned = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 Unassigned = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.Unassigned" />
      <MemberSignature Language="F#" Value="val mutable Unassigned : sbyte" Usage="Java.Lang.Character.Unassigned" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNASSIGNED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>General category "Cn" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UppercaseLetter">
      <MemberSignature Language="C#" Value="public const sbyte UppercaseLetter = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int8 UppercaseLetter = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Character.UppercaseLetter" />
      <MemberSignature Language="F#" Value="val mutable UppercaseLetter : sbyte" Usage="Java.Lang.Character.UppercaseLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UPPERCASE_LETTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>General category "Lu" in the Unicode specification.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Lang.Character ValueOf (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Character ValueOf(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Character.ValueOf(System.Char)" />
      <MemberSignature Language="F#" Value="static member ValueOf : char -&gt; Java.Lang.Character" Usage="Java.Lang.Character.ValueOf c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "(C)Ljava/lang/Character;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Character</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">a char value.</param>
        <summary>Returns a <c>Character</c> instance representing the specified
            <c>char</c> value.</summary>
        <returns>a <c>Character</c> instance representing <c>c</c>.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
