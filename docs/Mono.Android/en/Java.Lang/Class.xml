<Type Name="Class" FullName="Java.Lang.Class">
  <TypeSignature Language="C#" Value="public sealed class Class : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable, Java.Lang.Invoke.ITypeDescriptor.IOfField, Java.Lang.Reflect.IGenericDeclaration, Java.Lang.Reflect.IType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Class extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Lang.Invoke.ITypeDescriptor, class Java.Lang.Invoke.ITypeDescriptor/IOfField, class Java.Lang.Reflect.IAnnotatedElement, class Java.Lang.Reflect.IGenericDeclaration, class Java.Lang.Reflect.IType, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Class" />
  <TypeSignature Language="F#" Value="type Class = class&#xA;    inherit Object&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ITypeDescriptor.IOfField&#xA;    interface ITypeDescriptor&#xA;    interface IGenericDeclaration&#xA;    interface IAnnotatedElement&#xA;    interface IType" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Invoke.ITypeDescriptor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Invoke.ITypeDescriptor+IOfField</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Reflect.IAnnotatedElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Reflect.IGenericDeclaration</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Reflect.IType</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/Class", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/Class", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;T&gt;&lt;T&gt;">the type of the class modeled by this <c>Class</c>
            object.  For example, the type of <c>String.class</c> is <c>Class&lt;String&gt;</c>.  Use <c>Class&lt;?&gt;</c> if the class being modeled is
            unknown.</param>
    <summary>Instances of the class <c>Class</c> represent classes and interfaces
            in a running Java application.</summary>
    <remarks>
      <para>Instances of the class <c>Class</c> represent classes and interfaces
            in a running Java application. An enum type is a kind of class and an
            annotation type is a kind of interface. Every array also
            belongs to a class that is reflected as a <c>Class</c> object
            that is shared by all arrays with the same element type and number
            of dimensions.  The primitive Java types (<c>boolean</c>,
            <c>byte</c>, <c>char</c>, <c>short</c>,
            <c>int</c>, <c>long</c>, <c>float</c>, and
            <c>double</c>), and the keyword <c>void</c> are also
            represented as <c>Class</c> objects.</para>
      <para>
        <c>Class</c> has no public constructor. Instead a <c>Class</c>
            object is constructed automatically by the Java Virtual Machine
            when a class loader invokes one of the
            <c>ClassLoader#defineClass(String,byte[], int,int) defineClass</c> methods
            and passes the bytes of a <c>class</c> file.</para>
      <para>The methods of class <c>Class</c> expose many characteristics of a
            class or interface. Most characteristics are derived from the <c>class</c>
            file that the class loader passed to the Java Virtual Machine. A few
            characteristics are determined by the class loading environment at run time.</para>
      <para>Some methods of class <c>Class</c> expose whether the declaration of
            a class or interface in Java source code was &lt;em&gt;enclosed&lt;/em&gt; within
            another declaration. Other methods describe how a class or interface
            is situated in a &lt;em&gt;nest&lt;/em&gt;. A "nest"&gt;nest is a set of
            classes and interfaces, in the same run-time package, that
            allow mutual access to their <c>private</c> members.
            The classes and interfaces are known as &lt;em&gt;nestmates&lt;/em&gt;.
            One nestmate acts as the
            &lt;em&gt;nest host&lt;/em&gt;, and enumerates the other nestmates which
            belong to the nest; each of them in turn records it as the nest host.
            The classes and interfaces which belong to a nest, including its host, are
            determined when
            <c>class</c> files are generated, for example, a Java compiler
            will typically record a top-level class as the host of a nest where the
            other members are the classes and interfaces whose declarations are
            enclosed within the top-level class declaration.</para>
      <para>The following example uses a <c>Class</c> object to print the
            class name of an object:
            
            &lt;blockquote&gt;</para>
      <code lang="text/java">void printClassName(Object obj) {
                    System.out.println("The class of " + obj +
                                       " is " + obj.getClass().getName());
                }
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>It is also possible to get the <c>Class</c> object for a named
            type (or for void) using a class literal.  See Section 15.8.2 of
            &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.
            For example:
            
            &lt;blockquote&gt;
                <c>System.out.println("The name of class Foo is: "+Foo.class.getName());</c>&lt;/blockquote&gt;</para>
      <para>Some methods of class <c>Class</c> expose whether the declaration of
            a class or interface in Java source code was &lt;em&gt;enclosed&lt;/em&gt; within
            another declaration. Other methods describe how a class or interface
            is situated in a &lt;em&gt;nest&lt;/em&gt;. A "nest"&gt;nest is a set of
            classes and interfaces, in the same run-time package, that
            allow mutual access to their <c>private</c> members.
            The classes and interfaces are known as &lt;em&gt;nestmates&lt;/em&gt;.
            One nestmate acts as the
            &lt;em&gt;nest host&lt;/em&gt;, and enumerates the other nestmates which
            belong to the nest; each of them in turn records it as the nest host.
            The classes and interfaces which belong to a nest, including its host, are
            determined when
            <c>class</c> files are generated, for example, a Java compiler
            will typically record a top-level class as the host of a nest where the
            other members are the classes and interfaces whose declarations are
            enclosed within the top-level class declaration.</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/Class" title="Reference documentation">Java documentation for <code>java.lang.Class</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ArrayType">
      <MemberSignature Language="C#" Value="public Java.Lang.Object ArrayType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ArrayType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.ArrayType" />
      <MemberSignature Language="F#" Value="abstract member ArrayType : unit -&gt; Java.Lang.Object&#xA;override this.ArrayType : unit -&gt; Java.Lang.Object" Usage="class.ArrayType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Invoke.ITypeDescriptor.IOfField.ArrayType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("arrayType", "()Ljava/lang/Class;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("arrayType", "()Ljava/lang/Class;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Class</c> for an array type whose component type
            is described by this Class.</summary>
        <returns>a <c>Class</c> describing the array type</returns>
        <remarks>
          <para>Returns a <c>Class</c> for an array type whose component type
            is described by this Class.</para>
          <para>Added in 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#arrayType()" title="Reference documentation">Java documentation for <code>java.lang.Class.arrayType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsSubclass">
      <MemberSignature Language="C#" Value="public Java.Lang.Class AsSubclass (Java.Lang.Class clazz);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Class AsSubclass(class Java.Lang.Class clazz) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.AsSubclass(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="member this.AsSubclass : Java.Lang.Class -&gt; Java.Lang.Class" Usage="class.AsSubclass clazz" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asSubclass", "(Ljava/lang/Class;)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asSubclass", "(Ljava/lang/Class;)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clazz" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="&lt;U&gt;&lt;U&gt;">the type to cast this class object to</param>
        <param name="clazz">the class of the type to cast this class object to</param>
        <summary>Casts this <c>Class</c> object to represent a subclass of the class
            represented by the specified class object.</summary>
        <returns>this <c>Class</c> object, cast to represent a subclass of
               the specified class object.</returns>
        <remarks>
          <para>Casts this <c>Class</c> object to represent a subclass of the class
            represented by the specified class object.  Checks that the cast
            is valid, and throws a <c>ClassCastException</c> if it is not.  If
            this method succeeds, it always returns a reference to this class object.</para>
          <para>This method is useful when a client needs to "narrow" the type of
            a <c>Class</c> object to pass it to an API that restricts the
            <c>Class</c> objects that it is willing to accept.  A cast would
            generate a compile-time warning, as the correctness of the cast
            could not be checked at runtime (because generic types are implemented
            by erasure).</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#asSubclass(java.lang.Class%3CU%3E)" title="Reference documentation">Java documentation for <code>java.lang.Class.asSubclass(java.lang.Class&lt;U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanonicalName">
      <MemberSignature Language="C#" Value="public string? CanonicalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CanonicalName" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.CanonicalName" />
      <MemberSignature Language="F#" Value="member this.CanonicalName : string" Usage="Java.Lang.Class.CanonicalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCanonicalName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCanonicalName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the canonical name of the underlying class as
            defined by the Java Language Specification.</summary>
        <value>the canonical name of the underlying class if it exists, and
            <c>null</c> otherwise.</value>
        <remarks>
          <para>Returns the canonical name of the underlying class as
            defined by the Java Language Specification.  Returns null if
            the underlying class does not have a canonical name (i.e., if
            it is a local or anonymous class or an array whose component
            type does not have a canonical name).</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getCanonicalName()" title="Reference documentation">Java documentation for <code>java.lang.Class.getCanonicalName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Cast">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Cast (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Cast(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.Cast(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.Cast : Java.Lang.Object -&gt; Java.Lang.Object" Usage="class.Cast obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cast", "(Ljava/lang/Object;)Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cast", "(Ljava/lang/Object;)Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">the object to be cast</param>
        <summary>Casts an object to the class or interface represented
            by this <c>Class</c> object.</summary>
        <returns>the object after casting, or null if obj is null</returns>
        <remarks>
          <para>Casts an object to the class or interface represented
            by this <c>Class</c> object.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#cast(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.Class.cast(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if the object cannot be cast to the given type.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CharSequence">
      <MemberSignature Language="C#" Value="public static readonly IntPtr CharSequence;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly native int CharSequence" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Class.CharSequence" />
      <MemberSignature Language="F#" Value=" staticval mutable CharSequence : nativeint" Usage="Java.Lang.Class.CharSequence" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>T:Java.Lang.Invoke.ITypeDescriptor.IOfField</InterfaceMember>
        <InterfaceMember>F:Java.Lang.Reflect.IType._members</InterfaceMember>
        <InterfaceMember>F:Java.Lang.Reflect.IType.cb_getTypeName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassLoader">
      <MemberSignature Language="C#" Value="public Java.Lang.ClassLoader? ClassLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ClassLoader ClassLoader" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.ClassLoader" />
      <MemberSignature Language="F#" Value="member this.ClassLoader : Java.Lang.ClassLoader" Usage="Java.Lang.Class.ClassLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getClassLoader", "()Ljava/lang/ClassLoader;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getClassLoader", "()Ljava/lang/ClassLoader;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ClassLoader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the class loader for the class.</summary>
        <value>the class loader that loaded the class or interface
                     represented by this object.</value>
        <remarks>
          <para>Returns the class loader for the class.  Some implementations may use
            null to represent the bootstrap class loader. This method will return
            null in such implementations if this class was loaded by the bootstrap
            class loader.</para>
          <para>If this object
            represents a primitive type or void, null is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getClassLoader()" title="Reference documentation">Java documentation for <code>java.lang.Class.getClassLoader()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public Java.Lang.Class? ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class ComponentType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.ComponentType" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Java.Lang.Class" Usage="Java.Lang.Class.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getComponentType", "()Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getComponentType", "()Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>Class</c> representing the component type of an
            array.</summary>
        <value>the <c>Class</c> representing the component type of this
            class if this class is an array</value>
        <remarks>
          <para>Returns the <c>Class</c> representing the component type of an
            array.  If this class does not represent an array class this method
            returns null.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getComponentType()" title="Reference documentation">Java documentation for <code>java.lang.Class.getComponentType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeclaringClass">
      <MemberSignature Language="C#" Value="public Java.Lang.Class? DeclaringClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class DeclaringClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.DeclaringClass" />
      <MemberSignature Language="F#" Value="member this.DeclaringClass : Java.Lang.Class" Usage="Java.Lang.Class.DeclaringClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDeclaringClass", "()Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDeclaringClass", "()Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If the class or interface represented by this <c>Class</c> object
            is a member of another class, returns the <c>Class</c> object
            representing the class in which it was declared.</summary>
        <value>the declaring class for this class</value>
        <remarks>
          <para>If the class or interface represented by this <c>Class</c> object
            is a member of another class, returns the <c>Class</c> object
            representing the class in which it was declared.  This method returns
            null if this class or interface is not a member of any other class.  If
            this <c>Class</c> object represents an array class, a primitive
            type, or void,then this method returns null.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaringClass()" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaringClass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DescriptorString">
      <MemberSignature Language="C#" Value="public string DescriptorString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DescriptorString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.DescriptorString" />
      <MemberSignature Language="F#" Value="abstract member DescriptorString : unit -&gt; string&#xA;override this.DescriptorString : unit -&gt; string" Usage="class.DescriptorString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Invoke.ITypeDescriptor.DescriptorString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("descriptorString", "()Ljava/lang/String;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("descriptorString", "()Ljava/lang/String;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the descriptor string of the entity (class, interface, array class,
            primitive type, or <c>void</c>) represented by this <c>Class</c> object.</summary>
        <returns>the descriptor string for this <c>Class</c> object</returns>
        <remarks>
          <para>Returns the descriptor string of the entity (class, interface, array class,
            primitive type, or <c>void</c>) represented by this <c>Class</c> object.</para>
          <para>If this <c>Class</c> object represents a class or interface,
            not an array class, then:
            &lt;ul&gt;
            &lt;li&gt; The result is a field descriptor (JVMS {</para>
          <para>Added in 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#descriptorString()" title="Reference documentation">Java documentation for <code>java.lang.Class.descriptorString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredAssertionStatus">
      <MemberSignature Language="C#" Value="public bool DesiredAssertionStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DesiredAssertionStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.DesiredAssertionStatus" />
      <MemberSignature Language="F#" Value="member this.DesiredAssertionStatus : unit -&gt; bool" Usage="class.DesiredAssertionStatus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("desiredAssertionStatus", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("desiredAssertionStatus", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the assertion status that would be assigned to this
            class if it were to be initialized at the time this method is invoked.</summary>
        <returns>the desired assertion status of the specified class.</returns>
        <remarks>
          <para>Returns the assertion status that would be assigned to this
            class if it were to be initialized at the time this method is invoked.
            If this class has had its assertion status set, the most recent
            setting will be returned; otherwise, if any package default assertion
            status pertains to this class, the most recent setting for the most
            specific pertinent package default assertion status is returned;
            otherwise, if this class is not a system class (i.e., it has a
            class loader) its class loader's default assertion status is returned;
            otherwise, the system class default assertion status is returned.</para>
          <para>Few programmers will have any need for this method; it is provided
            for the benefit of the JRE itself.  (It allows a class to determine at
            the time that it is initialized whether assertions should be enabled.)
            Note that this method is not guaranteed to return the actual
            assertion status that was (or will be) associated with the specified
            class when it was (or will be) initialized.
            
            Android-note: AssertionStatuses are unsupported. This method will always return false.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#desiredAssertionStatus()" title="Reference documentation">Java documentation for <code>java.lang.Class.desiredAssertionStatus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnclosingClass">
      <MemberSignature Language="C#" Value="public Java.Lang.Class? EnclosingClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class EnclosingClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.EnclosingClass" />
      <MemberSignature Language="F#" Value="member this.EnclosingClass : Java.Lang.Class" Usage="Java.Lang.Class.EnclosingClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEnclosingClass", "()Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEnclosingClass", "()Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the immediately enclosing class of the underlying
            class.</summary>
        <value>the immediately enclosing class of the underlying class</value>
        <remarks>
          <para>Returns the immediately enclosing class of the underlying
            class.  If the underlying class is a top level class this
            method returns <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getEnclosingClass()" title="Reference documentation">Java documentation for <code>java.lang.Class.getEnclosingClass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnclosingConstructor">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Constructor? EnclosingConstructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Reflect.Constructor EnclosingConstructor" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.EnclosingConstructor" />
      <MemberSignature Language="F#" Value="member this.EnclosingConstructor : Java.Lang.Reflect.Constructor" Usage="Java.Lang.Class.EnclosingConstructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEnclosingConstructor", "()Ljava/lang/reflect/Constructor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEnclosingConstructor", "()Ljava/lang/reflect/Constructor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Constructor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this <c>Class</c> object represents a local or anonymous
            class within a constructor, returns a <c>java.lang.reflect.Constructor Constructor</c> object representing
            the immediately enclosing constructor of the underlying
            class.</summary>
        <value>the immediately enclosing constructor of the underlying class, if
                that class is a local or anonymous class; otherwise <c>null</c>.</value>
        <remarks>
          <para>If this <c>Class</c> object represents a local or anonymous
            class within a constructor, returns a <c>java.lang.reflect.Constructor Constructor</c> object representing
            the immediately enclosing constructor of the underlying
            class. Returns <c>null</c> otherwise.  In particular, this
            method returns <c>null</c> if the underlying class is a local
            or anonymous class immediately enclosed by a type declaration,
            instance initializer or static initializer.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getEnclosingConstructor()" title="Reference documentation">Java documentation for <code>java.lang.Class.getEnclosingConstructor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnclosingMethod">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Method? EnclosingMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Reflect.Method EnclosingMethod" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.EnclosingMethod" />
      <MemberSignature Language="F#" Value="member this.EnclosingMethod : Java.Lang.Reflect.Method" Usage="Java.Lang.Class.EnclosingMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEnclosingMethod", "()Ljava/lang/reflect/Method;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEnclosingMethod", "()Ljava/lang/reflect/Method;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Method</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this <c>Class</c> object represents a local or anonymous
            class within a method, returns a <c>java.lang.reflect.Method Method</c> object representing the
            immediately enclosing method of the underlying class.</summary>
        <value>the immediately enclosing method of the underlying class, if
                that class is a local or anonymous class; otherwise <c>null</c>.</value>
        <remarks>
          <para>If this <c>Class</c> object represents a local or anonymous
            class within a method, returns a <c>java.lang.reflect.Method Method</c> object representing the
            immediately enclosing method of the underlying class. Returns
            <c>null</c> otherwise.
            
            In particular, this method returns <c>null</c> if the underlying
            class is a local or anonymous class immediately enclosed by a type
            declaration, instance initializer or static initializer.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getEnclosingMethod()" title="Reference documentation">Java documentation for <code>java.lang.Class.getEnclosingMethod()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ForName">
      <MemberSignature Language="C#" Value="public static Java.Lang.Class ForName (string className);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Class ForName(string className) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.ForName(System.String)" />
      <MemberSignature Language="F#" Value="static member ForName : string -&gt; Java.Lang.Class" Usage="Java.Lang.Class.ForName className" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forName", "(Ljava/lang/String;)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forName", "(Ljava/lang/String;)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className">the fully qualified name of the desired class.</param>
        <summary>Returns the <c>Class</c> object associated with the class or
            interface with the given string name.</summary>
        <returns>the <c>Class</c> object for the class with the
                        specified name.</returns>
        <remarks>
          <para>Returns the <c>Class</c> object associated with the class or
            interface with the given string name.  Invoking this method is
            equivalent to:
            
            &lt;blockquote&gt;
             <c>Class.forName(className, true, currentLoader)</c>&lt;/blockquote&gt;
            
            where <c>currentLoader</c> denotes the defining class loader of
            the current class.</para>
          <para>For example, the following code fragment returns the
            runtime <c>Class</c> descriptor for the class named
            <c>java.lang.Thread</c>:
            
            &lt;blockquote&gt;
              <c>Class t = Class.forName("java.lang.Thread")</c>&lt;/blockquote&gt;</para>
          <para>A call to <c>forName("X")</c> causes the class named
            <c>X</c> to be initialized.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#forName(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Class.forName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the requested class cannot be found.</exception>
        <exception cref="T:Java.Lang.LinkageError">if an error occurs during linkage</exception>
        <exception cref="T:Java.Lang.ExceptionInInitializerError">if an exception occurs during static initialization of a
             class.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ForName">
      <MemberSignature Language="C#" Value="public static Java.Lang.Class ForName (string name, bool initialize, Java.Lang.ClassLoader? loader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Class ForName(string name, bool initialize, class Java.Lang.ClassLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.ForName(System.String,System.Boolean,Java.Lang.ClassLoader)" />
      <MemberSignature Language="F#" Value="static member ForName : string * bool * Java.Lang.ClassLoader -&gt; Java.Lang.Class" Usage="Java.Lang.Class.ForName (name, initialize, loader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forName", "(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forName", "(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="initialize" Type="System.Boolean" />
        <Parameter Name="loader" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="name">fully qualified name of the desired class</param>
        <param name="initialize">if <c>true</c> the class will be initialized.
                              See Section 12.4 of &lt;em&gt;The Java Language Specification&lt;/em&gt;.</param>
        <param name="loader">class loader from which the class must be loaded</param>
        <summary>Returns the <c>Class</c> object associated with the class or
            interface with the given string name, using the given class loader.</summary>
        <returns>class object representing the desired class</returns>
        <remarks>
          <para>Returns the <c>Class</c> object associated with the class or
            interface with the given string name, using the given class loader.
            Given the fully qualified name for a class or interface (in the same
            format returned by <c>getName</c>) this method attempts to
            locate, load, and link the class or interface.  The specified class
            loader is used to load the class or interface.  If the parameter
            <c>loader</c> is null, the class is loaded through the bootstrap
            class loader.  The class is initialized only if the
            <c>initialize</c> parameter is <c>true</c> and if it has
            not been initialized earlier.</para>
          <para>If <c>name</c> denotes a primitive type or void, an attempt
            will be made to locate a user-defined class in the unnamed package whose
            name is <c>name</c>. Therefore, this method cannot be used to
            obtain any of the <c>Class</c> objects representing primitive
            types or void.</para>
          <para>If <c>name</c> denotes an array class, the component type of
            the array class is loaded but not initialized.</para>
          <para>For example, in an instance method the expression:
            
            &lt;blockquote&gt;
             <c>Class.forName("Foo")</c>&lt;/blockquote&gt;
            
            is equivalent to:
            
            &lt;blockquote&gt;
             <c>Class.forName("Foo", true, this.getClass().getClassLoader())</c>&lt;/blockquote&gt;
            
            Note that this method throws errors related to loading, linking or
            initializing as specified in Sections 12.2, 12.3 and 12.4 of &lt;em&gt;The
            Java Language Specification&lt;/em&gt;.
            Note that this method does not check whether the requested class
            is accessible to its caller.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#forName(java.lang.String,%20boolean,%20java.lang.ClassLoader)" title="Reference documentation">Java documentation for <code>java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the requested class cannot be found.</exception>
        <exception cref="T:Java.Lang.LinkageError">if an error occurs during linkage</exception>
        <exception cref="T:Java.Lang.ExceptionInInitializerError">if an exception occurs during static initialization of a
             class.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FromType">
      <MemberSignature Language="C#" Value="public static Java.Lang.Class FromType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Class FromType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.FromType(System.Type)" />
      <MemberSignature Language="F#" Value="static member FromType : Type -&gt; Java.Lang.Class" Usage="Java.Lang.Class.FromType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericSuperclass">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.IType? GenericSuperclass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Reflect.IType GenericSuperclass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.GenericSuperclass" />
      <MemberSignature Language="F#" Value="member this.GenericSuperclass : Java.Lang.Reflect.IType" Usage="Java.Lang.Class.GenericSuperclass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGenericSuperclass", "()Ljava/lang/reflect/Type;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGenericSuperclass", "()Ljava/lang/reflect/Type;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.IType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>Type</c> representing the direct superclass of
            the entity (class, interface, primitive type or void) represented by
            this <c>Class</c>.</summary>
        <value>the direct superclass of the class represented by this object</value>
        <remarks>
          <para>Returns the <c>Type</c> representing the direct superclass of
            the entity (class, interface, primitive type or void) represented by
            this <c>Class</c>.</para>
          <para>If the superclass is a parameterized type, the <c>Type</c>
            object returned must accurately reflect the actual type
            parameters used in the source code. The parameterized type
            representing the superclass is created if it had not been
            created before. See the declaration of <c>java.lang.reflect.ParameterizedType ParameterizedType</c> for the
            semantics of the creation process for parameterized types.  If
            this <c>Class</c> represents either the <c>Object</c>
            class, an interface, a primitive type, or void, then null is
            returned.  If this object represents an array class then the
            <c>Class</c> object representing the <c>Object</c> class is
            returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getGenericSuperclass()" title="Reference documentation">Java documentation for <code>java.lang.Class.getGenericSuperclass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetAnnotation (Java.Lang.Class annotationClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetAnnotation(class Java.Lang.Class annotationClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetAnnotation(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotation : Java.Lang.Class -&gt; Java.Lang.Object&#xA;override this.GetAnnotation : Java.Lang.Class -&gt; Java.Lang.Object" Usage="class.GetAnnotation annotationClass" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.GetAnnotation(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="annotationClass">To be added.</param>
        <summary>Added in 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getAnnotation(java.lang.Class%3CA%3E)" title="Reference documentation">Java documentation for <code>java.lang.Class.getAnnotation(java.lang.Class&lt;A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public Java.Lang.Annotation.IAnnotation[] GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Annotation.IAnnotation[] GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetAnnotations" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotations : unit -&gt; Java.Lang.Annotation.IAnnotation[]&#xA;override this.GetAnnotations : unit -&gt; Java.Lang.Annotation.IAnnotation[]" Usage="class.GetAnnotations " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.GetAnnotations</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAnnotations", "()[Ljava/lang/annotation/Annotation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAnnotations", "()[Ljava/lang/annotation/Annotation;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Annotation.IAnnotation[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Added in 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getAnnotations()" title="Reference documentation">Java documentation for <code>java.lang.Class.getAnnotations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetDeclaredAnnotations" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotationsByType">
      <MemberSignature Language="C#" Value="public Java.Lang.Object[] GetAnnotationsByType (Java.Lang.Class annotationClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object[] GetAnnotationsByType(class Java.Lang.Class annotationClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetAnnotationsByType(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotationsByType : Java.Lang.Class -&gt; Java.Lang.Object[]&#xA;override this.GetAnnotationsByType : Java.Lang.Class -&gt; Java.Lang.Object[]" Usage="class.GetAnnotationsByType annotationClass" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.GetAnnotationsByType(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAnnotationsByType", "(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAnnotationsByType", "(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="annotationClass">To be added.</param>
        <summary>Added in 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getAnnotationsByType(java.lang.Class%3CA%3E)" title="Reference documentation">Java documentation for <code>java.lang.Class.getAnnotationsByType(java.lang.Class&lt;A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClasses">
      <MemberSignature Language="C#" Value="public Java.Lang.Class[] GetClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Class[] GetClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetClasses" />
      <MemberSignature Language="F#" Value="member this.GetClasses : unit -&gt; Java.Lang.Class[]" Usage="class.GetClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getClasses", "()[Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getClasses", "()[Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing <c>Class</c> objects representing all
            the public classes and interfaces that are members of the class
            represented by this <c>Class</c> object.</summary>
        <returns>the array of <c>Class</c> objects representing the public
                    members of this class</returns>
        <remarks>
          <para>Returns an array containing <c>Class</c> objects representing all
            the public classes and interfaces that are members of the class
            represented by this <c>Class</c> object.  This includes public
            class and interface members inherited from superclasses and public class
            and interface members declared by the class.  This method returns an
            array of length 0 if this <c>Class</c> object has no public member
            classes or interfaces.  This method also returns an array of length 0 if
            this <c>Class</c> object represents a primitive type, an array
            class, or void.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getClasses()" title="Reference documentation">Java documentation for <code>java.lang.Class.getClasses()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Constructor GetConstructor (params Java.Lang.Class[]? parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Constructor GetConstructor(class Java.Lang.Class[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetConstructor(Java.Lang.Class[])" />
      <MemberSignature Language="F#" Value="member this.GetConstructor : Java.Lang.Class[] -&gt; Java.Lang.Reflect.Constructor" Usage="class.GetConstructor parameterTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getConstructor", "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getConstructor", "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Constructor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterTypes" Type="Java.Lang.Class[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameterTypes">the parameter array</param>
        <summary>Returns a <c>Constructor</c> object that reflects the specified
            public constructor of the class represented by this <c>Class</c>
            object.</summary>
        <returns>the <c>Constructor</c> object of the public constructor that
                    matches the specified <c>parameterTypes</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getConstructor(java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.Class.getConstructor(java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Constructor[] GetConstructors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Constructor[] GetConstructors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetConstructors" />
      <MemberSignature Language="F#" Value="member this.GetConstructors : unit -&gt; Java.Lang.Reflect.Constructor[]" Usage="class.GetConstructors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getConstructors", "()[Ljava/lang/reflect/Constructor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getConstructors", "()[Ljava/lang/reflect/Constructor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Constructor[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing <c>Constructor</c> objects reflecting
            all the public constructors of the class represented by this
            <c>Class</c> object.</summary>
        <returns>the array of <c>Constructor</c> objects representing the
                    public constructors of this class</returns>
        <remarks>
          <para>Returns an array containing <c>Constructor</c> objects reflecting
            all the public constructors of the class represented by this
            <c>Class</c> object.  An array of length 0 is returned if the
            class has no public constructors, or if the class is an array class, or
            if the class reflects a primitive type or void.
            
            Note that while this method returns an array of <c>Constructor&lt;T&gt;</c> objects (that is an array of constructors from
            this class), the return type of this method is <c>Constructor&lt;?&gt;[]</c> and &lt;em&gt;not&lt;/em&gt; <c>Constructor&lt;T&gt;[]</c> as
            might be expected.  This less informative return type is
            necessary since after being returned from this method, the
            array could be modified to hold <c>Constructor</c> objects for
            different classes, which would violate the type guarantees of
            <c>Constructor&lt;T&gt;[]</c>.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getConstructors()" title="Reference documentation">Java documentation for <code>java.lang.Class.getConstructors()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetDeclaredConstructors" />
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredAnnotation">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetDeclaredAnnotation (Java.Lang.Class annotationClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetDeclaredAnnotation(class Java.Lang.Class annotationClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredAnnotation(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member GetDeclaredAnnotation : Java.Lang.Class -&gt; Java.Lang.Object&#xA;override this.GetDeclaredAnnotation : Java.Lang.Class -&gt; Java.Lang.Object" Usage="class.GetDeclaredAnnotation annotationClass" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.GetDeclaredAnnotation(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="annotationClass">To be added.</param>
        <summary>Added in 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredAnnotation(java.lang.Class%3CA%3E)" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredAnnotation(java.lang.Class&lt;A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredAnnotations">
      <MemberSignature Language="C#" Value="public Java.Lang.Annotation.IAnnotation[] GetDeclaredAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Annotation.IAnnotation[] GetDeclaredAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredAnnotations" />
      <MemberSignature Language="F#" Value="abstract member GetDeclaredAnnotations : unit -&gt; Java.Lang.Annotation.IAnnotation[]&#xA;override this.GetDeclaredAnnotations : unit -&gt; Java.Lang.Annotation.IAnnotation[]" Usage="class.GetDeclaredAnnotations " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.GetDeclaredAnnotations</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredAnnotations", "()[Ljava/lang/annotation/Annotation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredAnnotations", "()[Ljava/lang/annotation/Annotation;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Annotation.IAnnotation[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Added in 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredAnnotations()" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredAnnotations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetAnnotations" />
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredAnnotationsByType">
      <MemberSignature Language="C#" Value="public Java.Lang.Object[] GetDeclaredAnnotationsByType (Java.Lang.Class annotationClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object[] GetDeclaredAnnotationsByType(class Java.Lang.Class annotationClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredAnnotationsByType(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member GetDeclaredAnnotationsByType : Java.Lang.Class -&gt; Java.Lang.Object[]&#xA;override this.GetDeclaredAnnotationsByType : Java.Lang.Class -&gt; Java.Lang.Object[]" Usage="class.GetDeclaredAnnotationsByType annotationClass" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.GetDeclaredAnnotationsByType(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredAnnotationsByType", "(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredAnnotationsByType", "(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="annotationClass">To be added.</param>
        <summary>Added in 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredAnnotationsByType(java.lang.Class%3CA%3E)" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredAnnotationsByType(java.lang.Class&lt;A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredClasses">
      <MemberSignature Language="C#" Value="public Java.Lang.Class[] GetDeclaredClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Class[] GetDeclaredClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredClasses" />
      <MemberSignature Language="F#" Value="member this.GetDeclaredClasses : unit -&gt; Java.Lang.Class[]" Usage="class.GetDeclaredClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredClasses", "()[Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredClasses", "()[Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of <c>Class</c> objects reflecting all the
            classes and interfaces declared as members of the class represented by
            this <c>Class</c> object.</summary>
        <returns>the array of <c>Class</c> objects representing all the
                    declared members of this class</returns>
        <remarks>
          <para>Returns an array of <c>Class</c> objects reflecting all the
            classes and interfaces declared as members of the class represented by
            this <c>Class</c> object. This includes public, protected, default
            (package) access, and private classes and interfaces declared by the
            class, but excludes inherited classes and interfaces.  This method
            returns an array of length 0 if the class declares no classes or
            interfaces as members, or if this <c>Class</c> object represents a
            primitive type, an array class, or void.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredClasses()" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredClasses()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredConstructor">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Constructor GetDeclaredConstructor (params Java.Lang.Class[]? parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Constructor GetDeclaredConstructor(class Java.Lang.Class[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredConstructor(Java.Lang.Class[])" />
      <MemberSignature Language="F#" Value="member this.GetDeclaredConstructor : Java.Lang.Class[] -&gt; Java.Lang.Reflect.Constructor" Usage="class.GetDeclaredConstructor parameterTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredConstructor", "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredConstructor", "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Constructor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterTypes" Type="Java.Lang.Class[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameterTypes">the parameter array</param>
        <summary>Returns a <c>Constructor</c> object that reflects the specified
            constructor of the class or interface represented by this
            <c>Class</c> object.</summary>
        <returns>The <c>Constructor</c> object for the constructor with the
                     specified parameter list</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredConstructor(java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredConstructor(java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredConstructors">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Constructor[] GetDeclaredConstructors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Constructor[] GetDeclaredConstructors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredConstructors" />
      <MemberSignature Language="F#" Value="member this.GetDeclaredConstructors : unit -&gt; Java.Lang.Reflect.Constructor[]" Usage="class.GetDeclaredConstructors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredConstructors", "()[Ljava/lang/reflect/Constructor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredConstructors", "()[Ljava/lang/reflect/Constructor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Constructor[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of <c>Constructor</c> objects reflecting all the
            constructors declared by the class represented by this
            <c>Class</c> object.</summary>
        <returns>the array of <c>Constructor</c> objects representing all the
                     declared constructors of this class</returns>
        <remarks>
          <para>Returns an array of <c>Constructor</c> objects reflecting all the
            constructors declared by the class represented by this
            <c>Class</c> object. These are public, protected, default
            (package) access, and private constructors.  The elements in the array
            returned are not sorted and are not in any particular order.  If the
            class has a default constructor, it is included in the returned array.
            This method returns an array of length 0 if this <c>Class</c>
            object represents an interface, a primitive type, an array class, or
            void.</para>
          <para>See &lt;em&gt;The Java Language Specification&lt;/em&gt;, section 8.2.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredConstructors()" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredConstructors()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetConstructors" />
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredField">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Field GetDeclaredField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Field GetDeclaredField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredField(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetDeclaredField : string -&gt; Java.Lang.Reflect.Field" Usage="class.GetDeclaredField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name of the field</param>
        <summary>Returns a <c>Field</c> object that reflects the specified declared
            field of the class or interface represented by this <c>Class</c>
            object.</summary>
        <returns>the <c>Field</c> object for the specified field in this
                     class</returns>
        <remarks>
          <para>Returns a <c>Field</c> object that reflects the specified declared
            field of the class or interface represented by this <c>Class</c>
            object. The <c>name</c> parameter is a <c>String</c> that specifies
            the simple name of the desired field.</para>
          <para>If this <c>Class</c> object represents an array type, then this
            method does not find the <c>length</c> field of the array type.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredField(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredField(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NoSuchFieldException">if the requested field can not be found.</exception>
        <altmember cref="M:Java.Lang.Class.GetField(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredFields">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Field[] GetDeclaredFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Field[] GetDeclaredFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredFields" />
      <MemberSignature Language="F#" Value="member this.GetDeclaredFields : unit -&gt; Java.Lang.Reflect.Field[]" Usage="class.GetDeclaredFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredFields", "()[Ljava/lang/reflect/Field;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredFields", "()[Ljava/lang/reflect/Field;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Field[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of <c>Field</c> objects reflecting all the fields
            declared by the class or interface represented by this
            <c>Class</c> object.</summary>
        <returns>the array of <c>Field</c> objects representing all the
                     declared fields of this class</returns>
        <remarks>
          <para>Returns an array of <c>Field</c> objects reflecting all the fields
            declared by the class or interface represented by this
            <c>Class</c> object. This includes public, protected, default
            (package) access, and private fields, but excludes inherited fields.</para>
          <para>If this <c>Class</c> object represents a class or interface with no
            declared fields, then this method returns an array of length 0.</para>
          <para>If this <c>Class</c> object represents an array type, a primitive
            type, or void, then this method returns an array of length 0.</para>
          <para>The elements in the returned array are not sorted and are not in any
            particular order.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredFields()" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredFields()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetFields" />
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredMethod">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Method GetDeclaredMethod (string name, params Java.Lang.Class[]? parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Method GetDeclaredMethod(string name, class Java.Lang.Class[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredMethod(System.String,Java.Lang.Class[])" />
      <MemberSignature Language="F#" Value="member this.GetDeclaredMethod : string * Java.Lang.Class[] -&gt; Java.Lang.Reflect.Method" Usage="class.GetDeclaredMethod (name, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Method</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameterTypes" Type="Java.Lang.Class[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">the name of the method</param>
        <param name="parameterTypes">the parameter array</param>
        <summary>Returns a <c>Method</c> object that reflects the specified
            declared method of the class or interface represented by this
            <c>Class</c> object.</summary>
        <returns>the <c>Method</c> object for the method of this class
                     matching the specified name and parameters</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredMethod(java.lang.String,%20java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredMethods">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Method[] GetDeclaredMethods ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Method[] GetDeclaredMethods() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetDeclaredMethods" />
      <MemberSignature Language="F#" Value="member this.GetDeclaredMethods : unit -&gt; Java.Lang.Reflect.Method[]" Usage="class.GetDeclaredMethods " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeclaredMethods", "()[Ljava/lang/reflect/Method;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeclaredMethods", "()[Ljava/lang/reflect/Method;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Method[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing <c>Method</c> objects reflecting all the
            declared methods of the class or interface represented by this <c>Class</c> object, including public, protected, default (package)
            access, and private methods, but excluding inherited methods.</summary>
        <returns>the array of <c>Method</c> objects representing all the
                     declared methods of this class</returns>
        <remarks>
          <para>Returns an array containing <c>Method</c> objects reflecting all the
            declared methods of the class or interface represented by this <c>Class</c> object, including public, protected, default (package)
            access, and private methods, but excluding inherited methods.</para>
          <para>If this <c>Class</c> object represents a type that has multiple
            declared methods with the same name and parameter types, but different
            return types, then the returned array has a <c>Method</c> object for
            each such method.</para>
          <para>If this <c>Class</c> object represents a type that has a class
            initialization method <c>&lt;clinit&gt;</c>, then the returned array does
            &lt;em&gt;not&lt;/em&gt; have a corresponding <c>Method</c> object.</para>
          <para>If this <c>Class</c> object represents a class or interface with no
            declared methods, then the returned array has length 0.</para>
          <para>If this <c>Class</c> object represents an array type, a primitive
            type, or void, then the returned array has length 0.</para>
          <para>The elements in the returned array are not sorted and are not in any
            particular order.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getDeclaredMethods()" title="Reference documentation">Java documentation for <code>java.lang.Class.getDeclaredMethods()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetMethods" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumConstants">
      <MemberSignature Language="C#" Value="public Java.Lang.Object[]? GetEnumConstants ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object[] GetEnumConstants() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetEnumConstants" />
      <MemberSignature Language="F#" Value="member this.GetEnumConstants : unit -&gt; Java.Lang.Object[]" Usage="class.GetEnumConstants " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEnumConstants", "()[Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEnumConstants", "()[Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the elements of this enum class or null if this
            Class object does not represent an enum type.</summary>
        <returns>an array containing the values comprising the enum class
                represented by this Class object in the order they're
                declared, or null if this Class object does not
                represent an enum type</returns>
        <remarks>
          <para>Returns the elements of this enum class or null if this
            Class object does not represent an enum type.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getEnumConstants()" title="Reference documentation">Java documentation for <code>java.lang.Class.getEnumConstants()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Field GetField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Field GetField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetField(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetField : string -&gt; Java.Lang.Reflect.Field" Usage="class.GetField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the field name</param>
        <summary>Returns a <c>Field</c> object that reflects the specified public member
            field of the class or interface represented by this <c>Class</c>
            object.</summary>
        <returns>the <c>Field</c> object of this class specified by
                    <c>name</c></returns>
        <remarks>
          <para>Returns a <c>Field</c> object that reflects the specified public member
            field of the class or interface represented by this <c>Class</c>
            object. The <c>name</c> parameter is a <c>String</c> specifying the
            simple name of the desired field.</para>
          <para>The field to be reflected is determined by the algorithm that
            follows.  Let C be the class or interface represented by this object:
            
            &lt;OL&gt;
            &lt;LI&gt; If C declares a public field with the name specified, that is the
                 field to be reflected.&lt;/LI&gt;
            &lt;LI&gt; If no field was found in step 1 above, this algorithm is applied
                 recursively to each direct superinterface of C. The direct
                 superinterfaces are searched in the order they were declared.&lt;/LI&gt;
            &lt;LI&gt; If no field was found in steps 1 and 2 above, and C has a
                 superclass S, then this algorithm is invoked recursively upon S.
                 If C has no superclass, then a <c>NoSuchFieldException</c>
                 is thrown.&lt;/LI&gt;
            &lt;/OL&gt;</para>
          <para>If this <c>Class</c> object represents an array type, then this
            method does not find the <c>length</c> field of the array type.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getField(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Class.getField(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NoSuchFieldException">if the field cannot be found.</exception>
        <altmember cref="M:Java.Lang.Class.GetDeclaredField(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Field[] GetFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Field[] GetFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetFields" />
      <MemberSignature Language="F#" Value="member this.GetFields : unit -&gt; Java.Lang.Reflect.Field[]" Usage="class.GetFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFields", "()[Ljava/lang/reflect/Field;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFields", "()[Ljava/lang/reflect/Field;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Field[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing <c>Field</c> objects reflecting all
            the accessible public fields of the class or interface represented by
            this <c>Class</c> object.</summary>
        <returns>the array of <c>Field</c> objects representing the
                    public fields</returns>
        <remarks>
          <para>Returns an array containing <c>Field</c> objects reflecting all
            the accessible public fields of the class or interface represented by
            this <c>Class</c> object.</para>
          <para>If this <c>Class</c> object represents a class or interface with
            no accessible public fields, then this method returns an array of length
            0.</para>
          <para>If this <c>Class</c> object represents a class, then this method
            returns the public fields of the class and of all its superclasses and
            superinterfaces.</para>
          <para>If this <c>Class</c> object represents an interface, then this
            method returns the fields of the interface and of all its
            superinterfaces.</para>
          <para>If this <c>Class</c> object represents an array type, a primitive
            type, or void, then this method returns an array of length 0.</para>
          <para>The elements in the returned array are not sorted and are not in any
            particular order.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getFields()" title="Reference documentation">Java documentation for <code>java.lang.Class.getFields()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetDeclaredFields" />
      </Docs>
    </Member>
    <Member MemberName="GetGenericInterfaces">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.IType[] GetGenericInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.IType[] GetGenericInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetGenericInterfaces" />
      <MemberSignature Language="F#" Value="member this.GetGenericInterfaces : unit -&gt; Java.Lang.Reflect.IType[]" Usage="class.GetGenericInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGenericInterfaces", "()[Ljava/lang/reflect/Type;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGenericInterfaces", "()[Ljava/lang/reflect/Type;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.IType[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c>Type</c>s representing the interfaces
            directly implemented by the class or interface represented by
            this object.</summary>
        <returns>an array of interfaces directly implemented by this class</returns>
        <remarks>
          <para>Returns the <c>Type</c>s representing the interfaces
            directly implemented by the class or interface represented by
            this object.</para>
          <para>If a superinterface is a parameterized type, the
            <c>Type</c> object returned for it must accurately reflect
            the actual type parameters used in the source code. The
            parameterized type representing each superinterface is created
            if it had not been created before. See the declaration of
            <c>java.lang.reflect.ParameterizedType ParameterizedType</c>
            for the semantics of the creation process for parameterized
            types.</para>
          <para>If this object represents a class, the return value is an array
            containing objects representing all interfaces directly implemented by
            the class.  The order of the interface objects in the array corresponds
            to the order of the interface names in the <c>implements</c> clause of
            the declaration of the class represented by this object.</para>
          <para>If this object represents an interface, the array contains objects
            representing all interfaces directly extended by the interface.  The
            order of the interface objects in the array corresponds to the order of
            the interface names in the <c>extends</c> clause of the declaration of
            the interface represented by this object.</para>
          <para>If this object represents a class or interface that implements no
            interfaces, the method returns an array of length 0.</para>
          <para>If this object represents a primitive type or void, the method
            returns an array of length 0.</para>
          <para>If this <c>Class</c> object represents an array type, the
            interfaces <c>Cloneable</c> and <c>java.io.Serializable</c> are
            returned in that order.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getGenericInterfaces()" title="Reference documentation">Java documentation for <code>java.lang.Class.getGenericInterfaces()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public Java.Lang.Class[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Class[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetInterfaces" />
      <MemberSignature Language="F#" Value="member this.GetInterfaces : unit -&gt; Java.Lang.Class[]" Usage="class.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInterfaces", "()[Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInterfaces", "()[Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the interfaces directly implemented by the class or interface
            represented by this object.</summary>
        <returns>an array of interfaces directly implemented by this class</returns>
        <remarks>
          <para>Returns the interfaces directly implemented by the class or interface
            represented by this object.</para>
          <para>If this object represents a class, the return value is an array
            containing objects representing all interfaces directly implemented by
            the class.  The order of the interface objects in the array corresponds
            to the order of the interface names in the <c>implements</c> clause of
            the declaration of the class represented by this object.  For example,
            given the declaration:
            &lt;blockquote&gt;
            <c>class Shimmer implements FloorWax, DessertTopping { ...</c>}&lt;/blockquote&gt;
            suppose the value of <c>s</c> is an instance of
            <c>Shimmer</c>; the value of the expression:
            &lt;blockquote&gt;
            <c>s.getClass().getInterfaces()[0]</c>&lt;/blockquote&gt;
            is the <c>Class</c> object that represents interface
            <c>FloorWax</c>; and the value of:
            &lt;blockquote&gt;
            <c>s.getClass().getInterfaces()[1]</c>&lt;/blockquote&gt;
            is the <c>Class</c> object that represents interface
            <c>DessertTopping</c>.</para>
          <para>If this object represents an interface, the array contains objects
            representing all interfaces directly extended by the interface.  The
            order of the interface objects in the array corresponds to the order of
            the interface names in the <c>extends</c> clause of the declaration of
            the interface represented by this object.</para>
          <para>If this object represents a class or interface that implements no
            interfaces, the method returns an array of length 0.</para>
          <para>If this object represents a primitive type or void, the method
            returns an array of length 0.</para>
          <para>If this <c>Class</c> object represents an array type, the
            interfaces <c>Cloneable</c> and <c>java.io.Serializable</c> are
            returned in that order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getInterfaces()" title="Reference documentation">Java documentation for <code>java.lang.Class.getInterfaces()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Method GetMethod (string name, params Java.Lang.Class[]? parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Method GetMethod(string name, class Java.Lang.Class[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetMethod(System.String,Java.Lang.Class[])" />
      <MemberSignature Language="F#" Value="member this.GetMethod : string * Java.Lang.Class[] -&gt; Java.Lang.Reflect.Method" Usage="class.GetMethod (name, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Method</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameterTypes" Type="Java.Lang.Class[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">the name of the method</param>
        <param name="parameterTypes">the list of parameters</param>
        <summary>Returns a <c>Method</c> object that reflects the specified public
            member method of the class or interface represented by this
            <c>Class</c> object.</summary>
        <returns>the <c>Method</c> object that matches the specified
                    <c>name</c> and <c>parameterTypes</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getMethod(java.lang.String,%20java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.Class.getMethod(java.lang.String, java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.Method[] GetMethods ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.Method[] GetMethods() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetMethods" />
      <MemberSignature Language="F#" Value="member this.GetMethods : unit -&gt; Java.Lang.Reflect.Method[]" Usage="class.GetMethods " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMethods", "()[Ljava/lang/reflect/Method;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMethods", "()[Ljava/lang/reflect/Method;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.Method[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing <c>Method</c> objects reflecting all the
            public methods of the class or interface represented by this <c>Class</c> object, including those declared by the class or interface and
            those inherited from superclasses and superinterfaces.</summary>
        <returns>the array of <c>Method</c> objects representing the
                    public methods of this class</returns>
        <remarks>
          <para>Returns an array containing <c>Method</c> objects reflecting all the
            public methods of the class or interface represented by this <c>Class</c> object, including those declared by the class or interface and
            those inherited from superclasses and superinterfaces.</para>
          <para>If this <c>Class</c> object represents an array type, then the
            returned array has a <c>Method</c> object for each of the public
            methods inherited by the array type from <c>Object</c>. It does not
            contain a <c>Method</c> object for <c>clone()</c>.</para>
          <para>If this <c>Class</c> object represents an interface then the
            returned array does not contain any implicitly declared methods from
            <c>Object</c>. Therefore, if no methods are explicitly declared in
            this interface or any of its superinterfaces then the returned array
            has length 0. (Note that a <c>Class</c> object which represents a class
            always has public methods, inherited from <c>Object</c>.)</para>
          <para>The returned array never contains methods with names "<c>&lt;init&gt;</c>"
            or "<c>&lt;clinit&gt;</c>".</para>
          <para>The elements in the returned array are not sorted and are not in any
            particular order.</para>
          <para>Generally, the result is computed as with the following 4 step algorithm.
            Let C be the class or interface represented by this <c>Class</c> object:
            &lt;ol&gt;
            &lt;li&gt; A union of methods is composed of:
              &lt;ol type="a"&gt;
              &lt;li&gt; C's declared public instance and static methods as returned by
                   <c>#getDeclaredMethods()</c> and filtered to include only public
                   methods.&lt;/li&gt;
              &lt;li&gt; If C is a class other than <c>Object</c>, then include the result
                   of invoking this algorithm recursively on the superclass of C.&lt;/li&gt;
              &lt;li&gt; Include the results of invoking this algorithm recursively on all
                   direct superinterfaces of C, but include only instance methods.&lt;/li&gt;
              &lt;/ol&gt;&lt;/li&gt;
            &lt;li&gt; Union from step 1 is partitioned into subsets of methods with same
                 signature (name, parameter types) and return type.&lt;/li&gt;
            &lt;li&gt; Within each such subset only the most specific methods are selected.
                 Let method M be a method from a set of methods with same signature
                 and return type. M is most specific if there is no such method
                 N != M from the same set, such that N is more specific than M.
                 N is more specific than M if:
              &lt;ol type="a"&gt;
              &lt;li&gt; N is declared by a class and M is declared by an interface; or&lt;/li&gt;
              &lt;li&gt; N and M are both declared by classes or both by interfaces and
                   N's declaring type is the same as or a subtype of M's declaring type
                   (clearly, if M's and N's declaring types are the same type, then
                   M and N are the same method).&lt;/li&gt;
              &lt;/ol&gt;&lt;/li&gt;
            &lt;li&gt; The result of this algorithm is the union of all selected methods from
                 step 3.&lt;/li&gt;
            &lt;/ol&gt;</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getMethods()" title="Reference documentation">Java documentation for <code>java.lang.Class.getMethods()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Class.GetDeclaredMethods" />
      </Docs>
    </Member>
    <Member MemberName="GetNestMembers">
      <MemberSignature Language="C#" Value="public Java.Lang.Class[] GetNestMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Class[] GetNestMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetNestMembers" />
      <MemberSignature Language="F#" Value="member this.GetNestMembers : unit -&gt; Java.Lang.Class[]" Usage="class.GetNestMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNestMembers", "()[Ljava/lang/Class;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNestMembers", "()[Ljava/lang/Class;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing <c>Class</c> objects representing all the
            classes and interfaces that are members of the nest to which the class
            or interface represented by this <c>Class</c> object belongs.</summary>
        <returns>an array of all classes and interfaces in the same nest as
            this class or interface</returns>
        <remarks>
          <para>Returns an array containing <c>Class</c> objects representing all the
            classes and interfaces that are members of the nest to which the class
            or interface represented by this <c>Class</c> object belongs.
            
            First, this method obtains the #getNestHost() nest host,
            <c>H</c>, of the nest to which the class or interface represented by
            this <c>Class</c> object belongs. The zeroth element of the returned
            array is <c>H</c>.
            
            Then, for each class or interface <c>C</c> which is recorded by <c>H</c>
            as being a member of its nest, this method attempts to obtain the <c>Class</c>
            object for <c>C</c> (using #getClassLoader() the defining class
            loader of the current <c>Class</c> object), and then obtains the
            #getNestHost() nest host of the nest to which <c>C</c> belongs.
            The classes and interfaces which are recorded by <c>H</c> as being members
            of its nest, and for which <c>H</c> can be determined as their nest host,
            are indicated by subsequent elements of the returned array. The order of
            such elements is unspecified. Duplicates are permitted.</para>
          <para>If this <c>Class</c> object represents a primitive type, an array type,
            or <c>void</c>, then this method returns a single-element array containing
            <c>this</c>.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getNestMembers()" title="Reference documentation">Java documentation for <code>java.lang.Class.getNestMembers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermittedSubclasses">
      <MemberSignature Language="C#" Value="public Java.Lang.Class[]? GetPermittedSubclasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Class[] GetPermittedSubclasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetPermittedSubclasses" />
      <MemberSignature Language="F#" Value="member this.GetPermittedSubclasses : unit -&gt; Java.Lang.Class[]" Usage="class.GetPermittedSubclasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPermittedSubclasses", "()[Ljava/lang/Class;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPermittedSubclasses", "()[Ljava/lang/Class;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing <c>Class</c> objects representing the
            direct subinterfaces or subclasses permitted to extend or
            implement this class or interface if it is sealed.</summary>
        <returns>an array of <c>Class</c> objects of the permitted subclasses of this class or interface,
                    or <c>null</c> if this class or interface is not sealed.</returns>
        <remarks>
          <para>Returns an array containing <c>Class</c> objects representing the
            direct subinterfaces or subclasses permitted to extend or
            implement this class or interface if it is sealed.  The order of such elements
            is unspecified. The array is empty if this sealed class or interface has no
            permitted subclass. If this <c>Class</c> object represents a primitive type,
            <c>void</c>, an array type, or a class or interface that is not sealed,
            that is <c>#isSealed()</c> returns <c>false</c>, then this method returns <c>null</c>.
            Conversely, if <c>#isSealed()</c> returns <c>true</c>, then this method
            returns a non-null value.
            
            For each class or interface <c>C</c> which is recorded as a permitted
            direct subinterface or subclass of this class or interface,
            this method attempts to obtain the <c>Class</c>
            object for <c>C</c> (using #getClassLoader() the defining class
            loader of the current <c>Class</c> object).
            The <c>Class</c> objects which can be obtained and which are direct
            subinterfaces or subclasses of this class or interface,
            are indicated by elements of the returned array. If a <c>Class</c> object
            cannot be obtained, it is silently ignored, and not included in the result
            array.</para>
          <para>Added in 17.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getPermittedSubclasses()" title="Reference documentation">Java documentation for <code>java.lang.Class.getPermittedSubclasses()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordComponents">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.RecordComponent[]? GetRecordComponents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Reflect.RecordComponent[] GetRecordComponents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetRecordComponents" />
      <MemberSignature Language="F#" Value="member this.GetRecordComponents : unit -&gt; Java.Lang.Reflect.RecordComponent[]" Usage="class.GetRecordComponents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRecordComponents", "()[Ljava/lang/reflect/RecordComponent;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRecordComponents", "()[Ljava/lang/reflect/RecordComponent;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.RecordComponent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of <c>RecordComponent</c> objects representing all the
            record components of this record class, or <c>null</c> if this class is
            not a record class.</summary>
        <returns>An array of <c>RecordComponent</c> objects representing all the
                     record components of this record class, or <c>null</c> if this
                     class is not a record class</returns>
        <remarks>
          <para>Returns an array of <c>RecordComponent</c> objects representing all the
            record components of this record class, or <c>null</c> if this class is
            not a record class.</para>
          <para>The components are returned in the same order that they are declared
            in the record header. The array is empty if this record class has no
            components. If the class is not a record class, that is <c>#isRecord()</c> returns <c>false</c>, then this method returns <c>null</c>.
            Conversely, if <c>#isRecord()</c> returns <c>true</c>, then this method
            returns a non-null value.</para>
          <para>Added in 16.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getRecordComponents()" title="Reference documentation">Java documentation for <code>java.lang.Class.getRecordComponents()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResource">
      <MemberSignature Language="C#" Value="public Java.Net.URL? GetResource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Net.URL GetResource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetResource(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetResource : string -&gt; Java.Net.URL" Usage="class.GetResource name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResource", "(Ljava/lang/String;)Ljava/net/URL;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResource", "(Ljava/lang/String;)Ljava/net/URL;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URL</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">name of the desired resource</param>
        <summary>Finds a resource with a given name.</summary>
        <returns>A <c>java.net.URL</c> object; <c>null</c> if no resource with
                    this name is found.</returns>
        <remarks>
          <para>Finds a resource with a given name.</para>
          <para>The rules for
            searching resources associated with a given class are implemented by the
            defining ClassLoader class loader of the class.  This method
            delegates to this object's class loader. If this object was loaded by
            the bootstrap class loader, the method delegates to <c>ClassLoader#getSystemResource</c>.</para>
          <para>Before delegation, an absolute resource name is constructed from the
            given resource name using this algorithm:
            
            &lt;ul&gt;
            
            &lt;li&gt; If the <c>name</c> begins with a <c>'/'</c>
            (<c>'&amp;#92;u002f'</c>), then the absolute name of the resource is the
            portion of the <c>name</c> following the <c>'/'</c>.
            
            &lt;li&gt; Otherwise, the absolute name is of the following form:
            
            &lt;blockquote&gt;
              <c>modified_package_name/name</c>&lt;/blockquote&gt;</para>
          <para>Where the <c>modified_package_name</c> is the package name of this
            object with <c>'/'</c> substituted for <c>'.'</c>
            (<c>'&amp;#92;u002e'</c>).
            
            &lt;/ul&gt;</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getResource(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Class.getResource(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ClassLoader" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceAsStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream? GetResourceAsStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetResourceAsStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetResourceAsStream(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetResourceAsStream : string -&gt; System.IO.Stream" Usage="class.GetResourceAsStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">name of the desired resource</param>
        <summary>Finds a resource with a given name.</summary>
        <returns>A <c>java.io.InputStream</c> object; <c>null</c> if no
                     resource with this name is found.</returns>
        <remarks>
          <para>Finds a resource with a given name.</para>
          <para>The rules for
            searching resources associated with a given class are implemented by the
            defining ClassLoader class loader of the class.  This method
            delegates to this object's class loader.  If this object was loaded by
            the bootstrap class loader, the method delegates to <c>ClassLoader#getSystemResourceAsStream</c>.</para>
          <para>Before delegation, an absolute resource name is constructed from the
            given resource name using this algorithm:
            
            &lt;ul&gt;
            
            &lt;li&gt; If the <c>name</c> begins with a <c>'/'</c>
            (<c>'&amp;#92;u002f'</c>), then the absolute name of the resource is the
            portion of the <c>name</c> following the <c>'/'</c>.
            
            &lt;li&gt; Otherwise, the absolute name is of the following form:
            
            &lt;blockquote&gt;
              <c>modified_package_name/name</c>&lt;/blockquote&gt;</para>
          <para>Where the <c>modified_package_name</c> is the package name of this
            object with <c>'/'</c> substituted for <c>'.'</c>
            (<c>'&amp;#92;u002e'</c>).
            
            &lt;/ul&gt;</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getResourceAsStream(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Class.getResourceAsStream(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ClassLoader" />
      </Docs>
    </Member>
    <Member MemberName="GetSigners">
      <MemberSignature Language="C#" Value="public Java.Lang.Object[]? GetSigners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object[] GetSigners() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetSigners" />
      <MemberSignature Language="F#" Value="member this.GetSigners : unit -&gt; Java.Lang.Object[]" Usage="class.GetSigners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSigners", "()[Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSigners", "()[Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the signers of this class.</summary>
        <returns>the signers of this class, or null if there are no signers.  In
                     particular, this method returns null if this object represents
                     a primitive type or void.</returns>
        <remarks>
          <para>Gets the signers of this class.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getSigners()" title="Reference documentation">Java documentation for <code>java.lang.Class.getSigners()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeParameters">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.ITypeVariable[] GetTypeParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Reflect.ITypeVariable[] GetTypeParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.GetTypeParameters" />
      <MemberSignature Language="F#" Value="abstract member GetTypeParameters : unit -&gt; Java.Lang.Reflect.ITypeVariable[]&#xA;override this.GetTypeParameters : unit -&gt; Java.Lang.Reflect.ITypeVariable[]" Usage="class.GetTypeParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IGenericDeclaration.GetTypeParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTypeParameters", "()[Ljava/lang/reflect/TypeVariable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTypeParameters", "()[Ljava/lang/reflect/TypeVariable;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.ITypeVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of <c>TypeVariable</c> objects that represent the
            type variables declared by the generic declaration represented by this
            <c>GenericDeclaration</c> object, in declaration order.</summary>
        <returns>an array of <c>TypeVariable</c> objects that represent
                the type variables declared by this generic declaration</returns>
        <remarks>
          <para>Returns an array of <c>TypeVariable</c> objects that represent the
            type variables declared by the generic declaration represented by this
            <c>GenericDeclaration</c> object, in declaration order.  Returns an
            array of length 0 if the underlying generic declaration declares no type
            variables.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getTypeParameters()" title="Reference documentation">Java documentation for <code>java.lang.Class.getTypeParameters()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeComponentType">
      <MemberSignature Language="C#" Value="public Java.Lang.Class? InvokeComponentType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Class InvokeComponentType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.InvokeComponentType" />
      <MemberSignature Language="F#" Value="member this.InvokeComponentType : unit -&gt; Java.Lang.Class" Usage="class.InvokeComponentType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("componentType", "()Ljava/lang/Class;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("componentType", "()Ljava/lang/Class;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the component type of this <c>Class</c>, if it describes
            an array type, or <c>null</c> otherwise.</summary>
        <returns>a <c>Class</c> describing the component type, or <c>null</c>
            if this <c>Class</c> does not describe an array type</returns>
        <remarks>
          <para>Returns the component type of this <c>Class</c>, if it describes
            an array type, or <c>null</c> otherwise.</para>
          <para>Added in 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#componentType()" title="Reference documentation">Java documentation for <code>java.lang.Class.componentType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnnotation">
      <MemberSignature Language="C#" Value="public bool IsAnnotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnnotation" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsAnnotation" />
      <MemberSignature Language="F#" Value="member this.IsAnnotation : bool" Usage="Java.Lang.Class.IsAnnotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAnnotation", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAnnotation", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this <c>Class</c> object represents an annotation
            type.</summary>
        <value>
          <c>true</c> if this class object represents an annotation
                 type; <c>false</c> otherwise</value>
        <remarks>
          <para>Returns true if this <c>Class</c> object represents an annotation
            type.  Note that if this method returns true, <c>#isInterface()</c>
            would also return true, as all annotation types are also interfaces.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isAnnotation()" title="Reference documentation">Java documentation for <code>java.lang.Class.isAnnotation()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAnnotationPresent">
      <MemberSignature Language="C#" Value="public bool IsAnnotationPresent (Java.Lang.Class annotationClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAnnotationPresent(class Java.Lang.Class annotationClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.IsAnnotationPresent(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member IsAnnotationPresent : Java.Lang.Class -&gt; bool&#xA;override this.IsAnnotationPresent : Java.Lang.Class -&gt; bool" Usage="class.IsAnnotationPresent annotationClass" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.IsAnnotationPresent(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isAnnotationPresent", "(Ljava/lang/Class;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isAnnotationPresent", "(Ljava/lang/Class;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="annotationClass">To be added.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isAnnotationPresent(java.lang.Class%3C?%20extends%20java.lang.annotation.Annotation%3E)" title="Reference documentation">Java documentation for <code>java.lang.Class.isAnnotationPresent(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymousClass">
      <MemberSignature Language="C#" Value="public bool IsAnonymousClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymousClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsAnonymousClass" />
      <MemberSignature Language="F#" Value="member this.IsAnonymousClass : bool" Usage="Java.Lang.Class.IsAnonymousClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAnonymousClass", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAnonymousClass", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if and only if the underlying class
            is an anonymous class.</summary>
        <value>
          <c>true</c> if and only if this class is an anonymous class.</value>
        <remarks>
          <para>Returns <c>true</c> if and only if the underlying class
            is an anonymous class.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isAnonymousClass()" title="Reference documentation">Java documentation for <code>java.lang.Class.isAnonymousClass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsArray" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="Java.Lang.Class.IsArray" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Lang.Invoke.ITypeDescriptor.IOfField.IsArray</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isArray", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isArray", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines if this <c>Class</c> object represents an array class.</summary>
        <value>
          <c>true</c> if this object represents an array class;
                     <c>false</c> otherwise.</value>
        <remarks>
          <para>Determines if this <c>Class</c> object represents an array class.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isArray()" title="Reference documentation">Java documentation for <code>java.lang.Class.isArray()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public bool IsAssignableFrom (Java.Lang.Class cls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAssignableFrom(class Java.Lang.Class cls) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.IsAssignableFrom(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="member this.IsAssignableFrom : Java.Lang.Class -&gt; bool" Usage="class.IsAssignableFrom cls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isAssignableFrom", "(Ljava/lang/Class;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isAssignableFrom", "(Ljava/lang/Class;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cls" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="cls">the <c>Class</c> object to be checked</param>
        <summary>Determines if the class or interface represented by this
            <c>Class</c> object is either the same as, or is a superclass or
            superinterface of, the class or interface represented by the specified
            <c>Class</c> parameter.</summary>
        <returns>the <c>boolean</c> value indicating whether objects of the
            type <c>cls</c> can be assigned to objects of this class</returns>
        <remarks>
          <para>Determines if the class or interface represented by this
            <c>Class</c> object is either the same as, or is a superclass or
            superinterface of, the class or interface represented by the specified
            <c>Class</c> parameter. It returns <c>true</c> if so;
            otherwise it returns <c>false</c>. If this <c>Class</c>
            object represents a primitive type, this method returns
            <c>true</c> if the specified <c>Class</c> parameter is
            exactly this <c>Class</c> object; otherwise it returns
            <c>false</c>.</para>
          <para>Specifically, this method tests whether the type represented by the
            specified <c>Class</c> parameter can be converted to the type
            represented by this <c>Class</c> object via an identity conversion
            or via a widening reference conversion. See &lt;em&gt;The Java Language
            Specification&lt;/em&gt;, sections 5.1.1 and 5.1.4 , for details.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isAssignableFrom(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>java.lang.Class.isAssignableFrom(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsEnum" />
      <MemberSignature Language="F#" Value="member this.IsEnum : bool" Usage="Java.Lang.Class.IsEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isEnum", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isEnum", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if and only if this class was declared as an enum in the
            source code.</summary>
        <value>true if and only if this class was declared as an enum in the
                source code</value>
        <remarks>
          <para>Returns true if and only if this class was declared as an enum in the
            source code.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isEnum()" title="Reference documentation">Java documentation for <code>java.lang.Class.isEnum()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsInstance">
      <MemberSignature Language="C#" Value="public bool IsInstance (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInstance(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.IsInstance(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.IsInstance : Java.Lang.Object -&gt; bool" Usage="class.IsInstance obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isInstance", "(Ljava/lang/Object;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isInstance", "(Ljava/lang/Object;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">the object to check</param>
        <summary>Determines if the specified <c>Object</c> is assignment-compatible
            with the object represented by this <c>Class</c>.</summary>
        <returns>true if <c>obj</c> is an instance of this class</returns>
        <remarks>
          <para>Determines if the specified <c>Object</c> is assignment-compatible
            with the object represented by this <c>Class</c>.  This method is
            the dynamic equivalent of the Java language <c>instanceof</c>
            operator. The method returns <c>true</c> if the specified
            <c>Object</c> argument is non-null and can be cast to the
            reference type represented by this <c>Class</c> object without
            raising a <c>ClassCastException.</c> It returns <c>false</c>
            otherwise.</para>
          <para>Specifically, if this <c>Class</c> object represents a
            declared class, this method returns <c>true</c> if the specified
            <c>Object</c> argument is an instance of the represented class (or
            of any of its subclasses); it returns <c>false</c> otherwise. If
            this <c>Class</c> object represents an array class, this method
            returns <c>true</c> if the specified <c>Object</c> argument
            can be converted to an object of the array class by an identity
            conversion or by a widening reference conversion; it returns
            <c>false</c> otherwise. If this <c>Class</c> object
            represents an interface, this method returns <c>true</c> if the
            class or any superclass of the specified <c>Object</c> argument
            implements this interface; it returns <c>false</c> otherwise. If
            this <c>Class</c> object represents a primitive type, this method
            returns <c>false</c>.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isInstance(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.Class.isInstance(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsInterface">
      <MemberSignature Language="C#" Value="public bool IsInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterface" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsInterface" />
      <MemberSignature Language="F#" Value="member this.IsInterface : bool" Usage="Java.Lang.Class.IsInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInterface", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInterface", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines if the specified <c>Class</c> object represents an
            interface type.</summary>
        <value>
          <c>true</c> if this object represents an interface;
                     <c>false</c> otherwise.</value>
        <remarks>
          <para>Determines if the specified <c>Class</c> object represents an
            interface type.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isInterface()" title="Reference documentation">Java documentation for <code>java.lang.Class.isInterface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLocalClass">
      <MemberSignature Language="C#" Value="public bool IsLocalClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsLocalClass" />
      <MemberSignature Language="F#" Value="member this.IsLocalClass : bool" Usage="Java.Lang.Class.IsLocalClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLocalClass", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLocalClass", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if and only if the underlying class
            is a local class.</summary>
        <value>
          <c>true</c> if and only if this class is a local class.</value>
        <remarks>
          <para>Returns <c>true</c> if and only if the underlying class
            is a local class.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isLocalClass()" title="Reference documentation">Java documentation for <code>java.lang.Class.isLocalClass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMemberClass">
      <MemberSignature Language="C#" Value="public bool IsMemberClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMemberClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsMemberClass" />
      <MemberSignature Language="F#" Value="member this.IsMemberClass : bool" Usage="Java.Lang.Class.IsMemberClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMemberClass", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMemberClass", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if and only if the underlying class
            is a member class.</summary>
        <value>
          <c>true</c> if and only if this class is a member class.</value>
        <remarks>
          <para>Returns <c>true</c> if and only if the underlying class
            is a member class.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isMemberClass()" title="Reference documentation">Java documentation for <code>java.lang.Class.isMemberClass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsNestmateOf">
      <MemberSignature Language="C#" Value="public bool IsNestmateOf (Java.Lang.Class c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNestmateOf(class Java.Lang.Class c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.IsNestmateOf(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="member this.IsNestmateOf : Java.Lang.Class -&gt; bool" Usage="class.IsNestmateOf c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isNestmateOf", "(Ljava/lang/Class;)Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isNestmateOf", "(Ljava/lang/Class;)Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="c">the class to check</param>
        <summary>Determines if the given <c>Class</c> is a nestmate of the
            class or interface represented by this <c>Class</c> object.</summary>
        <returns>
          <c>true</c> if this class and <c>c</c> are members of
            the same nest; and <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines if the given <c>Class</c> is a nestmate of the
            class or interface represented by this <c>Class</c> object.
            Two classes or interfaces are nestmates
            if they have the same #getNestHost() nest host.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isNestmateOf(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>java.lang.Class.isNestmateOf(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitive">
      <MemberSignature Language="C#" Value="public bool IsPrimitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimitive" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsPrimitive" />
      <MemberSignature Language="F#" Value="member this.IsPrimitive : bool" Usage="Java.Lang.Class.IsPrimitive" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Lang.Invoke.ITypeDescriptor.IOfField.IsPrimitive</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPrimitive", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPrimitive", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines if the specified <c>Class</c> object represents a
            primitive type.</summary>
        <value>true if and only if this class represents a primitive type</value>
        <remarks>
          <para>Determines if the specified <c>Class</c> object represents a
            primitive type.</para>
          <para>There are nine predefined <c>Class</c> objects to represent
            the eight primitive types and void.  These are created by the Java
            Virtual Machine, and have the same names as the primitive types that
            they represent, namely <c>boolean</c>, <c>byte</c>,
            <c>char</c>, <c>short</c>, <c>int</c>,
            <c>long</c>, <c>float</c>, and <c>double</c>.</para>
          <para>These objects may only be accessed via the following public static
            final variables, and are the only <c>Class</c> objects for which
            this method returns <c>true</c>.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isPrimitive()" title="Reference documentation">Java documentation for <code>java.lang.Class.isPrimitive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRecord">
      <MemberSignature Language="C#" Value="public bool IsRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecord" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsRecord" />
      <MemberSignature Language="F#" Value="member this.IsRecord : bool" Usage="Java.Lang.Class.IsRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRecord", "()Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRecord", "()Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if and only if this class is a record class.</summary>
        <value>true if and only if this class is a record class, otherwise false</value>
        <remarks>
          <para>Returns <c>true</c> if and only if this class is a record class.</para>
          <para>The #getSuperclass() direct superclass of a record
            class is <c>java.lang.Record</c>. A record class is Modifier#FINAL final. A record class has (possibly zero) record
            components; <c>#getRecordComponents()</c> returns a non-null but
            possibly empty value for a record.</para>
          <para>Note that class <c>Record</c> is not a record class and thus
            invoking this method on class <c>Record</c> returns <c>false</c>.</para>
          <para>Added in 16.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isRecord()" title="Reference documentation">Java documentation for <code>java.lang.Class.isRecord()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsSealed" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="Java.Lang.Class.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSealed", "()Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSealed", "()Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if and only if this <c>Class</c> object represents
            a sealed class or interface.</summary>
        <value>
          <c>true</c> if and only if this <c>Class</c> object represents
            a sealed class or interface.</value>
        <remarks>
          <para>Returns <c>true</c> if and only if this <c>Class</c> object represents
            a sealed class or interface. If this <c>Class</c> object represents a
            primitive type, <c>void</c>, or an array type, this method returns
            <c>false</c>. A sealed class or interface has (possibly zero) permitted
            subclasses; <c>#getPermittedSubclasses()</c> returns a non-null but
            possibly empty value for a sealed class or interface.</para>
          <para>Added in 17.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isSealed()" title="Reference documentation">Java documentation for <code>java.lang.Class.isSealed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynthetic">
      <MemberSignature Language="C#" Value="public bool IsSynthetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynthetic" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.IsSynthetic" />
      <MemberSignature Language="F#" Value="member this.IsSynthetic : bool" Usage="Java.Lang.Class.IsSynthetic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSynthetic", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSynthetic", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this class is a synthetic class;
            returns <c>false</c> otherwise.</summary>
        <value>
          <c>true</c> if and only if this class is a synthetic class as
                    defined by the Java Language Specification.</value>
        <remarks>
          <para>Returns <c>true</c> if this class is a synthetic class;
            returns <c>false</c> otherwise.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#isSynthetic()" title="Reference documentation">Java documentation for <code>java.lang.Class.isSynthetic()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Class.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public int Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Modifiers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.Modifiers" />
      <MemberSignature Language="F#" Value="member this.Modifiers : int" Usage="Java.Lang.Class.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getModifiers", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getModifiers", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Java language modifiers for this class or interface, encoded
            in an integer.</summary>
        <value>the <c>int</c> representing the modifiers for this class</value>
        <remarks>
          <para>Returns the Java language modifiers for this class or interface, encoded
            in an integer. The modifiers consist of the Java Virtual Machine's
            constants for <c>public</c>, <c>protected</c>,
            <c>private</c>, <c>final</c>, <c>static</c>,
            <c>abstract</c> and <c>interface</c>; they should be decoded
            using the methods of class <c>Modifier</c>.</para>
          <para>If the underlying class is an array class, then its
            <c>public</c>, <c>private</c> and <c>protected</c>
            modifiers are the same as those of its component type.  If this
            <c>Class</c> represents a primitive type or void, its
            <c>public</c> modifier is always <c>true</c>, and its
            <c>protected</c> and <c>private</c> modifiers are always
            <c>false</c>. If this object represents an array class, a
            primitive type or void, then its <c>final</c> modifier is always
            <c>true</c> and its interface modifier is always
            <c>false</c>. The values of its other modifiers are not determined
            by this specification.</para>
          <para>The modifier encodings are defined in &lt;em&gt;The Java Virtual Machine
            Specification&lt;/em&gt;, table 4.1.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getModifiers()" title="Reference documentation">Java documentation for <code>java.lang.Class.getModifiers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Java.Lang.Class.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the  name of the entity (class, interface, array class,
            primitive type, or void) represented by this <c>Class</c> object,
            as a <c>String</c>.</summary>
        <value>the name of the class or interface
                     represented by this object.</value>
        <remarks>
          <para>Returns the  name of the entity (class, interface, array class,
            primitive type, or void) represented by this <c>Class</c> object,
            as a <c>String</c>.</para>
          <para>If this class object represents a reference type that is not an
            array type then the binary name of the class is returned, as specified
            by
            &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.</para>
          <para>If this class object represents a primitive type or void, then the
            name returned is a <c>String</c> equal to the Java language
            keyword corresponding to the primitive type or void.</para>
          <para>If this class object represents a class of arrays, then the internal
            form of the name consists of the name of the element type preceded by
            one or more '<c>[</c>' characters representing the depth of the array
            nesting.  The encoding of element type names is as follows:
            
            &lt;blockquote&gt;&lt;table class="striped"&gt;
            &lt;caption style="display:none"&gt;Element types and encodings&lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;&lt;th scope="col"&gt; Element Type &lt;th scope="col"&gt; Encoding
            &lt;/thead&gt;
            &lt;tbody style="text-align:left"&gt;
            &lt;tr&gt;&lt;th scope="row"&gt; boolean      &lt;td style="text-align:center"&gt; Z
            &lt;tr&gt;&lt;th scope="row"&gt; byte         &lt;td style="text-align:center"&gt; B
            &lt;tr&gt;&lt;th scope="row"&gt; char         &lt;td style="text-align:center"&gt; C
            &lt;tr&gt;&lt;th scope="row"&gt; class or interface
                                              &lt;td style="text-align:center"&gt; L<i>classname</i>;
            &lt;tr&gt;&lt;th scope="row"&gt; double       &lt;td style="text-align:center"&gt; D
            &lt;tr&gt;&lt;th scope="row"&gt; float        &lt;td style="text-align:center"&gt; F
            &lt;tr&gt;&lt;th scope="row"&gt; int          &lt;td style="text-align:center"&gt; I
            &lt;tr&gt;&lt;th scope="row"&gt; long         &lt;td style="text-align:center"&gt; J
            &lt;tr&gt;&lt;th scope="row"&gt; short        &lt;td style="text-align:center"&gt; S
            &lt;/tbody&gt;
            &lt;/table&gt;&lt;/blockquote&gt;</para>
          <para>The class or interface name <i>classname</i> is the binary name of
            the class specified above.</para>
          <para>Examples:
            &lt;blockquote&gt;</para>
          <code lang="text/java">String.class.getName()
                returns "java.lang.String"
            byte.class.getName()
                returns "byte"
            (new Object[3]).getClass().getName()
                returns "[Ljava.lang.Object;"
            (new int[3][4][5][6][7][8][9]).getClass().getName()
                returns "[[[[[[[I"
            </code>
          <para>&lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getName()" title="Reference documentation">Java documentation for <code>java.lang.Class.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NestHost">
      <MemberSignature Language="C#" Value="public Java.Lang.Class NestHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class NestHost" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.NestHost" />
      <MemberSignature Language="F#" Value="member this.NestHost : Java.Lang.Class" Usage="Java.Lang.Class.NestHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNestHost", "()Ljava/lang/Class;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNestHost", "()Ljava/lang/Class;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the nest host of the nest to which the class
            or interface represented by this <c>Class</c> object belongs.</summary>
        <value>the nest host of this class or interface</value>
        <remarks>
          <para>Returns the nest host of the nest to which the class
            or interface represented by this <c>Class</c> object belongs.
            Every class and interface belongs to exactly one nest.
            
            If the nest host of this class or interface has previously
            been determined, then this method returns the nest host.
            If the nest host of this class or interface has
            not previously been determined, then this method determines the nest
            host using the algorithm of JVMS 5.4.4, and returns it.
            
            Often, a class or interface belongs to a nest consisting only of itself,
            in which case this method returns <c>this</c> to indicate that the class
            or interface is the nest host.</para>
          <para>If this <c>Class</c> object represents a primitive type, an array type,
            or <c>void</c>, then this method returns <c>this</c>,
            indicating that the represented entity belongs to the nest consisting only of
            itself, and is the nest host.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getNestHost()" title="Reference documentation">Java documentation for <code>java.lang.Class.getNestHost()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public Java.Lang.Object NewInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object NewInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.NewInstance" />
      <MemberSignature Language="F#" Value="member this.NewInstance : unit -&gt; Java.Lang.Object" Usage="class.NewInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "()Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "()Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the class represented by this <c>Class</c>
            object.</summary>
        <returns>a newly allocated instance of the class represented by this
                     object.</returns>
        <remarks>
          <para>Creates a new instance of the class represented by this <c>Class</c>
            object.  The class is instantiated as if by a <c>new</c>
            expression with an empty argument list.  The class is initialized if it
            has not already been initialized.</para>
          <para>This member is deprecated. This method propagates any exception thrown by the
            nullary constructor, including a checked exception.  Use of
            this method effectively bypasses the compile-time exception
            checking that would otherwise be performed by the compiler.
            The <c>java.lang.reflect.Constructor#newInstance(java.lang.Object...)
            Constructor.newInstance</c> method avoids this problem by wrapping
            any exception thrown by the constructor in a (checked) <c>java.lang.reflect.InvocationTargetException</c>.
            
            &lt;p&gt;The call
            
            &lt;pre&gt;<c>clazz.newInstance()</c>&lt;/pre&gt;
            
            can be replaced by
            
            &lt;pre&gt;<c>clazz.getDeclaredConstructor().newInstance()</c>&lt;/pre&gt;
            
            The latter sequence of calls is inferred to be able to throw
            the additional exception types <c>InvocationTargetException</c> and <c>NoSuchMethodException</c>. Both of these exception types are
            subclasses of <c>ReflectiveOperationException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#newInstance()" title="Reference documentation">Java documentation for <code>java.lang.Class.newInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalAccessException">if the default constructor is not visible.</exception>
        <exception cref="T:Java.Lang.InstantiationException">if the instance cannot be created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public static readonly IntPtr Object;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly native int Object" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Class.Object" />
      <MemberSignature Language="F#" Value=" staticval mutable Object : nativeint" Usage="Java.Lang.Class.Object" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>T:Java.Lang.Invoke.ITypeDescriptor.IOfField</InterfaceMember>
        <InterfaceMember>F:Java.Lang.Reflect.IType._members</InterfaceMember>
        <InterfaceMember>F:Java.Lang.Reflect.IType.cb_getTypeName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public Java.Lang.Package? Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Package Package" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.Package" />
      <MemberSignature Language="F#" Value="member this.Package : Java.Lang.Package" Usage="Java.Lang.Class.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPackage", "()Ljava/lang/Package;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPackage", "()Ljava/lang/Package;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the package of this class.</summary>
        <value>the package of this class.</value>
        <remarks>
          <para>Gets the package of this class.</para>
          <para>If this class represents an array type, a primitive type or void,
            this method returns <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getPackage()" title="Reference documentation">Java documentation for <code>java.lang.Class.getPackage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PackageName">
      <MemberSignature Language="C#" Value="public string PackageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageName" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.PackageName" />
      <MemberSignature Language="F#" Value="member this.PackageName : string" Usage="Java.Lang.Class.PackageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPackageName", "()Ljava/lang/String;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPackageName", "()Ljava/lang/String;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the fully qualified package name.</summary>
        <value>the fully qualified package name</value>
        <remarks>
          <para>Returns the fully qualified package name.</para>
          <para>If this class is a top level class, then this method returns the fully
            qualified name of the package that the class is a member of, or the
            empty string if the class is in an unnamed package.</para>
          <para>If this class is a member class, then this method is equivalent to
            invoking <c>getPackageName()</c> on the #getEnclosingClass
            enclosing class.</para>
          <para>If this class is a #isLocalClass local class or an #isAnonymousClass() anonymous class, then this method is equivalent to
            invoking <c>getPackageName()</c> on the #getDeclaringClass
            declaring class of the #getEnclosingMethod enclosing method or
            #getEnclosingConstructor enclosing constructor.</para>
          <para>If this class represents an array type then this method returns the
            package name of the element type. If this class represents a primitive
            type or void then the package name "<c>java.lang</c>" is returned.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getPackageName()" title="Reference documentation">Java documentation for <code>java.lang.Class.getPackageName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionDomain">
      <MemberSignature Language="C#" Value="public Java.Security.ProtectionDomain? ProtectionDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.ProtectionDomain ProtectionDomain" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.ProtectionDomain" />
      <MemberSignature Language="F#" Value="member this.ProtectionDomain : Java.Security.ProtectionDomain" Usage="Java.Lang.Class.ProtectionDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProtectionDomain", "()Ljava/security/ProtectionDomain;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProtectionDomain", "()Ljava/security/ProtectionDomain;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.ProtectionDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>ProtectionDomain</c> of this class.</summary>
        <value>the ProtectionDomain of this class</value>
        <remarks>
          <para>Returns the <c>ProtectionDomain</c> of this class.  If there is a
            security manager installed, this method first calls the security
            manager's <c>checkPermission</c> method with a
            <c>RuntimePermission("getProtectionDomain")</c> permission to
            ensure it's ok to get the
            <c>ProtectionDomain</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getProtectionDomain()" title="Reference documentation">Java documentation for <code>java.lang.Class.getProtectionDomain()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SimpleName">
      <MemberSignature Language="C#" Value="public string SimpleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SimpleName" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.SimpleName" />
      <MemberSignature Language="F#" Value="member this.SimpleName : string" Usage="Java.Lang.Class.SimpleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSimpleName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSimpleName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the simple name of the underlying class as given in the
            source code.</summary>
        <value>the simple name of the underlying class</value>
        <remarks>
          <para>Returns the simple name of the underlying class as given in the
            source code. Returns an empty string if the underlying class is
            anonymous.</para>
          <para>The simple name of an array is the simple name of the
            component type with "[]" appended.  In particular the simple
            name of an array whose component type is anonymous is "[]".</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getSimpleName()" title="Reference documentation">Java documentation for <code>java.lang.Class.getSimpleName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public static readonly IntPtr String;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly native int String" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Class.String" />
      <MemberSignature Language="F#" Value=" staticval mutable String : nativeint" Usage="Java.Lang.Class.String" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>T:Java.Lang.Invoke.ITypeDescriptor.IOfField</InterfaceMember>
        <InterfaceMember>F:Java.Lang.Reflect.IType._members</InterfaceMember>
        <InterfaceMember>F:Java.Lang.Reflect.IType.cb_getTypeName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Superclass">
      <MemberSignature Language="C#" Value="public Java.Lang.Class? Superclass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class Superclass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.Superclass" />
      <MemberSignature Language="F#" Value="member this.Superclass : Java.Lang.Class" Usage="Java.Lang.Class.Superclass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSuperclass", "()Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSuperclass", "()Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>Class</c> representing the direct superclass of the
            entity (class, interface, primitive type or void) represented by
            this <c>Class</c>.</summary>
        <value>the direct superclass of the class represented by this object</value>
        <remarks>
          <para>Returns the <c>Class</c> representing the direct superclass of the
            entity (class, interface, primitive type or void) represented by
            this <c>Class</c>.  If this <c>Class</c> represents either the
            <c>Object</c> class, an interface, a primitive type, or void, then
            null is returned.  If this object represents an array class then the
            <c>Class</c> object representing the <c>Object</c> class is
            returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getSuperclass()" title="Reference documentation">Java documentation for <code>java.lang.Class.getSuperclass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Class.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Class.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGenericString">
      <MemberSignature Language="C#" Value="public string ToGenericString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToGenericString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Class.ToGenericString" />
      <MemberSignature Language="F#" Value="member this.ToGenericString : unit -&gt; string" Usage="class.ToGenericString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toGenericString", "()Ljava/lang/String;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toGenericString", "()Ljava/lang/String;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string describing this <c>Class</c>, including
            information about modifiers and type parameters.</summary>
        <returns>a string describing this <c>Class</c>, including
            information about modifiers and type parameters</returns>
        <remarks>
          <para>Returns a string describing this <c>Class</c>, including
            information about modifiers and type parameters.
            
            The string is formatted as a list of type modifiers, if any,
            followed by the kind of type (empty string for primitive types
            and <c>class</c>, <c>enum</c>, <c>interface</c>, or
            <c>&amp;#64;</c><c>interface</c>, as appropriate), followed
            by the type's name, followed by an angle-bracketed
            comma-separated list of the type's type parameters, if any.
            
            A space is used to separate modifiers from one another and to
            separate any modifiers from the kind of type. The modifiers
            occur in canonical order. If there are no type parameters, the
            type parameter list is elided.
            
            For an array type, the string starts with the type name,
            followed by an angle-bracketed comma-separated list of the
            type's type parameters, if any, followed by a sequence of
            <c>[]</c> characters, one set of brackets per dimension of
            the array.</para>
          <para>Note that since information about the runtime representation
            of a type is being generated, modifiers not present on the
            originating source code or illegal on the originating source
            code may be present.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#toGenericString()" title="Reference documentation">Java documentation for <code>java.lang.Class.toGenericString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Class.TypeName" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="Java.Lang.Class.TypeName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Lang.Reflect.IType.TypeName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTypeName", "()Ljava/lang/String;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTypeName", "()Ljava/lang/String;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return an informative string for the name of this type.</summary>
        <value>an informative string for the name of this type</value>
        <remarks>
          <para>Return an informative string for the name of this type.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Class#getTypeName()" title="Reference documentation">Java documentation for <code>java.lang.Class.getTypeName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
