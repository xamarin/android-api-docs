<Type Name="IFunctionalInterface" FullName="Java.Lang.IFunctionalInterface">
  <TypeSignature Language="C#" Value="public interface IFunctionalInterface : IDisposable, Java.Interop.IJavaPeerable, Java.Lang.Annotation.IAnnotation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IFunctionalInterface implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.Annotation.IAnnotation, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.IFunctionalInterface" />
  <TypeSignature Language="F#" Value="type IFunctionalInterface = interface&#xA;    interface IAnnotation&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Annotation.IAnnotation</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/FunctionalInterface", "", "Java.Lang.IFunctionalInterfaceInvoker", ApiSince=24)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/FunctionalInterface", "", "Java.Lang.IFunctionalInterfaceInvoker", ApiSince=24)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An informative annotation type used to indicate that an interface
            type declaration is intended to be a <i>functional interface</i> as
            defined by the Java Language Specification.</summary>
    <remarks>
      <para>An informative annotation type used to indicate that an interface
            type declaration is intended to be a <i>functional interface</i> as
            defined by the Java Language Specification.
            
            Conceptually, a functional interface has exactly one abstract
            method.  Since java.lang.reflect.Method#isDefault()
            default methods have an implementation, they are not abstract.  If
            an interface declares an abstract method overriding one of the
            public methods of <c>java.lang.Object</c>, that also does
            &lt;em&gt;not&lt;/em&gt; count toward the interface's abstract method count
            since any implementation of the interface will have an
            implementation from <c>java.lang.Object</c> or elsewhere.</para>
      <para>Note that instances of functional interfaces can be created with
            lambda expressions, method references, or constructor references.</para>
      <para>If a type is annotated with this annotation type, compilers are
            required to generate an error message unless:
            
            &lt;ul&gt;
            &lt;li&gt; The type is an interface type and not an annotation type, enum, or class.
            &lt;li&gt; The annotated type satisfies the requirements of a functional interface.
            &lt;/ul&gt;</para>
      <para>However, the compiler will treat any interface meeting the
            definition of a functional interface as a functional interface
            regardless of whether or not a <c>FunctionalInterface</c>
            annotation is present on the interface declaration.</para>
      <para>Added in 1.8.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/FunctionalInterface" title="Reference documentation">Java documentation for <code>java.lang.FunctionalInterface</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members />
</Type>
