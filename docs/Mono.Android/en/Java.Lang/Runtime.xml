<Type Name="Runtime" FullName="Java.Lang.Runtime">
  <TypeSignature Language="C#" Value="public class Runtime : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Runtime extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Runtime" />
  <TypeSignature Language="F#" Value="type Runtime = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/lang/Runtime", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Every Java application has a single instance of class
            &lt;code&gt;Runtime&lt;/code&gt; that allows the application to interface with
            the environment in which the application is running.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/Runtime" title="Reference documentation">Java documentation for <code>java.lang.Runtime</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Runtime (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Runtime : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.Runtime" Usage="new Java.Lang.Runtime (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddShutdownHook">
      <MemberSignature Language="C#" Value="public virtual void AddShutdownHook (Java.Lang.Thread hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddShutdownHook(class Java.Lang.Thread hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.AddShutdownHook(Java.Lang.Thread)" />
      <MemberSignature Language="F#" Value="abstract member AddShutdownHook : Java.Lang.Thread -&gt; unit&#xA;override this.AddShutdownHook : Java.Lang.Thread -&gt; unit" Usage="runtime.AddShutdownHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addShutdownHook", "(Ljava/lang/Thread;)V", "GetAddShutdownHook_Ljava_lang_Thread_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="Java.Lang.Thread" />
      </Parameters>
      <Docs>
        <param name="hook">An initialized but unstarted <c><c>Thread</c></c> object</param>
        <summary>Registers a new virtual-machine shutdown hook.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#addShutdownHook(java.lang.Thread)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.addShutdownHook(java.lang.Thread)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the hook has already been started or if it has already
             been registered.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the VM is already shutting down.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AvailableProcessors">
      <MemberSignature Language="C#" Value="public virtual int AvailableProcessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AvailableProcessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.AvailableProcessors" />
      <MemberSignature Language="F#" Value="abstract member AvailableProcessors : unit -&gt; int&#xA;override this.AvailableProcessors : unit -&gt; int" Usage="runtime.AvailableProcessors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("availableProcessors", "()I", "GetAvailableProcessorsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of processors available to the Java virtual machine.</summary>
        <returns>the maximum number of processors available to the virtual
                     machine; never smaller than one</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#availableProcessors()" title="Reference documentation">Java documentation for <code>java.lang.Runtime.availableProcessors()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Exec">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Process Exec (string command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Process Exec(string command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Exec(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Exec : string -&gt; Java.Lang.Process&#xA;override this.Exec : string -&gt; Java.Lang.Process" Usage="runtime.Exec command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exec", "(Ljava/lang/String;)Ljava/lang/Process;", "GetExec_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="command">a specified system command.</param>
        <summary>Executes the specified string command in a separate process.</summary>
        <returns>A new <c>Process</c> object for managing the subprocess</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#exec(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.exec(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the requested program can not be executed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Exec">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Process Exec (string[] cmdarray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Process Exec(string[] cmdarray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Exec(System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Exec : string[] -&gt; Java.Lang.Process&#xA;override this.Exec : string[] -&gt; Java.Lang.Process" Usage="runtime.Exec cmdarray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exec", "([Ljava/lang/String;)Ljava/lang/Process;", "GetExec_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmdarray" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="cmdarray">To be added.</param>
        <summary>Executes the specified string command in a separate process.</summary>
        <returns>A new <c>Process</c> object for managing the subprocess</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#exec(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.exec(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the requested program can not be executed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Exec">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Process Exec (string command, string[] envp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Process Exec(string command, string[] envp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Exec(System.String,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Exec : string * string[] -&gt; Java.Lang.Process&#xA;override this.Exec : string * string[] -&gt; Java.Lang.Process" Usage="runtime.Exec (command, envp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exec", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;", "GetExec_Ljava_lang_String_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="envp" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="command">a specified system command.</param>
        <param name="envp">the array containing the environment to start the new process
            in.</param>
        <summary>Executes the specified string command in a separate process.</summary>
        <returns>A new <c>Process</c> object for managing the subprocess</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#exec(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.exec(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the requested program can not be executed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Exec">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Process Exec (string[] cmdarray, string[] envp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Process Exec(string[] cmdarray, string[] envp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Exec(System.String[],System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Exec : string[] * string[] -&gt; Java.Lang.Process&#xA;override this.Exec : string[] * string[] -&gt; Java.Lang.Process" Usage="runtime.Exec (cmdarray, envp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exec", "([Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;", "GetExec_arrayLjava_lang_String_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmdarray" Type="System.String[]" />
        <Parameter Name="envp" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="cmdarray">To be added.</param>
        <param name="envp">the array containing the environment to start the new process
            in.</param>
        <summary>Executes the specified string command in a separate process.</summary>
        <returns>A new <c>Process</c> object for managing the subprocess</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#exec(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.exec(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the requested program can not be executed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Exec">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Process Exec (string command, string[] envp, Java.IO.File dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Process Exec(string command, string[] envp, class Java.IO.File dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Exec(System.String,System.String[],Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member Exec : string * string[] * Java.IO.File -&gt; Java.Lang.Process&#xA;override this.Exec : string * string[] * Java.IO.File -&gt; Java.Lang.Process" Usage="runtime.Exec (command, envp, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exec", "(Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;", "GetExec_Ljava_lang_String_arrayLjava_lang_String_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="envp" Type="System.String[]" />
        <Parameter Name="dir" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="command">a specified system command.</param>
        <param name="envp">the array containing the environment to start the new process
            in.</param>
        <param name="dir">To be added.</param>
        <summary>Executes the specified string command in a separate process.</summary>
        <returns>A new <c>Process</c> object for managing the subprocess</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#exec(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.exec(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the requested program can not be executed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Exec">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Process Exec (string[] cmdarray, string[] envp, Java.IO.File dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Process Exec(string[] cmdarray, string[] envp, class Java.IO.File dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Exec(System.String[],System.String[],Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member Exec : string[] * string[] * Java.IO.File -&gt; Java.Lang.Process&#xA;override this.Exec : string[] * string[] * Java.IO.File -&gt; Java.Lang.Process" Usage="runtime.Exec (cmdarray, envp, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exec", "([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;", "GetExec_arrayLjava_lang_String_arrayLjava_lang_String_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmdarray" Type="System.String[]" />
        <Parameter Name="envp" Type="System.String[]" />
        <Parameter Name="dir" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="cmdarray">To be added.</param>
        <param name="envp">the array containing the environment to start the new process
            in.</param>
        <param name="dir">To be added.</param>
        <summary>Executes the specified string command in a separate process.</summary>
        <returns>A new <c>Process</c> object for managing the subprocess</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#exec(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.exec(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the requested program can not be executed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="public virtual void Exit (int status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Exit(int32 status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Exit(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Exit : int -&gt; unit&#xA;override this.Exit : int -&gt; unit" Usage="runtime.Exit status" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exit", "(I)V", "GetExit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="status">Termination status.  By convention, a nonzero status code
                    indicates abnormal termination.</param>
        <summary>Terminates the currently running Java virtual machine by initiating its
            shutdown sequence.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#exit(int)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.exit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FreeMemory">
      <MemberSignature Language="C#" Value="public virtual long FreeMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 FreeMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.FreeMemory" />
      <MemberSignature Language="F#" Value="abstract member FreeMemory : unit -&gt; int64&#xA;override this.FreeMemory : unit -&gt; int64" Usage="runtime.FreeMemory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("freeMemory", "()J", "GetFreeMemoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the amount of free memory in the Java Virtual Machine.</summary>
        <returns>an approximation to the total amount of memory currently
                     available for future allocated objects, measured in bytes.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#freeMemory()" title="Reference documentation">Java documentation for <code>java.lang.Runtime.freeMemory()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Gc">
      <MemberSignature Language="C#" Value="public virtual void Gc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Gc() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Gc" />
      <MemberSignature Language="F#" Value="abstract member Gc : unit -&gt; unit&#xA;override this.Gc : unit -&gt; unit" Usage="runtime.Gc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("gc", "()V", "GetGcHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Runs the garbage collector.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#gc()" title="Reference documentation">Java documentation for <code>java.lang.Runtime.gc()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalizedInputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetLocalizedInputStream (System.IO.Stream in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetLocalizedInputStream(class System.IO.Stream in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.GetLocalizedInputStream(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetLocalizedInputStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.GetLocalizedInputStream : System.IO.Stream -&gt; System.IO.Stream" Usage="runtime.GetLocalizedInputStream in" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLocalizedInputStream", "(Ljava/io/InputStream;)Ljava/io/InputStream;", "GetGetLocalizedInputStream_Ljava_io_InputStream_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="in">InputStream to localize</param>
        <summary>Creates a localized version of an input stream.</summary>
        <returns>a localized input stream</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#getLocalizedInputStream(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.getLocalizedInputStream(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalizedOutputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetLocalizedOutputStream (System.IO.Stream out);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetLocalizedOutputStream(class System.IO.Stream out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.GetLocalizedOutputStream(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetLocalizedOutputStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.GetLocalizedOutputStream : System.IO.Stream -&gt; System.IO.Stream" Usage="runtime.GetLocalizedOutputStream out" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLocalizedOutputStream", "(Ljava/io/OutputStream;)Ljava/io/OutputStream;", "GetGetLocalizedOutputStream_Ljava_io_OutputStream_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="out">OutputStream to localize</param>
        <summary>Creates a localized version of an output stream.</summary>
        <returns>a localized output stream</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#getLocalizedOutputStream(java.io.OutputStream)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.getLocalizedOutputStream(java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntime">
      <MemberSignature Language="C#" Value="public static Java.Lang.Runtime GetRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Runtime GetRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.GetRuntime" />
      <MemberSignature Language="F#" Value="static member GetRuntime : unit -&gt; Java.Lang.Runtime" Usage="Java.Lang.Runtime.GetRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRuntime", "()Ljava/lang/Runtime;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Runtime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the runtime object associated with the current Java application.</summary>
        <returns>the &lt;code&gt;Runtime&lt;/code&gt; object associated with the current
                     Java application.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#getRuntime()" title="Reference documentation">Java documentation for <code>java.lang.Runtime.getRuntime()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Halt">
      <MemberSignature Language="C#" Value="public virtual void Halt (int status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Halt(int32 status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Halt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Halt : int -&gt; unit&#xA;override this.Halt : int -&gt; unit" Usage="runtime.Halt status" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("halt", "(I)V", "GetHalt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="status">Termination status.  By convention, a nonzero status code
                    indicates abnormal termination.  If the <c><c>Runtime#exit
                    exit</c></c> (equivalently, <c><c>System#exit(int)
                    System.exit</c></c>) method has already been invoked then this
                    status code will override the status code passed to that method.</param>
        <summary>Forcibly terminates the currently running Java virtual machine.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#halt(int)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.halt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Runtime.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Runtime.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.Load(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Load : string -&gt; unit&#xA;override this.Load : string -&gt; unit" Usage="runtime.Load filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("load", "(Ljava/lang/String;)V", "GetLoad_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">the file to load.</param>
        <summary>Loads the native library specified by the filename argument.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#load(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.load(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsatisfiedLinkError">if the library can not be loaded,
 either because it's not found or because there is something wrong with it.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadAsync (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadAsync(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.LoadAsync(System.String)" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : string -&gt; System.Threading.Tasks.Task" Usage="runtime.LoadAsync filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadLibrary">
      <MemberSignature Language="C#" Value="public virtual void LoadLibrary (string libname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadLibrary(string libname) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.LoadLibrary(System.String)" />
      <MemberSignature Language="F#" Value="abstract member LoadLibrary : string -&gt; unit&#xA;override this.LoadLibrary : string -&gt; unit" Usage="runtime.LoadLibrary libname" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadLibrary", "(Ljava/lang/String;)V", "GetLoadLibrary_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="libname">the name of the library.</param>
        <summary>Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt;
            argument.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#loadLibrary(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.loadLibrary(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsatisfiedLinkError">if the library can not be loaded,
 either because it's not found or because there is something wrong with it.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadLibraryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadLibraryAsync (string libname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadLibraryAsync(string libname) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.LoadLibraryAsync(System.String)" />
      <MemberSignature Language="F#" Value="member this.LoadLibraryAsync : string -&gt; System.Threading.Tasks.Task" Usage="runtime.LoadLibraryAsync libname" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="libname">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMemory">
      <MemberSignature Language="C#" Value="public virtual long MaxMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 MaxMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.MaxMemory" />
      <MemberSignature Language="F#" Value="abstract member MaxMemory : unit -&gt; int64&#xA;override this.MaxMemory : unit -&gt; int64" Usage="runtime.MaxMemory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("maxMemory", "()J", "GetMaxMemoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the maximum amount of memory that the Java virtual machine will
            attempt to use.</summary>
        <returns>the maximum amount of memory that the virtual machine will
                     attempt to use, measured in bytes</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#maxMemory()" title="Reference documentation">Java documentation for <code>java.lang.Runtime.maxMemory()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveShutdownHook">
      <MemberSignature Language="C#" Value="public virtual bool RemoveShutdownHook (Java.Lang.Thread hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveShutdownHook(class Java.Lang.Thread hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.RemoveShutdownHook(Java.Lang.Thread)" />
      <MemberSignature Language="F#" Value="abstract member RemoveShutdownHook : Java.Lang.Thread -&gt; bool&#xA;override this.RemoveShutdownHook : Java.Lang.Thread -&gt; bool" Usage="runtime.RemoveShutdownHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeShutdownHook", "(Ljava/lang/Thread;)Z", "GetRemoveShutdownHook_Ljava_lang_Thread_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="Java.Lang.Thread" />
      </Parameters>
      <Docs>
        <param name="hook">the hook to remove</param>
        <summary>De-registers a previously-registered virtual-machine shutdown hook.</summary>
        <returns>
          <c>true</c> if the specified hook had previously been
            registered and was successfully de-registered, <c>false</c>
            otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#removeShutdownHook(java.lang.Thread)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.removeShutdownHook(java.lang.Thread)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the VM is already shutting down.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RunFinalization">
      <MemberSignature Language="C#" Value="public virtual void RunFinalization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunFinalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.RunFinalization" />
      <MemberSignature Language="F#" Value="abstract member RunFinalization : unit -&gt; unit&#xA;override this.RunFinalization : unit -&gt; unit" Usage="runtime.RunFinalization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("runFinalization", "()V", "GetRunFinalizationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Runs the finalization methods of any objects pending finalization.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#runFinalization()" title="Reference documentation">Java documentation for <code>java.lang.Runtime.runFinalization()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RunFinalizersOnExit">
      <MemberSignature Language="C#" Value="public static void RunFinalizersOnExit (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunFinalizersOnExit(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.RunFinalizersOnExit(System.Boolean)" />
      <MemberSignature Language="F#" Value="static member RunFinalizersOnExit : bool -&gt; unit" Usage="Java.Lang.Runtime.RunFinalizersOnExit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("runFinalizersOnExit", "(Z)V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">true to enable finalization on exit, false to disable</param>
        <summary>Enable or disable finalization on exit; doing so specifies that the
            finalizers of all objects that have finalizers that have not yet been
            automatically invoked are to be run before the Java runtime exits.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#runFinalizersOnExit(boolean)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.runFinalizersOnExit(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Runtime.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Runtime.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Runtime.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Runtime.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalMemory">
      <MemberSignature Language="C#" Value="public virtual long TotalMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 TotalMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.TotalMemory" />
      <MemberSignature Language="F#" Value="abstract member TotalMemory : unit -&gt; int64&#xA;override this.TotalMemory : unit -&gt; int64" Usage="runtime.TotalMemory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("totalMemory", "()J", "GetTotalMemoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the total amount of memory in the Java virtual machine.</summary>
        <returns>the total amount of memory currently available for current
                     and future objects, measured in bytes.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#totalMemory()" title="Reference documentation">Java documentation for <code>java.lang.Runtime.totalMemory()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TraceInstructions">
      <MemberSignature Language="C#" Value="public virtual void TraceInstructions (bool on);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceInstructions(bool on) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.TraceInstructions(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TraceInstructions : bool -&gt; unit&#xA;override this.TraceInstructions : bool -&gt; unit" Usage="runtime.TraceInstructions on" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("traceInstructions", "(Z)V", "GetTraceInstructions_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="on" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="on">&lt;code&gt;true&lt;/code&gt; to enable instruction tracing;
                          &lt;code&gt;false&lt;/code&gt; to disable this feature.</param>
        <summary>Enables/Disables tracing of instructions.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#traceInstructions(boolean)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.traceInstructions(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TraceMethodCalls">
      <MemberSignature Language="C#" Value="public virtual void TraceMethodCalls (bool on);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceMethodCalls(bool on) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Runtime.TraceMethodCalls(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TraceMethodCalls : bool -&gt; unit&#xA;override this.TraceMethodCalls : bool -&gt; unit" Usage="runtime.TraceMethodCalls on" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("traceMethodCalls", "(Z)V", "GetTraceMethodCalls_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="on" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="on">&lt;code&gt;true&lt;/code&gt; to enable instruction tracing;
                          &lt;code&gt;false&lt;/code&gt; to disable this feature.</param>
        <summary>Enables/Disables tracing of method calls.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Runtime#traceMethodCalls(boolean)" title="Reference documentation">Java documentation for <code>java.lang.Runtime.traceMethodCalls(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
