<Type Name="Thread" FullName="Java.Lang.Thread">
  <TypeSignature Language="C#" Value="public class Thread : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IRunnable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Thread extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IRunnable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Thread" />
  <TypeSignature Language="F#" Value="type Thread = class&#xA;    inherit Object&#xA;    interface IRunnable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IRunnable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/Thread", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/Thread", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A <i>thread</i> is a thread of execution in a program.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/Thread" title="Reference documentation">Java documentation for <code>java.lang.Thread</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Allocates a new <c>Thread</c> object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#Thread()" title="Reference documentation">Java documentation for <code>java.lang.Thread.Thread()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ThreadGroup" />
        <altmember cref="T:Java.Lang.IRunnable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.IRunnable? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.IRunnable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.IRunnable -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread target" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/Runnable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/Runnable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="target">the object whose <c>run</c> method is invoked when this thread
                    is started. If <c>null</c>, this classes <c>run</c> method does
                    nothing.</param>
        <summary>Allocates a new <c>Thread</c> object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#Thread(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.lang.Thread.Thread(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ThreadGroup" />
        <altmember cref="T:Java.Lang.IRunnable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Action runHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action runHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(System.Action)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Action -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread runHandler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="runHandler" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="runHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : string -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name of the new thread</param>
        <summary>Allocates a new <c>Thread</c> object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#Thread(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Thread.Thread(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ThreadGroup" />
        <altmember cref="T:Java.Lang.IRunnable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.IRunnable? target, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.IRunnable target, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.IRunnable,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.IRunnable * string -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (target, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/Runnable;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/Runnable;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.IRunnable" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">the object whose <c>run</c> method is invoked when this thread
                    is started. If <c>null</c>, this thread's run method is invoked.</param>
        <param name="name">the name of the new thread</param>
        <summary>Allocates a new <c>Thread</c> object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#Thread(java.lang.Runnable,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Thread.Thread(java.lang.Runnable, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ThreadGroup" />
        <altmember cref="T:Java.Lang.IRunnable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.ThreadGroup? group, Java.Lang.IRunnable? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup group, class Java.Lang.IRunnable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.ThreadGroup,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.ThreadGroup * Java.Lang.IRunnable -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (group, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="group" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="target" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="group">the thread group. If <c>null</c> and there is a security
                    manager, the group is determined by SecurityManager#getThreadGroup SecurityManager.getThreadGroup().
                    If there is not a security manager or <c>SecurityManager.getThreadGroup()</c> returns <c>null</c>, the group
                    is set to the current thread's thread group.</param>
        <param name="target">the object whose <c>run</c> method is invoked when this thread
                    is started. If <c>null</c>, this thread's run method is invoked.</param>
        <summary>Allocates a new <c>Thread</c> object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#Thread(java.lang.ThreadGroup,%20java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.lang.Thread.Thread(java.lang.ThreadGroup, java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">if <c>group.destroy()</c> has already been done</exception>
        <altmember cref="T:Java.Lang.ThreadGroup" />
        <altmember cref="T:Java.Lang.IRunnable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.ThreadGroup group, Action runHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup group, class System.Action runHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.ThreadGroup,System.Action)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.ThreadGroup * Action -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (group, runHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="group" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="runHandler" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="group">To be added.</param>
        <param name="runHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.ThreadGroup? group, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup group, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.ThreadGroup,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.ThreadGroup * string -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (group, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="group" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="group">the thread group. If <c>null</c> and there is a security
                    manager, the group is determined by SecurityManager#getThreadGroup SecurityManager.getThreadGroup().
                    If there is not a security manager or <c>SecurityManager.getThreadGroup()</c> returns <c>null</c>, the group
                    is set to the current thread's thread group.</param>
        <param name="name">the name of the new thread</param>
        <summary>Allocates a new <c>Thread</c> object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#Thread(java.lang.ThreadGroup,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Thread.Thread(java.lang.ThreadGroup, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">if <c>group.destroy()</c> has already been done</exception>
        <altmember cref="T:Java.Lang.ThreadGroup" />
        <altmember cref="T:Java.Lang.IRunnable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Action runHandler, string threadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action runHandler, string threadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(System.Action,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Action * string -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (runHandler, threadName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="runHandler" Type="System.Action" />
        <Parameter Name="threadName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="runHandler">To be added.</param>
        <param name="threadName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Thread (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.ThreadGroup? group, Java.Lang.IRunnable? target, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup group, class Java.Lang.IRunnable target, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.ThreadGroup,Java.Lang.IRunnable,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.ThreadGroup * Java.Lang.IRunnable * string -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (group, target, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="group" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="target" Type="Java.Lang.IRunnable" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="group">the thread group. If <c>null</c> and there is a security
                    manager, the group is determined by SecurityManager#getThreadGroup SecurityManager.getThreadGroup().
                    If there is not a security manager or <c>SecurityManager.getThreadGroup()</c> returns <c>null</c>, the group
                    is set to the current thread's thread group.</param>
        <param name="target">the object whose <c>run</c> method is invoked when this thread
                    is started. If <c>null</c>, this thread's run method is invoked.</param>
        <param name="name">the name of the new thread</param>
        <summary>Allocates a new <c>Thread</c> object so that it has <c>target</c>
            as its run object, has the specified <c>name</c> as its name,
            and belongs to the thread group referred to by <c>group</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#Thread(java.lang.ThreadGroup,%20java.lang.Runnable,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Thread.Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">if <c>group.destroy()</c> has already been done</exception>
        <altmember cref="T:Java.Lang.ThreadGroup" />
        <altmember cref="T:Java.Lang.IRunnable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.ThreadGroup group, Action runHandler, string threadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup group, class System.Action runHandler, string threadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.ThreadGroup,System.Action,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.ThreadGroup * Action * string -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (group, runHandler, threadName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="group" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="runHandler" Type="System.Action" />
        <Parameter Name="threadName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="group">To be added.</param>
        <param name="runHandler">To be added.</param>
        <param name="threadName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.ThreadGroup? group, Java.Lang.IRunnable? target, string name, long stackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup group, class Java.Lang.IRunnable target, string name, int64 stackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.ThreadGroup,Java.Lang.IRunnable,System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.ThreadGroup * Java.Lang.IRunnable * string * int64 -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (group, target, name, stackSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="group" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="target" Type="Java.Lang.IRunnable" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="stackSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="group">the thread group. If <c>null</c> and there is a security
                    manager, the group is determined by SecurityManager#getThreadGroup SecurityManager.getThreadGroup().
                    If there is not a security manager or <c>SecurityManager.getThreadGroup()</c> returns <c>null</c>, the group
                    is set to the current thread's thread group.</param>
        <param name="target">the object whose <c>run</c> method is invoked when this thread
                    is started. If <c>null</c>, this thread's run method is invoked.</param>
        <param name="name">the name of the new thread</param>
        <param name="stackSize">the desired stack size for the new thread, or zero to indicate
                    that this parameter is to be ignored.</param>
        <summary>Allocates a new <c>Thread</c> object so that it has <c>target</c>
            as its run object, has the specified <c>name</c> as its name,
            and belongs to the thread group referred to by <c>group</c>, and has
            the specified <i>stack size</i>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#Thread(java.lang.ThreadGroup,%20java.lang.Runnable,%20java.lang.String,%20long)" title="Reference documentation">Java documentation for <code>java.lang.Thread.Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">if <c>group.destroy()</c> has already been done</exception>
        <altmember cref="T:Java.Lang.ThreadGroup" />
        <altmember cref="T:Java.Lang.IRunnable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (Java.Lang.ThreadGroup group, Action runHandler, string threadName, long stackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup group, class System.Action runHandler, string threadName, int64 stackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.#ctor(Java.Lang.ThreadGroup,System.Action,System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Thread : Java.Lang.ThreadGroup * Action * string * int64 -&gt; Java.Lang.Thread" Usage="new Java.Lang.Thread (group, runHandler, threadName, stackSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="group" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="runHandler" Type="System.Action" />
        <Parameter Name="threadName" Type="System.String" />
        <Parameter Name="stackSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="group">To be added.</param>
        <param name="runHandler">To be added.</param>
        <param name="threadName">To be added.</param>
        <param name="stackSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCount">
      <MemberSignature Language="C#" Value="public static int ActiveCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ActiveCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.ActiveCount" />
      <MemberSignature Language="F#" Value="static member ActiveCount : unit -&gt; int" Usage="Java.Lang.Thread.ActiveCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("activeCount", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("activeCount", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an estimate of the number of active threads in the current
            thread's java.</summary>
        <returns>an estimate of the number of active threads in the current
                     thread's thread group and in any other thread group that
                     has the current thread's thread group as an ancestor</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#activeCount()" title="Reference documentation">Java documentation for <code>java.lang.Thread.activeCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllStackTraces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;Java.Lang.Thread,Java.Lang.StackTraceElement[]&gt; AllStackTraces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;class Java.Lang.Thread, class Java.Lang.StackTraceElement[]&gt; AllStackTraces" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.AllStackTraces" />
      <MemberSignature Language="F#" Value="member this.AllStackTraces : System.Collections.Generic.IDictionary&lt;Java.Lang.Thread, Java.Lang.StackTraceElement[]&gt;" Usage="Java.Lang.Thread.AllStackTraces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllStackTraces", "()Ljava/util/Map;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllStackTraces", "()Ljava/util/Map;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;Java.Lang.Thread,Java.Lang.StackTraceElement[]&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a map of stack traces for all live threads.</summary>
        <value>a <c>Map</c> from <c>Thread</c> to an array of
            <c>StackTraceElement</c> that represents the stack trace of
            the corresponding thread.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getAllStackTraces()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getAllStackTraces()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public void CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.CheckAccess" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; unit" Usage="thread.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkAccess", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkAccess", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines if the currently running thread has permission to
            modify this thread.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#checkAccess()" title="Reference documentation">Java documentation for <code>java.lang.Thread.checkAccess()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContextClassLoader">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ClassLoader? ContextClassLoader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ClassLoader ContextClassLoader" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.ContextClassLoader" />
      <MemberSignature Language="F#" Value="member this.ContextClassLoader : Java.Lang.ClassLoader with get, set" Usage="Java.Lang.Thread.ContextClassLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContextClassLoader", "()Ljava/lang/ClassLoader;", "GetGetContextClassLoaderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContextClassLoader", "()Ljava/lang/ClassLoader;", "GetGetContextClassLoaderHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setContextClassLoader", "(Ljava/lang/ClassLoader;)V", "GetSetContextClassLoader_Ljava_lang_ClassLoader_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setContextClassLoader", "(Ljava/lang/ClassLoader;)V", "GetSetContextClassLoader_Ljava_lang_ClassLoader_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ClassLoader</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="cl">the context ClassLoader for this Thread, or null  indicating the
                    system class loader (or, failing that, the bootstrap class loader)</param>
        <summary>Returns the context ClassLoader for this Thread. -or- Sets the context ClassLoader for this Thread.</summary>
        <value>the context ClassLoader for this Thread, or <c>null</c>
                     indicating the system class loader (or, failing that, the
                     bootstrap class loader)</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getContextClassLoader()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getContextClassLoader()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#setContextClassLoader(java.lang.ClassLoader)" title="Reference documentation">Java documentation for <code>java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ClassLoader" />
        <altmember cref="P:Java.Lang.Thread.ContextClassLoader" />
        <altmember cref="P:Java.Lang.Thread.ContextClassLoader" />
      </Docs>
    </Member>
    <Member MemberName="CountStackFrames">
      <MemberSignature Language="C#" Value="public virtual int CountStackFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CountStackFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.CountStackFrames" />
      <MemberSignature Language="F#" Value="abstract member CountStackFrames : unit -&gt; int&#xA;override this.CountStackFrames : unit -&gt; int" Usage="thread.CountStackFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("countStackFrames", "()I", "GetCountStackFramesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("countStackFrames", "()I", "GetCountStackFramesHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Counts the number of stack frames in this thread.</summary>
        <returns>the number of stack frames in this thread.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#countStackFrames()" title="Reference documentation">Java documentation for <code>java.lang.Thread.countStackFrames()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrentThread">
      <MemberSignature Language="C#" Value="public static Java.Lang.Thread CurrentThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Thread CurrentThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.CurrentThread" />
      <MemberSignature Language="F#" Value="static member CurrentThread : unit -&gt; Java.Lang.Thread" Usage="Java.Lang.Thread.CurrentThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("currentThread", "()Ljava/lang/Thread;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("currentThread", "()Ljava/lang/Thread;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Thread</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a reference to the currently executing thread object.</summary>
        <returns>the currently executing thread.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#currentThread()" title="Reference documentation">Java documentation for <code>java.lang.Thread.currentThread()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Daemon">
      <MemberSignature Language="C#" Value="public bool Daemon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Daemon" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.Daemon" />
      <MemberSignature Language="F#" Value="member this.Daemon : bool with get, set" Usage="Java.Lang.Thread.Daemon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDaemon", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDaemon", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDaemon", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDaemon", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">if <c>true</c>, marks this thread as a daemon thread</param>
        <summary>Tests if this thread is a daemon thread. -or- Marks this thread as either a #isDaemon daemon thread
            or a user thread.</summary>
        <value>&lt;code&gt;true&lt;/code&gt; if this thread is a daemon thread;
                     &lt;code&gt;false&lt;/code&gt; otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#isDaemon()" title="Reference documentation">Java documentation for <code>java.lang.Thread.isDaemon()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#setDaemon(boolean)" title="Reference documentation">Java documentation for <code>java.lang.Thread.setDaemon(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">- if this thread has already started.
</exception>
        <exception cref="T:Java.Lang.IllegalThreadStateException">- if this thread has already started.
</exception>
        <exception cref="T:Java.Lang.IllegalThreadStateException">- if this thread has already started.
</exception>
        <exception cref="T:Java.Lang.IllegalThreadStateException">- if this thread has already started.
</exception>
        <exception cref="T:Java.Lang.IllegalThreadStateException">- if this thread has already started.
</exception>
        <exception cref="T:Java.Lang.IllegalThreadStateException">- if this thread has already started.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultUncaughtExceptionHandler">
      <MemberSignature Language="C#" Value="public static Java.Lang.Thread.IUncaughtExceptionHandler? DefaultUncaughtExceptionHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Lang.Thread/IUncaughtExceptionHandler DefaultUncaughtExceptionHandler" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.DefaultUncaughtExceptionHandler" />
      <MemberSignature Language="F#" Value="member this.DefaultUncaughtExceptionHandler : Java.Lang.Thread.IUncaughtExceptionHandler with get, set" Usage="Java.Lang.Thread.DefaultUncaughtExceptionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDefaultUncaughtExceptionHandler", "()Ljava/lang/Thread$UncaughtExceptionHandler;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDefaultUncaughtExceptionHandler", "()Ljava/lang/Thread$UncaughtExceptionHandler;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDefaultUncaughtExceptionHandler", "(Ljava/lang/Thread$UncaughtExceptionHandler;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDefaultUncaughtExceptionHandler", "(Ljava/lang/Thread$UncaughtExceptionHandler;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Thread+IUncaughtExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the default handler invoked when a thread abruptly terminates
            due to an uncaught exception. -or- Set the default handler invoked when a thread abruptly terminates
            due to an uncaught exception, and no other handler has been defined
            for that thread.</summary>
        <value>the default uncaught exception handler for all threads</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getDefaultUncaughtExceptionHandler()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getDefaultUncaughtExceptionHandler()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#setDefaultUncaughtExceptionHandler(java.lang.UncaughtExceptionHandler)" title="Reference documentation">Java documentation for <code>java.lang.Thread.setDefaultUncaughtExceptionHandler(java.lang.UncaughtExceptionHandler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public virtual void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Destroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Destroy" />
      <MemberSignature Language="F#" Value="abstract member Destroy : unit -&gt; unit&#xA;override this.Destroy : unit -&gt; unit" Usage="thread.Destroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("destroy", "()V", "GetDestroyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("destroy", "()V", "GetDestroyHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Throws <c>UnsupportedOperationException</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#destroy()" title="Reference documentation">Java documentation for <code>java.lang.Thread.destroy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DumpStack">
      <MemberSignature Language="C#" Value="public static void DumpStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DumpStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.DumpStack" />
      <MemberSignature Language="F#" Value="static member DumpStack : unit -&gt; unit" Usage="Java.Lang.Thread.DumpStack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dumpStack", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dumpStack", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prints a stack trace of the current thread to the standard error stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#dumpStack()" title="Reference documentation">Java documentation for <code>java.lang.Thread.dumpStack()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Throwable.PrintStackTrace" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public static int Enumerate (Java.Lang.Thread[]? tarray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Enumerate(class Java.Lang.Thread[] tarray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Enumerate(Java.Lang.Thread[])" />
      <MemberSignature Language="F#" Value="static member Enumerate : Java.Lang.Thread[] -&gt; int" Usage="Java.Lang.Thread.Enumerate tarray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tarray" Type="Java.Lang.Thread[]" />
      </Parameters>
      <Docs>
        <param name="tarray">an array into which to put the list of threads</param>
        <summary>Copies into the specified array every active thread in the current
            thread's thread group and its subgroups.</summary>
        <returns>the number of threads put into the array</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#enumerate(java.lang.Thread[])" title="Reference documentation">Java documentation for <code>java.lang.Thread.enumerate(java.lang.Thread[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetStackTrace">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.StackTraceElement[] GetStackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StackTraceElement[] GetStackTrace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.GetStackTrace" />
      <MemberSignature Language="F#" Value="abstract member GetStackTrace : unit -&gt; Java.Lang.StackTraceElement[]&#xA;override this.GetStackTrace : unit -&gt; Java.Lang.StackTraceElement[]" Usage="thread.GetStackTrace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStackTrace", "()[Ljava/lang/StackTraceElement;", "GetGetStackTraceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStackTrace", "()[Ljava/lang/StackTraceElement;", "GetGetStackTraceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StackTraceElement[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of stack trace elements representing the stack dump
            of this thread.</summary>
        <returns>an array of <c>StackTraceElement</c>,
            each represents one stack frame.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getStackTrace()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getStackTrace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Thread.State GetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Thread/State GetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.GetState" />
      <MemberSignature Language="F#" Value="abstract member GetState : unit -&gt; Java.Lang.Thread.State&#xA;override this.GetState : unit -&gt; Java.Lang.Thread.State" Usage="thread.GetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getState", "()Ljava/lang/Thread$State;", "GetGetStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getState", "()Ljava/lang/Thread$State;", "GetGetStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Thread+State</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the state of this thread.</summary>
        <returns>this thread's state.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getState()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HoldsLock">
      <MemberSignature Language="C#" Value="public static bool HoldsLock (Java.Lang.Object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HoldsLock(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.HoldsLock(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="static member HoldsLock : Java.Lang.Object -&gt; bool" Usage="Java.Lang.Thread.HoldsLock obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("holdsLock", "(Ljava/lang/Object;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("holdsLock", "(Ljava/lang/Object;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">the object on which to test lock ownership</param>
        <summary>Returns <c>true</c> if and only if the current thread holds the
            monitor lock on the specified object.</summary>
        <returns>
          <c>true</c> if the current thread holds the monitor lock on
                    the specified object.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#holdsLock(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.Thread.holdsLock(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual long Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Id" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.Id" />
      <MemberSignature Language="F#" Value="member this.Id : int64" Usage="Java.Lang.Thread.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getId", "()J", "GetGetIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getId", "()J", "GetGetIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the identifier of this Thread.</summary>
        <value>this thread's ID.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getId()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public virtual void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Interrupt" />
      <MemberSignature Language="F#" Value="abstract member Interrupt : unit -&gt; unit&#xA;override this.Interrupt : unit -&gt; unit" Usage="thread.Interrupt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("interrupt", "()V", "GetInterruptHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("interrupt", "()V", "GetInterruptHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrupts this thread.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#interrupt()" title="Reference documentation">Java documentation for <code>java.lang.Thread.interrupt()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Interrupted" />
        <altmember cref="P:Java.Lang.Thread.IsInterrupted" />
      </Docs>
    </Member>
    <Member MemberName="Interrupted">
      <MemberSignature Language="C#" Value="public static bool Interrupted ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Interrupted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Interrupted" />
      <MemberSignature Language="F#" Value="static member Interrupted : unit -&gt; bool" Usage="Java.Lang.Thread.Interrupted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("interrupted", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("interrupted", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tests whether the current thread has been interrupted.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the current thread has been interrupted;
                     &lt;code&gt;false&lt;/code&gt; otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#interrupted()" title="Reference documentation">Java documentation for <code>java.lang.Thread.interrupted()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.CurrentThread" />
        <altmember cref="M:Java.Lang.Thread.Interrupt" />
        <altmember cref="P:Java.Lang.Thread.IsInterrupted" />
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.IsAlive" />
      <MemberSignature Language="F#" Value="member this.IsAlive : bool" Usage="Java.Lang.Thread.IsAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAlive", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAlive", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests if this thread is alive.</summary>
        <value>&lt;code&gt;true&lt;/code&gt; if this thread is alive;
                     &lt;code&gt;false&lt;/code&gt; otherwise.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#isAlive()" title="Reference documentation">Java documentation for <code>java.lang.Thread.isAlive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Start" />
      </Docs>
    </Member>
    <Member MemberName="IsInterrupted">
      <MemberSignature Language="C#" Value="public virtual bool IsInterrupted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterrupted" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.IsInterrupted" />
      <MemberSignature Language="F#" Value="member this.IsInterrupted : bool" Usage="Java.Lang.Thread.IsInterrupted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInterrupted", "()Z", "GetIsInterruptedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInterrupted", "()Z", "GetIsInterruptedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests whether this thread has been interrupted.</summary>
        <value>&lt;code&gt;true&lt;/code&gt; if this thread has been interrupted;
                     &lt;code&gt;false&lt;/code&gt; otherwise.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#isInterrupted()" title="Reference documentation">Java documentation for <code>java.lang.Thread.isInterrupted()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Interrupt" />
        <altmember cref="M:Java.Lang.Thread.Interrupted" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Thread.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public void Join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Join" />
      <MemberSignature Language="F#" Value="member this.Join : unit -&gt; unit" Usage="thread.Join " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("join", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("join", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Waits for this thread to die.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#join()" title="Reference documentation">Java documentation for <code>java.lang.Thread.join()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InterruptedException">if the current thread has been interrupted.
         The interrupted status of the current thread will be cleared before the exception is
         thrown.</exception>
        <altmember cref="M:Java.Lang.Object.NotifyAll" />
        <altmember cref="T:Java.Lang.ThreadDeath" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public void Join (long millis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Join(int64 millis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Join(System.Int64)" />
      <MemberSignature Language="F#" Value="member this.Join : int64 -&gt; unit" Usage="thread.Join millis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("join", "(J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("join", "(J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="millis">the time to wait in milliseconds</param>
        <summary>Waits at most <c>millis</c> milliseconds for this thread to
            die.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#join(long)" title="Reference documentation">Java documentation for <code>java.lang.Thread.join(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InterruptedException">if the current thread has been interrupted.
         The interrupted status of the current thread will be cleared before the exception is
         thrown.</exception>
        <altmember cref="M:Java.Lang.Object.NotifyAll" />
        <altmember cref="T:Java.Lang.ThreadDeath" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public void Join (long millis, int nanos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Join(int64 millis, int32 nanos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Join(System.Int64,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Join : int64 * int -&gt; unit" Usage="thread.Join (millis, nanos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("join", "(JI)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("join", "(JI)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
        <Parameter Name="nanos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millis">the time to wait in milliseconds</param>
        <param name="nanos">
          <c>0-999999</c> additional nanoseconds to wait</param>
        <summary>Waits at most <c>millis</c> milliseconds plus
            <c>nanos</c> nanoseconds for this thread to die.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#join(long,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Thread.join(long, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InterruptedException">if the current thread has been interrupted.
         The interrupted status of the current thread will be cleared before the exception is
         thrown.</exception>
        <altmember cref="M:Java.Lang.Object.NotifyAll" />
        <altmember cref="T:Java.Lang.ThreadDeath" />
      </Docs>
    </Member>
    <Member MemberName="MaxPriority">
      <MemberSignature Language="C#" Value="public const int MaxPriority = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxPriority = (10)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Thread.MaxPriority" />
      <MemberSignature Language="F#" Value="val mutable MaxPriority : int" Usage="Java.Lang.Thread.MaxPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_PRIORITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_PRIORITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>The maximum priority that a thread can have.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#MAX_PRIORITY" title="Reference documentation">Java documentation for <code>java.lang.Thread.MAX_PRIORITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinPriority">
      <MemberSignature Language="C#" Value="public const int MinPriority = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinPriority = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Thread.MinPriority" />
      <MemberSignature Language="F#" Value="val mutable MinPriority : int" Usage="Java.Lang.Thread.MinPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_PRIORITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_PRIORITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The minimum priority that a thread can have.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#MIN_PRIORITY" title="Reference documentation">Java documentation for <code>java.lang.Thread.MIN_PRIORITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Java.Lang.Thread.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setName", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setName", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="name">the new name for this thread.</param>
        <summary>Returns this thread's name. -or- Changes the name of this thread to be equal to the argument
            &lt;code&gt;name&lt;/code&gt;.</summary>
        <value>this thread's name.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getName()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getName()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#setName(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Thread.setName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Lang.Thread.Name" />
      </Docs>
    </Member>
    <Member MemberName="NormPriority">
      <MemberSignature Language="C#" Value="public const int NormPriority = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NormPriority = (5)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Thread.NormPriority" />
      <MemberSignature Language="F#" Value="val mutable NormPriority : int" Usage="Java.Lang.Thread.NormPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NORM_PRIORITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NORM_PRIORITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>The default priority that is assigned to a thread.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#NORM_PRIORITY" title="Reference documentation">Java documentation for <code>java.lang.Thread.NORM_PRIORITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.Priority" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="Java.Lang.Thread.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPriority", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPriority", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPriority", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPriority", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newPriority">priority to set this thread to</param>
        <summary>Returns this thread's priority. -or- Changes the priority of this thread.</summary>
        <value>this thread's priority.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getPriority()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getPriority()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#setPriority(int)" title="Reference documentation">Java documentation for <code>java.lang.Thread.setPriority(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">- if the new priority is greater than <see cref="F:Java.Lang.Thread.MaxPriority" />
     or less than <see cref="F:Java.Lang.Thread.MinPriority" /></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">- if the new priority is greater than <see cref="F:Java.Lang.Thread.MaxPriority" />
     or less than <see cref="F:Java.Lang.Thread.MinPriority" /></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">- if the new priority is greater than <see cref="F:Java.Lang.Thread.MaxPriority" />
     or less than <see cref="F:Java.Lang.Thread.MinPriority" /></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">- if the new priority is greater than <see cref="F:Java.Lang.Thread.MaxPriority" />
     or less than <see cref="F:Java.Lang.Thread.MinPriority" /></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">- if the new priority is greater than <see cref="F:Java.Lang.Thread.MaxPriority" />
     or less than <see cref="F:Java.Lang.Thread.MinPriority" /></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">- if the new priority is greater than <see cref="F:Java.Lang.Thread.MaxPriority" />
     or less than <see cref="F:Java.Lang.Thread.MinPriority" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Resume" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="thread.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resume", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resume", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Throws <c>UnsupportedOperationException</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#resume()" title="Reference documentation">Java documentation for <code>java.lang.Thread.resume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public virtual void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Run" />
      <MemberSignature Language="F#" Value="abstract member Run : unit -&gt; unit&#xA;override this.Run : unit -&gt; unit" Usage="thread.Run " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IRunnable.Run</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("run", "()V", "GetRunHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("run", "()V", "GetRunHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If this thread was constructed using a separate
            &lt;code&gt;Runnable&lt;/code&gt; run object, then that
            &lt;code&gt;Runnable&lt;/code&gt; object's &lt;code&gt;run&lt;/code&gt; method is called;
            otherwise, this method does nothing and returns.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#run()" title="Reference documentation">Java documentation for <code>java.lang.Thread.run()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Start" />
      </Docs>
    </Member>
    <Member MemberName="Sleep">
      <MemberSignature Language="C#" Value="public static void Sleep (long millis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sleep(int64 millis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Sleep(System.Int64)" />
      <MemberSignature Language="F#" Value="static member Sleep : int64 -&gt; unit" Usage="Java.Lang.Thread.Sleep millis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sleep", "(J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sleep", "(J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="millis">the length of time to sleep in milliseconds</param>
        <summary>Causes the currently executing thread to sleep (temporarily cease
            execution) for the specified number of milliseconds, subject to
            the precision and accuracy of system timers and schedulers.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#sleep(long)" title="Reference documentation">Java documentation for <code>java.lang.Thread.sleep(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InterruptedException">if the current thread has been interrupted.
            The interrupted status of the current thread will be cleared before the exception
            is thrown.</exception>
        <altmember cref="M:Java.Lang.Thread.Interrupt" />
      </Docs>
    </Member>
    <Member MemberName="Sleep">
      <MemberSignature Language="C#" Value="public static void Sleep (long millis, int nanos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sleep(int64 millis, int32 nanos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Sleep(System.Int64,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sleep : int64 * int -&gt; unit" Usage="Java.Lang.Thread.Sleep (millis, nanos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sleep", "(JI)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sleep", "(JI)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
        <Parameter Name="nanos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millis">the length of time to sleep in milliseconds</param>
        <param name="nanos">
          <c>0-999999</c> additional nanoseconds to sleep</param>
        <summary>Causes the currently executing thread to sleep (temporarily cease
            execution) for the specified number of milliseconds plus the specified
            number of nanoseconds, subject to the precision and accuracy of system
            timers and schedulers.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#sleep(long,%20int)" title="Reference documentation">Java documentation for <code>java.lang.Thread.sleep(long, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InterruptedException">if the current thread has been interrupted.
            The interrupted status of the current thread will be cleared before the exception
            is thrown.</exception>
        <altmember cref="M:Java.Lang.Thread.Interrupt" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="thread.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes this thread to begin execution; the Java Virtual Machine
            calls the &lt;code&gt;run&lt;/code&gt; method of this thread.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#start()" title="Reference documentation">Java documentation for <code>java.lang.Thread.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">- if this thread has already started.</exception>
        <altmember cref="M:Java.Lang.Thread.Run" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Stop" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="thread.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Throws <c>UnsupportedOperationException</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#stop()" title="Reference documentation">Java documentation for <code>java.lang.Thread.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (Java.Lang.Throwable? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class Java.Lang.Throwable obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Stop(Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="member this.Stop : Java.Lang.Throwable -&gt; unit" Usage="thread.Stop obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "(Ljava/lang/Throwable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "(Ljava/lang/Throwable;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="obj">ignored</param>
        <summary>Throws <c>UnsupportedOperationException</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#stop(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.lang.Thread.stop(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Suspend" />
      <MemberSignature Language="F#" Value="member this.Suspend : unit -&gt; unit" Usage="thread.Suspend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("suspend", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("suspend", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Throws <c>UnsupportedOperationException</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#suspend()" title="Reference documentation">Java documentation for <code>java.lang.Thread.suspend()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThreadGroup">
      <MemberSignature Language="C#" Value="public Java.Lang.ThreadGroup? ThreadGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ThreadGroup ThreadGroup" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.ThreadGroup" />
      <MemberSignature Language="F#" Value="member this.ThreadGroup : Java.Lang.ThreadGroup" Usage="Java.Lang.Thread.ThreadGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getThreadGroup", "()Ljava/lang/ThreadGroup;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getThreadGroup", "()Ljava/lang/ThreadGroup;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ThreadGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the thread group to which this thread belongs.</summary>
        <value>this thread's thread group.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getThreadGroup()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getThreadGroup()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Thread.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Thread.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncaughtExceptionHandler">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Thread.IUncaughtExceptionHandler? UncaughtExceptionHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Thread/IUncaughtExceptionHandler UncaughtExceptionHandler" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Thread.UncaughtExceptionHandler" />
      <MemberSignature Language="F#" Value="member this.UncaughtExceptionHandler : Java.Lang.Thread.IUncaughtExceptionHandler with get, set" Usage="Java.Lang.Thread.UncaughtExceptionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUncaughtExceptionHandler", "()Ljava/lang/Thread$UncaughtExceptionHandler;", "GetGetUncaughtExceptionHandlerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUncaughtExceptionHandler", "()Ljava/lang/Thread$UncaughtExceptionHandler;", "GetGetUncaughtExceptionHandlerHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setUncaughtExceptionHandler", "(Ljava/lang/Thread$UncaughtExceptionHandler;)V", "GetSetUncaughtExceptionHandler_Ljava_lang_Thread_UncaughtExceptionHandler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setUncaughtExceptionHandler", "(Ljava/lang/Thread$UncaughtExceptionHandler;)V", "GetSetUncaughtExceptionHandler_Ljava_lang_Thread_UncaughtExceptionHandler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Thread+IUncaughtExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the handler invoked when this thread abruptly terminates
            due to an uncaught exception. -or- Set the handler invoked when this thread abruptly terminates
            due to an uncaught exception.</summary>
        <value>the uncaught exception handler for this thread</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#getUncaughtExceptionHandler()" title="Reference documentation">Java documentation for <code>java.lang.Thread.getUncaughtExceptionHandler()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#setUncaughtExceptionHandler(java.lang.UncaughtExceptionHandler)" title="Reference documentation">Java documentation for <code>java.lang.Thread.setUncaughtExceptionHandler(java.lang.UncaughtExceptionHandler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static void Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Thread.Yield" />
      <MemberSignature Language="F#" Value="static member Yield : unit -&gt; unit" Usage="Java.Lang.Thread.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("yield", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("yield", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>A hint to the scheduler that the current thread is willing to yield
            its current use of a processor.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Thread#yield()" title="Reference documentation">Java documentation for <code>java.lang.Thread.yield()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
