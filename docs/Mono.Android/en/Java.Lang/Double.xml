<Type Name="Double" FullName="Java.Lang.Double">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Double&#xA;Inherits Number&#xA;Implements IComparable, IConvertible, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Double sealed : Java::Lang::Number, IConvertible, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IComparable" />
  <TypeSignature Language="C#" Value="public sealed class Double : Java.Lang.Number, IConvertible, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Double extends Java.Lang.Number implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IComparable, class System.IConvertible, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Double" />
  <TypeSignature Language="F#" Value="type Double = class&#xA;    inherit Number&#xA;    interface IConvertible&#xA;    interface IComparable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Number</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/Double", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/Double", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>Double</c> class wraps a value of the primitive type
            <c>double</c> in an object.</summary>
    <remarks>
      <para>The <c>Double</c> class wraps a value of the primitive type
            <c>double</c> in an object. An object of type
            <c>Double</c> contains a single field whose type is
            <c>double</c>.</para>
      <para>In addition, this class provides several methods for converting a
            <c>double</c> to a <c>String</c> and a
            <c>String</c> to a <c>double</c>, as well as other
            constants and methods useful when dealing with a
            <c>double</c>.
            
            &lt;!-- Android-removed: paragraph on ValueBased</para>
      <para>This is a <see href="https://developer.android.com//java.base/java/lang/doc-files/ValueBased.html">value-based</see>
            class; programmers should treat instances that are
            #equals(Object) equal as interchangeable and should not
            use instances for synchronization, or unpredictable behavior may
            occur. For example, in a future release, synchronization may fail.
            --&gt;
            
            &lt;h2&gt;equivalenceRelation&gt;Floating-point Equality, Equivalence,
            and Comparison&lt;/h2&gt;
            
            IEEE 754 floating-point values include finite nonzero values,
            signed zeros (<c>+0.0</c> and <c>-0.0</c>), signed infinities
            Double#POSITIVE_INFINITY positive infinity and
            Double#NEGATIVE_INFINITY negative infinity), and
            Double#NaN NaN (not-a-number).</para>
      <para>An &lt;em&gt;equivalence relation&lt;/em&gt; on a set of values is a boolean
            relation on pairs of values that is reflexive, symmetric, and
            transitive. For more discussion of equivalence relations and object
            equality, see the <c>Object#equals Object.equals</c>
            specification. An equivalence relation partitions the values it
            operates over into sets called <i>equivalence classes</i>.  All the
            members of the equivalence class are equal to each other under the
            relation. An equivalence class may contain only a single member. At
            least for some purposes, all the members of an equivalence class
            are substitutable for each other.  In particular, in a numeric
            expression equivalent values can be &lt;em&gt;substituted&lt;/em&gt; for one
            another without changing the result of the expression, meaning
            changing the equivalence class of the result of the expression.</para>
      <para>Notably, the built-in <c>==</c> operation on floating-point
            values is &lt;em&gt;not&lt;/em&gt; an equivalence relation. Despite not
            defining an equivalence relation, the semantics of the IEEE 754
            <c>==</c> operator were deliberately designed to meet other needs
            of numerical computation. There are two exceptions where the
            properties of an equivalence relation are not satisfied by <c>==</c> on floating-point values:
            
            &lt;ul&gt;
            
            &lt;li&gt;If <c>v1</c> and <c>v2</c> are both NaN, then <c>v1
            == v2</c> has the value <c>false</c>. Therefore, for two NaN
            arguments the &lt;em&gt;reflexive&lt;/em&gt; property of an equivalence
            relation is &lt;em&gt;not&lt;/em&gt; satisfied by the <c>==</c> operator.
            
            &lt;li&gt;If <c>v1</c> represents <c>+0.0</c> while <c>v2</c>
            represents <c>-0.0</c>, or vice versa, then <c>v1 == v2</c> has
            the value <c>true</c> even though <c>+0.0</c> and <c>-0.0</c>
            are distinguishable under various floating-point operations. For
            example, <c>1.0/+0.0</c> evaluates to positive infinity while
            <c>1.0/-0.0</c> evaluates to &lt;em&gt;negative&lt;/em&gt; infinity and
            positive infinity and negative infinity are neither equal to each
            other nor equivalent to each other. Thus, while a signed zero input
            most commonly determines the sign of a zero result, because of
            dividing by zero, <c>+0.0</c> and <c>-0.0</c> may not be
            substituted for each other in general. The sign of a zero input
            also has a non-substitutable effect on the result of some math
            library methods.
            
            &lt;/ul&gt;</para>
      <para>For ordered comparisons using the built-in comparison operators
            (<c>&lt;</c>, <c>&lt;=</c>, etc.), NaN values have another anomalous
            situation: a NaN is neither less than, nor greater than, nor equal
            to any value, including itself. This means the <i>trichotomy of
            comparison</i> does &lt;em&gt;not&lt;/em&gt; hold.</para>
      <para>To provide the appropriate semantics for <c>equals</c> and
            <c>compareTo</c> methods, those methods cannot simply be wrappers
            around <c>==</c> or ordered comparison operations. Instead, <c>Double#equals equals</c> defines NaN arguments to be equal to each
            other and defines <c>+0.0</c> to &lt;em&gt;not&lt;/em&gt; be equal to <c>-0.0</c>, restoring reflexivity. For comparisons, <c>Double#compareTo compareTo</c> defines a total order where <c>-0.0</c> is less than <c>+0.0</c> and where a NaN is equal to itself
            and considered greater than positive infinity.</para>
      <para>The operational semantics of <c>equals</c> and <c>compareTo</c> are expressed in terms of #doubleToLongBits
            bit-wise converting the floating-point values to integral values.</para>
      <para>The &lt;em&gt;natural ordering&lt;/em&gt; implemented by <c>#compareTo
            compareTo</c> is Comparable consistent with equals. That
            is, two objects are reported as equal by <c>equals</c> if and only
            if <c>compareTo</c> on those objects returns zero.</para>
      <para>The adjusted behaviors defined for <c>equals</c> and <c>compareTo</c> allow instances of wrapper classes to work properly with
            conventional data structures. For example, defining NaN
            values to be <c>equals</c> to one another allows NaN to be used as
            an element of a <c>java.util.HashSet HashSet</c> or as the key of
            a <c>java.util.HashMap HashMap</c>. Similarly, defining <c>compareTo</c> as a total ordering, including <c>+0.0</c>, <c>-0.0</c>, and NaN, allows instances of wrapper classes to be used as
            elements of a <c>java.util.SortedSet SortedSet</c> or as keys of a
            <c>java.util.SortedMap SortedMap</c>.</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/Double" title="Reference documentation">Java documentation for <code>java.lang.Double</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Double(double value);" />
      <MemberSignature Language="C#" Value="public Double (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.#ctor(System.Double)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Double : double -&gt; Java.Lang.Double" Usage="new Java.Lang.Double value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(D)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(D)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">the value to be represented by the <c>Double</c>.</param>
        <summary>Constructs a newly allocated <c>Double</c> object that
            represents the primitive <c>double</c> argument.</summary>
        <remarks>
          <para>Constructs a newly allocated <c>Double</c> object that
            represents the primitive <c>double</c> argument.</para>
          <para>This member is deprecated. It is rarely appropriate to use this constructor. The static factory
            <c>#valueOf(double)</c> is generally a better choice, as it is
            likely to yield significantly better space and time performance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#Double(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.Double(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Double(System::String ^ s);" />
      <MemberSignature Language="C#" Value="public Double (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Double : string -&gt; Java.Lang.Double" Usage="new Java.Lang.Double s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">a string to be converted to a <c>Double</c>.</param>
        <summary>Constructs a newly allocated <c>Double</c> object that
            represents the floating-point value of type <c>double</c>
            represented by the string.</summary>
        <remarks>
          <para>Constructs a newly allocated <c>Double</c> object that
            represents the floating-point value of type <c>double</c>
            represented by the string. The string is converted to a
            <c>double</c> value as if by the <c>valueOf</c> method.</para>
          <para>This member is deprecated. It is rarely appropriate to use this constructor.
            Use <c>#parseDouble(String)</c> to convert a string to a
            <c>double</c> primitive, or use <c>#valueOf(String)</c>
            to convert a string to a <c>Double</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#Double(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Double.Double(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>string</c> cannot be parsed as a double value.</exception>
        <altmember cref="M:Java.Lang.Double.ParseDouble(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Bytes">
      <MemberSignature Language="VB.NET" Value="Public Const Bytes As Integer  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: int Bytes = 8;" />
      <MemberSignature Language="C#" Value="public const int Bytes = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Bytes = (8)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.Bytes" />
      <MemberSignature Language="F#" Value="val mutable Bytes : int" Usage="Java.Lang.Double.Bytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BYTES", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BYTES", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>The number of bytes used to represent a <c>double</c> value.</summary>
        <remarks>
          <para>The number of bytes used to represent a <c>double</c> value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#BYTES" title="Reference documentation">Java documentation for <code>java.lang.Double.BYTES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (d1 As Double, d2 As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(double d1, double d2);" />
      <MemberSignature Language="C#" Value="public static int Compare (double d1, double d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(float64 d1, float64 d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.Compare(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="static member Compare : double * double -&gt; int" Usage="Java.Lang.Double.Compare (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "(DD)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "(DD)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Double" />
        <Parameter Name="d2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d1">the first <c>double</c> to compare</param>
        <param name="d2">the second <c>double</c> to compare</param>
        <summary>Compares the two specified <c>double</c> values.</summary>
        <returns>the value <c>0</c> if <c>d1</c> is
                     numerically equal to <c>d2</c>; a value less than
                     <c>0</c> if <c>d1</c> is numerically less than
                     <c>d2</c>; and a value greater than <c>0</c>
                     if <c>d1</c> is numerically greater than
                     <c>d2</c>.</returns>
        <remarks>
          <para>Compares the two specified <c>double</c> values. The sign
            of the integer value returned is the same as that of the
            integer that would be returned by the call:</para>
          <code lang="text/java">new Double(d1).compareTo(new Double(d2))
            </code>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#compare(double,%20double)" title="Reference documentation">Java documentation for <code>java.lang.Double.compare(double, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (anotherDouble As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(Java::Lang::Double ^ anotherDouble);" />
      <MemberSignature Language="C#" Value="public int CompareTo (Java.Lang.Double anotherDouble);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class Java.Lang.Double anotherDouble) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.CompareTo(Java.Lang.Double)" />
      <MemberSignature Language="F#" Value="member this.CompareTo : Java.Lang.Double -&gt; int" Usage="double.CompareTo anotherDouble" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/lang/Double;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/lang/Double;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anotherDouble" Type="Java.Lang.Double" />
      </Parameters>
      <Docs>
        <param name="anotherDouble">the <c>Double</c> to be compared.</param>
        <summary>Compares two <c>Double</c> objects numerically.</summary>
        <returns>the value <c>0</c> if <c>anotherDouble</c> is
                     numerically equal to this <c>Double</c>; a value
                     less than <c>0</c> if this <c>Double</c>
                     is numerically less than <c>anotherDouble</c>;
                     and a value greater than <c>0</c> if this
                     <c>Double</c> is numerically greater than
                     <c>anotherDouble</c>.</returns>
        <remarks>
          <para>Compares two <c>Double</c> objects numerically.
            
            This method imposes a total order on <c>Double</c> objects
            with two differences compared to the incomplete order defined by
            the Java language numerical comparison operators (<c>&lt;, &lt;=,
            ==, &gt;=, &gt;</c>) on <c>double</c> values.
            
            &lt;ul&gt;&lt;li&gt; A NaN is &lt;em&gt;unordered&lt;/em&gt; with respect to other
                     values and unequal to itself under the comparison
                     operators.  This method chooses to define <c>Double.NaN</c> to be equal to itself and greater than all
                     other <c>double</c> values (including <c>Double.POSITIVE_INFINITY</c>).
            
                 &lt;li&gt; Positive zero and negative zero compare equal
                 numerically, but are distinct and distinguishable values.
                 This method chooses to define positive zero (<c>+0.0d</c>),
                 to be greater than negative zero (<c>-0.0d</c>).
            &lt;/ul&gt;
            
            This ensures that the <i>natural ordering</i> of <c>Double</c>
            objects imposed by this method is <i>consistent with
            equals</i>; see this
            discussion for details of floating-point comparison and
            ordering.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#compareTo(java.lang.Double)" title="Reference documentation">Java documentation for <code>java.lang.Double.compareTo(java.lang.Double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>object</c> is <c>null</c>.</exception>
        <altmember cref="T:Java.Lang.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToLongBits">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DoubleToLongBits (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DoubleToLongBits(double value);" />
      <MemberSignature Language="C#" Value="public static long DoubleToLongBits (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DoubleToLongBits(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.DoubleToLongBits(System.Double)" />
      <MemberSignature Language="F#" Value="static member DoubleToLongBits : double -&gt; int64" Usage="Java.Lang.Double.DoubleToLongBits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doubleToLongBits", "(D)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doubleToLongBits", "(D)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">a <c>double</c> precision floating-point number.</param>
        <summary>Returns a representation of the specified floating-point value
            according to the IEEE 754 floating-point "double
            format" bit layout.</summary>
        <returns>the bits that represent the floating-point number.</returns>
        <remarks>
          <para>Returns a representation of the specified floating-point value
            according to the IEEE 754 floating-point "double
            format" bit layout.</para>
          <para>Bit 63 (the bit that is selected by the mask
            <c>0x8000000000000000L</c>) represents the sign of the
            floating-point number. Bits
            62-52 (the bits that are selected by the mask
            <c>0x7ff0000000000000L</c>) represent the exponent. Bits 51-0
            (the bits that are selected by the mask
            <c>0x000fffffffffffffL</c>) represent the significand
            (sometimes called the mantissa) of the floating-point number.</para>
          <para>If the argument is positive infinity, the result is
            <c>0x7ff0000000000000L</c>.</para>
          <para>If the argument is negative infinity, the result is
            <c>0xfff0000000000000L</c>.</para>
          <para>If the argument is NaN, the result is
            <c>0x7ff8000000000000L</c>.</para>
          <para>In all cases, the result is a <c>long</c> integer that, when
            given to the <c>#longBitsToDouble(long)</c> method, will produce a
            floating-point value the same as the argument to
            <c>doubleToLongBits</c> (except all NaN values are
            collapsed to a single "canonical" NaN value).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#doubleToLongBits(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.doubleToLongBits(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToRawLongBits">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DoubleToRawLongBits (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DoubleToRawLongBits(double value);" />
      <MemberSignature Language="C#" Value="public static long DoubleToRawLongBits (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DoubleToRawLongBits(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.DoubleToRawLongBits(System.Double)" />
      <MemberSignature Language="F#" Value="static member DoubleToRawLongBits : double -&gt; int64" Usage="Java.Lang.Double.DoubleToRawLongBits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doubleToRawLongBits", "(D)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doubleToRawLongBits", "(D)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">a <c>double</c> precision floating-point number.</param>
        <summary>Returns a representation of the specified floating-point value
            according to the IEEE 754 floating-point "double
            format" bit layout, preserving Not-a-Number (NaN) values.</summary>
        <returns>the bits that represent the floating-point number.</returns>
        <remarks>
          <para>Returns a representation of the specified floating-point value
            according to the IEEE 754 floating-point "double
            format" bit layout, preserving Not-a-Number (NaN) values.</para>
          <para>Bit 63 (the bit that is selected by the mask
            <c>0x8000000000000000L</c>) represents the sign of the
            floating-point number. Bits
            62-52 (the bits that are selected by the mask
            <c>0x7ff0000000000000L</c>) represent the exponent. Bits 51-0
            (the bits that are selected by the mask
            <c>0x000fffffffffffffL</c>) represent the significand
            (sometimes called the mantissa) of the floating-point number.</para>
          <para>If the argument is positive infinity, the result is
            <c>0x7ff0000000000000L</c>.</para>
          <para>If the argument is negative infinity, the result is
            <c>0xfff0000000000000L</c>.</para>
          <para>If the argument is NaN, the result is the <c>long</c>
            integer representing the actual NaN value.  Unlike the
            <c>doubleToLongBits</c> method,
            <c>doubleToRawLongBits</c> does not collapse all the bit
            patterns encoding a NaN to a single "canonical" NaN
            value.</para>
          <para>In all cases, the result is a <c>long</c> integer that,
            when given to the <c>#longBitsToDouble(long)</c> method, will
            produce a floating-point value the same as the argument to
            <c>doubleToRawLongBits</c>.</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#doubleToRawLongBits(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.doubleToRawLongBits(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DoubleValue () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double DoubleValue();" />
      <MemberSignature Language="C#" Value="public override double DoubleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 DoubleValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.DoubleValue" />
      <MemberSignature Language="F#" Value="override this.DoubleValue : unit -&gt; double" Usage="double.DoubleValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doubleValue", "()D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doubleValue", "()D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c>double</c> value of this <c>Double</c> object.</summary>
        <returns>the <c>double</c> value represented by this object</returns>
        <remarks>
          <para>Returns the <c>double</c> value of this <c>Double</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#doubleValue()" title="Reference documentation">Java documentation for <code>java.lang.Double.doubleValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FloatValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FloatValue () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float FloatValue();" />
      <MemberSignature Language="C#" Value="public override float FloatValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 FloatValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.FloatValue" />
      <MemberSignature Language="F#" Value="override this.FloatValue : unit -&gt; single" Usage="double.FloatValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("floatValue", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("floatValue", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>Double</c> as a <c>float</c>
            after a narrowing primitive conversion.</summary>
        <returns>the <c>double</c> value represented by this object
                     converted to type <c>float</c></returns>
        <remarks>
          <para>Returns the value of this <c>Double</c> as a <c>float</c>
            after a narrowing primitive conversion.</para>
          <para>Added in 1.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#floatValue()" title="Reference documentation">Java documentation for <code>java.lang.Double.floatValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(double value);" />
      <MemberSignature Language="C#" Value="public static int HashCode (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.HashCode(System.Double)" />
      <MemberSignature Language="F#" Value="static member HashCode : double -&gt; int" Usage="Java.Lang.Double.HashCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "(D)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "(D)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">the value to hash</param>
        <summary>Returns a hash code for a <c>double</c> value; compatible with
            <c>Double.hashCode()</c>.</summary>
        <returns>a hash code value for a <c>double</c> value.</returns>
        <remarks>
          <para>Returns a hash code for a <c>double</c> value; compatible with
            <c>Double.hashCode()</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#hashCode(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.hashCode(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IntValue () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IntValue();" />
      <MemberSignature Language="C#" Value="public override int IntValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IntValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.IntValue" />
      <MemberSignature Language="F#" Value="override this.IntValue : unit -&gt; int" Usage="double.IntValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("intValue", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("intValue", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>Double</c> as an <c>int</c>
            after a narrowing primitive conversion.</summary>
        <returns>the <c>double</c> value represented by this object
                     converted to type <c>int</c></returns>
        <remarks>
          <para>Returns the value of this <c>Double</c> as an <c>int</c>
            after a narrowing primitive conversion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#intValue()" title="Reference documentation">Java documentation for <code>java.lang.Double.intValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeIsInfinite">
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvokeIsInfinite (v As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InvokeIsInfinite(double v);" />
      <MemberSignature Language="C#" Value="public static bool InvokeIsInfinite (double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsInfinite(float64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.InvokeIsInfinite(System.Double)" />
      <MemberSignature Language="F#" Value="static member InvokeIsInfinite : double -&gt; bool" Usage="Java.Lang.Double.InvokeIsInfinite v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isInfinite", "(D)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isInfinite", "(D)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v">the value to be tested.</param>
        <summary>Returns <c>true</c> if the specified number is infinitely
            large in magnitude, <c>false</c> otherwise.</summary>
        <returns>
          <c>true</c> if the value of the argument is positive
                     infinity or negative infinity; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Returns <c>true</c> if the specified number is infinitely
            large in magnitude, <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#isInfinite(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.isInfinite(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeIsNaN">
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvokeIsNaN (v As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InvokeIsNaN(double v);" />
      <MemberSignature Language="C#" Value="public static bool InvokeIsNaN (double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsNaN(float64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.InvokeIsNaN(System.Double)" />
      <MemberSignature Language="F#" Value="static member InvokeIsNaN : double -&gt; bool" Usage="Java.Lang.Double.InvokeIsNaN v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isNaN", "(D)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isNaN", "(D)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v">the value to be tested.</param>
        <summary>Returns <c>true</c> if the specified number is a
            Not-a-Number (NaN) value, <c>false</c> otherwise.</summary>
        <returns>
          <c>true</c> if the value of the argument is NaN;
                     <c>false</c> otherwise.</returns>
        <remarks>
          <para>Returns <c>true</c> if the specified number is a
            Not-a-Number (NaN) value, <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#isNaN(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.isNaN(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFinite (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFinite(double d);" />
      <MemberSignature Language="C#" Value="public static bool IsFinite (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFinite(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.IsFinite(System.Double)" />
      <MemberSignature Language="F#" Value="static member IsFinite : double -&gt; bool" Usage="Java.Lang.Double.IsFinite d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isFinite", "(D)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isFinite", "(D)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">the <c>double</c> value to be tested</param>
        <summary>Returns <c>true</c> if the argument is a finite floating-point
            value; returns <c>false</c> otherwise (for NaN and infinity
            arguments).</summary>
        <returns>
          <c>true</c> if the argument is a finite
            floating-point value, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Returns <c>true</c> if the argument is a finite floating-point
            value; returns <c>false</c> otherwise (for NaN and infinity
            arguments).</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#isFinite(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.isFinite(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinite">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInfinite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInfinite { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsInfinite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInfinite" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Double.IsInfinite" />
      <MemberSignature Language="F#" Value="member this.IsInfinite : bool" Usage="Java.Lang.Double.IsInfinite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInfinite", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInfinite", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this <c>Double</c> value is
            infinitely large in magnitude, <c>false</c> otherwise.</summary>
        <value>
          <c>true</c> if the value represented by this object is
                     positive infinity or negative infinity;
                     <c>false</c> otherwise.</value>
        <remarks>
          <para>Returns <c>true</c> if this <c>Double</c> value is
            infinitely large in magnitude, <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#isInfinite()" title="Reference documentation">Java documentation for <code>java.lang.Double.isInfinite()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNaN As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNaN { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsNaN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNaN" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Double.IsNaN" />
      <MemberSignature Language="F#" Value="member this.IsNaN : bool" Usage="Java.Lang.Double.IsNaN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isNaN", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isNaN", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this <c>Double</c> value is
            a Not-a-Number (NaN), <c>false</c> otherwise.</summary>
        <value>
          <c>true</c> if the value represented by this object is
                     NaN; <c>false</c> otherwise.</value>
        <remarks>
          <para>Returns <c>true</c> if this <c>Double</c> value is
            a Not-a-Number (NaN), <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#isNaN()" title="Reference documentation">Java documentation for <code>java.lang.Double.isNaN()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="VB.NET" Value="Function CompareTo (o As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Java.Lang.IComparable.CompareTo(Java::Lang::Object ^ o) = Java::Lang::IComparable::CompareTo;" />
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="double.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Double.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Double.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LongBitsToDouble">
      <MemberSignature Language="VB.NET" Value="Public Shared Function LongBitsToDouble (bits As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double LongBitsToDouble(long bits);" />
      <MemberSignature Language="C#" Value="public static double LongBitsToDouble (long bits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 LongBitsToDouble(int64 bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.LongBitsToDouble(System.Int64)" />
      <MemberSignature Language="F#" Value="static member LongBitsToDouble : int64 -&gt; double" Usage="Java.Lang.Double.LongBitsToDouble bits" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("longBitsToDouble", "(J)D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("longBitsToDouble", "(J)D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bits" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="bits">any <c>long</c> integer.</param>
        <summary>Returns the <c>double</c> value corresponding to a given
            bit representation.</summary>
        <returns>the <c>double</c> floating-point value with the same
                     bit pattern.</returns>
        <remarks>
          <para>Returns the <c>double</c> value corresponding to a given
            bit representation.
            The argument is considered to be a representation of a
            floating-point value according to the IEEE 754 floating-point
            "double format" bit layout.</para>
          <para>If the argument is <c>0x7ff0000000000000L</c>, the result
            is positive infinity.</para>
          <para>If the argument is <c>0xfff0000000000000L</c>, the result
            is negative infinity.</para>
          <para>If the argument is any value in the range
            <c>0x7ff0000000000001L</c> through
            <c>0x7fffffffffffffffL</c> or in the range
            <c>0xfff0000000000001L</c> through
            <c>0xffffffffffffffffL</c>, the result is a NaN.  No IEEE
            754 floating-point operation provided by Java can distinguish
            between two NaN values of the same type with different bit
            patterns.  Distinct values of NaN are only distinguishable by
            use of the <c>Double.doubleToRawLongBits</c> method.</para>
          <para>In all other cases, let <i>s</i>, <i>e</i>, and <i>m</i> be three
            values that can be computed from the argument:
            
            &lt;blockquote&gt;</para>
          <code lang="text/java">{@code
            int s = ((bits &gt;&gt; 63) == 0) ? 1 : -1;
            int e = (int)((bits &gt;&gt; 52) &amp; 0x7ffL);
            long m = (e == 0) ?
                            (bits &amp; 0xfffffffffffffL) &lt;&lt; 1 :
                            (bits &amp; 0xfffffffffffffL) | 0x10000000000000L;
            }</code>
          <para>&lt;/blockquote&gt;
            
            Then the floating-point result equals the value of the mathematical
            expression <i>s</i>&amp;middot;<i>m</i>&amp;middot;2&lt;sup&gt;<i>e</i>-1075&lt;/sup&gt;.</para>
          <para>Note that this method may not be able to return a
            <c>double</c> NaN with exactly same bit pattern as the
            <c>long</c> argument.  IEEE 754 distinguishes between two
            kinds of NaNs, quiet NaNs and <i>signaling NaNs</i>.  The
            differences between the two kinds of NaN are generally not
            visible in Java.  Arithmetic operations on signaling NaNs turn
            them into quiet NaNs with a different, but often similar, bit
            pattern.  However, on some processors merely copying a
            signaling NaN also performs that conversion.  In particular,
            copying a signaling NaN to return it to the calling method
            may perform this conversion.  So <c>longBitsToDouble</c>
            may not be able to return a <c>double</c> with a
            signaling NaN bit pattern.  Consequently, for some
            <c>long</c> values,
            <c>doubleToRawLongBits(longBitsToDouble(start))</c> may
            <i>not</i> equal <c>start</c>.  Moreover, which
            particular bit patterns represent signaling NaNs is platform
            dependent; although all NaN bit patterns, quiet or signaling,
            must be in the NaN range identified above.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#longBitsToDouble(long)" title="Reference documentation">Java documentation for <code>java.lang.Double.longBitsToDouble(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LongValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LongValue () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long LongValue();" />
      <MemberSignature Language="C#" Value="public override long LongValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 LongValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.LongValue" />
      <MemberSignature Language="F#" Value="override this.LongValue : unit -&gt; int64" Usage="double.LongValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("longValue", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("longValue", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>Double</c> as a <c>long</c>
            after a narrowing primitive conversion.</summary>
        <returns>the <c>double</c> value represented by this object
                     converted to type <c>long</c></returns>
        <remarks>
          <para>Returns the value of this <c>Double</c> as a <c>long</c>
            after a narrowing primitive conversion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#longValue()" title="Reference documentation">Java documentation for <code>java.lang.Double.longValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (a As Double, b As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double a, double b);" />
      <MemberSignature Language="C#" Value="public static double Max (double a, double b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 a, float64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.Max(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="Java.Lang.Double.Max (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("max", "(DD)D", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("max", "(DD)D", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="b" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">the first operand</param>
        <param name="b">the second operand</param>
        <summary>Returns the greater of two <c>double</c> values
            as if by calling <c>Math#max(double, double) Math.max</c>.</summary>
        <returns>the greater of <c>a</c> and <c>b</c></returns>
        <remarks>
          <para>Returns the greater of two <c>double</c> values
            as if by calling <c>Math#max(double, double) Math.max</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#max(double,%20double)" title="Reference documentation">Java documentation for <code>java.lang.Double.max(double, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxExponent">
      <MemberSignature Language="VB.NET" Value="Public Const MaxExponent As Integer  = 1023" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxExponent = 1023;" />
      <MemberSignature Language="C#" Value="public const int MaxExponent = 1023;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxExponent = (1023)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.MaxExponent" />
      <MemberSignature Language="F#" Value="val mutable MaxExponent : int" Usage="Java.Lang.Double.MaxExponent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_EXPONENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_EXPONENT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1023</MemberValue>
      <Docs>
        <summary>Maximum exponent a finite <c>double</c> variable may have.</summary>
        <remarks>
          <para>Maximum exponent a finite <c>double</c> variable may have.
            It is equal to the value returned by
            <c>Math.getExponent(Double.MAX_VALUE)</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#MAX_EXPONENT" title="Reference documentation">Java documentation for <code>java.lang.Double.MAX_EXPONENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Double  = 1.7976931348623157E+308" />
      <MemberSignature Language="C++ CLI" Value="public: double MaxValue = 1.7976931348623157E+308;" />
      <MemberSignature Language="C#" Value="public const double MaxValue = 1.7976931348623157E+308;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MaxValue = (1.7976931348623157E+308)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.MaxValue" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : double" Usage="Java.Lang.Double.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_VALUE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_VALUE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>1.7976931348623157E+308</MemberValue>
      <Docs>
        <summary>A constant holding the largest positive finite value of type
            <c>double</c>,
            (2-2&lt;sup&gt;-52&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;1023&lt;/sup&gt;.</summary>
        <remarks>
          <para>A constant holding the largest positive finite value of type
            <c>double</c>,
            (2-2&lt;sup&gt;-52&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;1023&lt;/sup&gt;.  It is equal to
            the hexadecimal floating-point literal
            <c>0x1.fffffffffffffP+1023</c> and also equal to
            <c>Double.longBitsToDouble(0x7fefffffffffffffL)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#MAX_VALUE" title="Reference documentation">Java documentation for <code>java.lang.Double.MAX_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (a As Double, b As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double a, double b);" />
      <MemberSignature Language="C#" Value="public static double Min (double a, double b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 a, float64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.Min(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="Java.Lang.Double.Min (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("min", "(DD)D", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("min", "(DD)D", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="b" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">the first operand</param>
        <param name="b">the second operand</param>
        <summary>Returns the smaller of two <c>double</c> values
            as if by calling <c>Math#min(double, double) Math.min</c>.</summary>
        <returns>the smaller of <c>a</c> and <c>b</c>.</returns>
        <remarks>
          <para>Returns the smaller of two <c>double</c> values
            as if by calling <c>Math#min(double, double) Math.min</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#min(double,%20double)" title="Reference documentation">Java documentation for <code>java.lang.Double.min(double, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinExponent">
      <MemberSignature Language="VB.NET" Value="Public Const MinExponent As Integer  = -1022" />
      <MemberSignature Language="C++ CLI" Value="public: int MinExponent = -1022;" />
      <MemberSignature Language="C#" Value="public const int MinExponent = -1022;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinExponent = (-1022)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.MinExponent" />
      <MemberSignature Language="F#" Value="val mutable MinExponent : int" Usage="Java.Lang.Double.MinExponent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_EXPONENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_EXPONENT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1022</MemberValue>
      <Docs>
        <summary>Minimum exponent a normalized <c>double</c> variable may
            have.</summary>
        <remarks>
          <para>Minimum exponent a normalized <c>double</c> variable may
            have.  It is equal to the value returned by
            <c>Math.getExponent(Double.MIN_NORMAL)</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#MIN_EXPONENT" title="Reference documentation">Java documentation for <code>java.lang.Double.MIN_EXPONENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinNormal">
      <MemberSignature Language="VB.NET" Value="Public Const MinNormal As Double  = 2.2250738585072014E-308" />
      <MemberSignature Language="C++ CLI" Value="public: double MinNormal = 2.2250738585072014E-308;" />
      <MemberSignature Language="C#" Value="public const double MinNormal = 2.2250738585072014E-308;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MinNormal = (2.2250738585072014E-308)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.MinNormal" />
      <MemberSignature Language="F#" Value="val mutable MinNormal : double" Usage="Java.Lang.Double.MinNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_NORMAL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_NORMAL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.2250738585072014E-308</MemberValue>
      <Docs>
        <summary>A constant holding the smallest positive normal value of type
            <c>double</c>, 2&lt;sup&gt;-1022&lt;/sup&gt;.</summary>
        <remarks>
          <para>A constant holding the smallest positive normal value of type
            <c>double</c>, 2&lt;sup&gt;-1022&lt;/sup&gt;.  It is equal to the
            hexadecimal floating-point literal <c>0x1.0p-1022</c> and also
            equal to <c>Double.longBitsToDouble(0x0010000000000000L)</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#MIN_NORMAL" title="Reference documentation">Java documentation for <code>java.lang.Double.MIN_NORMAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Double  = 4.94065645841247E-324" />
      <MemberSignature Language="C++ CLI" Value="public: double MinValue = 4.94065645841247E-324;" />
      <MemberSignature Language="C#" Value="public const double MinValue = 4.94065645841247E-324;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MinValue = (4.94065645841247E-324)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.MinValue" />
      <MemberSignature Language="F#" Value="val mutable MinValue : double" Usage="Java.Lang.Double.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_VALUE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_VALUE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>4.94065645841247E-324</MemberValue>
      <Docs>
        <summary>A constant holding the smallest positive nonzero value of type
            <c>double</c>, 2&lt;sup&gt;-1074&lt;/sup&gt;.</summary>
        <remarks>
          <para>A constant holding the smallest positive nonzero value of type
            <c>double</c>, 2&lt;sup&gt;-1074&lt;/sup&gt;. It is equal to the
            hexadecimal floating-point literal
            <c>0x0.0000000000001P-1022</c> and also equal to
            <c>Double.longBitsToDouble(0x1L)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#MIN_VALUE" title="Reference documentation">Java documentation for <code>java.lang.Double.MIN_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="VB.NET" Value="Public Const NaN As Double  = NaN" />
      <MemberSignature Language="C++ CLI" Value="public: double NaN = NaN;" />
      <MemberSignature Language="C#" Value="public const double NaN = NaN;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NaN = (NaN)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.NaN" />
      <MemberSignature Language="F#" Value="val mutable NaN : double" Usage="Java.Lang.Double.NaN" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NaN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NaN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>NaN</MemberValue>
      <Docs>
        <summary>A constant holding a Not-a-Number (NaN) value of type
            <c>double</c>.</summary>
        <remarks>
          <para>A constant holding a Not-a-Number (NaN) value of type
            <c>double</c>. It is equivalent to the value returned by
            <c>Double.longBitsToDouble(0x7ff8000000000000L)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#NaN" title="Reference documentation">Java documentation for <code>java.lang.Double.NaN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="VB.NET" Value="Public Const NegativeInfinity As Double  = -Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: double NegativeInfinity = -Infinity;" />
      <MemberSignature Language="C#" Value="public const double NegativeInfinity = -Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NegativeInfinity = (-Infinity)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.NegativeInfinity" />
      <MemberSignature Language="F#" Value="val mutable NegativeInfinity : double" Usage="Java.Lang.Double.NegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NEGATIVE_INFINITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NEGATIVE_INFINITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>-Infinity</MemberValue>
      <Docs>
        <summary>A constant holding the negative infinity of type
            <c>double</c>.</summary>
        <remarks>
          <para>A constant holding the negative infinity of type
            <c>double</c>. It is equal to the value returned by
            <c>Double.longBitsToDouble(0xfff0000000000000L)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#NEGATIVE_INFINITY" title="Reference documentation">Java documentation for <code>java.lang.Double.NEGATIVE_INFINITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(Java::Lang::Double ^ value);" />
      <MemberSignature Language="C#" Value="public static explicit operator double (Java.Lang.Double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(class Java.Lang.Double value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.op_Explicit(Java.Lang.Double)~System.Double" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Java.Lang.Double -&gt; double" Usage="Java.Lang.Double.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseDouble">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseDouble (s As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ParseDouble(System::String ^ s);" />
      <MemberSignature Language="C#" Value="public static double ParseDouble (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ParseDouble(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.ParseDouble(System.String)" />
      <MemberSignature Language="F#" Value="static member ParseDouble : string -&gt; double" Usage="Java.Lang.Double.ParseDouble s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parseDouble", "(Ljava/lang/String;)D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parseDouble", "(Ljava/lang/String;)D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string to be parsed.</param>
        <summary>Returns a new <c>double</c> initialized to the value
            represented by the specified <c>String</c>, as performed
            by the <c>valueOf</c> method of class
            <c>Double</c>.</summary>
        <returns>the <c>double</c> value represented by the string
                    argument.</returns>
        <remarks>
          <para>Returns a new <c>double</c> initialized to the value
            represented by the specified <c>String</c>, as performed
            by the <c>valueOf</c> method of class
            <c>Double</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#parseDouble(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Double.parseDouble(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>string</c> cannot be parsed as a double value.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="VB.NET" Value="Public Const PositiveInfinity As Double  = Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: double PositiveInfinity = Infinity;" />
      <MemberSignature Language="C#" Value="public const double PositiveInfinity = Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PositiveInfinity = (Infinity)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.PositiveInfinity" />
      <MemberSignature Language="F#" Value="val mutable PositiveInfinity : double" Usage="Java.Lang.Double.PositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("POSITIVE_INFINITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("POSITIVE_INFINITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>Infinity</MemberValue>
      <Docs>
        <summary>A constant holding the positive infinity of type
            <c>double</c>.</summary>
        <remarks>
          <para>A constant holding the positive infinity of type
            <c>double</c>. It is equal to the value returned by
            <c>Double.longBitsToDouble(0x7ff0000000000000L)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#POSITIVE_INFINITY" title="Reference documentation">Java documentation for <code>java.lang.Double.POSITIVE_INFINITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="VB.NET" Value="Public Const Size As Integer  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: int Size = 64;" />
      <MemberSignature Language="C#" Value="public const int Size = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Size = (64)" />
      <MemberSignature Language="DocId" Value="F:Java.Lang.Double.Size" />
      <MemberSignature Language="F#" Value="val mutable Size : int" Usage="Java.Lang.Double.Size" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SIZE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SIZE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>The number of bits used to represent a <c>double</c> value.</summary>
        <remarks>
          <para>The number of bits used to represent a <c>double</c> value.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#SIZE" title="Reference documentation">Java documentation for <code>java.lang.Double.SIZE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sum (a As Double, b As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sum(double a, double b);" />
      <MemberSignature Language="C#" Value="public static double Sum (double a, double b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum(float64 a, float64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.Sum(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="static member Sum : double * double -&gt; double" Usage="Java.Lang.Double.Sum (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sum", "(DD)D", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sum", "(DD)D", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="b" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">the first operand</param>
        <param name="b">the second operand</param>
        <summary>Adds two <c>double</c> values together as per the + operator.</summary>
        <returns>the sum of <c>a</c> and <c>b</c></returns>
        <remarks>
          <para>Adds two <c>double</c> values together as per the + operator.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#sum(double,%20double)" title="Reference documentation">Java documentation for <code>java.lang.Double.sum(double, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="double.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="double.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="double.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="double.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="double.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="double.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="double.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="double.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="double.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="double.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="double.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="double.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToString : IFormatProvider -&gt; string&#xA;override this.System.IConvertible.ToString : IFormatProvider -&gt; string" Usage="double.System.IConvertible.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="VB.NET" Value="Function ToType (conversionType As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ conversionType, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type conversionType, IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="double.System.IConvertible.ToType (conversionType, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="conversionType">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="double.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="double.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="double.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Double.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Double.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Double.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Double.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToHexString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToHexString (d As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToHexString(double d);" />
      <MemberSignature Language="C#" Value="public static string ToHexString (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToHexString(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.ToHexString(System.Double)" />
      <MemberSignature Language="F#" Value="static member ToHexString : double -&gt; string" Usage="Java.Lang.Double.ToHexString d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toHexString", "(D)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toHexString", "(D)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">the <c>double</c> to be converted.</param>
        <summary>Returns a hexadecimal string representation of the
            <c>double</c> argument.</summary>
        <returns>a hex string representation of the argument.</returns>
        <remarks>
          <para>Returns a hexadecimal string representation of the
            <c>double</c> argument. All characters mentioned below
            are ASCII characters.
            
            &lt;ul&gt;
            &lt;li&gt;If the argument is NaN, the result is the string
                "<c>NaN</c>".
            &lt;li&gt;Otherwise, the result is a string that represents the sign
            and magnitude of the argument. If the sign is negative, the
            first character of the result is '<c>-</c>'
            (<c>'\u005Cu002D'</c>); if the sign is positive, no sign
            character appears in the result. As for the magnitude <i>m</i>:
            
            &lt;ul&gt;
            &lt;li&gt;If <i>m</i> is infinity, it is represented by the string
            <c>"Infinity"</c>; thus, positive infinity produces the
            result <c>"Infinity"</c> and negative infinity produces
            the result <c>"-Infinity"</c>.
            
            &lt;li&gt;If <i>m</i> is zero, it is represented by the string
            <c>"0x0.0p0"</c>; thus, negative zero produces the result
            <c>"-0x0.0p0"</c> and positive zero produces the result
            <c>"0x0.0p0"</c>.
            
            &lt;li&gt;If <i>m</i> is a <c>double</c> value with a
            normalized representation, substrings are used to represent the
            significand and exponent fields.  The significand is
            represented by the characters <c>"0x1."</c>
            followed by a lowercase hexadecimal representation of the rest
            of the significand as a fraction.  Trailing zeros in the
            hexadecimal representation are removed unless all the digits
            are zero, in which case a single zero is used. Next, the
            exponent is represented by <c>"p"</c> followed
            by a decimal string of the unbiased exponent as if produced by
            a call to <c>Integer#toString(int) Integer.toString</c> on the
            exponent value.
            
            &lt;li&gt;If <i>m</i> is a <c>double</c> value with a subnormal
            representation, the significand is represented by the
            characters <c>"0x0."</c> followed by a
            hexadecimal representation of the rest of the significand as a
            fraction.  Trailing zeros in the hexadecimal representation are
            removed. Next, the exponent is represented by
            <c>"p-1022"</c>.  Note that there must be at
            least one nonzero digit in a subnormal significand.
            
            &lt;/ul&gt;
            
            &lt;/ul&gt;
            
            &lt;table class="striped"&gt;
            &lt;caption&gt;Examples&lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;&lt;th scope="col"&gt;Floating-point Value&lt;/th&gt;&lt;th scope="col"&gt;Hexadecimal String&lt;/th&gt;
            &lt;/thead&gt;
            &lt;tbody style="text-align:right"&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>1.0</c>&lt;/th&gt; &lt;td&gt;<c>0x1.0p0</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>-1.0</c>&lt;/th&gt;        &lt;td&gt;<c>-0x1.0p0</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>2.0</c>&lt;/th&gt; &lt;td&gt;<c>0x1.0p1</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>3.0</c>&lt;/th&gt; &lt;td&gt;<c>0x1.8p1</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>0.5</c>&lt;/th&gt; &lt;td&gt;<c>0x1.0p-1</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>0.25</c>&lt;/th&gt;        &lt;td&gt;<c>0x1.0p-2</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>Double.MAX_VALUE</c>&lt;/th&gt;
                &lt;td&gt;<c>0x1.fffffffffffffp1023</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>Minimum Normal Value</c>&lt;/th&gt;
                &lt;td&gt;<c>0x1.0p-1022</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>Maximum Subnormal Value</c>&lt;/th&gt;
                &lt;td&gt;<c>0x0.fffffffffffffp-1022</c>&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;<c>Double.MIN_VALUE</c>&lt;/th&gt;
                &lt;td&gt;<c>0x0.0000000000001p-1022</c>&lt;/td&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#toHexString(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.toHexString(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (d As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double d);" />
      <MemberSignature Language="C#" Value="public static string ToString (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.ToString(System.Double)" />
      <MemberSignature Language="F#" Value="static member ToString : double -&gt; string" Usage="Java.Lang.Double.ToString d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "(D)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "(D)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">the <c>double</c> to be converted.</param>
        <summary>Returns a string representation of the <c>double</c>
            argument.</summary>
        <returns>a string representation of the argument.</returns>
        <remarks>
          <para>Returns a string representation of the <c>double</c>
            argument. All characters mentioned below are ASCII characters.
            &lt;ul&gt;
            &lt;li&gt;If the argument is NaN, the result is the string
                "<c>NaN</c>".
            &lt;li&gt;Otherwise, the result is a string that represents the sign and
            magnitude (absolute value) of the argument. If the sign is negative,
            the first character of the result is '<c>-</c>'
            (<c>'\u005Cu002D'</c>); if the sign is positive, no sign character
            appears in the result. As for the magnitude <i>m</i>:
            &lt;ul&gt;
            &lt;li&gt;If <i>m</i> is infinity, it is represented by the characters
            <c>"Infinity"</c>; thus, positive infinity produces the result
            <c>"Infinity"</c> and negative infinity produces the result
            <c>"-Infinity"</c>.
            
            &lt;li&gt;If <i>m</i> is zero, it is represented by the characters
            <c>"0.0"</c>; thus, negative zero produces the result
            <c>"-0.0"</c> and positive zero produces the result
            <c>"0.0"</c>.
            
            &lt;li&gt;If <i>m</i> is greater than or equal to 10&lt;sup&gt;-3&lt;/sup&gt; but less
            than 10&lt;sup&gt;7&lt;/sup&gt;, then it is represented as the integer part of
            <i>m</i>, in decimal form with no leading zeroes, followed by
            '<c>.</c>' (<c>'\u005Cu002E'</c>), followed by one or
            more decimal digits representing the fractional part of <i>m</i>.
            
            &lt;li&gt;If <i>m</i> is less than 10&lt;sup&gt;-3&lt;/sup&gt; or greater than or
            equal to 10&lt;sup&gt;7&lt;/sup&gt;, then it is represented in so-called
            "computerized scientific notation." Let <i>n</i> be the unique
            integer such that 10&lt;sup&gt;<i>n</i>&lt;/sup&gt; &amp;le; <i>m</i>&lt;
            10&lt;sup&gt;<i>n</i>+1&lt;/sup&gt;; then let <i>a</i> be the
            mathematically exact quotient of <i>m</i> and
            10&lt;sup&gt;<i>n</i>&lt;/sup&gt; so that 1 &amp;le; <i>a</i>&lt; 10. The
            magnitude is then represented as the integer part of <i>a</i>,
            as a single decimal digit, followed by '<c>.</c>'
            (<c>'\u005Cu002E'</c>), followed by decimal digits
            representing the fractional part of <i>a</i>, followed by the
            letter '<c>E</c>' (<c>'\u005Cu0045'</c>), followed
            by a representation of <i>n</i> as a decimal integer, as
            produced by the method <c>Integer#toString(int)</c>.
            &lt;/ul&gt;
            &lt;/ul&gt;
            How many digits must be printed for the fractional part of
            <i>m</i> or <i>a</i>? There must be at least one digit to represent
            the fractional part, and beyond that as many, but only as many, more
            digits as are needed to uniquely distinguish the argument value from
            adjacent values of type <c>double</c>. That is, suppose that
            <i>x</i> is the exact mathematical value represented by the decimal
            representation produced by this method for a finite nonzero argument
            <i>d</i>. Then <i>d</i> must be the <c>double</c> value nearest
            to <i>x</i>; or if two <c>double</c> values are equally close
            to <i>x</i>, then <i>d</i> must be one of them and the least
            significant bit of the significand of <i>d</i> must be <c>0</c>.</para>
          <para>To create localized string representations of a floating-point
            value, use subclasses of <c>java.text.NumberFormat</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#toString(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.toString(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Type As Class" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Lang::Class ^ Type { Java::Lang::Class ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Class? Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Lang.Class Type" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Double.Type" />
      <MemberSignature Language="F#" Value="member this.Type : Java.Lang.Class" Usage="Java.Lang.Double.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TYPE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TYPE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Class</c> instance representing the primitive type
            <c>double</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <c>Class</c> instance representing the primitive type
            <c>double</c>.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#TYPE" title="Reference documentation">Java documentation for <code>java.lang.Double.TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueOf (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Lang::Double ^ ValueOf(double d);" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Double ValueOf (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Double ValueOf(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.ValueOf(System.Double)" />
      <MemberSignature Language="F#" Value="static member ValueOf : double -&gt; Java.Lang.Double" Usage="Java.Lang.Double.ValueOf d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(D)Ljava/lang/Double;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(D)Ljava/lang/Double;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">a double value.</param>
        <summary>Returns a <c>Double</c> instance representing the specified
            <c>double</c> value.</summary>
        <returns>a <c>Double</c> instance representing <c>d</c>.</returns>
        <remarks>
          <para>Returns a <c>Double</c> instance representing the specified
            <c>double</c> value.
            If a new <c>Double</c> instance is not required, this method
            should generally be used in preference to the constructor
            <c>#Double(double)</c>, as this method is likely to yield
            significantly better space and time performance by caching
            frequently requested values.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#valueOf(double)" title="Reference documentation">Java documentation for <code>java.lang.Double.valueOf(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueOf (s As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Lang::Double ^ ValueOf(System::String ^ s);" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Double ValueOf (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Double ValueOf(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Double.ValueOf(System.String)" />
      <MemberSignature Language="F#" Value="static member ValueOf : string -&gt; Java.Lang.Double" Usage="Java.Lang.Double.ValueOf s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(Ljava/lang/String;)Ljava/lang/Double;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(Ljava/lang/String;)Ljava/lang/Double;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string to be parsed.</param>
        <summary>Returns a <c>Double</c> object holding the
            <c>double</c> value represented by the argument string
            <c>s</c>.</summary>
        <returns>a <c>Double</c> object holding the value
                        represented by the <c>String</c> argument.</returns>
        <remarks>
          <para>Returns a <c>Double</c> object holding the
            <c>double</c> value represented by the argument string
            <c>s</c>.</para>
          <para>If <c>s</c> is <c>null</c>, then a
            <c>NullPointerException</c> is thrown.</para>
          <para>Leading and trailing whitespace characters in <c>s</c>
            are ignored.  Whitespace is removed as if by the <c>String#trim</c> method; that is, both ASCII space and control
            characters are removed. The rest of <c>s</c> should
            constitute a <i>FloatValue</i> as described by the lexical
            syntax rules:
            
            &lt;blockquote&gt;
            &lt;dl&gt;
            &lt;dt&gt;<i>FloatValue:</i>&lt;dd&gt;<i>Sign&lt;sub&gt;opt&lt;/sub&gt;</i><c>NaN</c>&lt;dd&gt;<i>Sign&lt;sub&gt;opt&lt;/sub&gt;</i><c>Infinity</c>&lt;dd&gt;<i>Sign&lt;sub&gt;opt&lt;/sub&gt; FloatingPointLiteral</i>&lt;dd&gt;<i>Sign&lt;sub&gt;opt&lt;/sub&gt; HexFloatingPointLiteral</i>&lt;dd&gt;<i>SignedInteger</i>&lt;/dl&gt;
            
            &lt;dl&gt;
            &lt;dt&gt;<i>HexFloatingPointLiteral</i>:
            &lt;dd&gt; <i>HexSignificand BinaryExponent FloatTypeSuffix&lt;sub&gt;opt&lt;/sub&gt;</i>&lt;/dl&gt;
            
            &lt;dl&gt;
            &lt;dt&gt;<i>HexSignificand:</i>&lt;dd&gt;<i>HexNumeral</i>&lt;dd&gt;<i>HexNumeral</i><c>.</c>&lt;dd&gt;<c>0x</c><i>HexDigits&lt;sub&gt;opt&lt;/sub&gt;
                </i><c>.</c><i> HexDigits</i>&lt;dd&gt;<c>0X</c><i> HexDigits&lt;sub&gt;opt&lt;/sub&gt;
                </i><c>.</c><i>HexDigits</i>&lt;/dl&gt;
            
            &lt;dl&gt;
            &lt;dt&gt;<i>BinaryExponent:</i>&lt;dd&gt;<i>BinaryExponentIndicator SignedInteger</i>&lt;/dl&gt;
            
            &lt;dl&gt;
            &lt;dt&gt;<i>BinaryExponentIndicator:</i>&lt;dd&gt;<c>p</c>&lt;dd&gt;<c>P</c>&lt;/dl&gt;
            
            &lt;/blockquote&gt;
            
            where <i>Sign</i>, <i>FloatingPointLiteral</i>,
            <i>HexNumeral</i>, <i>HexDigits</i>, <i>SignedInteger</i> and
            <i>FloatTypeSuffix</i> are as defined in the lexical structure
            sections of
            &lt;cite&gt;The Java Language Specification&lt;/cite&gt;,
            except that underscores are not accepted between digits.
            If <c>s</c> does not have the form of
            a <i>FloatValue</i>, then a <c>NumberFormatException</c>
            is thrown. Otherwise, <c>s</c> is regarded as
            representing an exact decimal value in the usual
            "computerized scientific notation" or as an exact
            hexadecimal value; this exact numerical value is then
            conceptually converted to an "infinitely precise"
            binary value that is then rounded to type <c>double</c>
            by the usual round-to-nearest rule of IEEE 754 floating-point
            arithmetic, which includes preserving the sign of a zero
            value.
            
            Note that the round-to-nearest rule also implies overflow and
            underflow behaviour; if the exact value of <c>s</c> is large
            enough in magnitude (greater than or equal to (<c>#MAX_VALUE</c> + <c>Math#ulp(double) ulp(MAX_VALUE)</c>/2),
            rounding to <c>double</c> will result in an infinity and if the
            exact value of <c>s</c> is small enough in magnitude (less
            than or equal to <c>#MIN_VALUE</c>/2), rounding to float will
            result in a zero.
            
            Finally, after rounding a <c>Double</c> object representing
            this <c>double</c> value is returned.</para>
          <para>To interpret localized string representations of a
            floating-point value, use subclasses of <c>java.text.NumberFormat</c>.</para>
          <para>Note that trailing format specifiers, specifiers that
            determine the type of a floating-point literal
            (<c>1.0f</c> is a <c>float</c> value;
            <c>1.0d</c> is a <c>double</c> value), do
            &lt;em&gt;not&lt;/em&gt; influence the results of this method.  In other
            words, the numerical value of the input string is converted
            directly to the target floating-point type.  The two-step
            sequence of conversions, string to <c>float</c> followed
            by <c>float</c> to <c>double</c>, is &lt;em&gt;not&lt;/em&gt;
            equivalent to converting a string directly to
            <c>double</c>. For example, the <c>float</c>
            literal <c>0.1f</c> is equal to the <c>double</c>
            value <c>0.10000000149011612</c>; the <c>float</c>
            literal <c>0.1f</c> represents a different numerical
            value than the <c>double</c> literal
            <c>0.1</c>. (The numerical value 0.1 cannot be exactly
            represented in a binary floating-point number.)</para>
          <para>To avoid calling this method on an invalid string and having
            a <c>NumberFormatException</c> be thrown, the regular
            expression below can be used to screen the input string:</para>
          <code lang="text/java">{@code
             final String Digits     = "(\\p{Digit}+)";
             final String HexDigits  = "(\\p{XDigit}+)";
             // an exponent is 'e' or 'E' followed by an optionally
             // signed decimal integer.
             final String Exp        = "[eE][+-]?"+Digits;
             final String fpRegex    =
                 ("[\\x00-\\x20]*"+  // Optional leading "whitespace"
                  "[+-]?(" + // Optional sign character
                  "NaN|" +           // "NaN" string
                  "Infinity|" +      // "Infinity" string
            
                  // A decimal floating-point string representing a finite positive
                  // number without a leading sign has at most five basic pieces:
                  // Digits . Digits ExponentPart FloatTypeSuffix
                  //
                  // Since this method allows integer-only strings as input
                  // in addition to strings of floating-point literals, the
                  // two sub-patterns below are simplifications of the grammar
                  // productions from section 3.10.2 of
                  // The Java Language Specification.
            
                  // Digits ._opt Digits_opt ExponentPart_opt FloatTypeSuffix_opt
                  "((("+Digits+"(\\.)?("+Digits+"?)("+Exp+")?)|"+
            
                  // . Digits ExponentPart_opt FloatTypeSuffix_opt
                  "(\\.("+Digits+")("+Exp+")?)|"+
            
                  // Hexadecimal strings
                  "((" +
                   // 0[xX] HexDigits ._opt BinaryExponent FloatTypeSuffix_opt
                   "(0[xX]" + HexDigits + "(\\.)?)|" +
            
                   // 0[xX] HexDigits_opt . HexDigits BinaryExponent FloatTypeSuffix_opt
                   "(0[xX]" + HexDigits + "?(\\.)" + HexDigits + ")" +
            
                   ")[pP][+-]?" + Digits + "))" +
                  "[fFdD]?))" +
                  "[\\x00-\\x20]*");// Optional trailing "whitespace"
            
             if (Pattern.matches(fpRegex, myString))
                 Double.valueOf(myString); // Will not throw NumberFormatException
             else {
                 // Perform suitable alternative action
             }
            }</code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/Double#valueOf(java.lang.String)" title="Reference documentation">Java documentation for <code>java.lang.Double.valueOf(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>string</c> cannot be parsed as a double value.</exception>
        <altmember cref="M:Java.Lang.Double.ParseDouble(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
