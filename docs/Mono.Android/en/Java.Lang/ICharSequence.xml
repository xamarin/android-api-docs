<Type Name="ICharSequence" FullName="Java.Lang.ICharSequence">
  <TypeSignature Language="C#" Value="public interface ICharSequence : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable, System.Collections.Generic.IEnumerable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ICharSequence implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.Collections.Generic.IEnumerable`1&lt;char&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.ICharSequence" />
  <TypeSignature Language="F#" Value="type ICharSequence = interface&#xA;    interface seq&lt;char&gt;&#xA;    interface IEnumerable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/CharSequence", "", "Java.Lang.ICharSequenceInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/CharSequence", "", "Java.Lang.ICharSequenceInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A <c>CharSequence</c> is a readable sequence of <c>char</c> values.</summary>
    <remarks>
      <para>A <c>CharSequence</c> is a readable sequence of <c>char</c> values. This
            interface provides uniform, read-only access to many different kinds of
            <c>char</c> sequences.
            A <c>char</c> value represents a character in the <i>Basic
            Multilingual Plane (BMP)</i> or a surrogate. Refer to Unicode Character Representation for details.</para>
      <para>This interface does not refine the general contracts of the <c>java.lang.Object#equals(java.lang.Object) equals</c> and <c>java.lang.Object#hashCode() hashCode</c> methods. The result of testing two objects
            that implement <c>CharSequence</c> for equality is therefore, in general, undefined.
            Each object may be implemented by a different class, and there
            is no guarantee that each class will be capable of testing its instances
            for equality with those of the other.  It is therefore inappropriate to use
            arbitrary <c>CharSequence</c> instances as elements in a set or as keys in
            a map.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/CharSequence" title="Reference documentation">Java documentation for <code>java.lang.CharSequence</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="CharAt">
      <MemberSignature Language="C#" Value="public char CharAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char CharAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ICharSequence.CharAt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CharAt : int -&gt; char" Usage="iCharSequence.CharAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("charAt", "(I)C", "GetCharAt_IHandler:Java.Lang.ICharSequenceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("charAt", "(I)C", "GetCharAt_IHandler:Java.Lang.ICharSequenceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">the index of the <c>char</c> value to be returned</param>
        <summary>Returns the <c>char</c> value at the specified index.</summary>
        <returns>the specified <c>char</c> value</returns>
        <remarks>
          <para>Returns the <c>char</c> value at the specified index.  An index ranges from zero
            to <c>length() - 1</c>.  The first <c>char</c> value of the sequence is at
            index zero, the next at index one, and so on, as for array
            indexing.</para>
          <para>If the <c>char</c> value specified by the index is a
            <see href="https://developer.android.com//java.base/java/lang/Character.html#unicode">surrogate</see>, the surrogate
            value is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/CharSequence#charAt(int)" title="Reference documentation">Java documentation for <code>java.lang.CharSequence.charAt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c> or <c>index &gt;= length()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (Java.Lang.ICharSequence cs1, Java.Lang.ICharSequence cs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class Java.Lang.ICharSequence cs1, class Java.Lang.ICharSequence cs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ICharSequence.Compare(Java.Lang.ICharSequence,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="static member Compare : Java.Lang.ICharSequence * Java.Lang.ICharSequence -&gt; int" Usage="Java.Lang.ICharSequence.Compare (cs1, cs2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cs1" Type="Java.Lang.ICharSequence" />
        <Parameter Name="cs2" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="cs1">the first <c>CharSequence</c></param>
        <param name="cs2">the second <c>CharSequence</c></param>
        <summary>Compares two <c>CharSequence</c> instances lexicographically.</summary>
        <returns>the value <c>0</c> if the two <c>CharSequence</c> are equal;
                     a negative integer if the first <c>CharSequence</c>
                     is lexicographically less than the second; or a
                     positive integer if the first <c>CharSequence</c> is
                     lexicographically greater than the second.</returns>
        <remarks>
          <para>Compares two <c>CharSequence</c> instances lexicographically. Returns a
            negative value, zero, or a positive value if the first sequence is lexicographically
            less than, equal to, or greater than the second, respectively.</para>
          <para>The lexicographical ordering of <c>CharSequence</c> is defined as follows.
            Consider a <c>CharSequence</c><i>cs</i> of length <i>len</i> to be a
            sequence of char values, <i>cs[0]</i> to <i>cs[len-1]</i>. Suppose <i>k</i>
            is the lowest index at which the corresponding char values from each sequence
            differ. The lexicographic ordering of the sequences is determined by a numeric
            comparison of the char values <i>cs1[k]</i> with <i>cs2[k]</i>. If there is
            no such index <i>k</i>, the shorter sequence is considered lexicographically
            less than the other. If the sequences have the same length, the sequences are
            considered lexicographically equal.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/CharSequence#compare(java.lang.CharSequence,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.lang.CharSequence.compare(java.lang.CharSequence, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string cs1, string cs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string cs1, string cs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ICharSequence.Compare(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member Compare : string * string -&gt; int" Usage="Java.Lang.ICharSequence.Compare (cs1, cs2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cs1" Type="System.String" />
        <Parameter Name="cs2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cs1">the first <c>CharSequence</c></param>
        <param name="cs2">the second <c>CharSequence</c></param>
        <summary>Compares two <c>CharSequence</c> instances lexicographically.</summary>
        <returns>the value <c>0</c> if the two <c>CharSequence</c> are equal;
                     a negative integer if the first <c>CharSequence</c>
                     is lexicographically less than the second; or a
                     positive integer if the first <c>CharSequence</c> is
                     lexicographically greater than the second.</returns>
        <remarks>
          <para>Compares two <c>CharSequence</c> instances lexicographically. Returns a
            negative value, zero, or a positive value if the first sequence is lexicographically
            less than, equal to, or greater than the second, respectively.</para>
          <para>The lexicographical ordering of <c>CharSequence</c> is defined as follows.
            Consider a <c>CharSequence</c><i>cs</i> of length <i>len</i> to be a
            sequence of char values, <i>cs[0]</i> to <i>cs[len-1]</i>. Suppose <i>k</i>
            is the lowest index at which the corresponding char values from each sequence
            differ. The lexicographic ordering of the sequences is determined by a numeric
            comparison of the char values <i>cs1[k]</i> with <i>cs2[k]</i>. If there is
            no such index <i>k</i>, the shorter sequence is considered lexicographically
            less than the other. If the sequences have the same length, the sequences are
            considered lexicographically equal.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/CharSequence#compare(java.lang.CharSequence,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.lang.CharSequence.compare(java.lang.CharSequence, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ICharSequence.Length" />
      <MemberSignature Language="F#" Value="abstract member Length : unit -&gt; int" Usage="iCharSequence.Length " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("length", "()I", "GetLengthHandler:Java.Lang.ICharSequenceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("length", "()I", "GetLengthHandler:Java.Lang.ICharSequenceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the length of this character sequence.</summary>
        <returns>the number of <c>char</c>s in this sequence</returns>
        <remarks>
          <para>Returns the length of this character sequence.  The length is the number
            of 16-bit <c>char</c>s in the sequence.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/CharSequence#length()" title="Reference documentation">Java documentation for <code>java.lang.CharSequence.length()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SubSequenceFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence SubSequenceFormatted (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence SubSequenceFormatted(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ICharSequence.SubSequenceFormatted(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SubSequenceFormatted : int * int -&gt; Java.Lang.ICharSequence" Usage="iCharSequence.SubSequenceFormatted (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("subSequence", "(II)Ljava/lang/CharSequence;", "GetSubSequence_IIHandler:Java.Lang.ICharSequenceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("subSequence", "(II)Ljava/lang/CharSequence;", "GetSubSequence_IIHandler:Java.Lang.ICharSequenceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the start index, inclusive</param>
        <param name="end">the end index, exclusive</param>
        <summary>Returns a <c>CharSequence</c> that is a subsequence of this sequence.</summary>
        <returns>the specified subsequence</returns>
        <remarks>
          <para>Returns a <c>CharSequence</c> that is a subsequence of this sequence.
            The subsequence starts with the <c>char</c> value at the specified index and
            ends with the <c>char</c> value at index <c>end - 1</c>.  The length
            (in <c>char</c>s) of the
            returned sequence is <c>end - start</c>, so if <c>start == end</c>
            then an empty sequence is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/CharSequence#subSequence(int,%20int)" title="Reference documentation">Java documentation for <code>java.lang.CharSequence.subSequence(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>start </c>, <c>end </c>, <c>start &gt; end</c>,
             or if <c>start</c> or <c>end</c> are greater than the
             length of this sequence.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ICharSequence.ToString" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="iCharSequence.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler:Java.Lang.ICharSequenceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler:Java.Lang.ICharSequenceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string containing the characters in this sequence in the same
            order as this sequence.</summary>
        <returns>a string consisting of exactly this sequence of characters</returns>
        <remarks>
          <para>Returns a string containing the characters in this sequence in the same
            order as this sequence.  The length of the string will be the length of
            this sequence.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/CharSequence#toString()" title="Reference documentation">Java documentation for <code>java.lang.CharSequence.toString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
