<Type Name="BasicHttpProcessor" FullName="Org.Apache.Http.Protocol.BasicHttpProcessor">
  <TypeSignature Language="C#" Value="public sealed class BasicHttpProcessor : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.ICloneable, Org.Apache.Http.Protocol.IHttpProcessor, Org.Apache.Http.Protocol.IHttpRequestInterceptorList, Org.Apache.Http.Protocol.IHttpResponseInterceptorList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BasicHttpProcessor extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.ICloneable, class Org.Apache.Http.IHttpRequestInterceptor, class Org.Apache.Http.IHttpResponseInterceptor, class Org.Apache.Http.Protocol.IHttpProcessor, class Org.Apache.Http.Protocol.IHttpRequestInterceptorList, class Org.Apache.Http.Protocol.IHttpResponseInterceptorList, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Apache.Http.Protocol.BasicHttpProcessor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BasicHttpProcessor&#xA;Inherits Object&#xA;Implements ICloneable, IDisposable, IHttpProcessor, IHttpRequestInterceptorList, IHttpResponseInterceptorList, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicHttpProcessor sealed : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::ICloneable, Org::Apache::Http::Protocol::IHttpProcessor, Org::Apache::Http::Protocol::IHttpRequestInterceptorList, Org::Apache::Http::Protocol::IHttpResponseInterceptorList" />
  <TypeSignature Language="F#" Value="type BasicHttpProcessor = class&#xA;    inherit Object&#xA;    interface ICloneable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IHttpProcessor&#xA;    interface IHttpRequestInterceptor&#xA;    interface IHttpResponseInterceptor&#xA;    interface IHttpRequestInterceptorList&#xA;    interface IHttpResponseInterceptorList" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Apache.Http.IHttpRequestInterceptor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Apache.Http.IHttpResponseInterceptor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Apache.Http.Protocol.IHttpProcessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Apache.Http.Protocol.IHttpRequestInterceptorList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Apache.Http.Protocol.IHttpResponseInterceptorList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/apache/http/protocol/BasicHttpProcessor", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/apache/http/protocol/BasicHttpProcessor", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android22.0", "This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android22.0", "This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Keeps lists of interceptors for processing requests and responses.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/apache/http/protocol/BasicHttpProcessor" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpProcessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpProcessor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddInterceptor">
      <MemberSignature Language="C#" Value="public void AddInterceptor (Org.Apache.Http.IHttpRequestInterceptor? interceptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInterceptor(class Org.Apache.Http.IHttpRequestInterceptor interceptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddInterceptor(Org.Apache.Http.IHttpRequestInterceptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInterceptor (interceptor As IHttpRequestInterceptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInterceptor(Org::Apache::Http::IHttpRequestInterceptor ^ interceptor);" />
      <MemberSignature Language="F#" Value="member this.AddInterceptor : Org.Apache.Http.IHttpRequestInterceptor -&gt; unit" Usage="basicHttpProcessor.AddInterceptor interceptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addInterceptor", "(Lorg/apache/http/HttpRequestInterceptor;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addInterceptor", "(Lorg/apache/http/HttpRequestInterceptor;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interceptor" Type="Org.Apache.Http.IHttpRequestInterceptor" />
      </Parameters>
      <Docs>
        <param name="interceptor">the interceptor to add
</param>
        <summary>Same as <see cref="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddRequestInterceptor(Org.Apache.Http.IHttpRequestInterceptor)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddInterceptor">
      <MemberSignature Language="C#" Value="public void AddInterceptor (Org.Apache.Http.IHttpResponseInterceptor? interceptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInterceptor(class Org.Apache.Http.IHttpResponseInterceptor interceptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddInterceptor(Org.Apache.Http.IHttpResponseInterceptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInterceptor (interceptor As IHttpResponseInterceptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInterceptor(Org::Apache::Http::IHttpResponseInterceptor ^ interceptor);" />
      <MemberSignature Language="F#" Value="member this.AddInterceptor : Org.Apache.Http.IHttpResponseInterceptor -&gt; unit" Usage="basicHttpProcessor.AddInterceptor interceptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addInterceptor", "(Lorg/apache/http/HttpResponseInterceptor;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addInterceptor", "(Lorg/apache/http/HttpResponseInterceptor;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interceptor" Type="Org.Apache.Http.IHttpResponseInterceptor" />
      </Parameters>
      <Docs>
        <param name="interceptor">the interceptor to add
</param>
        <summary>Same as <see cref="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddResponseInterceptor(Org.Apache.Http.IHttpResponseInterceptor)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddInterceptor">
      <MemberSignature Language="C#" Value="public void AddInterceptor (Org.Apache.Http.IHttpRequestInterceptor? interceptor, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInterceptor(class Org.Apache.Http.IHttpRequestInterceptor interceptor, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddInterceptor(Org.Apache.Http.IHttpRequestInterceptor,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInterceptor (interceptor As IHttpRequestInterceptor, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInterceptor(Org::Apache::Http::IHttpRequestInterceptor ^ interceptor, int index);" />
      <MemberSignature Language="F#" Value="member this.AddInterceptor : Org.Apache.Http.IHttpRequestInterceptor * int -&gt; unit" Usage="basicHttpProcessor.AddInterceptor (interceptor, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addInterceptor", "(Lorg/apache/http/HttpRequestInterceptor;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addInterceptor", "(Lorg/apache/http/HttpRequestInterceptor;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interceptor" Type="Org.Apache.Http.IHttpRequestInterceptor" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="interceptor">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddInterceptor">
      <MemberSignature Language="C#" Value="public void AddInterceptor (Org.Apache.Http.IHttpResponseInterceptor? interceptor, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInterceptor(class Org.Apache.Http.IHttpResponseInterceptor interceptor, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddInterceptor(Org.Apache.Http.IHttpResponseInterceptor,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInterceptor (interceptor As IHttpResponseInterceptor, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInterceptor(Org::Apache::Http::IHttpResponseInterceptor ^ interceptor, int index);" />
      <MemberSignature Language="F#" Value="member this.AddInterceptor : Org.Apache.Http.IHttpResponseInterceptor * int -&gt; unit" Usage="basicHttpProcessor.AddInterceptor (interceptor, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addInterceptor", "(Lorg/apache/http/HttpResponseInterceptor;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addInterceptor", "(Lorg/apache/http/HttpResponseInterceptor;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interceptor" Type="Org.Apache.Http.IHttpResponseInterceptor" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="interceptor">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddRequestInterceptor">
      <MemberSignature Language="C#" Value="public void AddRequestInterceptor (Org.Apache.Http.IHttpRequestInterceptor? itcp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRequestInterceptor(class Org.Apache.Http.IHttpRequestInterceptor itcp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddRequestInterceptor(Org.Apache.Http.IHttpRequestInterceptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRequestInterceptor (itcp As IHttpRequestInterceptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRequestInterceptor(Org::Apache::Http::IHttpRequestInterceptor ^ itcp);" />
      <MemberSignature Language="F#" Value="abstract member AddRequestInterceptor : Org.Apache.Http.IHttpRequestInterceptor -&gt; unit&#xA;override this.AddRequestInterceptor : Org.Apache.Http.IHttpRequestInterceptor -&gt; unit" Usage="basicHttpProcessor.AddRequestInterceptor itcp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpRequestInterceptorList.AddRequestInterceptor(Org.Apache.Http.IHttpRequestInterceptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addRequestInterceptor", "(Lorg/apache/http/HttpRequestInterceptor;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addRequestInterceptor", "(Lorg/apache/http/HttpRequestInterceptor;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itcp" Type="Org.Apache.Http.IHttpRequestInterceptor" />
      </Parameters>
      <Docs>
        <param name="itcp">the request interceptor to add
</param>
        <summary tool="true">Inserts a request interceptor at the specified index.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddRequestInterceptor">
      <MemberSignature Language="C#" Value="public void AddRequestInterceptor (Org.Apache.Http.IHttpRequestInterceptor? itcp, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRequestInterceptor(class Org.Apache.Http.IHttpRequestInterceptor itcp, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddRequestInterceptor(Org.Apache.Http.IHttpRequestInterceptor,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRequestInterceptor (itcp As IHttpRequestInterceptor, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRequestInterceptor(Org::Apache::Http::IHttpRequestInterceptor ^ itcp, int index);" />
      <MemberSignature Language="F#" Value="abstract member AddRequestInterceptor : Org.Apache.Http.IHttpRequestInterceptor * int -&gt; unit&#xA;override this.AddRequestInterceptor : Org.Apache.Http.IHttpRequestInterceptor * int -&gt; unit" Usage="basicHttpProcessor.AddRequestInterceptor (itcp, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpRequestInterceptorList.AddRequestInterceptor(Org.Apache.Http.IHttpRequestInterceptor,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addRequestInterceptor", "(Lorg/apache/http/HttpRequestInterceptor;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addRequestInterceptor", "(Lorg/apache/http/HttpRequestInterceptor;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itcp" Type="Org.Apache.Http.IHttpRequestInterceptor" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itcp">the request interceptor to add</param>
        <param name="index">the index to insert the interceptor at
</param>
        <summary>Inserts a request interceptor at the specified index.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddResponseInterceptor">
      <MemberSignature Language="C#" Value="public void AddResponseInterceptor (Org.Apache.Http.IHttpResponseInterceptor? itcp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResponseInterceptor(class Org.Apache.Http.IHttpResponseInterceptor itcp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddResponseInterceptor(Org.Apache.Http.IHttpResponseInterceptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResponseInterceptor (itcp As IHttpResponseInterceptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResponseInterceptor(Org::Apache::Http::IHttpResponseInterceptor ^ itcp);" />
      <MemberSignature Language="F#" Value="abstract member AddResponseInterceptor : Org.Apache.Http.IHttpResponseInterceptor -&gt; unit&#xA;override this.AddResponseInterceptor : Org.Apache.Http.IHttpResponseInterceptor -&gt; unit" Usage="basicHttpProcessor.AddResponseInterceptor itcp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpResponseInterceptorList.AddResponseInterceptor(Org.Apache.Http.IHttpResponseInterceptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addResponseInterceptor", "(Lorg/apache/http/HttpResponseInterceptor;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addResponseInterceptor", "(Lorg/apache/http/HttpResponseInterceptor;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itcp" Type="Org.Apache.Http.IHttpResponseInterceptor" />
      </Parameters>
      <Docs>
        <param name="itcp">the response interceptor to add
</param>
        <summary tool="true">Inserts a response interceptor at the specified index.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddResponseInterceptor">
      <MemberSignature Language="C#" Value="public void AddResponseInterceptor (Org.Apache.Http.IHttpResponseInterceptor? itcp, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResponseInterceptor(class Org.Apache.Http.IHttpResponseInterceptor itcp, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.AddResponseInterceptor(Org.Apache.Http.IHttpResponseInterceptor,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResponseInterceptor (itcp As IHttpResponseInterceptor, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResponseInterceptor(Org::Apache::Http::IHttpResponseInterceptor ^ itcp, int index);" />
      <MemberSignature Language="F#" Value="abstract member AddResponseInterceptor : Org.Apache.Http.IHttpResponseInterceptor * int -&gt; unit&#xA;override this.AddResponseInterceptor : Org.Apache.Http.IHttpResponseInterceptor * int -&gt; unit" Usage="basicHttpProcessor.AddResponseInterceptor (itcp, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpResponseInterceptorList.AddResponseInterceptor(Org.Apache.Http.IHttpResponseInterceptor,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addResponseInterceptor", "(Lorg/apache/http/HttpResponseInterceptor;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addResponseInterceptor", "(Lorg/apache/http/HttpResponseInterceptor;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itcp" Type="Org.Apache.Http.IHttpResponseInterceptor" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itcp">the response interceptor to add</param>
        <param name="index">the index to insert the interceptor at
</param>
        <summary>Inserts a response interceptor at the specified index.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearInterceptors">
      <MemberSignature Language="C#" Value="public void ClearInterceptors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearInterceptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.ClearInterceptors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearInterceptors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearInterceptors();" />
      <MemberSignature Language="F#" Value="member this.ClearInterceptors : unit -&gt; unit" Usage="basicHttpProcessor.ClearInterceptors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearInterceptors", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearInterceptors", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears both interceptor lists maintained by this processor.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearRequestInterceptors">
      <MemberSignature Language="C#" Value="public void ClearRequestInterceptors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearRequestInterceptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.ClearRequestInterceptors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRequestInterceptors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearRequestInterceptors();" />
      <MemberSignature Language="F#" Value="abstract member ClearRequestInterceptors : unit -&gt; unit&#xA;override this.ClearRequestInterceptors : unit -&gt; unit" Usage="basicHttpProcessor.ClearRequestInterceptors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpRequestInterceptorList.ClearRequestInterceptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearRequestInterceptors", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearRequestInterceptors", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all request interceptors from this list.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearResponseInterceptors">
      <MemberSignature Language="C#" Value="public void ClearResponseInterceptors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearResponseInterceptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.ClearResponseInterceptors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearResponseInterceptors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearResponseInterceptors();" />
      <MemberSignature Language="F#" Value="abstract member ClearResponseInterceptors : unit -&gt; unit&#xA;override this.ClearResponseInterceptors : unit -&gt; unit" Usage="basicHttpProcessor.ClearResponseInterceptors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpResponseInterceptorList.ClearResponseInterceptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearResponseInterceptors", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearResponseInterceptors", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all response interceptors from this list.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Java.Lang.Object" Usage="basicHttpProcessor.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clone", "()Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clone", "()Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a copy of this <c>Object</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.CloneNotSupportedException" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.Protocol.BasicHttpProcessor? Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Org.Apache.Http.Protocol.BasicHttpProcessor Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As BasicHttpProcessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Org::Apache::Http::Protocol::BasicHttpProcessor ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; Org.Apache.Http.Protocol.BasicHttpProcessor" Usage="basicHttpProcessor.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy", "()Lorg/apache/http/protocol/BasicHttpProcessor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy", "()Lorg/apache/http/protocol/BasicHttpProcessor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Protocol.BasicHttpProcessor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a copy of this instance</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestInterceptor">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IHttpRequestInterceptor? GetRequestInterceptor (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IHttpRequestInterceptor GetRequestInterceptor(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.GetRequestInterceptor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequestInterceptor (index As Integer) As IHttpRequestInterceptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Org::Apache::Http::IHttpRequestInterceptor ^ GetRequestInterceptor(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestInterceptor : int -&gt; Org.Apache.Http.IHttpRequestInterceptor&#xA;override this.GetRequestInterceptor : int -&gt; Org.Apache.Http.IHttpRequestInterceptor" Usage="basicHttpProcessor.GetRequestInterceptor index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpRequestInterceptorList.GetRequestInterceptor(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRequestInterceptor", "(I)Lorg/apache/http/HttpRequestInterceptor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRequestInterceptor", "(I)Lorg/apache/http/HttpRequestInterceptor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpRequestInterceptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">the index of the interceptor to obtain,
                  0 for first</param>
        <summary>Obtains a request interceptor from this list.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseInterceptor">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IHttpResponseInterceptor? GetResponseInterceptor (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IHttpResponseInterceptor GetResponseInterceptor(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.GetResponseInterceptor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseInterceptor (index As Integer) As IHttpResponseInterceptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Org::Apache::Http::IHttpResponseInterceptor ^ GetResponseInterceptor(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseInterceptor : int -&gt; Org.Apache.Http.IHttpResponseInterceptor&#xA;override this.GetResponseInterceptor : int -&gt; Org.Apache.Http.IHttpResponseInterceptor" Usage="basicHttpProcessor.GetResponseInterceptor index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpResponseInterceptorList.GetResponseInterceptor(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResponseInterceptor", "(I)Lorg/apache/http/HttpResponseInterceptor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResponseInterceptor", "(I)Lorg/apache/http/HttpResponseInterceptor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponseInterceptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">the index of the interceptor to obtain,
                  0 for first</param>
        <summary>Obtains a response interceptor from this list.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Protocol.BasicHttpProcessor.JniPeerMembers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Org.Apache.Http.Protocol.BasicHttpProcessor.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public void Process (Org.Apache.Http.IHttpRequest? request, Org.Apache.Http.Protocol.IHttpContext? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Process(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.Process(Org.Apache.Http.IHttpRequest,Org.Apache.Http.Protocol.IHttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Process (request As IHttpRequest, context As IHttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Process(Org::Apache::Http::IHttpRequest ^ request, Org::Apache::Http::Protocol::IHttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Process : Org.Apache.Http.IHttpRequest * Org.Apache.Http.Protocol.IHttpContext -&gt; unit&#xA;override this.Process : Org.Apache.Http.IHttpRequest * Org.Apache.Http.Protocol.IHttpContext -&gt; unit" Usage="basicHttpProcessor.Process (request, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.IHttpRequestInterceptor.Process(Org.Apache.Http.IHttpRequest,Org.Apache.Http.Protocol.IHttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("process", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("process", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request to preprocess</param>
        <param name="context">the context for the request</param>
        <summary tool="true">Processes a response.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public void Process (Org.Apache.Http.IHttpResponse? response, Org.Apache.Http.Protocol.IHttpContext? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Process(class Org.Apache.Http.IHttpResponse response, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.Process(Org.Apache.Http.IHttpResponse,Org.Apache.Http.Protocol.IHttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Process (response As IHttpResponse, context As IHttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Process(Org::Apache::Http::IHttpResponse ^ response, Org::Apache::Http::Protocol::IHttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Process : Org.Apache.Http.IHttpResponse * Org.Apache.Http.Protocol.IHttpContext -&gt; unit&#xA;override this.Process : Org.Apache.Http.IHttpResponse * Org.Apache.Http.Protocol.IHttpContext -&gt; unit" Usage="basicHttpProcessor.Process (response, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.IHttpResponseInterceptor.Process(Org.Apache.Http.IHttpResponse,Org.Apache.Http.Protocol.IHttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("process", "(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("process", "(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Org.Apache.Http.IHttpResponse" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="response">the response to postprocess</param>
        <param name="context">the context for the request</param>
        <summary>Processes a response.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRequestInterceptorByClass">
      <MemberSignature Language="C#" Value="public void RemoveRequestInterceptorByClass (Java.Lang.Class? clazz);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRequestInterceptorByClass(class Java.Lang.Class clazz) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.RemoveRequestInterceptorByClass(Java.Lang.Class)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRequestInterceptorByClass (clazz As Class)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRequestInterceptorByClass(Java::Lang::Class ^ clazz);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRequestInterceptorByClass : Java.Lang.Class -&gt; unit&#xA;override this.RemoveRequestInterceptorByClass : Java.Lang.Class -&gt; unit" Usage="basicHttpProcessor.RemoveRequestInterceptorByClass clazz" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpRequestInterceptorList.RemoveRequestInterceptorByClass(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeRequestInterceptorByClass", "(Ljava/lang/Class;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeRequestInterceptorByClass", "(Ljava/lang/Class;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clazz" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="clazz">the class of the instances to be removed.
</param>
        <summary>Removes all request interceptor of the specified class</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveResponseInterceptorByClass">
      <MemberSignature Language="C#" Value="public void RemoveResponseInterceptorByClass (Java.Lang.Class? clazz);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveResponseInterceptorByClass(class Java.Lang.Class clazz) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.RemoveResponseInterceptorByClass(Java.Lang.Class)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveResponseInterceptorByClass (clazz As Class)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveResponseInterceptorByClass(Java::Lang::Class ^ clazz);" />
      <MemberSignature Language="F#" Value="abstract member RemoveResponseInterceptorByClass : Java.Lang.Class -&gt; unit&#xA;override this.RemoveResponseInterceptorByClass : Java.Lang.Class -&gt; unit" Usage="basicHttpProcessor.RemoveResponseInterceptorByClass clazz" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpResponseInterceptorList.RemoveResponseInterceptorByClass(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeResponseInterceptorByClass", "(Ljava/lang/Class;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeResponseInterceptorByClass", "(Ljava/lang/Class;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clazz" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="clazz">the class of the instances to be removed.
</param>
        <summary>Removes all response interceptor of the specified class</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestInterceptorCount">
      <MemberSignature Language="C#" Value="public int RequestInterceptorCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestInterceptorCount" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Protocol.BasicHttpProcessor.RequestInterceptorCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestInterceptorCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestInterceptorCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestInterceptorCount : int" Usage="Org.Apache.Http.Protocol.BasicHttpProcessor.RequestInterceptorCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Org.Apache.Http.Protocol.IHttpRequestInterceptorList.RequestInterceptorCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRequestInterceptorCount", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRequestInterceptorCount", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the current size of this list.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResponseInterceptorCount">
      <MemberSignature Language="C#" Value="public int ResponseInterceptorCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ResponseInterceptorCount" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Protocol.BasicHttpProcessor.ResponseInterceptorCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseInterceptorCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ResponseInterceptorCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ResponseInterceptorCount : int" Usage="Org.Apache.Http.Protocol.BasicHttpProcessor.ResponseInterceptorCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Org.Apache.Http.Protocol.IHttpResponseInterceptorList.ResponseInterceptorCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getResponseInterceptorCount", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getResponseInterceptorCount", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the current size of this list.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetInterceptors">
      <MemberSignature Language="C#" Value="public void SetInterceptors (System.Collections.IList? list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInterceptors(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.BasicHttpProcessor.SetInterceptors(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInterceptors (list As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetInterceptors(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="abstract member SetInterceptors : System.Collections.IList -&gt; unit&#xA;override this.SetInterceptors : System.Collections.IList -&gt; unit" Usage="basicHttpProcessor.SetInterceptors list" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpRequestInterceptorList.SetInterceptors(System.Collections.IList)</InterfaceMember>
        <InterfaceMember>M:Org.Apache.Http.Protocol.IHttpResponseInterceptorList.SetInterceptors(System.Collections.IList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInterceptors", "(Ljava/util/List;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInterceptors", "(Ljava/util/List;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">the list of request and response interceptors
                  from which to initialize
</param>
        <summary>Sets the interceptor lists.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Protocol.BasicHttpProcessor.ThresholdClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Org.Apache.Http.Protocol.BasicHttpProcessor.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Protocol.BasicHttpProcessor.ThresholdType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Org.Apache.Http.Protocol.BasicHttpProcessor.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
