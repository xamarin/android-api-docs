<Type Name="HttpRequestExecutor" FullName="Org.Apache.Http.Protocol.HttpRequestExecutor">
  <TypeSignature Language="C#" Value="public class HttpRequestExecutor : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestExecutor extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Org.Apache.Http.Protocol.HttpRequestExecutor" />
  <TypeSignature Language="F#" Value="type HttpRequestExecutor = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/apache/http/protocol/HttpRequestExecutor", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/apache/http/protocol/HttpRequestExecutor", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android22.0", "This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android22.0", "This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Sends HTTP requests and receives the responses.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestExecutor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.HttpRequestExecutor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a new request executor.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpRequestExecutor (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.HttpRequestExecutor.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Org.Apache.Http.Protocol.HttpRequestExecutor : nativeint * Android.Runtime.JniHandleOwnership -&gt; Org.Apache.Http.Protocol.HttpRequestExecutor" Usage="new Org.Apache.Http.Protocol.HttpRequestExecutor (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResponseHaveBody">
      <MemberSignature Language="C#" Value="protected virtual bool CanResponseHaveBody (Org.Apache.Http.IHttpRequest? request, Org.Apache.Http.IHttpResponse? response);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanResponseHaveBody(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.IHttpResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.HttpRequestExecutor.CanResponseHaveBody(Org.Apache.Http.IHttpRequest,Org.Apache.Http.IHttpResponse)" />
      <MemberSignature Language="F#" Value="abstract member CanResponseHaveBody : Org.Apache.Http.IHttpRequest * Org.Apache.Http.IHttpResponse -&gt; bool&#xA;override this.CanResponseHaveBody : Org.Apache.Http.IHttpRequest * Org.Apache.Http.IHttpResponse -&gt; bool" Usage="httpRequestExecutor.CanResponseHaveBody (request, response)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canResponseHaveBody", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;)Z", "GetCanResponseHaveBody_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpResponse_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canResponseHaveBody", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;)Z", "GetCanResponseHaveBody_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpResponse_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="response" Type="Org.Apache.Http.IHttpResponse" />
      </Parameters>
      <Docs>
        <param name="request">the request, to obtain the executed method</param>
        <param name="response">the response, to obtain the status code
</param>
        <summary>Decide whether a response comes with an entity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoReceiveResponse">
      <MemberSignature Language="C#" Value="protected virtual Org.Apache.Http.IHttpResponse? DoReceiveResponse (Org.Apache.Http.IHttpRequest? request, Org.Apache.Http.IHttpClientConnection? conn, Org.Apache.Http.Protocol.IHttpContext? context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.Apache.Http.IHttpResponse DoReceiveResponse(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.IHttpClientConnection conn, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.HttpRequestExecutor.DoReceiveResponse(Org.Apache.Http.IHttpRequest,Org.Apache.Http.IHttpClientConnection,Org.Apache.Http.Protocol.IHttpContext)" />
      <MemberSignature Language="F#" Value="abstract member DoReceiveResponse : Org.Apache.Http.IHttpRequest * Org.Apache.Http.IHttpClientConnection * Org.Apache.Http.Protocol.IHttpContext -&gt; Org.Apache.Http.IHttpResponse&#xA;override this.DoReceiveResponse : Org.Apache.Http.IHttpRequest * Org.Apache.Http.IHttpClientConnection * Org.Apache.Http.Protocol.IHttpContext -&gt; Org.Apache.Http.IHttpResponse" Usage="httpRequestExecutor.DoReceiveResponse (request, conn, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doReceiveResponse", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetDoReceiveResponse_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doReceiveResponse", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetDoReceiveResponse_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="conn" Type="Org.Apache.Http.IHttpClientConnection" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request for which to obtain the response</param>
        <param name="conn">the connection over which the request was sent</param>
        <param name="context">the context for receiving the response</param>
        <summary>Wait for and receive a response.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoSendRequest">
      <MemberSignature Language="C#" Value="protected virtual Org.Apache.Http.IHttpResponse? DoSendRequest (Org.Apache.Http.IHttpRequest? request, Org.Apache.Http.IHttpClientConnection? conn, Org.Apache.Http.Protocol.IHttpContext? context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.Apache.Http.IHttpResponse DoSendRequest(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.IHttpClientConnection conn, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.HttpRequestExecutor.DoSendRequest(Org.Apache.Http.IHttpRequest,Org.Apache.Http.IHttpClientConnection,Org.Apache.Http.Protocol.IHttpContext)" />
      <MemberSignature Language="F#" Value="abstract member DoSendRequest : Org.Apache.Http.IHttpRequest * Org.Apache.Http.IHttpClientConnection * Org.Apache.Http.Protocol.IHttpContext -&gt; Org.Apache.Http.IHttpResponse&#xA;override this.DoSendRequest : Org.Apache.Http.IHttpRequest * Org.Apache.Http.IHttpClientConnection * Org.Apache.Http.Protocol.IHttpContext -&gt; Org.Apache.Http.IHttpResponse" Usage="httpRequestExecutor.DoSendRequest (request, conn, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doSendRequest", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetDoSendRequest_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doSendRequest", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetDoSendRequest_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="conn" Type="Org.Apache.Http.IHttpClientConnection" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request to send, already
                  <see cref="M:Org.Apache.Http.Protocol.HttpRequestExecutor.PreProcess(Org.Apache.Http.IHttpRequest,Org.Apache.Http.Protocol.IHttpProcessor,Org.Apache.Http.Protocol.IHttpContext)" /></param>
        <param name="conn">the connection over which to send the request,
                  already established</param>
        <param name="context">the context for sending the request</param>
        <summary>Send a request over a connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.IHttpResponse? Execute (Org.Apache.Http.IHttpRequest? request, Org.Apache.Http.IHttpClientConnection? conn, Org.Apache.Http.Protocol.IHttpContext? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IHttpResponse Execute(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.IHttpClientConnection conn, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.HttpRequestExecutor.Execute(Org.Apache.Http.IHttpRequest,Org.Apache.Http.IHttpClientConnection,Org.Apache.Http.Protocol.IHttpContext)" />
      <MemberSignature Language="F#" Value="abstract member Execute : Org.Apache.Http.IHttpRequest * Org.Apache.Http.IHttpClientConnection * Org.Apache.Http.Protocol.IHttpContext -&gt; Org.Apache.Http.IHttpResponse&#xA;override this.Execute : Org.Apache.Http.IHttpRequest * Org.Apache.Http.IHttpClientConnection * Org.Apache.Http.Protocol.IHttpContext -&gt; Org.Apache.Http.IHttpResponse" Usage="httpRequestExecutor.Execute (request, conn, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("execute", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetExecute_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("execute", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetExecute_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="conn" Type="Org.Apache.Http.IHttpClientConnection" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request to send. It will be preprocessed.</param>
        <param name="conn">the open connection over which to send</param>
        <param name="context">To be added.</param>
        <summary>Synchronously send a request and obtain the response.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Protocol.HttpRequestExecutor.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Org.Apache.Http.Protocol.HttpRequestExecutor.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostProcess">
      <MemberSignature Language="C#" Value="public virtual void PostProcess (Org.Apache.Http.IHttpResponse? response, Org.Apache.Http.Protocol.IHttpProcessor? processor, Org.Apache.Http.Protocol.IHttpContext? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcess(class Org.Apache.Http.IHttpResponse response, class Org.Apache.Http.Protocol.IHttpProcessor processor, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.HttpRequestExecutor.PostProcess(Org.Apache.Http.IHttpResponse,Org.Apache.Http.Protocol.IHttpProcessor,Org.Apache.Http.Protocol.IHttpContext)" />
      <MemberSignature Language="F#" Value="abstract member PostProcess : Org.Apache.Http.IHttpResponse * Org.Apache.Http.Protocol.IHttpProcessor * Org.Apache.Http.Protocol.IHttpContext -&gt; unit&#xA;override this.PostProcess : Org.Apache.Http.IHttpResponse * Org.Apache.Http.Protocol.IHttpProcessor * Org.Apache.Http.Protocol.IHttpContext -&gt; unit" Usage="httpRequestExecutor.PostProcess (response, processor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postProcess", "(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V", "GetPostProcess_Lorg_apache_http_HttpResponse_Lorg_apache_http_protocol_HttpProcessor_Lorg_apache_http_protocol_HttpContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postProcess", "(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V", "GetPostProcess_Lorg_apache_http_HttpResponse_Lorg_apache_http_protocol_HttpProcessor_Lorg_apache_http_protocol_HttpContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Org.Apache.Http.IHttpResponse" />
        <Parameter Name="processor" Type="Org.Apache.Http.Protocol.IHttpProcessor" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="response">the response object to finish</param>
        <param name="processor">the processor to use</param>
        <param name="context">the context for post-processing the response</param>
        <summary>Finish a response.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="PreProcess">
      <MemberSignature Language="C#" Value="public virtual void PreProcess (Org.Apache.Http.IHttpRequest? request, Org.Apache.Http.Protocol.IHttpProcessor? processor, Org.Apache.Http.Protocol.IHttpContext? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreProcess(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.Protocol.IHttpProcessor processor, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Apache.Http.Protocol.HttpRequestExecutor.PreProcess(Org.Apache.Http.IHttpRequest,Org.Apache.Http.Protocol.IHttpProcessor,Org.Apache.Http.Protocol.IHttpContext)" />
      <MemberSignature Language="F#" Value="abstract member PreProcess : Org.Apache.Http.IHttpRequest * Org.Apache.Http.Protocol.IHttpProcessor * Org.Apache.Http.Protocol.IHttpContext -&gt; unit&#xA;override this.PreProcess : Org.Apache.Http.IHttpRequest * Org.Apache.Http.Protocol.IHttpProcessor * Org.Apache.Http.Protocol.IHttpContext -&gt; unit" Usage="httpRequestExecutor.PreProcess (request, processor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("preProcess", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V", "GetPreProcess_Lorg_apache_http_HttpRequest_Lorg_apache_http_protocol_HttpProcessor_Lorg_apache_http_protocol_HttpContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("preProcess", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V", "GetPreProcess_Lorg_apache_http_HttpRequest_Lorg_apache_http_protocol_HttpProcessor_Lorg_apache_http_protocol_HttpContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="processor" Type="Org.Apache.Http.Protocol.IHttpProcessor" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request to prepare</param>
        <param name="processor">the processor to use</param>
        <param name="context">the context for sending the request</param>
        <summary>Prepare a request for sending.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Protocol.HttpRequestExecutor.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Org.Apache.Http.Protocol.HttpRequestExecutor.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Org.Apache.Http.Protocol.HttpRequestExecutor.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Org.Apache.Http.Protocol.HttpRequestExecutor.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
