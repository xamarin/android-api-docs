<Type Name="HttpRequestExecutor" FullName="Org.Apache.Http.Protocol.HttpRequestExecutor">
  <TypeSignature Language="C#" Value="public class HttpRequestExecutor : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestExecutor extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/protocol/HttpRequestExecutor", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Sends HTTP requests and receives the responses.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Sends HTTP requests and receives the responses.
 Takes care of request preprocessing and response postprocessing
 by the respective interceptors.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestExecutor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a new request executor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new request executor.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor.html#HttpRequestExecutor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpRequestExecutor (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResponseHaveBody">
      <MemberSignature Language="C#" Value="protected virtual bool CanResponseHaveBody (Org.Apache.Http.IHttpRequest request, Org.Apache.Http.IHttpResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanResponseHaveBody(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.IHttpResponse response) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canResponseHaveBody", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;)Z", "GetCanResponseHaveBody_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpResponse_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="response" Type="Org.Apache.Http.IHttpResponse" />
      </Parameters>
      <Docs>
        <param name="request">the request, to obtain the executed method</param>
        <param name="response">the response, to obtain the status code
</param>
        <summary>Decide whether a response comes with an entity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Decide whether a response comes with an entity.
 The implementation in this class is based on RFC 2616.
 Unknown methods and response codes are supposed to
 indicate responses with an entity.
 <format type="text/html"><br /></format>
 Derived executors can override this method to handle
 methods and response codes not specified in RFC 2616.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor.html#canResponseHaveBody(org.apache.http.HttpRequest, org.apache.http.HttpResponse)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoReceiveResponse">
      <MemberSignature Language="C#" Value="protected virtual Org.Apache.Http.IHttpResponse DoReceiveResponse (Org.Apache.Http.IHttpRequest request, Org.Apache.Http.IHttpClientConnection conn, Org.Apache.Http.Protocol.IHttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.Apache.Http.IHttpResponse DoReceiveResponse(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.IHttpClientConnection conn, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doReceiveResponse", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetDoReceiveResponse_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="conn" Type="Org.Apache.Http.IHttpClientConnection" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request for which to obtain the response</param>
        <param name="conn">the connection over which the request was sent</param>
        <param name="context">the context for receiving the response</param>
        <summary>Wait for and receive a response.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Wait for and receive a response.
 This method will automatically ignore intermediate responses
 with status code 1xx.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor.html#doReceiveResponse(org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoSendRequest">
      <MemberSignature Language="C#" Value="protected virtual Org.Apache.Http.IHttpResponse DoSendRequest (Org.Apache.Http.IHttpRequest request, Org.Apache.Http.IHttpClientConnection conn, Org.Apache.Http.Protocol.IHttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.Apache.Http.IHttpResponse DoSendRequest(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.IHttpClientConnection conn, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doSendRequest", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetDoSendRequest_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="conn" Type="Org.Apache.Http.IHttpClientConnection" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request to send, already
                  <c><see cref="M:Org.Apache.Http.Protocol.HttpRequestExecutor.PreProcess(Org.Apache.Http.IHttpRequest,Org.Apache.Http.Protocol.IHttpProcessor,Org.Apache.Http.Protocol.IHttpProcessor)" /></c></param>
        <param name="conn">the connection over which to send the request,
                  already established</param>
        <param name="context">the context for sending the request</param>
        <summary>Send a request over a connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Send a request over a connection.
 This method also handles the expect-continue handshake if necessary.
 If it does not have to handle an expect-continue handshake, it will
 not use the connection for reading or anything else that depends on
 data coming in over the connection.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor.html#doSendRequest(org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.IHttpResponse Execute (Org.Apache.Http.IHttpRequest request, Org.Apache.Http.IHttpClientConnection conn, Org.Apache.Http.Protocol.IHttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IHttpResponse Execute(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.IHttpClientConnection conn, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("execute", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;", "GetExecute_Lorg_apache_http_HttpRequest_Lorg_apache_http_HttpClientConnection_Lorg_apache_http_protocol_HttpContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="conn" Type="Org.Apache.Http.IHttpClientConnection" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request to send. It will be preprocessed.</param>
        <param name="conn">the open connection over which to send</param>
        <param name="context">To be added.</param>
        <summary>Synchronously send a request and obtain the response.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Synchronously send a request and obtain the response.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor.html#execute(org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="PostProcess">
      <MemberSignature Language="C#" Value="public virtual void PostProcess (Org.Apache.Http.IHttpResponse response, Org.Apache.Http.Protocol.IHttpProcessor processor, Org.Apache.Http.Protocol.IHttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcess(class Org.Apache.Http.IHttpResponse response, class Org.Apache.Http.Protocol.IHttpProcessor processor, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postProcess", "(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V", "GetPostProcess_Lorg_apache_http_HttpResponse_Lorg_apache_http_protocol_HttpProcessor_Lorg_apache_http_protocol_HttpContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Org.Apache.Http.IHttpResponse" />
        <Parameter Name="processor" Type="Org.Apache.Http.Protocol.IHttpProcessor" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="response">the response object to finish</param>
        <param name="processor">the processor to use</param>
        <param name="context">the context for post-processing the response</param>
        <summary>Finish a response.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Finish a response.
 This includes post-processing of the response object.
 It does <format type="text/html"><i>not</i></format> read the response entity, if any.
 It does <format type="text/html"><i>not</i></format> allow for immediate re-use of the
 connection over which the response is coming in.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor.html#postProcess(org.apache.http.HttpResponse, org.apache.http.protocol.HttpProcessor, org.apache.http.protocol.HttpContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="PreProcess">
      <MemberSignature Language="C#" Value="public virtual void PreProcess (Org.Apache.Http.IHttpRequest request, Org.Apache.Http.Protocol.IHttpProcessor processor, Org.Apache.Http.Protocol.IHttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreProcess(class Org.Apache.Http.IHttpRequest request, class Org.Apache.Http.Protocol.IHttpProcessor processor, class Org.Apache.Http.Protocol.IHttpContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("preProcess", "(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V", "GetPreProcess_Lorg_apache_http_HttpRequest_Lorg_apache_http_protocol_HttpProcessor_Lorg_apache_http_protocol_HttpContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
        <Parameter Name="processor" Type="Org.Apache.Http.Protocol.IHttpProcessor" />
        <Parameter Name="context" Type="Org.Apache.Http.Protocol.IHttpContext" />
      </Parameters>
      <Docs>
        <param name="request">the request to prepare</param>
        <param name="processor">the processor to use</param>
        <param name="context">the context for sending the request</param>
        <summary>Prepare a request for sending.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Prepare a request for sending.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/protocol/HttpRequestExecutor.html#preProcess(org.apache.http.HttpRequest, org.apache.http.protocol.HttpProcessor, org.apache.http.protocol.HttpContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Apache.Http.HttpException">in case of a protocol or processing problem</exception>
        <exception cref="T:Java.IO.IOException">in case of an I/O problem
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
