<Type Name="ITemporalField" FullName="Java.Time.Temporal.ITemporalField">
  <TypeSignature Language="C#" Value="public interface ITemporalField : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITemporalField implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Time.Temporal.ITemporalField" />
  <TypeSignature Language="F#" Value="type ITemporalField = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/time/temporal/TemporalField", "", "Java.Time.Temporal.ITemporalFieldInvoker", ApiSince=26)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/time/temporal/TemporalField", "", "Java.Time.Temporal.ITemporalFieldInvoker", ApiSince=26)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A field of date-time, such as month-of-year or minute-of-hour.</summary>
    <remarks>
      <para>A field of date-time, such as month-of-year or minute-of-hour.</para>
      <para>Date and time is expressed using fields which partition the time-line into something
            meaningful for humans. Implementations of this interface represent those fields.</para>
      <para>The most commonly used units are defined in <c>ChronoField</c>.
            Further fields are supplied in <c>IsoFields</c>, <c>WeekFields</c> and <c>JulianFields</c>.
            Fields can also be written by application code by implementing this interface.</para>
      <para>The field works using double dispatch. Client code calls methods on a date-time like
            <c>LocalDateTime</c> which check if the field is a <c>ChronoField</c>.
            If it is, then the date-time must handle it.
            Otherwise, the method call is re-dispatched to the matching method in this interface.</para>
      <para>Added in 1.8.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/time/temporal/TemporalField" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AdjustInto">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? AdjustInto (Java.Lang.Object? temporal, long newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object AdjustInto(class Java.Lang.Object temporal, int64 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporalField.AdjustInto(Java.Lang.Object,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member AdjustInto : Java.Lang.Object * int64 -&gt; Java.Lang.Object" Usage="iTemporalField.AdjustInto (temporal, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustInto", "(Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal;", "GetAdjustInto_Ljava_time_temporal_Temporal_JHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("adjustInto", "(Ljava/time/temporal/Temporal;J)Ljava/time/temporal/Temporal;", "GetAdjustInto_Ljava_time_temporal_Temporal_JHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "R extends java.time.temporal.Temporal" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "R extends java.time.temporal.Temporal" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temporal" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="&lt;R&gt;&lt;R&gt;">the type of the Temporal object</param>
        <param name="temporal">the temporal object to adjust, not null</param>
        <param name="newValue">the new value of the field</param>
        <summary>Returns a copy of the specified temporal object with the value of this field set.</summary>
        <returns>the adjusted temporal object, not null</returns>
        <remarks>
          <para>Returns a copy of the specified temporal object with the value of this field set.</para>
          <para>This returns a new temporal object based on the specified one with the value for
            this field changed. For example, on a <c>LocalDate</c>, this could be used to
            set the year, month or day-of-month.
            The returned object has the same observable type as the specified object.</para>
          <para>In some cases, changing a field is not fully defined. For example, if the target object is
            a date representing the 31st January, then changing the month to February would be unclear.
            In cases like this, the implementation is responsible for resolving the result.
            Typically it will choose the previous valid date, which would be the last valid
            day of February in this example.</para>
          <para>There are two equivalent ways of using this method.
            The first is to invoke this method directly.
            The second is to use <c>Temporal#with(TemporalField, long)</c>:</para>
          <code lang="text/java">// these two lines are equivalent, but the second approach is recommended
              temporal = thisField.adjustInto(temporal);
              temporal = temporal.with(thisField);
            </code>
          <para>It is recommended to use the second approach, <c>with(TemporalField)</c>,
            as it is a lot clearer to read in code.</para>
          <para>Implementations should perform any queries or calculations using the fields
            available in <c>ChronoField</c>.
            If the field is not supported an <c>UnsupportedTemporalTypeException</c> must be thrown.</para>
          <para>Implementations must not alter the specified temporal object.
            Instead, an adjusted copy of the original must be returned.
            This provides equivalent, safe behavior for immutable and mutable implementations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/TemporalField#adjustInto(R,%20long)" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField.adjustInto(R, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUnit">
      <MemberSignature Language="C#" Value="public Java.Time.Temporal.ITemporalUnit? BaseUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Time.Temporal.ITemporalUnit BaseUnit" />
      <MemberSignature Language="DocId" Value="P:Java.Time.Temporal.ITemporalField.BaseUnit" />
      <MemberSignature Language="F#" Value="member this.BaseUnit : Java.Time.Temporal.ITemporalUnit" Usage="Java.Time.Temporal.ITemporalField.BaseUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBaseUnit", "()Ljava/time/temporal/TemporalUnit;", "GetGetBaseUnitHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBaseUnit", "()Ljava/time/temporal/TemporalUnit;", "GetGetBaseUnitHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporalUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="C#" Value="public virtual string? GetDisplayName (Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayName(class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporalField.GetDisplayName(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayName : Java.Util.Locale -&gt; string&#xA;override this.GetDisplayName : Java.Util.Locale -&gt; string" Usage="iTemporalField.GetDisplayName locale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDisplayName", "(Ljava/util/Locale;)Ljava/lang/String;", "GetGetDisplayName_Ljava_util_Locale_Handler:Java.Time.Temporal.ITemporalField, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDisplayName", "(Ljava/util/Locale;)Ljava/lang/String;", "GetGetDisplayName_Ljava_util_Locale_Handler:Java.Time.Temporal.ITemporalField, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">the locale to use, not null</param>
        <summary>Gets the display name for the field in the requested locale.</summary>
        <returns>the display name for the locale or a suitable default, not null</returns>
        <remarks>
          <para>Gets the display name for the field in the requested locale.</para>
          <para>If there is no display name for the locale then a suitable default must be returned.</para>
          <para>The default implementation must check the locale is not null
            and return <c>toString()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/TemporalField#getDisplayName(java.util.Locale)" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField.getDisplayName(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrom">
      <MemberSignature Language="C#" Value="public long GetFrom (Java.Time.Temporal.ITemporalAccessor? temporal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetFrom(class Java.Time.Temporal.ITemporalAccessor temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporalField.GetFrom(Java.Time.Temporal.ITemporalAccessor)" />
      <MemberSignature Language="F#" Value="abstract member GetFrom : Java.Time.Temporal.ITemporalAccessor -&gt; int64" Usage="iTemporalField.GetFrom temporal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFrom", "(Ljava/time/temporal/TemporalAccessor;)J", "GetGetFrom_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFrom", "(Ljava/time/temporal/TemporalAccessor;)J", "GetGetFrom_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temporal" Type="Java.Time.Temporal.ITemporalAccessor" />
      </Parameters>
      <Docs>
        <param name="temporal">the temporal object to query, not null</param>
        <summary>Gets the value of this field from the specified temporal object.</summary>
        <returns>the value of this field, not null</returns>
        <remarks>
          <para>Gets the value of this field from the specified temporal object.</para>
          <para>This queries the temporal object for the value of this field.</para>
          <para>There are two equivalent ways of using this method.
            The first is to invoke this method directly.
            The second is to use <c>TemporalAccessor#getLong(TemporalField)</c>
            (or <c>TemporalAccessor#get(TemporalField)</c>):</para>
          <code lang="text/java">// these two lines are equivalent, but the second approach is recommended
              temporal = thisField.getFrom(temporal);
              temporal = temporal.getLong(thisField);
            </code>
          <para>It is recommended to use the second approach, <c>getLong(TemporalField)</c>,
            as it is a lot clearer to read in code.</para>
          <para>Implementations should perform any queries or calculations using the fields
            available in <c>ChronoField</c>.
            If the field is not supported an <c>UnsupportedTemporalTypeException</c> must be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/TemporalField#getFrom(java.time.temporal.TemporalAccessor)" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField.getFrom(java.time.temporal.TemporalAccessor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDateBased">
      <MemberSignature Language="C#" Value="public bool IsDateBased { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDateBased" />
      <MemberSignature Language="DocId" Value="P:Java.Time.Temporal.ITemporalField.IsDateBased" />
      <MemberSignature Language="F#" Value="member this.IsDateBased : bool" Usage="Java.Time.Temporal.ITemporalField.IsDateBased" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDateBased", "()Z", "GetIsDateBasedHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDateBased", "()Z", "GetIsDateBasedHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedBy">
      <MemberSignature Language="C#" Value="public bool IsSupportedBy (Java.Time.Temporal.ITemporalAccessor? temporal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedBy(class Java.Time.Temporal.ITemporalAccessor temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporalField.IsSupportedBy(Java.Time.Temporal.ITemporalAccessor)" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedBy : Java.Time.Temporal.ITemporalAccessor -&gt; bool" Usage="iTemporalField.IsSupportedBy temporal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSupportedBy", "(Ljava/time/temporal/TemporalAccessor;)Z", "GetIsSupportedBy_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSupportedBy", "(Ljava/time/temporal/TemporalAccessor;)Z", "GetIsSupportedBy_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temporal" Type="Java.Time.Temporal.ITemporalAccessor" />
      </Parameters>
      <Docs>
        <param name="temporal">the temporal object to query, not null</param>
        <summary>Checks if this field is supported by the temporal object.</summary>
        <returns>true if the date-time can be queried for this field, false if not</returns>
        <remarks>
          <para>Checks if this field is supported by the temporal object.</para>
          <para>This determines whether the temporal accessor supports this field.
            If this returns false, then the temporal cannot be queried for this field.</para>
          <para>There are two equivalent ways of using this method.
            The first is to invoke this method directly.
            The second is to use <c>TemporalAccessor#isSupported(TemporalField)</c>:</para>
          <code lang="text/java">// these two lines are equivalent, but the second approach is recommended
              temporal = thisField.isSupportedBy(temporal);
              temporal = temporal.isSupported(thisField);
            </code>
          <para>It is recommended to use the second approach, <c>isSupported(TemporalField)</c>,
            as it is a lot clearer to read in code.</para>
          <para>Implementations should determine whether they are supported using the fields
            available in <c>ChronoField</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/TemporalField#isSupportedBy(java.time.temporal.TemporalAccessor)" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField.isSupportedBy(java.time.temporal.TemporalAccessor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTimeBased">
      <MemberSignature Language="C#" Value="public bool IsTimeBased { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTimeBased" />
      <MemberSignature Language="DocId" Value="P:Java.Time.Temporal.ITemporalField.IsTimeBased" />
      <MemberSignature Language="F#" Value="member this.IsTimeBased : bool" Usage="Java.Time.Temporal.ITemporalField.IsTimeBased" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isTimeBased", "()Z", "GetIsTimeBasedHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isTimeBased", "()Z", "GetIsTimeBasedHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Java.Time.Temporal.ValueRange? Range ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ValueRange Range() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporalField.Range" />
      <MemberSignature Language="F#" Value="abstract member Range : unit -&gt; Java.Time.Temporal.ValueRange" Usage="iTemporalField.Range " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("range", "()Ljava/time/temporal/ValueRange;", "GetRangeHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("range", "()Ljava/time/temporal/ValueRange;", "GetRangeHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ValueRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the range of valid values for the field.</summary>
        <returns>the range of valid values for the field, not null</returns>
        <remarks>
          <para>Gets the range of valid values for the field.</para>
          <para>All fields can be expressed as a <c>long</c> integer.
            This method returns an object that describes the valid range for that value.
            This method is generally only applicable to the ISO-8601 calendar system.</para>
          <para>Note that the result only describes the minimum and maximum valid values
            and it is important not to read too much into them. For example, there
            could be values within the range that are invalid for the field.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/TemporalField#range()" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField.range()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeRefinedBy">
      <MemberSignature Language="C#" Value="public Java.Time.Temporal.ValueRange? RangeRefinedBy (Java.Time.Temporal.ITemporalAccessor? temporal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ValueRange RangeRefinedBy(class Java.Time.Temporal.ITemporalAccessor temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporalField.RangeRefinedBy(Java.Time.Temporal.ITemporalAccessor)" />
      <MemberSignature Language="F#" Value="abstract member RangeRefinedBy : Java.Time.Temporal.ITemporalAccessor -&gt; Java.Time.Temporal.ValueRange" Usage="iTemporalField.RangeRefinedBy temporal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rangeRefinedBy", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;", "GetRangeRefinedBy_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rangeRefinedBy", "(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;", "GetRangeRefinedBy_Ljava_time_temporal_TemporalAccessor_Handler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ValueRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temporal" Type="Java.Time.Temporal.ITemporalAccessor" />
      </Parameters>
      <Docs>
        <param name="temporal">the temporal object used to refine the result, not null</param>
        <summary>Get the range of valid values for this field using the temporal object to
            refine the result.</summary>
        <returns>the range of valid values for this field, not null</returns>
        <remarks>
          <para>Get the range of valid values for this field using the temporal object to
            refine the result.</para>
          <para>This uses the temporal object to find the range of valid values for the field.
            This is similar to <c>#range()</c>, however this method refines the result
            using the temporal. For example, if the field is <c>DAY_OF_MONTH</c> the
            <c>range</c> method is not accurate as there are four possible month lengths,
            28, 29, 30 and 31 days. Using this method with a date allows the range to be
            accurate, returning just one of those four options.</para>
          <para>There are two equivalent ways of using this method.
            The first is to invoke this method directly.
            The second is to use <c>TemporalAccessor#range(TemporalField)</c>:</para>
          <code lang="text/java">// these two lines are equivalent, but the second approach is recommended
              temporal = thisField.rangeRefinedBy(temporal);
              temporal = temporal.range(thisField);
            </code>
          <para>It is recommended to use the second approach, <c>range(TemporalField)</c>,
            as it is a lot clearer to read in code.</para>
          <para>Implementations should perform any queries or calculations using the fields
            available in <c>ChronoField</c>.
            If the field is not supported an <c>UnsupportedTemporalTypeException</c> must be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/TemporalField#rangeRefinedBy(java.time.temporal.TemporalAccessor)" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField.rangeRefinedBy(java.time.temporal.TemporalAccessor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeUnit">
      <MemberSignature Language="C#" Value="public Java.Time.Temporal.ITemporalUnit? RangeUnit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Time.Temporal.ITemporalUnit RangeUnit" />
      <MemberSignature Language="DocId" Value="P:Java.Time.Temporal.ITemporalField.RangeUnit" />
      <MemberSignature Language="F#" Value="member this.RangeUnit : Java.Time.Temporal.ITemporalUnit" Usage="Java.Time.Temporal.ITemporalField.RangeUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRangeUnit", "()Ljava/time/temporal/TemporalUnit;", "GetGetRangeUnitHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRangeUnit", "()Ljava/time/temporal/TemporalUnit;", "GetGetRangeUnitHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporalUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public virtual Java.Time.Temporal.ITemporalAccessor? Resolve (System.Collections.Generic.IDictionary&lt;Java.Time.Temporal.ITemporalField,Java.Lang.Long&gt;? fieldValues, Java.Time.Temporal.ITemporalAccessor? partialTemporal, Java.Time.Format.ResolverStyle? resolverStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ITemporalAccessor Resolve(class System.Collections.Generic.IDictionary`2&lt;class Java.Time.Temporal.ITemporalField, class Java.Lang.Long&gt; fieldValues, class Java.Time.Temporal.ITemporalAccessor partialTemporal, class Java.Time.Format.ResolverStyle resolverStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporalField.Resolve(System.Collections.Generic.IDictionary{Java.Time.Temporal.ITemporalField,Java.Lang.Long},Java.Time.Temporal.ITemporalAccessor,Java.Time.Format.ResolverStyle)" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.Collections.Generic.IDictionary&lt;Java.Time.Temporal.ITemporalField, Java.Lang.Long&gt; * Java.Time.Temporal.ITemporalAccessor * Java.Time.Format.ResolverStyle -&gt; Java.Time.Temporal.ITemporalAccessor&#xA;override this.Resolve : System.Collections.Generic.IDictionary&lt;Java.Time.Temporal.ITemporalField, Java.Lang.Long&gt; * Java.Time.Temporal.ITemporalAccessor * Java.Time.Format.ResolverStyle -&gt; Java.Time.Temporal.ITemporalAccessor" Usage="iTemporalField.Resolve (fieldValues, partialTemporal, resolverStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolve", "(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;", "GetResolve_Ljava_util_Map_Ljava_time_temporal_TemporalAccessor_Ljava_time_format_ResolverStyle_Handler:Java.Time.Temporal.ITemporalField, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolve", "(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;", "GetResolve_Ljava_util_Map_Ljava_time_temporal_TemporalAccessor_Ljava_time_format_ResolverStyle_Handler:Java.Time.Temporal.ITemporalField, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporalAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Generic.IDictionary&lt;Java.Time.Temporal.ITemporalField,Java.Lang.Long&gt;" />
        <Parameter Name="partialTemporal" Type="Java.Time.Temporal.ITemporalAccessor" />
        <Parameter Name="resolverStyle" Type="Java.Time.Format.ResolverStyle" />
      </Parameters>
      <Docs>
        <param name="fieldValues">the map of fields to values, which can be updated, not null</param>
        <param name="partialTemporal">the partially complete temporal to query for zone and
             chronology; querying for other things is undefined and not recommended, not null</param>
        <param name="resolverStyle">the requested type of resolve, not null</param>
        <summary>Resolves this field to provide a simpler alternative or a date.</summary>
        <returns>the resolved temporal object; null if resolving only
             changed the map, or no resolve occurred</returns>
        <remarks>
          <para>Resolves this field to provide a simpler alternative or a date.</para>
          <para>This method is invoked during the resolve phase of parsing.
            It is designed to allow application defined fields to be simplified into
            more standard fields, such as those on <c>ChronoField</c>, or into a date.</para>
          <para>Applications should not normally invoke this method directly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/TemporalField#resolve(java.util.Map%3Cjava.time.temporal.TemporalField,%20java.lang.Long%3E,%20java.time.temporal.TemporalAccessor,%20java.time.format.ResolverStyle)" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField.resolve(java.util.Map&lt;java.time.temporal.TemporalField, java.lang.Long&gt;, java.time.temporal.TemporalAccessor, java.time.format.ResolverStyle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string? ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporalField.ToString" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="iTemporalField.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler:Java.Time.Temporal.ITemporalFieldInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a descriptive name for the field.</summary>
        <returns>the name of the field, not null</returns>
        <remarks>
          <para>Gets a descriptive name for the field.</para>
          <para>The should be of the format 'BaseOfRange', such as 'MonthOfYear',
            unless the field has a range of <c>FOREVER</c>, when only
            the base unit is mentioned, such as 'Year' or 'Era'.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/TemporalField#toString()" title="Reference documentation">Java documentation for <code>java.time.temporal.TemporalField.toString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
