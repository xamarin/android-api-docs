<Type Name="ITemporal" FullName="Java.Time.Temporal.ITemporal">
  <TypeSignature Language="C#" Value="public interface ITemporal : IDisposable, Java.Interop.IJavaPeerable, Java.Time.Temporal.ITemporalAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITemporal implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Time.Temporal.ITemporalAccessor, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Time.Temporal.ITemporal" />
  <TypeSignature Language="F#" Value="type ITemporal = interface&#xA;    interface ITemporalAccessor&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Time.Temporal.ITemporalAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/time/temporal/Temporal", "", "Java.Time.Temporal.ITemporalInvoker", ApiSince=26)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/time/temporal/Temporal", "", "Java.Time.Temporal.ITemporalInvoker", ApiSince=26)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Framework-level interface defining read-write access to a temporal object,
            such as a date, time, offset or some combination of these.</summary>
    <remarks>
      <para>Framework-level interface defining read-write access to a temporal object,
            such as a date, time, offset or some combination of these.</para>
      <para>This is the base interface type for date, time and offset objects that
            are complete enough to be manipulated using plus and minus.
            It is implemented by those classes that can provide and manipulate information
            as TemporalField fields or TemporalQuery queries.
            See <c>TemporalAccessor</c> for the read-only version of this interface.</para>
      <para>Most date and time information can be represented as a number.
            These are modeled using <c>TemporalField</c> with the number held using
            a <c>long</c> to handle large values. Year, month and day-of-month are
            simple examples of fields, but they also include instant and offsets.
            See <c>ChronoField</c> for the standard set of fields.</para>
      <para>Two pieces of date/time information cannot be represented by numbers,
            the java.time.chrono.Chronology chronology and the
            java.time.ZoneId time-zone.
            These can be accessed via <c>#query(TemporalQuery) queries</c> using
            the static methods defined on <c>TemporalQuery</c>.</para>
      <para>This interface is a framework-level interface that should not be widely
            used in application code. Instead, applications should create and pass
            around instances of concrete types, such as <c>LocalDate</c>.
            There are many reasons for this, part of which is that implementations
            of this interface may be in calendar systems other than ISO.
            See <c>java.time.chrono.ChronoLocalDate</c> for a fuller discussion of the issues.
            
            &lt;h2&gt;When to implement&lt;/h2&gt;</para>
      <para>A class should implement this interface if it meets three criteria:
            &lt;ul&gt;
            &lt;li&gt;it provides access to date/time/offset information, as per <c>TemporalAccessor</c>&lt;li&gt;the set of fields are contiguous from the largest to the smallest
            &lt;li&gt;the set of fields are complete, such that no other field is needed to define the
             valid range of values for the fields that are represented
            &lt;/ul&gt;</para>
      <para>Four examples make this clear:
            &lt;ul&gt;
            &lt;li&gt;<c>LocalDate</c> implements this interface as it represents a set of fields
             that are contiguous from days to forever and require no external information to determine
             the validity of each date. It is therefore able to implement plus/minus correctly.
            &lt;li&gt;<c>LocalTime</c> implements this interface as it represents a set of fields
             that are contiguous from nanos to within days and require no external information to determine
             validity. It is able to implement plus/minus correctly, by wrapping around the day.
            &lt;li&gt;<c>MonthDay</c>, the combination of month-of-year and day-of-month, does not implement
             this interface.  While the combination is contiguous, from days to months within years,
             the combination does not have sufficient information to define the valid range of values
             for day-of-month.  As such, it is unable to implement plus/minus correctly.
            &lt;li&gt;The combination day-of-week and day-of-month ("Friday the 13th") should not implement
             this interface. It does not represent a contiguous set of fields, as days to weeks overlaps
             days to months.
            &lt;/ul&gt;</para>
      <para>Added in 1.8.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/time/temporal/Temporal" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public bool IsSupported (Java.Time.Temporal.ITemporalUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupported(class Java.Time.Temporal.ITemporalUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporal.IsSupported(Java.Time.Temporal.ITemporalUnit)" />
      <MemberSignature Language="F#" Value="abstract member IsSupported : Java.Time.Temporal.ITemporalUnit -&gt; bool" Usage="iTemporal.IsSupported unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSupported", "(Ljava/time/temporal/TemporalUnit;)Z", "GetIsSupported_Ljava_time_temporal_TemporalUnit_Handler:Java.Time.Temporal.ITemporalInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSupported", "(Ljava/time/temporal/TemporalUnit;)Z", "GetIsSupported_Ljava_time_temporal_TemporalUnit_Handler:Java.Time.Temporal.ITemporalInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="Java.Time.Temporal.ITemporalUnit" />
      </Parameters>
      <Docs>
        <param name="unit">the unit to check, null returns false</param>
        <summary>Checks if the specified unit is supported.</summary>
        <returns>true if the unit can be added/subtracted, false if not</returns>
        <remarks>
          <para>Checks if the specified unit is supported.</para>
          <para>This checks if the specified unit can be added to, or subtracted from, this date-time.
            If false, then calling the <c>#plus(long, TemporalUnit)</c> and
            <c>#minus(long, TemporalUnit) minus</c> methods will throw an exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/Temporal#isSupported(java.time.temporal.TemporalUnit)" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal.isSupported(java.time.temporal.TemporalUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public virtual Java.Time.Temporal.ITemporal? Minus (Java.Time.Temporal.ITemporalAmount? amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ITemporal Minus(class Java.Time.Temporal.ITemporalAmount amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporal.Minus(Java.Time.Temporal.ITemporalAmount)" />
      <MemberSignature Language="F#" Value="abstract member Minus : Java.Time.Temporal.ITemporalAmount -&gt; Java.Time.Temporal.ITemporal&#xA;override this.Minus : Java.Time.Temporal.ITemporalAmount -&gt; Java.Time.Temporal.ITemporal" Usage="iTemporal.Minus amount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("minus", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;", "GetMinus_Ljava_time_temporal_TemporalAmount_Handler:Java.Time.Temporal.ITemporal, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("minus", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;", "GetMinus_Ljava_time_temporal_TemporalAmount_Handler:Java.Time.Temporal.ITemporal, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="Java.Time.Temporal.ITemporalAmount" />
      </Parameters>
      <Docs>
        <param name="amount">the amount to subtract, not null</param>
        <summary>Returns an object of the same type as this object with an amount subtracted.</summary>
        <returns>an object of the same type with the specified adjustment made, not null</returns>
        <remarks>
          <para>Returns an object of the same type as this object with an amount subtracted.</para>
          <para>This adjusts this temporal, subtracting according to the rules of the specified amount.
            The amount is typically a <c>java.time.Period</c> but may be any other type implementing
            the <c>TemporalAmount</c> interface, such as <c>java.time.Duration</c>.</para>
          <para>Some example code indicating how and why this method is used:</para>
          <code lang="text/java">date = date.minus(period);               // subtract a Period instance
             date = date.minus(duration);             // subtract a Duration instance
             date = date.minus(workingDays(6));       // example user-written workingDays method
            </code>
          <para>Note that calling <c>plus</c> followed by <c>minus</c> is not guaranteed to
            return the same date-time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/Temporal#minus(java.time.temporal.TemporalAmount)" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal.minus(java.time.temporal.TemporalAmount)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public virtual Java.Time.Temporal.ITemporal? Minus (long amountToSubtract, Java.Time.Temporal.ITemporalUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ITemporal Minus(int64 amountToSubtract, class Java.Time.Temporal.ITemporalUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporal.Minus(System.Int64,Java.Time.Temporal.ITemporalUnit)" />
      <MemberSignature Language="F#" Value="abstract member Minus : int64 * Java.Time.Temporal.ITemporalUnit -&gt; Java.Time.Temporal.ITemporal&#xA;override this.Minus : int64 * Java.Time.Temporal.ITemporalUnit -&gt; Java.Time.Temporal.ITemporal" Usage="iTemporal.Minus (amountToSubtract, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("minus", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;", "GetMinus_JLjava_time_temporal_TemporalUnit_Handler:Java.Time.Temporal.ITemporal, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("minus", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;", "GetMinus_JLjava_time_temporal_TemporalUnit_Handler:Java.Time.Temporal.ITemporal, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amountToSubtract" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Time.Temporal.ITemporalUnit" />
      </Parameters>
      <Docs>
        <param name="amountToSubtract">the amount of the specified unit to subtract, may be negative</param>
        <param name="unit">the unit of the amount to subtract, not null</param>
        <summary>Returns an object of the same type as this object with the specified period subtracted.</summary>
        <returns>an object of the same type with the specified period subtracted, not null</returns>
        <remarks>
          <para>Returns an object of the same type as this object with the specified period subtracted.</para>
          <para>This method returns a new object based on this one with the specified period subtracted.
            For example, on a <c>LocalDate</c>, this could be used to subtract a number of years, months or days.
            The returned object will have the same observable type as this object.</para>
          <para>In some cases, changing a field is not fully defined. For example, if the target object is
            a date representing the 31st March, then subtracting one month would be unclear.
            In cases like this, the field is responsible for resolving the result. Typically it will choose
            the previous valid date, which would be the last valid day of February in this example.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/Temporal#minus(long,%20java.time.temporal.TemporalUnit)" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal.minus(long, java.time.temporal.TemporalUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public virtual Java.Time.Temporal.ITemporal? Plus (Java.Time.Temporal.ITemporalAmount? amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ITemporal Plus(class Java.Time.Temporal.ITemporalAmount amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporal.Plus(Java.Time.Temporal.ITemporalAmount)" />
      <MemberSignature Language="F#" Value="abstract member Plus : Java.Time.Temporal.ITemporalAmount -&gt; Java.Time.Temporal.ITemporal&#xA;override this.Plus : Java.Time.Temporal.ITemporalAmount -&gt; Java.Time.Temporal.ITemporal" Usage="iTemporal.Plus amount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("plus", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;", "GetPlus_Ljava_time_temporal_TemporalAmount_Handler:Java.Time.Temporal.ITemporal, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("plus", "(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;", "GetPlus_Ljava_time_temporal_TemporalAmount_Handler:Java.Time.Temporal.ITemporal, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="Java.Time.Temporal.ITemporalAmount" />
      </Parameters>
      <Docs>
        <param name="amount">the amount to add, not null</param>
        <summary>Returns an object of the same type as this object with an amount added.</summary>
        <returns>an object of the same type with the specified adjustment made, not null</returns>
        <remarks>
          <para>Returns an object of the same type as this object with an amount added.</para>
          <para>This adjusts this temporal, adding according to the rules of the specified amount.
            The amount is typically a <c>java.time.Period</c> but may be any other type implementing
            the <c>TemporalAmount</c> interface, such as <c>java.time.Duration</c>.</para>
          <para>Some example code indicating how and why this method is used:</para>
          <code lang="text/java">date = date.plus(period);                // add a Period instance
             date = date.plus(duration);              // add a Duration instance
             date = date.plus(workingDays(6));        // example user-written workingDays method
            </code>
          <para>Note that calling <c>plus</c> followed by <c>minus</c> is not guaranteed to
            return the same date-time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/Temporal#plus(java.time.temporal.TemporalAmount)" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal.plus(java.time.temporal.TemporalAmount)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public Java.Time.Temporal.ITemporal? Plus (long amountToAdd, Java.Time.Temporal.ITemporalUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ITemporal Plus(int64 amountToAdd, class Java.Time.Temporal.ITemporalUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporal.Plus(System.Int64,Java.Time.Temporal.ITemporalUnit)" />
      <MemberSignature Language="F#" Value="abstract member Plus : int64 * Java.Time.Temporal.ITemporalUnit -&gt; Java.Time.Temporal.ITemporal" Usage="iTemporal.Plus (amountToAdd, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("plus", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;", "GetPlus_JLjava_time_temporal_TemporalUnit_Handler:Java.Time.Temporal.ITemporalInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("plus", "(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;", "GetPlus_JLjava_time_temporal_TemporalUnit_Handler:Java.Time.Temporal.ITemporalInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amountToAdd" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Time.Temporal.ITemporalUnit" />
      </Parameters>
      <Docs>
        <param name="amountToAdd">the amount of the specified unit to add, may be negative</param>
        <param name="unit">the unit of the amount to add, not null</param>
        <summary>Returns an object of the same type as this object with the specified period added.</summary>
        <returns>an object of the same type with the specified period added, not null</returns>
        <remarks>
          <para>Returns an object of the same type as this object with the specified period added.</para>
          <para>This method returns a new object based on this one with the specified period added.
            For example, on a <c>LocalDate</c>, this could be used to add a number of years, months or days.
            The returned object will have the same observable type as this object.</para>
          <para>In some cases, changing a field is not fully defined. For example, if the target object is
            a date representing the 31st January, then adding one month would be unclear.
            In cases like this, the field is responsible for resolving the result. Typically it will choose
            the previous valid date, which would be the last valid day of February in this example.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/Temporal#plus(long,%20java.time.temporal.TemporalUnit)" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal.plus(long, java.time.temporal.TemporalUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Until">
      <MemberSignature Language="C#" Value="public long Until (Java.Time.Temporal.ITemporal? endExclusive, Java.Time.Temporal.ITemporalUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Until(class Java.Time.Temporal.ITemporal endExclusive, class Java.Time.Temporal.ITemporalUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporal.Until(Java.Time.Temporal.ITemporal,Java.Time.Temporal.ITemporalUnit)" />
      <MemberSignature Language="F#" Value="abstract member Until : Java.Time.Temporal.ITemporal * Java.Time.Temporal.ITemporalUnit -&gt; int64" Usage="iTemporal.Until (endExclusive, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("until", "(Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J", "GetUntil_Ljava_time_temporal_Temporal_Ljava_time_temporal_TemporalUnit_Handler:Java.Time.Temporal.ITemporalInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("until", "(Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J", "GetUntil_Ljava_time_temporal_Temporal_Ljava_time_temporal_TemporalUnit_Handler:Java.Time.Temporal.ITemporalInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endExclusive" Type="Java.Time.Temporal.ITemporal" />
        <Parameter Name="unit" Type="Java.Time.Temporal.ITemporalUnit" />
      </Parameters>
      <Docs>
        <param name="endExclusive">the end temporal, exclusive, converted to be of the
             same type as this object, not null</param>
        <param name="unit">the unit to measure the amount in, not null</param>
        <summary>Calculates the amount of time until another temporal in terms of the specified unit.</summary>
        <returns>the amount of time between this temporal object and the specified one
             in terms of the unit; positive if the specified object is later than this one,
             negative if it is earlier than this one</returns>
        <remarks>
          <para>Calculates the amount of time until another temporal in terms of the specified unit.</para>
          <para>This calculates the amount of time between two temporal objects
            in terms of a single <c>TemporalUnit</c>.
            The start and end points are <c>this</c> and the specified temporal.
            The end point is converted to be of the same type as the start point if different.
            The result will be negative if the end is before the start.
            For example, the amount in hours between two temporal objects can be
            calculated using <c>startTime.until(endTime, HOURS)</c>.</para>
          <para>The calculation returns a whole number, representing the number of
            complete units between the two temporals.
            For example, the amount in hours between the times 11:30 and 13:29
            will only be one hour as it is one minute short of two hours.</para>
          <para>There are two equivalent ways of using this method.
            The first is to invoke this method directly.
            The second is to use <c>TemporalUnit#between(Temporal, Temporal)</c>:</para>
          <code lang="text/java">// these two lines are equivalent
              temporal = start.until(end, unit);
              temporal = unit.between(start, end);
            </code>
          <para>The choice should be made based on which makes the code more readable.</para>
          <para>For example, this method allows the number of days between two dates to
            be calculated:</para>
          <code lang="text/java">long daysBetween = start.until(end, DAYS);
             // or alternatively
             long daysBetween = DAYS.between(start, end);
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/Temporal#until(java.time.temporal.Temporal,%20java.time.temporal.TemporalUnit)" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal.until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public virtual Java.Time.Temporal.ITemporal? With (Java.Time.Temporal.ITemporalAdjuster? adjuster);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ITemporal With(class Java.Time.Temporal.ITemporalAdjuster adjuster) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporal.With(Java.Time.Temporal.ITemporalAdjuster)" />
      <MemberSignature Language="F#" Value="abstract member With : Java.Time.Temporal.ITemporalAdjuster -&gt; Java.Time.Temporal.ITemporal&#xA;override this.With : Java.Time.Temporal.ITemporalAdjuster -&gt; Java.Time.Temporal.ITemporal" Usage="iTemporal.With adjuster" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("with", "(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/temporal/Temporal;", "GetWith_Ljava_time_temporal_TemporalAdjuster_Handler:Java.Time.Temporal.ITemporal, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("with", "(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/temporal/Temporal;", "GetWith_Ljava_time_temporal_TemporalAdjuster_Handler:Java.Time.Temporal.ITemporal, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adjuster" Type="Java.Time.Temporal.ITemporalAdjuster" />
      </Parameters>
      <Docs>
        <param name="adjuster">the adjuster to use, not null</param>
        <summary>Returns an adjusted object of the same type as this object with the adjustment made.</summary>
        <returns>an object of the same type with the specified adjustment made, not null</returns>
        <remarks>
          <para>Returns an adjusted object of the same type as this object with the adjustment made.</para>
          <para>This adjusts this date-time according to the rules of the specified adjuster.
            A simple adjuster might simply set the one of the fields, such as the year field.
            A more complex adjuster might set the date to the last day of the month.
            A selection of common adjustments is provided in
            <c>java.time.temporal.TemporalAdjusters TemporalAdjusters</c>.
            These include finding the "last day of the month" and "next Wednesday".
            The adjuster is responsible for handling special cases, such as the varying
            lengths of month and leap years.</para>
          <para>Some example code indicating how and why this method is used:</para>
          <code lang="text/java">date = date.with(Month.JULY);        // most key classes implement TemporalAdjuster
             date = date.with(lastDayOfMonth());  // static import from Adjusters
             date = date.with(next(WEDNESDAY));   // static import from Adjusters and DayOfWeek
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/Temporal#with(java.time.temporal.TemporalAdjuster)" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal.with(java.time.temporal.TemporalAdjuster)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Java.Time.Temporal.ITemporal? With (Java.Time.Temporal.ITemporalField? field, long newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Time.Temporal.ITemporal With(class Java.Time.Temporal.ITemporalField field, int64 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Time.Temporal.ITemporal.With(Java.Time.Temporal.ITemporalField,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member With : Java.Time.Temporal.ITemporalField * int64 -&gt; Java.Time.Temporal.ITemporal" Usage="iTemporal.With (field, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("with", "(Ljava/time/temporal/TemporalField;J)Ljava/time/temporal/Temporal;", "GetWith_Ljava_time_temporal_TemporalField_JHandler:Java.Time.Temporal.ITemporalInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("with", "(Ljava/time/temporal/TemporalField;J)Ljava/time/temporal/Temporal;", "GetWith_Ljava_time_temporal_TemporalField_JHandler:Java.Time.Temporal.ITemporalInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Temporal.ITemporal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Java.Time.Temporal.ITemporalField" />
        <Parameter Name="newValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="field">the field to set in the result, not null</param>
        <param name="newValue">the new value of the field in the result</param>
        <summary>Returns an object of the same type as this object with the specified field altered.</summary>
        <returns>an object of the same type with the specified field set, not null</returns>
        <remarks>
          <para>Returns an object of the same type as this object with the specified field altered.</para>
          <para>This returns a new object based on this one with the value for the specified field changed.
            For example, on a <c>LocalDate</c>, this could be used to set the year, month or day-of-month.
            The returned object will have the same observable type as this object.</para>
          <para>In some cases, changing a field is not fully defined. For example, if the target object is
            a date representing the 31st January, then changing the month to February would be unclear.
            In cases like this, the field is responsible for resolving the result. Typically it will choose
            the previous valid date, which would be the last valid day of February in this example.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/time/temporal/Temporal#with(java.time.temporal.TemporalField,%20long)" title="Reference documentation">Java documentation for <code>java.time.temporal.Temporal.with(java.time.temporal.TemporalField, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
