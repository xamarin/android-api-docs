<Type Name="DefaultDatabaseErrorHandler" FullName="Android.Database.DefaultDatabaseErrorHandler">
  <TypeSignature Language="C#" Value="public sealed class DefaultDatabaseErrorHandler : Java.Lang.Object, Android.Database.IDatabaseErrorHandler, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DefaultDatabaseErrorHandler extends Java.Lang.Object implements class Android.Database.IDatabaseErrorHandler, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Database.IDatabaseErrorHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/database/DefaultDatabaseErrorHandler", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>Default class used to define the action to take when database corruption is reported
 by sqlite.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Default class used to define the action to take when database corruption is reported
 by sqlite.
 </para>
      <para tool="javadoc-to-mdoc">
 An application can specify an implementation of <c><see cref="T:Android.Database.IDatabaseErrorHandler" /></c> on the
 following:
 <list type="bullet"><item><term><c><see cref="M:Android.Database.Sqlite.SQLiteDatabase.OpenOrCreateDatabase(System.String,.ICursorFactory,.ICursorFactory)" /></c></term></item><item><term><c><see cref="M:Android.Database.Sqlite.SQLiteDatabase.OpenDatabase(System.String,.ICursorFactory,.ICursorFactory,.ICursorFactory)" /></c></term></item></list>
 The specified <c><see cref="T:Android.Database.IDatabaseErrorHandler" /></c> is used to handle database corruption errors, if they
 occur.
 </para>
      <para tool="javadoc-to-mdoc">
 If null is specified for the DatabaseErrorHandler param in the above calls, this class is used
 as the default <c><see cref="T:Android.Database.IDatabaseErrorHandler" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/database/DefaultDatabaseErrorHandler.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultDatabaseErrorHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/DefaultDatabaseErrorHandler.html#DefaultDatabaseErrorHandler()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnCorruption">
      <MemberSignature Language="C#" Value="public void OnCorruption (Android.Database.Sqlite.SQLiteDatabase dbObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCorruption(class Android.Database.Sqlite.SQLiteDatabase dbObj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCorruption", "(Landroid/database/sqlite/SQLiteDatabase;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbObj" Type="Android.Database.Sqlite.SQLiteDatabase" />
      </Parameters>
      <Docs>
        <param name="dbObj">the <c><see cref="T:Android.Database.Sqlite.SQLiteDatabase" /></c> object representing the database on which corruption
 is detected.
</param>
        <summary>defines the default method to be invoked when database corruption is detected.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">defines the default method to be invoked when database corruption is detected.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/DefaultDatabaseErrorHandler.html#onCorruption(android.database.sqlite.SQLiteDatabase)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
