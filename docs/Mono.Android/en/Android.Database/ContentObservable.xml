<Type Name="ContentObservable" FullName="Android.Database.ContentObservable">
  <TypeSignature Language="C#" Value="public class ContentObservable : Android.Database.Observable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentObservable extends Android.Database.Observable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Database.Observable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/database/ContentObservable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A specialization of <c><see cref="T:Android.Database.Observable" /></c> for <c><see cref="T:Android.Database.ContentObserver" /></c>
 that provides methods for sending notifications to a list of
 <c><see cref="T:Android.Database.ContentObserver" /></c> objects.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A specialization of <c><see cref="T:Android.Database.Observable" /></c> for <c><see cref="T:Android.Database.ContentObserver" /></c>
 that provides methods for sending notifications to a list of
 <c><see cref="T:Android.Database.ContentObserver" /></c> objects.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/database/ContentObservable.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentObservable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObservable.html#ContentObservable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContentObservable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchChange">
      <MemberSignature Language="C#" Value="public virtual void DispatchChange (bool selfChange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchChange(bool selfChange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchChange", "(Z)V", "GetDispatchChange_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selfChange" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selfChange">True if this is a self-change notification.</param>
        <summary>Invokes <c><see cref="M:Android.Database.ContentObserver.DispatchChange(System.Boolean)" /></c> on each observer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Invokes <c><see cref="M:Android.Database.ContentObserver.DispatchChange(System.Boolean)" /></c> on each observer.
 </para>
          <para tool="javadoc-to-mdoc">
 If <c>selfChange</c> is true, only delivers the notification
 to the observer if it has indicated that it wants to receive self-change
 notifications by implementing <c><see cref="M:Android.Database.ContentObserver.DeliverSelfNotifications" /></c>
 to return true.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObservable.html#dispatchChange(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DispatchChange">
      <MemberSignature Language="C#" Value="public virtual void DispatchChange (bool selfChange, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchChange(bool selfChange, class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchChange", "(ZLandroid/net/Uri;)V", "GetDispatchChange_ZLandroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selfChange" Type="System.Boolean" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="selfChange">True if this is a self-change notification.</param>
        <param name="uri">The Uri of the changed content, or null if unknown.
</param>
        <summary>Invokes <c><see cref="M:Android.Database.ContentObserver.DispatchChange(System.Boolean,Android.Net.Uri)" /></c> on each observer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Invokes <c><see cref="M:Android.Database.ContentObserver.DispatchChange(System.Boolean,Android.Net.Uri)" /></c> on each observer.
 Includes the changed content Uri when available.
 </para>
          <para tool="javadoc-to-mdoc">
 If <c>selfChange</c> is true, only delivers the notification
 to the observer if it has indicated that it wants to receive self-change
 notifications by implementing <c><see cref="M:Android.Database.ContentObserver.DeliverSelfNotifications" /></c>
 to return true.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObservable.html#dispatchChange(boolean, android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="NotifyChange">
      <MemberSignature Language="C#" Value="public virtual void NotifyChange (bool selfChange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyChange(bool selfChange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notifyChange", "(Z)V", "GetNotifyChange_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selfChange" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selfChange">True if this is a self-change notification.</param>
        <summary>Invokes <c><see cref="M:Android.Database.ContentObserver.OnChange(System.Boolean)" /></c> on each observer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Invokes <c><see cref="M:Android.Database.ContentObserver.OnChange(System.Boolean)" /></c> on each observer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObservable.html#notifyChange(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegisterObserver">
      <MemberSignature Language="C#" Value="public virtual void RegisterObserver (Android.Database.ContentObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObserver(class Android.Database.ContentObserver observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerObserver", "(Landroid/database/ContentObserver;)V", "GetRegisterObserver_Landroid_database_ContentObserver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
      </Parameters>
      <Docs>
        <param name="observer">the observer to register</param>
        <summary>Adds an observer to the list.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds an observer to the list. The observer cannot be null and it must not already
 be registered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObservable.html#registerObserver(android.database.ContentObserver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
