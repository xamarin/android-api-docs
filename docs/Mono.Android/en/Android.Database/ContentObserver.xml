<Type Name="ContentObserver" FullName="Android.Database.ContentObserver">
  <TypeSignature Language="C#" Value="public abstract class ContentObserver : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContentObserver extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/database/ContentObserver", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Receives call backs for changes to content.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Receives call backs for changes to content.
 Must be implemented by objects which are added to a <c><see cref="T:Android.Database.ContentObservable" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/database/ContentObserver.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentObserver (Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.OS.Handler handler) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/os/Handler;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <summary>Creates a content observer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a content observer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObserver.html#ContentObserver(android.os.Handler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContentObserver (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliverSelfNotifications">
      <MemberSignature Language="C#" Value="public virtual bool DeliverSelfNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeliverSelfNotifications() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deliverSelfNotifications", "()Z", "GetDeliverSelfNotificationsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if this observer is interested receiving self-change notifications.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if this observer is interested receiving self-change notifications.

 Subclasses should override this method to indicate whether the observer
 is interested in receiving notifications for changes that it made to the
 content itself.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObserver.html#deliverSelfNotifications()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchChange">
      <MemberSignature Language="C#" Value="public void DispatchChange (bool selfChange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DispatchChange(bool selfChange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchChange", "(Z)V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selfChange" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selfChange">True if this is a self-change notification.</param>
        <summary>Dispatches a change notification to the observer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Dispatches a change notification to the observer.
 </para>
          <para tool="javadoc-to-mdoc">
 If a <c><see cref="T:Android.OS.Handler" /></c> was supplied to the <c><see cref="T:Android.Database.ContentObserver" /></c> constructor,
 then a call to the <c><see cref="M:Android.Database.ContentObserver.OnChange(System.Boolean)" /></c> method is posted to the handler's message queue.
 Otherwise, the <c><see cref="M:Android.Database.ContentObserver.OnChange(System.Boolean)" /></c> method is invoked immediately on this thread.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObserver.html#dispatchChange(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DispatchChange">
      <MemberSignature Language="C#" Value="public void DispatchChange (bool selfChange, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DispatchChange(bool selfChange, class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchChange", "(ZLandroid/net/Uri;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selfChange" Type="System.Boolean" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="selfChange">True if this is a self-change notification.</param>
        <param name="uri">The Uri of the changed content, or null if unknown.
</param>
        <summary>Dispatches a change notification to the observer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Dispatches a change notification to the observer.
 Includes the changed content Uri when available.
 </para>
          <para tool="javadoc-to-mdoc">
 If a <c><see cref="T:Android.OS.Handler" /></c> was supplied to the <c><see cref="T:Android.Database.ContentObserver" /></c> constructor,
 then a call to the <c><see cref="M:Android.Database.ContentObserver.OnChange(System.Boolean)" /></c> method is posted to the handler's message queue.
 Otherwise, the <c><see cref="M:Android.Database.ContentObserver.OnChange(System.Boolean)" /></c> method is invoked immediately on this thread.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObserver.html#dispatchChange(boolean, android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public virtual void OnChange (bool selfChange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChange(bool selfChange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onChange", "(Z)V", "GetOnChange_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selfChange" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selfChange">True if this is a self-change notification.
</param>
        <summary>This method is called when a content change occurs.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called when a content change occurs.
 </para>
          <para tool="javadoc-to-mdoc">
 Subclasses should override this method to handle content changes.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObserver.html#onChange(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public virtual void OnChange (bool selfChange, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChange(bool selfChange, class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onChange", "(ZLandroid/net/Uri;)V", "GetOnChange_ZLandroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selfChange" Type="System.Boolean" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="selfChange">True if this is a self-change notification.</param>
        <param name="uri">The Uri of the changed content, or null if unknown.
</param>
        <summary>This method is called when a content change occurs.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called when a content change occurs.
 Includes the changed content Uri when available.
 </para>
          <para tool="javadoc-to-mdoc">
 Subclasses should override this method to handle content changes.
 To ensure correct operation on older versions of the framework that
 did not provide a Uri argument, applications should also implement
 the <c><see cref="M:Android.Database.ContentObserver.OnChange(System.Boolean)" /></c> overload of this method whenever they
 implement the <c><see cref="M:Android.Database.ContentObserver.OnChange(System.Boolean,Android.Net.Uri)" /></c> overload.
 </para>
          <para tool="javadoc-to-mdoc">
 Example implementation:
 <example><code lang="java">
 // Implement the onChange(boolean) method to delegate the change notification to
 // the onChange(boolean, Uri) method to ensure correct operation on older versions
 // of the framework that did not have the onChange(boolean, Uri) method.
 @Override
 public void onChange(boolean selfChange) {
     onChange(selfChange, null);
 }

 // Implement the onChange(boolean, Uri) method to take advantage of the new Uri argument.
 @Override
 public void onChange(boolean selfChange, Uri uri) {
     // Handle change.
 }
 </code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/database/ContentObserver.html#onChange(boolean, android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
