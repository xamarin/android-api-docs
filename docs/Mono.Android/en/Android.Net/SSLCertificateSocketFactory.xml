<Type Name="SSLCertificateSocketFactory" FullName="Android.Net.SSLCertificateSocketFactory">
  <TypeSignature Language="C#" Value="public class SSLCertificateSocketFactory : Javax.Net.Ssl.SSLSocketFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SSLCertificateSocketFactory extends Javax.Net.Ssl.SSLSocketFactory" />
  <TypeSignature Language="DocId" Value="T:Android.Net.SSLCertificateSocketFactory" />
  <TypeSignature Language="F#" Value="type SSLCertificateSocketFactory = class&#xA;    inherit SSLSocketFactory" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Javax.Net.Ssl.SSLSocketFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/net/SSLCertificateSocketFactory", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/net/SSLCertificateSocketFactory", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>SSLSocketFactory implementation with several extra features:
            
            &lt;ul&gt;
            &lt;li&gt;Timeout specification for SSL handshake operations
            &lt;li&gt;Hostname verification in most cases (see WARNINGs below)
            &lt;li&gt;Optional SSL session caching with <c>SSLSessionCache</c>&lt;li&gt;Optionally bypass all SSL certificate checks
            &lt;/ul&gt;
            
            The handshake timeout does not apply to actual TCP socket connection.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SSLCertificateSocketFactory (int handshakeTimeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 handshakeTimeoutMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Net.SSLCertificateSocketFactory : int -&gt; Android.Net.SSLCertificateSocketFactory" Usage="new Android.Net.SSLCertificateSocketFactory handshakeTimeoutMillis" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#SSLCertificateSocketFactory(int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.SSLCertificateSocketFactory(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLCertificateSocketFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Net.SSLCertificateSocketFactory : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Net.SSLCertificateSocketFactory" Usage="new Android.Net.SSLCertificateSocketFactory (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (Java.Net.InetAddress? addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.InetAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">the host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <summary>Creates a new socket which is <i>not connected</i> to any remote host.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket()" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (string? host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : string * int -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/lang/String;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/lang/String;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <summary>Creates a new socket which is <i>not connected</i> to any remote host.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket()" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (Java.Net.InetAddress? addr, int port, Java.Net.InetAddress? localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.InetAddress addr, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(Java.Net.InetAddress,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : Java.Net.InetAddress * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (addr, port, localAddr, localPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_ILjava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_ILjava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <param name="localAddr">the local host address the socket is bound to.</param>
        <param name="localPort">the port number of the local host at which the socket is
            bound.</param>
        <summary>Creates a new socket which is <i>not connected</i> to any remote host.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket()" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (Java.Net.Socket? k, string? host, int port, bool close);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.Socket k, string host, int32 port, bool close) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(Java.Net.Socket,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : Java.Net.Socket * string * int * bool -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (k, host, port, close)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_Socket_Ljava_lang_String_IZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_Socket_Ljava_lang_String_IZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="k" Type="Java.Net.Socket" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="close" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="k">the socket.</param>
        <param name="host">the host.</param>
        <param name="port">the port number.</param>
        <param name="close">
          <c>true</c> if socket <c>s</c> should be closed when the
            created socket is closed, <c>false</c> if the socket
            <c>s</c> should be left open.</param>
        <summary>Creates a new socket which is <i>not connected</i> to any remote host.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket()" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (string? host, int port, Java.Net.InetAddress? localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(string host, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(System.String,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : string * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (host, port, localAddr, localPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_ILjava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_ILjava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <param name="localAddr">the local host address the socket is bound to.</param>
        <param name="localPort">the port number of the local host at which the socket is
            bound.</param>
        <summary>Creates a new socket which is <i>not connected</i> to any remote host.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket()" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static Javax.Net.SocketFactory? GetDefault (int handshakeTimeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.SocketFactory GetDefault(int32 handshakeTimeoutMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetDefault(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetDefault : int -&gt; Javax.Net.SocketFactory" Usage="Android.Net.SSLCertificateSocketFactory.GetDefault handshakeTimeoutMillis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefault", "(I)Ljavax/net/SocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefault", "(I)Ljavax/net/SocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.SocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
                    for none.  The socket timeout is reset to 0 after the handshake.</param>
        <summary>Returns a new socket factory instance with an optional handshake timeout.</summary>
        <returns>a new SSLSocketFactory with the specified parameters</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getDefault(int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getDefault(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLSocketFactory? GetDefault (int handshakeTimeoutMillis, Android.Net.SSLSessionCache? cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLSocketFactory GetDefault(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetDefault(System.Int32,Android.Net.SSLSessionCache)" />
      <MemberSignature Language="F#" Value="static member GetDefault : int * Android.Net.SSLSessionCache -&gt; Javax.Net.Ssl.SSLSocketFactory" Usage="Android.Net.SSLCertificateSocketFactory.GetDefault (handshakeTimeoutMillis, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefault", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefault", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="cache">The <see cref="T:Android.Net.SSLSessionCache" /> to use, or null for no cache.</param>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
                    for none.  The socket timeout is reset to 0 after the handshake.</param>
        <summary>Returns a new socket factory instance with an optional handshake timeout.</summary>
        <returns>a new SSLSocketFactory with the specified parameters</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getDefault(int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getDefault(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCipherSuites">
      <MemberSignature Language="C#" Value="public override string[]? GetDefaultCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetDefaultCipherSuites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetDefaultCipherSuites" />
      <MemberSignature Language="F#" Value="override this.GetDefaultCipherSuites : unit -&gt; string[]" Usage="sSLCertificateSocketFactory.GetDefaultCipherSuites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefaultCipherSuites", "()[Ljava/lang/String;", "GetGetDefaultCipherSuitesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefaultCipherSuites", "()[Ljava/lang/String;", "GetGetDefaultCipherSuitesHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the cipher suites that are enabled by default.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpSocketFactory">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Ssl.SSLSocketFactory? GetHttpSocketFactory (int handshakeTimeoutMillis, Android.Net.SSLSessionCache? cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.Conn.Ssl.SSLSocketFactory GetHttpSocketFactory(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetHttpSocketFactory(System.Int32,Android.Net.SSLSessionCache)" />
      <MemberSignature Language="F#" Value="static member GetHttpSocketFactory : int * Android.Net.SSLSessionCache -&gt; Org.Apache.Http.Conn.Ssl.SSLSocketFactory" Usage="Android.Net.SSLCertificateSocketFactory.GetHttpSocketFactory (handshakeTimeoutMillis, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHttpSocketFactory", "(ILandroid/net/SSLSessionCache;)Lorg/apache/http/conn/ssl/SSLSocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHttpSocketFactory", "(ILandroid/net/SSLSessionCache;)Lorg/apache/http/conn/ssl/SSLSocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
         for none.  The socket timeout is reset to 0 after the handshake.</param>
        <param name="cache">The <see cref="T:Android.Net.SSLSessionCache" /> to use, or null for no cache.</param>
        <summary>Returns a socket factory (also named SSLSocketFactory, but in a different
 namespace) for use with the Apache HTTP stack.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetInsecure">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLSocketFactory? GetInsecure (int handshakeTimeoutMillis, Android.Net.SSLSessionCache? cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLSocketFactory GetInsecure(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetInsecure(System.Int32,Android.Net.SSLSessionCache)" />
      <MemberSignature Language="F#" Value="static member GetInsecure : int * Android.Net.SSLSessionCache -&gt; Javax.Net.Ssl.SSLSocketFactory" Usage="Android.Net.SSLCertificateSocketFactory.GetInsecure (handshakeTimeoutMillis, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInsecure", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInsecure", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
                    for none.  The socket timeout is reset to 0 after the handshake.</param>
        <param name="cache">The <c>SSLSessionCache</c> to use, or null for no cache.</param>
        <summary>Returns a new instance of a socket factory with all SSL security checks
            disabled, using an optional handshake timeout and SSL session cache.</summary>
        <returns>an insecure SSLSocketFactory with the specified parameters</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getInsecure(int,%20android.net.SSLSessionCache)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getInsecure(int, android.net.SSLSessionCache)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetNpnSelectedProtocol">
      <MemberSignature Language="C#" Value="public virtual byte[]? GetNpnSelectedProtocol (Java.Net.Socket? socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetNpnSelectedProtocol(class Java.Net.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetNpnSelectedProtocol(Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="abstract member GetNpnSelectedProtocol : Java.Net.Socket -&gt; byte[]&#xA;override this.GetNpnSelectedProtocol : Java.Net.Socket -&gt; byte[]" Usage="sSLCertificateSocketFactory.GetNpnSelectedProtocol socket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNpnSelectedProtocol", "(Ljava/net/Socket;)[B", "GetGetNpnSelectedProtocol_Ljava_net_Socket_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNpnSelectedProtocol", "(Ljava/net/Socket;)[B", "GetGetNpnSelectedProtocol_Ljava_net_Socket_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory.</param>
        <summary>Returns the &lt;a href="http://technotes.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getNpnSelectedProtocol(java.net.Socket)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getNpnSelectedProtocol(java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedCipherSuites">
      <MemberSignature Language="C#" Value="public override string[]? GetSupportedCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetSupportedCipherSuites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetSupportedCipherSuites" />
      <MemberSignature Language="F#" Value="override this.GetSupportedCipherSuites : unit -&gt; string[]" Usage="sSLCertificateSocketFactory.GetSupportedCipherSuites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedCipherSuites", "()[Ljava/lang/String;", "GetGetSupportedCipherSuitesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedCipherSuites", "()[Ljava/lang/String;", "GetGetSupportedCipherSuitesHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the cipher suites that are supported and could be
 enabled for an SSL connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Net.SSLCertificateSocketFactory.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Net.SSLCertificateSocketFactory.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHostname">
      <MemberSignature Language="C#" Value="public virtual void SetHostname (Java.Net.Socket? socket, string? hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHostname(class Java.Net.Socket socket, string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetHostname(Java.Net.Socket,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetHostname : Java.Net.Socket * string -&gt; unit&#xA;override this.SetHostname : Java.Net.Socket * string -&gt; unit" Usage="sSLCertificateSocketFactory.SetHostname (socket, hostName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHostname", "(Ljava/net/Socket;Ljava/lang/String;)V", "GetSetHostname_Ljava_net_Socket_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHostname", "(Ljava/net/Socket;Ljava/lang/String;)V", "GetSetHostname_Ljava_net_Socket_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory.</param>
        <param name="hostName">the desired SNI hostname, null to disable.</param>
        <summary>Turns on &lt;a href="http://tools.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setHostname(java.net.Socket,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setHostname(java.net.Socket, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetKeyManagers">
      <MemberSignature Language="C#" Value="public virtual void SetKeyManagers (Javax.Net.Ssl.IKeyManager[]? keyManagers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeyManagers(class Javax.Net.Ssl.IKeyManager[] keyManagers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetKeyManagers(Javax.Net.Ssl.IKeyManager[])" />
      <MemberSignature Language="F#" Value="abstract member SetKeyManagers : Javax.Net.Ssl.IKeyManager[] -&gt; unit&#xA;override this.SetKeyManagers : Javax.Net.Ssl.IKeyManager[] -&gt; unit" Usage="sSLCertificateSocketFactory.SetKeyManagers keyManagers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setKeyManagers", "([Ljavax/net/ssl/KeyManager;)V", "GetSetKeyManagers_arrayLjavax_net_ssl_KeyManager_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setKeyManagers", "([Ljavax/net/ssl/KeyManager;)V", "GetSetKeyManagers_arrayLjavax_net_ssl_KeyManager_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyManagers" Type="Javax.Net.Ssl.IKeyManager[]" />
      </Parameters>
      <Docs>
        <param name="keyManagers">To be added.</param>
        <summary>Sets the <c>KeyManager</c>s to be used for connections made by this factory.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setKeyManagers(javax.net.ssl.KeyManager[])" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setKeyManagers(javax.net.ssl.KeyManager[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetNpnProtocols">
      <MemberSignature Language="C#" Value="public virtual void SetNpnProtocols (byte[][]? npnProtocols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNpnProtocols(unsigned int8[][] npnProtocols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetNpnProtocols(System.Byte[][])" />
      <MemberSignature Language="F#" Value="abstract member SetNpnProtocols : byte[][] -&gt; unit&#xA;override this.SetNpnProtocols : byte[][] -&gt; unit" Usage="sSLCertificateSocketFactory.SetNpnProtocols npnProtocols" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNpnProtocols", "([[B)V", "GetSetNpnProtocols_arrayarrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNpnProtocols", "([[B)V", "GetSetNpnProtocols_arrayarrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="npnProtocols" Type="System.Byte[][]" />
      </Parameters>
      <Docs>
        <param name="npnProtocols">a non-empty list of protocol byte arrays. All arrays
                must be non-empty and of length less than 256.</param>
        <summary>Sets the
            &lt;a class="external" href="https://tools.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setNpnProtocols(byte[][])" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setNpnProtocols(byte[][])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetTrustManagers">
      <MemberSignature Language="C#" Value="public virtual void SetTrustManagers (Javax.Net.Ssl.ITrustManager[]? trustManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTrustManagers(class Javax.Net.Ssl.ITrustManager[] trustManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetTrustManagers(Javax.Net.Ssl.ITrustManager[])" />
      <MemberSignature Language="F#" Value="abstract member SetTrustManagers : Javax.Net.Ssl.ITrustManager[] -&gt; unit&#xA;override this.SetTrustManagers : Javax.Net.Ssl.ITrustManager[] -&gt; unit" Usage="sSLCertificateSocketFactory.SetTrustManagers trustManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTrustManagers", "([Ljavax/net/ssl/TrustManager;)V", "GetSetTrustManagers_arrayLjavax_net_ssl_TrustManager_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTrustManagers", "([Ljavax/net/ssl/TrustManager;)V", "GetSetTrustManagers_arrayLjavax_net_ssl_TrustManager_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trustManager" Type="Javax.Net.Ssl.ITrustManager[]" />
      </Parameters>
      <Docs>
        <param name="trustManager">To be added.</param>
        <summary>Sets the <c>TrustManager</c>s to be used for connections made by this factory.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setTrustManagers(javax.net.ssl.TrustManager[])" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setTrustManagers(javax.net.ssl.TrustManager[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetUseSessionTickets">
      <MemberSignature Language="C#" Value="public virtual void SetUseSessionTickets (Java.Net.Socket? socket, bool useSessionTickets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUseSessionTickets(class Java.Net.Socket socket, bool useSessionTickets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetUseSessionTickets(Java.Net.Socket,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetUseSessionTickets : Java.Net.Socket * bool -&gt; unit&#xA;override this.SetUseSessionTickets : Java.Net.Socket * bool -&gt; unit" Usage="sSLCertificateSocketFactory.SetUseSessionTickets (socket, useSessionTickets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUseSessionTickets", "(Ljava/net/Socket;Z)V", "GetSetUseSessionTickets_Ljava_net_Socket_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUseSessionTickets", "(Ljava/net/Socket;Z)V", "GetSetUseSessionTickets_Ljava_net_Socket_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="useSessionTickets" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory</param>
        <param name="useSessionTickets">
          <c>true</c> to enable session ticket support on this socket.</param>
        <summary>Enables &lt;a href="http://tools.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setUseSessionTickets(java.net.Socket,%20boolean)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setUseSessionTickets(java.net.Socket, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Net.SSLCertificateSocketFactory.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Net.SSLCertificateSocketFactory.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Net.SSLCertificateSocketFactory.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Net.SSLCertificateSocketFactory.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
