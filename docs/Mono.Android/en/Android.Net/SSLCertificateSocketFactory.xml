<Type Name="SSLCertificateSocketFactory" FullName="Android.Net.SSLCertificateSocketFactory">
  <TypeSignature Language="VB.NET" Value="Public Class SSLCertificateSocketFactory&#xA;Inherits SSLSocketFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class SSLCertificateSocketFactory : Javax::Net::Ssl::SSLSocketFactory" />
  <TypeSignature Language="C#" Value="public class SSLCertificateSocketFactory : Javax.Net.Ssl.SSLSocketFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SSLCertificateSocketFactory extends Javax.Net.Ssl.SSLSocketFactory" />
  <TypeSignature Language="DocId" Value="T:Android.Net.SSLCertificateSocketFactory" />
  <TypeSignature Language="F#" Value="type SSLCertificateSocketFactory = class&#xA;    inherit SSLSocketFactory" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Javax.Net.Ssl.SSLSocketFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/net/SSLCertificateSocketFactory", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/net/SSLCertificateSocketFactory", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0", "This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0", "This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>SSLSocketFactory implementation with several extra features:
            
            &lt;ul&gt;
            &lt;li&gt;Timeout specification for SSL handshake operations
            &lt;li&gt;Hostname verification in most cases (see WARNINGs below)
            &lt;li&gt;Optional SSL session caching with <c>SSLSessionCache</c>&lt;li&gt;Optionally bypass all SSL certificate checks
            &lt;/ul&gt;
            
            The handshake timeout does not apply to actual TCP socket connection.</summary>
    <remarks>
      <para>SSLSocketFactory implementation with several extra features:
            
            &lt;ul&gt;
            &lt;li&gt;Timeout specification for SSL handshake operations
            &lt;li&gt;Hostname verification in most cases (see WARNINGs below)
            &lt;li&gt;Optional SSL session caching with <c>SSLSessionCache</c>&lt;li&gt;Optionally bypass all SSL certificate checks
            &lt;/ul&gt;
            
            The handshake timeout does not apply to actual TCP socket connection.
            If you want a connection timeout as well, use <c>#createSocket()</c>
            and <c>Socket#connect(java.net.SocketAddress, int)</c>, after which you
            must verify the identity of the server you are connected to.
            
            &lt;p class="caution"&gt;&lt;b&gt;Most <c>SSLSocketFactory</c> implementations do not
            verify the server's identity, allowing person-in-the-middle attacks.&lt;/b&gt;
            This implementation does check the server's certificate hostname, but only
            for createSocket variants that specify a hostname.  When using methods that
            use <c>InetAddress</c> or which return an unconnected socket, you MUST
            verify the server's identity yourself to ensure a secure connection.
            
            Refer to
            <see href="https://developer.android.com/training/articles/security-gms-provider.html">
            Updating Your Security Provider to Protect Against SSL Exploits</see>
            for further information.&lt;/p&gt;</para>
      <para>The recommended way to verify the server's identity is to use
            <c>HttpsURLConnection#getDefaultHostnameVerifier()</c> to get a
            <c>HostnameVerifier</c> to verify the certificate hostname.</para>
      <para>&lt;b&gt;Warning&lt;/b&gt;: Some methods on this class return connected sockets and some return
            unconnected sockets.  For the methods that return connected sockets, setting
            connection- or handshake-related properties on those sockets will have no effect.</para>
      <para>On development devices, "setprop socket.relaxsslcheck yes" bypasses all
            SSL certificate and hostname checks for testing purposes.  This setting
            requires root access.</para>
      <para>This member is deprecated. This class has less error-prone replacements using standard APIs.  To create an
            <c>SSLSocket</c>, obtain an <c>SSLSocketFactory</c> from <c>SSLSocketFactory#getDefault()</c>
            or <c>javax.net.ssl.SSLContext#getSocketFactory()</c>.  To verify hostnames, pass
            <c>"HTTPS"</c> to
            <c>javax.net.ssl.SSLParameters#setEndpointIdentificationAlgorithm(String)</c>.  To enable ALPN,
            use <c>javax.net.ssl.SSLParameters#setApplicationProtocols(String[])</c>.  To enable SNI,
            use <c>javax.net.ssl.SSLParameters#setServerNames(java.util.List)</c>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (handshakeTimeoutMillis As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SSLCertificateSocketFactory(int handshakeTimeoutMillis);" />
      <MemberSignature Language="C#" Value="public SSLCertificateSocketFactory (int handshakeTimeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 handshakeTimeoutMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Net.SSLCertificateSocketFactory : int -&gt; Android.Net.SSLCertificateSocketFactory" Usage="new Android.Net.SSLCertificateSocketFactory handshakeTimeoutMillis" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">To be added.</param>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. Use <c>#getDefault(int)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#SSLCertificateSocketFactory(int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.SSLCertificateSocketFactory(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SSLCertificateSocketFactory(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected SSLCertificateSocketFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Net.SSLCertificateSocketFactory : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Net.SSLCertificateSocketFactory" Usage="new Android.Net.SSLCertificateSocketFactory (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSocket (addr As InetAddress, port As Integer) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Java::Net::Socket ^ CreateSocket(Java::Net::InetAddress ^ addr, int port);" />
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (Java.Net.InetAddress? addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.InetAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">the host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>This method returns a socket that is <i>not connected</i>.
            
            &lt;p class="caution"&gt;&lt;b&gt;Warning:&lt;/b&gt; Hostname verification is not performed
            with this method.  You MUST verify the server's identity after connecting
            the socket to avoid person-in-the-middle attacks.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket(java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket(java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSocket (host As String, port As Integer) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Java::Net::Socket ^ CreateSocket(System::String ^ host, int port);" />
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (string? host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : string * int -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/lang/String;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/lang/String;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>By default, this method returns a <i>connected</i> socket and verifies the peer's
            certificate hostname after connecting using the <c>HostnameVerifier</c> obtained from
            <c>HttpsURLConnection.getDefaultHostnameVerifier()</c>; if this instance was created with
            <c>#getInsecure(int, SSLSessionCache)</c>, it returns a socket that is <i>not connected</i>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSocket (addr As InetAddress, port As Integer, localAddr As InetAddress, localPort As Integer) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Java::Net::Socket ^ CreateSocket(Java::Net::InetAddress ^ addr, int port, Java::Net::InetAddress ^ localAddr, int localPort);" />
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (Java.Net.InetAddress? addr, int port, Java.Net.InetAddress? localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.InetAddress addr, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(Java.Net.InetAddress,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : Java.Net.InetAddress * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (addr, port, localAddr, localPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_ILjava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_ILjava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <param name="localAddr">the local host address the socket is bound to.</param>
        <param name="localPort">the port number of the local host at which the socket is
            bound.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>This method returns a socket that is <i>not connected</i>.
            
            &lt;p class="caution"&gt;&lt;b&gt;Warning:&lt;/b&gt; Hostname verification is not performed
            with this method.  You MUST verify the server's identity after connecting
            the socket to avoid person-in-the-middle attacks.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket(java.net.InetAddress,%20int,%20java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket(java.net.InetAddress, int, java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSocket (k As Socket, host As String, port As Integer, close As Boolean) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Java::Net::Socket ^ CreateSocket(Java::Net::Socket ^ k, System::String ^ host, int port, bool close);" />
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (Java.Net.Socket? k, string? host, int port, bool close);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.Socket k, string host, int32 port, bool close) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(Java.Net.Socket,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : Java.Net.Socket * string * int * bool -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (k, host, port, close)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_Socket_Ljava_lang_String_IZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_Socket_Ljava_lang_String_IZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="k" Type="Java.Net.Socket" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="close" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="k">the socket.</param>
        <param name="host">the host.</param>
        <param name="port">the port number.</param>
        <param name="close">
          <c>true</c> if socket <c>s</c> should be closed when the
            created socket is closed, <c>false</c> if the socket
            <c>s</c> should be left open.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>By default, this method returns a <i>connected</i> socket and verifies the peer's
            certificate hostname after connecting using the <c>HostnameVerifier</c> obtained from
            <c>HttpsURLConnection.getDefaultHostnameVerifier()</c>; if this instance was created with
            <c>#getInsecure(int, SSLSessionCache)</c>, it returns a socket that is <i>not connected</i>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket(java.net.Socket,%20java.lang.String,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket(java.net.Socket, java.lang.String, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSocket (host As String, port As Integer, localAddr As InetAddress, localPort As Integer) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Java::Net::Socket ^ CreateSocket(System::String ^ host, int port, Java::Net::InetAddress ^ localAddr, int localPort);" />
      <MemberSignature Language="C#" Value="public override Java.Net.Socket? CreateSocket (string? host, int port, Java.Net.InetAddress? localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(string host, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.CreateSocket(System.String,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CreateSocket : string * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="sSLCertificateSocketFactory.CreateSocket (host, port, localAddr, localPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSocket", "(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_ILjava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSocket", "(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_ILjava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <param name="localAddr">the local host address the socket is bound to.</param>
        <param name="localPort">the port number of the local host at which the socket is
            bound.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>By default, this method returns a <i>connected</i> socket and verifies the peer's
            certificate hostname after connecting using the <c>HostnameVerifier</c> obtained from
            <c>HttpsURLConnection.getDefaultHostnameVerifier()</c>; if this instance was created with
            <c>#getInsecure(int, SSLSessionCache)</c>, it returns a socket that is <i>not connected</i>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#createSocket(java.lang.String,%20int,%20java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.createSocket(java.lang.String, int, java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefault (handshakeTimeoutMillis As Integer) As SocketFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Javax::Net::SocketFactory ^ GetDefault(int handshakeTimeoutMillis);" />
      <MemberSignature Language="C#" Value="public static Javax.Net.SocketFactory? GetDefault (int handshakeTimeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.SocketFactory GetDefault(int32 handshakeTimeoutMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetDefault(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetDefault : int -&gt; Javax.Net.SocketFactory" Usage="Android.Net.SSLCertificateSocketFactory.GetDefault handshakeTimeoutMillis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefault", "(I)Ljavax/net/SocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefault", "(I)Ljavax/net/SocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.SocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
                    for none.  The socket timeout is reset to 0 after the handshake.</param>
        <summary>Returns a new socket factory instance with an optional handshake timeout.</summary>
        <returns>a new SSLSocketFactory with the specified parameters</returns>
        <remarks>
          <para>Returns a new socket factory instance with an optional handshake timeout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getDefault(int)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getDefault(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefault (handshakeTimeoutMillis As Integer, cache As SSLSessionCache) As SSLSocketFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Javax::Net::Ssl::SSLSocketFactory ^ GetDefault(int handshakeTimeoutMillis, Android::Net::SSLSessionCache ^ cache);" />
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLSocketFactory? GetDefault (int handshakeTimeoutMillis, Android.Net.SSLSessionCache? cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLSocketFactory GetDefault(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetDefault(System.Int32,Android.Net.SSLSessionCache)" />
      <MemberSignature Language="F#" Value="static member GetDefault : int * Android.Net.SSLSessionCache -&gt; Javax.Net.Ssl.SSLSocketFactory" Usage="Android.Net.SSLCertificateSocketFactory.GetDefault (handshakeTimeoutMillis, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefault", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefault", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
                    for none.  The socket timeout is reset to 0 after the handshake.</param>
        <param name="cache">The <c>SSLSessionCache</c> to use, or null for no cache.</param>
        <summary>Returns a new socket factory instance with an optional handshake timeout
            and SSL session cache.</summary>
        <returns>a new SSLSocketFactory with the specified parameters</returns>
        <remarks>
          <para>Returns a new socket factory instance with an optional handshake timeout
            and SSL session cache.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getDefault(int,%20android.net.SSLSessionCache)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getDefault(int, android.net.SSLSessionCache)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCipherSuites">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDefaultCipherSuites () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetDefaultCipherSuites();" />
      <MemberSignature Language="C#" Value="public override string[]? GetDefaultCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetDefaultCipherSuites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetDefaultCipherSuites" />
      <MemberSignature Language="F#" Value="override this.GetDefaultCipherSuites : unit -&gt; string[]" Usage="sSLCertificateSocketFactory.GetDefaultCipherSuites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefaultCipherSuites", "()[Ljava/lang/String;", "GetGetDefaultCipherSuitesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefaultCipherSuites", "()[Ljava/lang/String;", "GetGetDefaultCipherSuitesHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the cipher suites that are enabled by default.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpSocketFactory">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHttpSocketFactory (handshakeTimeoutMillis As Integer, cache As SSLSessionCache) As SSLSocketFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Org::Apache::Http::Conn::Ssl::SSLSocketFactory ^ GetHttpSocketFactory(int handshakeTimeoutMillis, Android::Net::SSLSessionCache ^ cache);" />
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Ssl.SSLSocketFactory? GetHttpSocketFactory (int handshakeTimeoutMillis, Android.Net.SSLSessionCache? cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.Conn.Ssl.SSLSocketFactory GetHttpSocketFactory(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetHttpSocketFactory(System.Int32,Android.Net.SSLSessionCache)" />
      <MemberSignature Language="F#" Value="static member GetHttpSocketFactory : int * Android.Net.SSLSessionCache -&gt; Org.Apache.Http.Conn.Ssl.SSLSocketFactory" Usage="Android.Net.SSLCertificateSocketFactory.GetHttpSocketFactory (handshakeTimeoutMillis, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHttpSocketFactory", "(ILandroid/net/SSLSessionCache;)Lorg/apache/http/conn/ssl/SSLSocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHttpSocketFactory", "(ILandroid/net/SSLSessionCache;)Lorg/apache/http/conn/ssl/SSLSocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
                    for none.  The socket timeout is reset to 0 after the handshake.</param>
        <param name="cache">The <c>SSLSessionCache</c> to use, or null for no cache.</param>
        <summary>Returns a socket factory (also named SSLSocketFactory, but in a different
            namespace) for use with the Apache HTTP stack.</summary>
        <returns>a new SocketFactory with the specified parameters</returns>
        <remarks>
          <para>Returns a socket factory (also named SSLSocketFactory, but in a different
            namespace) for use with the Apache HTTP stack.</para>
          <para>This member is deprecated. Use <c>#getDefault()</c> along with a <c>javax.net.ssl.HttpsURLConnection</c>
                instead. The Apache HTTP client is no longer maintained and may be removed in a future
                release. Please visit <see href="http://android-developers.blogspot.com/2011/09/androids-http-clients.html">this webpage</see>
                for further details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getHttpSocketFactory(int,%20android.net.SSLSessionCache)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getHttpSocketFactory(int, android.net.SSLSessionCache)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetInsecure">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInsecure (handshakeTimeoutMillis As Integer, cache As SSLSessionCache) As SSLSocketFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Javax::Net::Ssl::SSLSocketFactory ^ GetInsecure(int handshakeTimeoutMillis, Android::Net::SSLSessionCache ^ cache);" />
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLSocketFactory? GetInsecure (int handshakeTimeoutMillis, Android.Net.SSLSessionCache? cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLSocketFactory GetInsecure(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetInsecure(System.Int32,Android.Net.SSLSessionCache)" />
      <MemberSignature Language="F#" Value="static member GetInsecure : int * Android.Net.SSLSessionCache -&gt; Javax.Net.Ssl.SSLSocketFactory" Usage="Android.Net.SSLCertificateSocketFactory.GetInsecure (handshakeTimeoutMillis, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInsecure", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInsecure", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
                    for none.  The socket timeout is reset to 0 after the handshake.</param>
        <param name="cache">The <c>SSLSessionCache</c> to use, or null for no cache.</param>
        <summary>Returns a new instance of a socket factory with all SSL security checks
            disabled, using an optional handshake timeout and SSL session cache.</summary>
        <returns>an insecure SSLSocketFactory with the specified parameters</returns>
        <remarks>
          <para>Returns a new instance of a socket factory with all SSL security checks
            disabled, using an optional handshake timeout and SSL session cache.
            
            &lt;p class="caution"&gt;&lt;b&gt;Warning:&lt;/b&gt; Sockets created using this factory
            are vulnerable to person-in-the-middle attacks!&lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getInsecure(int,%20android.net.SSLSessionCache)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getInsecure(int, android.net.SSLSessionCache)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetNpnSelectedProtocol">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNpnSelectedProtocol (socket As Socket) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetNpnSelectedProtocol(Java::Net::Socket ^ socket);" />
      <MemberSignature Language="C#" Value="public virtual byte[]? GetNpnSelectedProtocol (Java.Net.Socket? socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetNpnSelectedProtocol(class Java.Net.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetNpnSelectedProtocol(Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="abstract member GetNpnSelectedProtocol : Java.Net.Socket -&gt; byte[]&#xA;override this.GetNpnSelectedProtocol : Java.Net.Socket -&gt; byte[]" Usage="sSLCertificateSocketFactory.GetNpnSelectedProtocol socket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNpnSelectedProtocol", "(Ljava/net/Socket;)[B", "GetGetNpnSelectedProtocol_Ljava_net_Socket_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNpnSelectedProtocol", "(Ljava/net/Socket;)[B", "GetGetNpnSelectedProtocol_Ljava_net_Socket_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory.</param>
        <summary>Returns the <see href="http://technotes.googlecode.com/git/nextprotoneg.html">Next
            Protocol Negotiation (NPN)</see> protocol selected by client and server, or
            null if no protocol was negotiated.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the <see href="http://technotes.googlecode.com/git/nextprotoneg.html">Next
            Protocol Negotiation (NPN)</see> protocol selected by client and server, or
            null if no protocol was negotiated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#getNpnSelectedProtocol(java.net.Socket)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.getNpnSelectedProtocol(java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedCipherSuites">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSupportedCipherSuites () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedCipherSuites();" />
      <MemberSignature Language="C#" Value="public override string[]? GetSupportedCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetSupportedCipherSuites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.GetSupportedCipherSuites" />
      <MemberSignature Language="F#" Value="override this.GetSupportedCipherSuites : unit -&gt; string[]" Usage="sSLCertificateSocketFactory.GetSupportedCipherSuites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedCipherSuites", "()[Ljava/lang/String;", "GetGetSupportedCipherSuitesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedCipherSuites", "()[Ljava/lang/String;", "GetGetSupportedCipherSuitesHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the cipher suites that are supported and could be
 enabled for an SSL connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Net.SSLCertificateSocketFactory.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Net.SSLCertificateSocketFactory.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHostname">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetHostname (socket As Socket, hostName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHostname(Java::Net::Socket ^ socket, System::String ^ hostName);" />
      <MemberSignature Language="C#" Value="public virtual void SetHostname (Java.Net.Socket? socket, string? hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHostname(class Java.Net.Socket socket, string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetHostname(Java.Net.Socket,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetHostname : Java.Net.Socket * string -&gt; unit&#xA;override this.SetHostname : Java.Net.Socket * string -&gt; unit" Usage="sSLCertificateSocketFactory.SetHostname (socket, hostName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHostname", "(Ljava/net/Socket;Ljava/lang/String;)V", "GetSetHostname_Ljava_net_Socket_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHostname", "(Ljava/net/Socket;Ljava/lang/String;)V", "GetSetHostname_Ljava_net_Socket_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory.</param>
        <param name="hostName">the desired SNI hostname, null to disable.</param>
        <summary>Turns on <see href="http://tools.ietf.org/html/rfc6066#section-3">Server
            Name Indication (SNI)</see> on a given socket.</summary>
        <remarks>
          <para>Turns on <see href="http://tools.ietf.org/html/rfc6066#section-3">Server
            Name Indication (SNI)</see> on a given socket.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setHostname(java.net.Socket,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setHostname(java.net.Socket, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetKeyManagers">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetKeyManagers (keyManagers As IKeyManager())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetKeyManagers(cli::array &lt;Javax::Net::Ssl::IKeyManager ^&gt; ^ keyManagers);" />
      <MemberSignature Language="C#" Value="public virtual void SetKeyManagers (Javax.Net.Ssl.IKeyManager[]? keyManagers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeyManagers(class Javax.Net.Ssl.IKeyManager[] keyManagers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetKeyManagers(Javax.Net.Ssl.IKeyManager[])" />
      <MemberSignature Language="F#" Value="abstract member SetKeyManagers : Javax.Net.Ssl.IKeyManager[] -&gt; unit&#xA;override this.SetKeyManagers : Javax.Net.Ssl.IKeyManager[] -&gt; unit" Usage="sSLCertificateSocketFactory.SetKeyManagers keyManagers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setKeyManagers", "([Ljavax/net/ssl/KeyManager;)V", "GetSetKeyManagers_arrayLjavax_net_ssl_KeyManager_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setKeyManagers", "([Ljavax/net/ssl/KeyManager;)V", "GetSetKeyManagers_arrayLjavax_net_ssl_KeyManager_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyManagers" Type="Javax.Net.Ssl.IKeyManager[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyManagers">To be added.</param>
        <summary>Sets the <c>KeyManager</c>s to be used for connections made by this factory.</summary>
        <remarks>
          <para>Sets the <c>KeyManager</c>s to be used for connections made by this factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setKeyManagers(javax.net.ssl.KeyManager[])" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setKeyManagers(javax.net.ssl.KeyManager[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetNpnProtocols">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetNpnProtocols (npnProtocols As Byte()())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetNpnProtocols(cli::array &lt;cli::array &lt;System::Byte&gt; ^&gt; ^ npnProtocols);" />
      <MemberSignature Language="C#" Value="public virtual void SetNpnProtocols (byte[][]? npnProtocols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNpnProtocols(unsigned int8[][] npnProtocols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetNpnProtocols(System.Byte[][])" />
      <MemberSignature Language="F#" Value="abstract member SetNpnProtocols : byte[][] -&gt; unit&#xA;override this.SetNpnProtocols : byte[][] -&gt; unit" Usage="sSLCertificateSocketFactory.SetNpnProtocols npnProtocols" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNpnProtocols", "([[B)V", "GetSetNpnProtocols_arrayarrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNpnProtocols", "([[B)V", "GetSetNpnProtocols_arrayarrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="npnProtocols" Type="System.Byte[][]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="npnProtocols">a non-empty list of protocol byte arrays. All arrays
                must be non-empty and of length less than 256.</param>
        <summary>Sets the
            <see href="https://tools.ietf.org/id/draft-agl-tls-nextprotoneg-03.html">Next
            Protocol Negotiation (NPN)</see> protocols that this peer is interested in.</summary>
        <remarks>
          <para>Sets the
            <see href="https://tools.ietf.org/id/draft-agl-tls-nextprotoneg-03.html">Next
            Protocol Negotiation (NPN)</see> protocols that this peer is interested in.</para>
          <para>For servers this is the sequence of protocols to advertise as
            supported, in order of preference. This list is sent unencrypted to
            all clients that support NPN.</para>
          <para>For clients this is a list of supported protocols to match against the
            server's list. If there is no protocol supported by both client and
            server then the first protocol in the client's list will be selected.
            The order of the client's protocols is otherwise insignificant.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setNpnProtocols(byte[][])" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setNpnProtocols(byte[][])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetTrustManagers">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTrustManagers (trustManager As ITrustManager())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTrustManagers(cli::array &lt;Javax::Net::Ssl::ITrustManager ^&gt; ^ trustManager);" />
      <MemberSignature Language="C#" Value="public virtual void SetTrustManagers (Javax.Net.Ssl.ITrustManager[]? trustManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTrustManagers(class Javax.Net.Ssl.ITrustManager[] trustManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetTrustManagers(Javax.Net.Ssl.ITrustManager[])" />
      <MemberSignature Language="F#" Value="abstract member SetTrustManagers : Javax.Net.Ssl.ITrustManager[] -&gt; unit&#xA;override this.SetTrustManagers : Javax.Net.Ssl.ITrustManager[] -&gt; unit" Usage="sSLCertificateSocketFactory.SetTrustManagers trustManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTrustManagers", "([Ljavax/net/ssl/TrustManager;)V", "GetSetTrustManagers_arrayLjavax_net_ssl_TrustManager_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTrustManagers", "([Ljavax/net/ssl/TrustManager;)V", "GetSetTrustManagers_arrayLjavax_net_ssl_TrustManager_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trustManager" Type="Javax.Net.Ssl.ITrustManager[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trustManager">To be added.</param>
        <summary>Sets the <c>TrustManager</c>s to be used for connections made by this factory.</summary>
        <remarks>
          <para>Sets the <c>TrustManager</c>s to be used for connections made by this factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setTrustManagers(javax.net.ssl.TrustManager[])" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setTrustManagers(javax.net.ssl.TrustManager[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetUseSessionTickets">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUseSessionTickets (socket As Socket, useSessionTickets As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUseSessionTickets(Java::Net::Socket ^ socket, bool useSessionTickets);" />
      <MemberSignature Language="C#" Value="public virtual void SetUseSessionTickets (Java.Net.Socket? socket, bool useSessionTickets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUseSessionTickets(class Java.Net.Socket socket, bool useSessionTickets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.SSLCertificateSocketFactory.SetUseSessionTickets(Java.Net.Socket,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetUseSessionTickets : Java.Net.Socket * bool -&gt; unit&#xA;override this.SetUseSessionTickets : Java.Net.Socket * bool -&gt; unit" Usage="sSLCertificateSocketFactory.SetUseSessionTickets (socket, useSessionTickets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUseSessionTickets", "(Ljava/net/Socket;Z)V", "GetSetUseSessionTickets_Ljava_net_Socket_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUseSessionTickets", "(Ljava/net/Socket;Z)V", "GetSetUseSessionTickets_Ljava_net_Socket_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="useSessionTickets" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory</param>
        <param name="useSessionTickets">
          <c>true</c> to enable session ticket support on this socket.</param>
        <summary>Enables <see href="http://tools.ietf.org/html/rfc5077#section-3.2">session ticket</see>
            support on the given socket.</summary>
        <remarks>
          <para>Enables <see href="http://tools.ietf.org/html/rfc5077#section-3.2">session ticket</see>
            support on the given socket.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/SSLCertificateSocketFactory#setUseSessionTickets(java.net.Socket,%20boolean)" title="Reference documentation">Java documentation for <code>android.net.SSLCertificateSocketFactory.setUseSessionTickets(java.net.Socket, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Net.SSLCertificateSocketFactory.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Net.SSLCertificateSocketFactory.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Net.SSLCertificateSocketFactory.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Net.SSLCertificateSocketFactory.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
