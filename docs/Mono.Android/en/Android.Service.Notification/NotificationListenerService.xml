<Type Name="NotificationListenerService" FullName="Android.Service.Notification.NotificationListenerService">
  <TypeSignature Language="C#" Value="public abstract class NotificationListenerService : Android.App.Service" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NotificationListenerService extends Android.App.Service" />
  <TypeSignature Language="DocId" Value="T:Android.Service.Notification.NotificationListenerService" />
  <TypeSignature Language="F#" Value="type NotificationListenerService = class&#xA;    inherit Service" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Service</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/service/notification/NotificationListenerService", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/service/notification/NotificationListenerService", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="18">
    <summary>A service that receives calls from the system when new notifications are
            posted or removed, or their ranking changed.</summary>
    <remarks>
      <para>A service that receives calls from the system when new notifications are
            posted or removed, or their ranking changed.</para>
      <para>To extend this class, you must declare the service in your manifest file with
            the <c>android.Manifest.permission#BIND_NOTIFICATION_LISTENER_SERVICE</c> permission
            and include an intent filter with the <c>#SERVICE_INTERFACE</c> action. For example:</para>
      <code lang="text/java">&amp;lt;service android:name=".NotificationListener"
                     android:label="&amp;#64;string/service_name"
                     android:exported="false"
                     android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE"&gt;
                &amp;lt;intent-filter&gt;
                    &amp;lt;action android:name="android.service.notification.NotificationListenerService" /&gt;
                &amp;lt;/intent-filter&gt;
                &amp;lt;meta-data
                          android:name="android.service.notification.default_filter_types"
                          android:value="conversations|alerting"&gt;
                      &amp;lt;/meta-data&gt;
                &amp;lt;meta-data
                          android:name="android.service.notification.disabled_filter_types"
                          android:value="ongoing|silent"&gt;
                      &amp;lt;/meta-data&gt;
            &amp;lt;/service&gt;</code>
      <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing any operations. The <c>#requestRebind(ComponentName)</c>
            method is the <i>only</i> one that is safe to call before <c>#onListenerConnected()</c>
            or after <c>#onListenerDisconnected()</c>.</para>
      <para>Notification listeners cannot get notification access or be bound by the system on
            ActivityManager#isLowRamDevice() low-RAM devices running Android Q (and below).
            The system also ignores notification listeners running in a work profile. A
            <c>android.app.admin.DevicePolicyManager</c> might block notifications originating from a work
            profile.</para>
      <para>From <c>Build.VERSION_CODES#N</c> onward all callbacks are called on the main thread. Prior
                to N, there is no guarantee on what thread the callback will happen.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotificationListenerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotificationListenerService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Service.Notification.NotificationListenerService : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Service.Notification.NotificationListenerService" Usage="new Android.Service.Notification.NotificationListenerService (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionSettingsHome">
      <MemberSignature Language="C#" Value="public const string ActionSettingsHome;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSettingsHome" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.ActionSettingsHome" />
      <MemberSignature Language="F#" Value="val mutable ActionSettingsHome : string" Usage="Android.Service.Notification.NotificationListenerService.ActionSettingsHome" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SETTINGS_HOME", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_SETTINGS_HOME", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An optional activity intent action that shows additional settings for what notifications
            should be processed by this notification listener service.</summary>
        <remarks>
          <para>An optional activity intent action that shows additional settings for what notifications
            should be processed by this notification listener service. If defined, the OS may link to
            this activity from the system notification listener service filter settings page.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#ACTION_SETTINGS_HOME" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.ACTION_SETTINGS_HOME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAllNotifications">
      <MemberSignature Language="C#" Value="public void CancelAllNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAllNotifications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.CancelAllNotifications" />
      <MemberSignature Language="F#" Value="member this.CancelAllNotifications : unit -&gt; unit" Usage="notificationListenerService.CancelAllNotifications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancelAllNotifications", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancelAllNotifications", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inform the notification manager about dismissal of all notifications.</summary>
        <remarks>
          <para>Inform the notification manager about dismissal of all notifications.</para>
          <para>Use this if your listener has a user interface that allows the user to dismiss all
            notifications, similar to the behavior of Android's status bar and notification panel.
            It should be called after the user invokes the "dismiss all" function of your UI;
            upon being informed, the notification manager will actually remove all active notifications
            and you will get multiple <c>#onNotificationRemoved(StatusBarNotification)</c> callbacks.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.
            
            <c>#cancelNotification(String, String, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#cancelAllNotifications()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.cancelAllNotifications()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.Service.Notification.NotificationListenerService.CancelNotification(System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CancelNotification">
      <MemberSignature Language="C#" Value="public void CancelNotification (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelNotification(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.CancelNotification(System.String)" />
      <MemberSignature Language="F#" Value="member this.CancelNotification : string -&gt; unit" Usage="notificationListenerService.CancelNotification key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancelNotification", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancelNotification", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Notification to dismiss from <c>StatusBarNotification#getKey()</c>.</param>
        <summary>Inform the notification manager about dismissal of a single notification.</summary>
        <remarks>
          <para>Inform the notification manager about dismissal of a single notification.</para>
          <para>Use this if your listener has a user interface that allows the user to dismiss individual
            notifications, similar to the behavior of Android's status bar and notification panel.
            It should be called after the user dismisses a single notification using your UI;
            upon being informed, the notification manager will actually remove the notification
            and you will get an <c>#onNotificationRemoved(StatusBarNotification)</c> callback.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; If your listener allows the user to fire a notification's
            <c>android.app.Notification#contentIntent</c> by tapping/clicking/etc., you should call
            this method at that time <i>if</i> the Notification in question has the
            <c>android.app.Notification#FLAG_AUTO_CANCEL</c> flag set.</para>
          <para />
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#cancelNotification(java.lang.String)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.cancelNotification(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNotification">
      <MemberSignature Language="C#" Value="public void CancelNotification (string? pkg, string? tag, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelNotification(string pkg, string tag, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.CancelNotification(System.String,System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CancelNotification : string * string * int -&gt; unit" Usage="notificationListenerService.CancelNotification (pkg, tag, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancelNotification", "(Ljava/lang/String;Ljava/lang/String;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancelNotification", "(Ljava/lang/String;Ljava/lang/String;I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pkg">Package of the notifying app.</param>
        <param name="tag">Tag of the notification as specified by the notifying app in
                <c>android.app.NotificationManager#notify(String, int, android.app.Notification)</c>.</param>
        <param name="id">ID of the notification as specified by the notifying app in
                <c>android.app.NotificationManager#notify(String, int, android.app.Notification)</c>.
            &lt;p&gt;</param>
        <summary>Inform the notification manager about dismissal of a single notification.</summary>
        <remarks>
          <para>Inform the notification manager about dismissal of a single notification.</para>
          <para>Use this if your listener has a user interface that allows the user to dismiss individual
            notifications, similar to the behavior of Android's status bar and notification panel.
            It should be called after the user dismisses a single notification using your UI;
            upon being informed, the notification manager will actually remove the notification
            and you will get an <c>#onNotificationRemoved(StatusBarNotification)</c> callback.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; If your listener allows the user to fire a notification's
            <c>android.app.Notification#contentIntent</c> by tapping/clicking/etc., you should call
            this method at that time <i>if</i> the Notification in question has the
            <c>android.app.Notification#FLAG_AUTO_CANCEL</c> flag set.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>This member is deprecated. Use <c>#cancelNotification(String key)</c>
            instead. Beginning with <c>android.os.Build.VERSION_CODES#LOLLIPOP</c> this method will no longer
            cancel the notification. It will continue to cancel the notification for applications
            whose <c>targetSdkVersion</c> is earlier than <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#cancelNotification(java.lang.String,%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.cancelNotification(java.lang.String, java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="CancelNotifications">
      <MemberSignature Language="C#" Value="public void CancelNotifications (string[]? keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelNotifications(string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.CancelNotifications(System.String[])" />
      <MemberSignature Language="F#" Value="member this.CancelNotifications : string[] -&gt; unit" Usage="notificationListenerService.CancelNotifications keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancelNotifications", "([Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancelNotifications", "([Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="keys">Notifications to dismiss, or <c>null</c> to dismiss all.
            
            <c>#cancelNotification(String, String, int)</c></param>
        <summary>Inform the notification manager about dismissal of specific notifications.</summary>
        <remarks>
          <para>Inform the notification manager about dismissal of specific notifications.</para>
          <para>Use this if your listener has a user interface that allows the user to dismiss
            multiple notifications at once.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#cancelNotifications(java.lang.String[])" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.cancelNotifications(java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRequestedListenerHints">
      <MemberSignature Language="C#" Value="public void ClearRequestedListenerHints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRequestedListenerHints() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.ClearRequestedListenerHints" />
      <MemberSignature Language="F#" Value="member this.ClearRequestedListenerHints : unit -&gt; unit" Usage="notificationListenerService.ClearRequestedListenerHints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearRequestedListenerHints", "()V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearRequestedListenerHints", "()V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears listener hints set via <c>#getCurrentListenerHints()</c>.</summary>
        <remarks>
          <para>Clears listener hints set via <c>#getCurrentListenerHints()</c>.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#clearRequestedListenerHints()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.clearRequestedListenerHints()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInterruptionFilter">
      <MemberSignature Language="C#" Value="public Android.Service.Notification.InterruptionFilterType CurrentInterruptionFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Service.Notification.InterruptionFilterType CurrentInterruptionFilter" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Notification.NotificationListenerService.CurrentInterruptionFilter" />
      <MemberSignature Language="F#" Value="member this.CurrentInterruptionFilter : Android.Service.Notification.InterruptionFilterType" Usage="Android.Service.Notification.NotificationListenerService.CurrentInterruptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentInterruptionFilter", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentInterruptionFilter", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.InterruptionFilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current notification interruption filter active on the host.</summary>
        <value>One of the INTERRUPTION_FILTER_ constants, or INTERRUPTION_FILTER_UNKNOWN when
            unavailable.</value>
        <remarks>
          <para>Gets the current notification interruption filter active on the host.</para>
          <para>The interruption filter defines which notifications are allowed to interrupt the user
            (e.g. via sound &amp;amp; vibration) and is applied globally. Listeners can find out whether
            a specific notification matched the interruption filter via
            <c>Ranking#matchesInterruptionFilter()</c>.</para>
          <para>The current filter may differ from the previously requested filter if the notification host
            does not support or refuses to apply the requested filter, or if another component changed
            the filter in the meantime.</para>
          <para>Listen for updates using <c>#onInterruptionFilterChanged(int)</c>.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#getCurrentInterruptionFilter()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.getCurrentInterruptionFilter()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentListenerHints">
      <MemberSignature Language="C#" Value="public Android.Service.Notification.NotificationListenerServiceHint CurrentListenerHints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Service.Notification.NotificationListenerServiceHint CurrentListenerHints" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Notification.NotificationListenerService.CurrentListenerHints" />
      <MemberSignature Language="F#" Value="member this.CurrentListenerHints : Android.Service.Notification.NotificationListenerServiceHint" Usage="Android.Service.Notification.NotificationListenerService.CurrentListenerHints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentListenerHints", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentListenerHints", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.NotificationListenerServiceHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the set of hints representing current state.</summary>
        <value>Zero or more of the HINT_ constants.</value>
        <remarks>
          <para>Gets the set of hints representing current state.</para>
          <para>The current state may differ from the requested state if the hint represents state
            shared across all listeners or a feature the notification host does not support or refuses
            to grant.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#getCurrentListenerHints()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.getCurrentListenerHints()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRanking">
      <MemberSignature Language="C#" Value="public virtual Android.Service.Notification.NotificationListenerService.RankingMap? CurrentRanking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Service.Notification.NotificationListenerService/RankingMap CurrentRanking" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Notification.NotificationListenerService.CurrentRanking" />
      <MemberSignature Language="F#" Value="member this.CurrentRanking : Android.Service.Notification.NotificationListenerService.RankingMap" Usage="Android.Service.Notification.NotificationListenerService.CurrentRanking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentRanking", "()Landroid/service/notification/NotificationListenerService$RankingMap;", "GetGetCurrentRankingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentRanking", "()Landroid/service/notification/NotificationListenerService$RankingMap;", "GetGetCurrentRankingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.NotificationListenerService+RankingMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns current ranking information.</summary>
        <value>A <c>RankingMap</c> object providing access to ranking information</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#getCurrentRanking()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.getCurrentRanking()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagFilterTypeAlerting">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.FlagFilterType FlagFilterTypeAlerting = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.FlagFilterType FlagFilterTypeAlerting = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.FlagFilterTypeAlerting" />
      <MemberSignature Language="F#" Value="val mutable FlagFilterTypeAlerting : Android.Service.Notification.FlagFilterType" Usage="Android.Service.Notification.NotificationListenerService.FlagFilterTypeAlerting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_FILTER_TYPE_ALERTING", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_FILTER_TYPE_ALERTING", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.FlagFilterType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.FlagFilterType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.FlagFilterType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>A flag value indicating that this notification listener can see altering type notifications.</summary>
        <remarks>
          <para>A flag value indicating that this notification listener can see altering type notifications.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#FLAG_FILTER_TYPE_ALERTING" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.FLAG_FILTER_TYPE_ALERTING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagFilterTypeConversations">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.FlagFilterType FlagFilterTypeConversations = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.FlagFilterType FlagFilterTypeConversations = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.FlagFilterTypeConversations" />
      <MemberSignature Language="F#" Value="val mutable FlagFilterTypeConversations : Android.Service.Notification.FlagFilterType" Usage="Android.Service.Notification.NotificationListenerService.FlagFilterTypeConversations" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_FILTER_TYPE_CONVERSATIONS", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_FILTER_TYPE_CONVERSATIONS", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.FlagFilterType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.FlagFilterType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.FlagFilterType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A flag value indicating that this notification listener can see conversation type
            notifications.</summary>
        <remarks>
          <para>A flag value indicating that this notification listener can see conversation type
            notifications.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#FLAG_FILTER_TYPE_CONVERSATIONS" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.FLAG_FILTER_TYPE_CONVERSATIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagFilterTypeOngoing">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.FlagFilterType FlagFilterTypeOngoing = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.FlagFilterType FlagFilterTypeOngoing = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.FlagFilterTypeOngoing" />
      <MemberSignature Language="F#" Value="val mutable FlagFilterTypeOngoing : Android.Service.Notification.FlagFilterType" Usage="Android.Service.Notification.NotificationListenerService.FlagFilterTypeOngoing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_FILTER_TYPE_ONGOING", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_FILTER_TYPE_ONGOING", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.FlagFilterType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.FlagFilterType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.FlagFilterType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>A flag value indicating that this notification listener can see important
            ( &gt; <c>NotificationManager#IMPORTANCE_MIN</c>) ongoing type notifications.</summary>
        <remarks>
          <para>A flag value indicating that this notification listener can see important
            ( &gt; <c>NotificationManager#IMPORTANCE_MIN</c>) ongoing type notifications.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#FLAG_FILTER_TYPE_ONGOING" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.FLAG_FILTER_TYPE_ONGOING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagFilterTypeSilent">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.FlagFilterType FlagFilterTypeSilent = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.FlagFilterType FlagFilterTypeSilent = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.FlagFilterTypeSilent" />
      <MemberSignature Language="F#" Value="val mutable FlagFilterTypeSilent : Android.Service.Notification.FlagFilterType" Usage="Android.Service.Notification.NotificationListenerService.FlagFilterTypeSilent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_FILTER_TYPE_SILENT", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_FILTER_TYPE_SILENT", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.FlagFilterType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.FlagFilterType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.FlagFilterType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>A flag value indicating that this notification listener can see silent type notifications.</summary>
        <remarks>
          <para>A flag value indicating that this notification listener can see silent type notifications.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#FLAG_FILTER_TYPE_SILENT" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.FLAG_FILTER_TYPE_SILENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveNotifications">
      <MemberSignature Language="C#" Value="public virtual Android.Service.Notification.StatusBarNotification[]? GetActiveNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Service.Notification.StatusBarNotification[] GetActiveNotifications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.GetActiveNotifications" />
      <MemberSignature Language="F#" Value="abstract member GetActiveNotifications : unit -&gt; Android.Service.Notification.StatusBarNotification[]&#xA;override this.GetActiveNotifications : unit -&gt; Android.Service.Notification.StatusBarNotification[]" Usage="notificationListenerService.GetActiveNotifications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActiveNotifications", "()[Landroid/service/notification/StatusBarNotification;", "GetGetActiveNotificationsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActiveNotifications", "()[Landroid/service/notification/StatusBarNotification;", "GetGetActiveNotificationsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.StatusBarNotification[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request the list of outstanding notifications (that is, those that are visible to the
            current user).</summary>
        <returns>An array of active notifications, sorted in natural order.</returns>
        <remarks>
          <para>Request the list of outstanding notifications (that is, those that are visible to the
            current user). Useful when you don't know what's already been posted.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#getActiveNotifications()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.getActiveNotifications()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetActiveNotifications">
      <MemberSignature Language="C#" Value="public virtual Android.Service.Notification.StatusBarNotification[]? GetActiveNotifications (string[]? keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Service.Notification.StatusBarNotification[] GetActiveNotifications(string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.GetActiveNotifications(System.String[])" />
      <MemberSignature Language="F#" Value="abstract member GetActiveNotifications : string[] -&gt; Android.Service.Notification.StatusBarNotification[]&#xA;override this.GetActiveNotifications : string[] -&gt; Android.Service.Notification.StatusBarNotification[]" Usage="notificationListenerService.GetActiveNotifications keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActiveNotifications", "([Ljava/lang/String;)[Landroid/service/notification/StatusBarNotification;", "GetGetActiveNotifications_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActiveNotifications", "([Ljava/lang/String;)[Landroid/service/notification/StatusBarNotification;", "GetGetActiveNotifications_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.StatusBarNotification[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="keys">the keys of the notifications to request</param>
        <summary>Request one or more notifications by key.</summary>
        <returns>An array of notifications corresponding to the requested keys, in the
            same order as the key list.</returns>
        <remarks>
          <para>Request one or more notifications by key. Useful if you have been keeping track of
            notifications but didn't want to retain the bits, and now need to go back and extract
            more data out of those notifications.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#getActiveNotifications(java.lang.String[])" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.getActiveNotifications(java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationChannelGroups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.App.NotificationChannelGroup&gt;? GetNotificationChannelGroups (string pkg, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Android.App.NotificationChannelGroup&gt; GetNotificationChannelGroups(string pkg, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.GetNotificationChannelGroups(System.String,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="member this.GetNotificationChannelGroups : string * Android.OS.UserHandle -&gt; System.Collections.Generic.IList&lt;Android.App.NotificationChannelGroup&gt;" Usage="notificationListenerService.GetNotificationChannelGroups (pkg, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNotificationChannelGroups", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNotificationChannelGroups", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.NotificationChannelGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="pkg">The package to retrieve channel groups for.</param>
        <summary>Returns all notification channel groups belonging to the given package for a given user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns all notification channel groups belonging to the given package for a given user.</para>
          <para>This method will throw a security exception if you don't have access to notifications
            for the given user.</para>
          <para>The caller must have <c>CompanionDeviceManager#getAssociations() an associated
            device</c> or be the <c>NotificationAssistantService notification assistant</c> in order to
            use this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#getNotificationChannelGroups(java.lang.String,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.getNotificationChannelGroups(java.lang.String, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationChannels">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.App.NotificationChannel&gt;? GetNotificationChannels (string pkg, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Android.App.NotificationChannel&gt; GetNotificationChannels(string pkg, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.GetNotificationChannels(System.String,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="member this.GetNotificationChannels : string * Android.OS.UserHandle -&gt; System.Collections.Generic.IList&lt;Android.App.NotificationChannel&gt;" Usage="notificationListenerService.GetNotificationChannels (pkg, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNotificationChannels", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNotificationChannels", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.NotificationChannel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="user">To be added.</param>
        <param name="pkg">The package to retrieve channels for.</param>
        <summary>Returns all notification channels belonging to the given package for a given user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns all notification channels belonging to the given package for a given user.</para>
          <para>This method will throw a security exception if you don't have access to notifications
            for the given user.</para>
          <para>The caller must have <c>CompanionDeviceManager#getAssociations() an associated
            device</c> or be the <c>NotificationAssistantService notification assistant</c> in order to
            use this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#getNotificationChannels(java.lang.String,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.getNotificationChannels(java.lang.String, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSnoozedNotifications">
      <MemberSignature Language="C#" Value="public Android.Service.Notification.StatusBarNotification[]? GetSnoozedNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Service.Notification.StatusBarNotification[] GetSnoozedNotifications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.GetSnoozedNotifications" />
      <MemberSignature Language="F#" Value="member this.GetSnoozedNotifications : unit -&gt; Android.Service.Notification.StatusBarNotification[]" Usage="notificationListenerService.GetSnoozedNotifications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSnoozedNotifications", "()[Landroid/service/notification/StatusBarNotification;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSnoozedNotifications", "()[Landroid/service/notification/StatusBarNotification;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.StatusBarNotification[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Like <c>#getActiveNotifications()</c>, but returns the list of currently snoozed
            notifications, for all users this listener has access to.</summary>
        <returns>An array of snoozed notifications, sorted in natural order.</returns>
        <remarks>
          <para>Like <c>#getActiveNotifications()</c>, but returns the list of currently snoozed
            notifications, for all users this listener has access to.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#getSnoozedNotifications()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.getSnoozedNotifications()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Notification.NotificationListenerService.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Service.Notification.NotificationListenerService.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetaDataDefaultAutobind">
      <MemberSignature Language="C#" Value="public const string MetaDataDefaultAutobind;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MetaDataDefaultAutobind" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.MetaDataDefaultAutobind" />
      <MemberSignature Language="F#" Value="val mutable MetaDataDefaultAutobind : string" Usage="Android.Service.Notification.NotificationListenerService.MetaDataDefaultAutobind" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("META_DATA_DEFAULT_AUTOBIND", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("META_DATA_DEFAULT_AUTOBIND", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the <c>meta-data</c> tag containing a boolean value that is used to decide if
            this listener should be automatically bound by default.</summary>
        <remarks>
          <para>The name of the <c>meta-data</c> tag containing a boolean value that is used to decide if
            this listener should be automatically bound by default.
            If the value is 'false', the listener can be bound on demand using <c>#requestRebind</c></para>
          <para>An absent value means that the default is 'true'</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#META_DATA_DEFAULT_AUTOBIND" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.META_DATA_DEFAULT_AUTOBIND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetaDataDefaultFilterTypes">
      <MemberSignature Language="C#" Value="public const string MetaDataDefaultFilterTypes;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MetaDataDefaultFilterTypes" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.MetaDataDefaultFilterTypes" />
      <MemberSignature Language="F#" Value="val mutable MetaDataDefaultFilterTypes : string" Usage="Android.Service.Notification.NotificationListenerService.MetaDataDefaultFilterTypes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("META_DATA_DEFAULT_FILTER_TYPES", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("META_DATA_DEFAULT_FILTER_TYPES", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the <c>meta-data</c> tag containing a pipe separated list of default
            integer notification types or "ongoing", "conversations", "alerting", or "silent"
            that should be provided to this listener.</summary>
        <remarks>
          <para>The name of the <c>meta-data</c> tag containing a pipe separated list of default
            integer notification types or "ongoing", "conversations", "alerting", or "silent"
            that should be provided to this listener. See
            <c>#FLAG_FILTER_TYPE_ONGOING</c>,
            <c>#FLAG_FILTER_TYPE_CONVERSATIONS</c>, <c>#FLAG_FILTER_TYPE_ALERTING),
            and {@link #FLAG_FILTER_TYPE_SILENT</c>.</para>
          <para>This value will only be read if the app has not previously specified a default type list,
            and if the user has not overridden the allowed types.</para>
          <para>An absent value means 'allow all types'.
            A present but empty value means 'allow no types'.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#META_DATA_DEFAULT_FILTER_TYPES" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.META_DATA_DEFAULT_FILTER_TYPES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetaDataDisabledFilterTypes">
      <MemberSignature Language="C#" Value="public const string MetaDataDisabledFilterTypes;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MetaDataDisabledFilterTypes" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.MetaDataDisabledFilterTypes" />
      <MemberSignature Language="F#" Value="val mutable MetaDataDisabledFilterTypes : string" Usage="Android.Service.Notification.NotificationListenerService.MetaDataDisabledFilterTypes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("META_DATA_DISABLED_FILTER_TYPES", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("META_DATA_DISABLED_FILTER_TYPES", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the <c>meta-data</c> tag containing a comma separated list of default
            integer notification types that this listener never wants to receive.</summary>
        <remarks>
          <para>The name of the <c>meta-data</c> tag containing a comma separated list of default
            integer notification types that this listener never wants to receive. See
            <c>#FLAG_FILTER_TYPE_ONGOING</c>,
            <c>#FLAG_FILTER_TYPE_CONVERSATIONS</c>, <c>#FLAG_FILTER_TYPE_ALERTING),
            and {@link #FLAG_FILTER_TYPE_SILENT</c>.</para>
          <para>Types provided in this list will appear as 'off' and 'disabled' in the user interface,
            so users don't enable a type that the listener will never bridge to their paired devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#META_DATA_DISABLED_FILTER_TYPES" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.META_DATA_DISABLED_FILTER_TYPES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateNotificationFilter">
      <MemberSignature Language="C#" Value="public void MigrateNotificationFilter (int defaultTypes, System.Collections.Generic.IList&lt;string&gt;? disallowedPkgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MigrateNotificationFilter(int32 defaultTypes, class System.Collections.Generic.IList`1&lt;string&gt; disallowedPkgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.MigrateNotificationFilter(System.Int32,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="member this.MigrateNotificationFilter : int * System.Collections.Generic.IList&lt;string&gt; -&gt; unit" Usage="notificationListenerService.MigrateNotificationFilter (defaultTypes, disallowedPkgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("migrateNotificationFilter", "(ILjava/util/List;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("migrateNotificationFilter", "(ILjava/util/List;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultTypes" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "FlagFilterTypeConversations", "FlagFilterTypeAlerting", "FlagFilterTypeSilent", "FlagFilterTypeOngoing" }, Flag=true, Type="Android.Service.Notification.NotificationListenerService")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "FlagFilterTypeConversations", "FlagFilterTypeAlerting", "FlagFilterTypeSilent", "FlagFilterTypeOngoing" }, Flag=true, Type="Android.Service.Notification.NotificationListenerService")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="disallowedPkgs" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="defaultTypes">A value representing the types of notifications that this listener should
            receive by default</param>
        <param name="disallowedPkgs">A list of package names whose notifications should not be seen by this
            listener, by default, because the listener does not process or display them, or because a
            user had previously disallowed these packages in the listener app's UI</param>
        <summary>Lets an app migrate notification filters from its app into the OS.</summary>
        <remarks>
          <para>Lets an app migrate notification filters from its app into the OS.</para>
          <para>This call will be ignored if the app has already migrated these settings or the user
            has set filters in the UI. This method is intended for user specific settings; if an app has
            already specified defaults types in its manifest with
            <c>#META_DATA_DEFAULT_FILTER_TYPES</c>, the defaultTypes option will be ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#migrateNotificationFilter(int,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.migrateNotificationFilter(int, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public override Android.OS.IBinder? OnBind (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnBind(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="override this.OnBind : Android.Content.Intent -&gt; Android.OS.IBinder" Usage="notificationListenerService.OnBind intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content Context BindService(Android Content Intent,Android Content IServiceConnection,Android Content IServiceConnection)';scope=Xamarin" title="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)">M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)</a></format>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>This is not the lifecycle event you are looking for.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>This is not the lifecycle event you are looking for.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing any operations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onBind(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onBind(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="OnInterruptionFilterChanged">
      <MemberSignature Language="C#" Value="public virtual void OnInterruptionFilterChanged (Android.Service.Notification.InterruptionFilterType interruptionFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInterruptionFilterChanged(valuetype Android.Service.Notification.InterruptionFilterType interruptionFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnInterruptionFilterChanged(Android.Service.Notification.InterruptionFilterType)" />
      <MemberSignature Language="F#" Value="abstract member OnInterruptionFilterChanged : Android.Service.Notification.InterruptionFilterType -&gt; unit&#xA;override this.OnInterruptionFilterChanged : Android.Service.Notification.InterruptionFilterType -&gt; unit" Usage="notificationListenerService.OnInterruptionFilterChanged interruptionFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onInterruptionFilterChanged", "(I)V", "GetOnInterruptionFilterChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onInterruptionFilterChanged", "(I)V", "GetOnInterruptionFilterChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interruptionFilter" Type="Android.Service.Notification.InterruptionFilterType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="interruptionFilter">The current
                <c>#getCurrentInterruptionFilter() interruption filter</c>.</param>
        <summary>Implement this method to be notified when the
            <c>#getCurrentInterruptionFilter() interruption filter</c> changed.</summary>
        <remarks>
          <para>Implement this method to be notified when the
            <c>#getCurrentInterruptionFilter() interruption filter</c> changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onInterruptionFilterChanged(int)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onInterruptionFilterChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnListenerConnected">
      <MemberSignature Language="C#" Value="public virtual void OnListenerConnected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnListenerConnected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnListenerConnected" />
      <MemberSignature Language="F#" Value="abstract member OnListenerConnected : unit -&gt; unit&#xA;override this.OnListenerConnected : unit -&gt; unit" Usage="notificationListenerService.OnListenerConnected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onListenerConnected", "()V", "GetOnListenerConnectedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onListenerConnected", "()V", "GetOnListenerConnectedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implement this method to learn about when the listener is enabled and connected to
            the notification manager.</summary>
        <remarks>
          <para>Implement this method to learn about when the listener is enabled and connected to
            the notification manager.  You are safe to call <c>#getActiveNotifications()</c>
            at this time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onListenerConnected()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onListenerConnected()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnListenerDisconnected">
      <MemberSignature Language="C#" Value="public virtual void OnListenerDisconnected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnListenerDisconnected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnListenerDisconnected" />
      <MemberSignature Language="F#" Value="abstract member OnListenerDisconnected : unit -&gt; unit&#xA;override this.OnListenerDisconnected : unit -&gt; unit" Usage="notificationListenerService.OnListenerDisconnected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onListenerDisconnected", "()V", "GetOnListenerDisconnectedHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onListenerDisconnected", "()V", "GetOnListenerDisconnectedHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implement this method to learn about when the listener is disconnected from the
            notification manager.</summary>
        <remarks>
          <para>Implement this method to learn about when the listener is disconnected from the
            notification manager.You will not receive any events after this call, and may only
            call <c>#requestRebind(ComponentName)</c> at this time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onListenerDisconnected()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onListenerDisconnected()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnListenerHintsChanged">
      <MemberSignature Language="C#" Value="public virtual void OnListenerHintsChanged (Android.Service.Notification.NotificationListenerServiceHint hints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnListenerHintsChanged(valuetype Android.Service.Notification.NotificationListenerServiceHint hints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnListenerHintsChanged(Android.Service.Notification.NotificationListenerServiceHint)" />
      <MemberSignature Language="F#" Value="abstract member OnListenerHintsChanged : Android.Service.Notification.NotificationListenerServiceHint -&gt; unit&#xA;override this.OnListenerHintsChanged : Android.Service.Notification.NotificationListenerServiceHint -&gt; unit" Usage="notificationListenerService.OnListenerHintsChanged hints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onListenerHintsChanged", "(I)V", "GetOnListenerHintsChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onListenerHintsChanged", "(I)V", "GetOnListenerHintsChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hints" Type="Android.Service.Notification.NotificationListenerServiceHint">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hints">The current <c>#getCurrentListenerHints() listener hints</c>.</param>
        <summary>Implement this method to be notified when the
            <c>#getCurrentListenerHints() Listener hints</c> change.</summary>
        <remarks>
          <para>Implement this method to be notified when the
            <c>#getCurrentListenerHints() Listener hints</c> change.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onListenerHintsChanged(int)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onListenerHintsChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotificationChannelGroupModified">
      <MemberSignature Language="C#" Value="public virtual void OnNotificationChannelGroupModified (string? pkg, Android.OS.UserHandle? user, Android.App.NotificationChannelGroup? group, Android.Service.Notification.NotificationChannelOrGroupEventType modificationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationChannelGroupModified(string pkg, class Android.OS.UserHandle user, class Android.App.NotificationChannelGroup group, valuetype Android.Service.Notification.NotificationChannelOrGroupEventType modificationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnNotificationChannelGroupModified(System.String,Android.OS.UserHandle,Android.App.NotificationChannelGroup,Android.Service.Notification.NotificationChannelOrGroupEventType)" />
      <MemberSignature Language="F#" Value="abstract member OnNotificationChannelGroupModified : string * Android.OS.UserHandle * Android.App.NotificationChannelGroup * Android.Service.Notification.NotificationChannelOrGroupEventType -&gt; unit&#xA;override this.OnNotificationChannelGroupModified : string * Android.OS.UserHandle * Android.App.NotificationChannelGroup * Android.Service.Notification.NotificationChannelOrGroupEventType -&gt; unit" Usage="notificationListenerService.OnNotificationChannelGroupModified (pkg, user, group, modificationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNotificationChannelGroupModified", "(Ljava/lang/String;Landroid/os/UserHandle;Landroid/app/NotificationChannelGroup;I)V", "GetOnNotificationChannelGroupModified_Ljava_lang_String_Landroid_os_UserHandle_Landroid_app_NotificationChannelGroup_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNotificationChannelGroupModified", "(Ljava/lang/String;Landroid/os/UserHandle;Landroid/app/NotificationChannelGroup;I)V", "GetOnNotificationChannelGroupModified_Ljava_lang_String_Landroid_os_UserHandle_Landroid_app_NotificationChannelGroup_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="group" Type="Android.App.NotificationChannelGroup" />
        <Parameter Name="modificationType" Type="Android.Service.Notification.NotificationChannelOrGroupEventType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pkg">The package the group belongs to.</param>
        <param name="user">The user on which the change was made.</param>
        <param name="group">The group that has changed.</param>
        <param name="modificationType">One of <c>#NOTIFICATION_CHANNEL_OR_GROUP_ADDED</c>,
                              <c>#NOTIFICATION_CHANNEL_OR_GROUP_UPDATED</c>,
                              <c>#NOTIFICATION_CHANNEL_OR_GROUP_DELETED</c>.</param>
        <summary>Implement this method to learn about notification channel group modifications.</summary>
        <remarks>
          <para>Implement this method to learn about notification channel group modifications.</para>
          <para>The caller must have <c>CompanionDeviceManager#getAssociations() an associated
            device</c> in order to receive this callback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onNotificationChannelGroupModified(java.lang.String,%20android.os.UserHandle,%20android.app.NotificationChannelGroup,%20int)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onNotificationChannelGroupModified(java.lang.String, android.os.UserHandle, android.app.NotificationChannelGroup, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotificationChannelModified">
      <MemberSignature Language="C#" Value="public virtual void OnNotificationChannelModified (string? pkg, Android.OS.UserHandle? user, Android.App.NotificationChannel? channel, Android.Service.Notification.NotificationChannelOrGroupEventType modificationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationChannelModified(string pkg, class Android.OS.UserHandle user, class Android.App.NotificationChannel channel, valuetype Android.Service.Notification.NotificationChannelOrGroupEventType modificationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnNotificationChannelModified(System.String,Android.OS.UserHandle,Android.App.NotificationChannel,Android.Service.Notification.NotificationChannelOrGroupEventType)" />
      <MemberSignature Language="F#" Value="abstract member OnNotificationChannelModified : string * Android.OS.UserHandle * Android.App.NotificationChannel * Android.Service.Notification.NotificationChannelOrGroupEventType -&gt; unit&#xA;override this.OnNotificationChannelModified : string * Android.OS.UserHandle * Android.App.NotificationChannel * Android.Service.Notification.NotificationChannelOrGroupEventType -&gt; unit" Usage="notificationListenerService.OnNotificationChannelModified (pkg, user, channel, modificationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNotificationChannelModified", "(Ljava/lang/String;Landroid/os/UserHandle;Landroid/app/NotificationChannel;I)V", "GetOnNotificationChannelModified_Ljava_lang_String_Landroid_os_UserHandle_Landroid_app_NotificationChannel_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNotificationChannelModified", "(Ljava/lang/String;Landroid/os/UserHandle;Landroid/app/NotificationChannel;I)V", "GetOnNotificationChannelModified_Ljava_lang_String_Landroid_os_UserHandle_Landroid_app_NotificationChannel_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="channel" Type="Android.App.NotificationChannel" />
        <Parameter Name="modificationType" Type="Android.Service.Notification.NotificationChannelOrGroupEventType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pkg">The package the channel belongs to.</param>
        <param name="user">The user on which the change was made.</param>
        <param name="channel">The channel that has changed.</param>
        <param name="modificationType">One of <c>#NOTIFICATION_CHANNEL_OR_GROUP_ADDED</c>,
                              <c>#NOTIFICATION_CHANNEL_OR_GROUP_UPDATED</c>,
                              <c>#NOTIFICATION_CHANNEL_OR_GROUP_DELETED</c>.</param>
        <summary>Implement this method to learn about notification channel modifications.</summary>
        <remarks>
          <para>Implement this method to learn about notification channel modifications.</para>
          <para>The caller must have <c>CompanionDeviceManager#getAssociations() an associated
            device</c> in order to receive this callback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onNotificationChannelModified(java.lang.String,%20android.os.UserHandle,%20android.app.NotificationChannel,%20int)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onNotificationChannelModified(java.lang.String, android.os.UserHandle, android.app.NotificationChannel, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotificationPosted">
      <MemberSignature Language="C#" Value="public virtual void OnNotificationPosted (Android.Service.Notification.StatusBarNotification? sbn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationPosted(class Android.Service.Notification.StatusBarNotification sbn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnNotificationPosted(Android.Service.Notification.StatusBarNotification)" />
      <MemberSignature Language="F#" Value="abstract member OnNotificationPosted : Android.Service.Notification.StatusBarNotification -&gt; unit&#xA;override this.OnNotificationPosted : Android.Service.Notification.StatusBarNotification -&gt; unit" Usage="notificationListenerService.OnNotificationPosted sbn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNotificationPosted", "(Landroid/service/notification/StatusBarNotification;)V", "GetOnNotificationPosted_Landroid_service_notification_StatusBarNotification_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNotificationPosted", "(Landroid/service/notification/StatusBarNotification;)V", "GetOnNotificationPosted_Landroid_service_notification_StatusBarNotification_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sbn" Type="Android.Service.Notification.StatusBarNotification" />
      </Parameters>
      <Docs>
        <param name="sbn">A data structure encapsulating the original <c>android.app.Notification</c>
                       object as well as its identifying information (tag and id) and source
                       (package name).</param>
        <summary>Implement this method to learn about new notifications as they are posted by apps.</summary>
        <remarks>
          <para>Implement this method to learn about new notifications as they are posted by apps.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onNotificationPosted(android.service.notification.StatusBarNotification)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onNotificationPosted(android.service.notification.StatusBarNotification)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="OnNotificationPosted">
      <MemberSignature Language="C#" Value="public virtual void OnNotificationPosted (Android.Service.Notification.StatusBarNotification? sbn, Android.Service.Notification.NotificationListenerService.RankingMap? rankingMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationPosted(class Android.Service.Notification.StatusBarNotification sbn, class Android.Service.Notification.NotificationListenerService/RankingMap rankingMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnNotificationPosted(Android.Service.Notification.StatusBarNotification,Android.Service.Notification.NotificationListenerService.RankingMap)" />
      <MemberSignature Language="F#" Value="abstract member OnNotificationPosted : Android.Service.Notification.StatusBarNotification * Android.Service.Notification.NotificationListenerService.RankingMap -&gt; unit&#xA;override this.OnNotificationPosted : Android.Service.Notification.StatusBarNotification * Android.Service.Notification.NotificationListenerService.RankingMap -&gt; unit" Usage="notificationListenerService.OnNotificationPosted (sbn, rankingMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNotificationPosted", "(Landroid/service/notification/StatusBarNotification;Landroid/service/notification/NotificationListenerService$RankingMap;)V", "GetOnNotificationPosted_Landroid_service_notification_StatusBarNotification_Landroid_service_notification_NotificationListenerService_RankingMap_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNotificationPosted", "(Landroid/service/notification/StatusBarNotification;Landroid/service/notification/NotificationListenerService$RankingMap;)V", "GetOnNotificationPosted_Landroid_service_notification_StatusBarNotification_Landroid_service_notification_NotificationListenerService_RankingMap_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sbn" Type="Android.Service.Notification.StatusBarNotification" />
        <Parameter Name="rankingMap" Type="Android.Service.Notification.NotificationListenerService+RankingMap" />
      </Parameters>
      <Docs>
        <param name="sbn">A data structure encapsulating the original <c>android.app.Notification</c>
                       object as well as its identifying information (tag and id) and source
                       (package name).</param>
        <param name="rankingMap">The current ranking map that can be used to retrieve ranking information
                   for active notifications, including the newly posted one.
</param>
        <summary>Implement this method to learn about new notifications as they are posted by apps.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onNotificationPosted(android.service.notification.StatusBarNotification)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onNotificationPosted(android.service.notification.StatusBarNotification)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotificationRankingUpdate">
      <MemberSignature Language="C#" Value="public virtual void OnNotificationRankingUpdate (Android.Service.Notification.NotificationListenerService.RankingMap? rankingMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationRankingUpdate(class Android.Service.Notification.NotificationListenerService/RankingMap rankingMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnNotificationRankingUpdate(Android.Service.Notification.NotificationListenerService.RankingMap)" />
      <MemberSignature Language="F#" Value="abstract member OnNotificationRankingUpdate : Android.Service.Notification.NotificationListenerService.RankingMap -&gt; unit&#xA;override this.OnNotificationRankingUpdate : Android.Service.Notification.NotificationListenerService.RankingMap -&gt; unit" Usage="notificationListenerService.OnNotificationRankingUpdate rankingMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNotificationRankingUpdate", "(Landroid/service/notification/NotificationListenerService$RankingMap;)V", "GetOnNotificationRankingUpdate_Landroid_service_notification_NotificationListenerService_RankingMap_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNotificationRankingUpdate", "(Landroid/service/notification/NotificationListenerService$RankingMap;)V", "GetOnNotificationRankingUpdate_Landroid_service_notification_NotificationListenerService_RankingMap_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rankingMap" Type="Android.Service.Notification.NotificationListenerService+RankingMap" />
      </Parameters>
      <Docs>
        <param name="rankingMap">The current ranking map that can be used to retrieve ranking information
                              for active notifications.</param>
        <summary>Implement this method to be notified when the notification ranking changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onNotificationRankingUpdate(android.service.notification.RankingMap)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onNotificationRankingUpdate(android.service.notification.RankingMap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotificationRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnNotificationRemoved (Android.Service.Notification.StatusBarNotification? sbn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationRemoved(class Android.Service.Notification.StatusBarNotification sbn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnNotificationRemoved(Android.Service.Notification.StatusBarNotification)" />
      <MemberSignature Language="F#" Value="abstract member OnNotificationRemoved : Android.Service.Notification.StatusBarNotification -&gt; unit&#xA;override this.OnNotificationRemoved : Android.Service.Notification.StatusBarNotification -&gt; unit" Usage="notificationListenerService.OnNotificationRemoved sbn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNotificationRemoved", "(Landroid/service/notification/StatusBarNotification;)V", "GetOnNotificationRemoved_Landroid_service_notification_StatusBarNotification_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNotificationRemoved", "(Landroid/service/notification/StatusBarNotification;)V", "GetOnNotificationRemoved_Landroid_service_notification_StatusBarNotification_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sbn" Type="Android.Service.Notification.StatusBarNotification" />
      </Parameters>
      <Docs>
        <param name="sbn">A data structure encapsulating at least the original information (tag and id)
                       and source (package name) used to post the <c>android.app.Notification</c> that
                       was just removed.</param>
        <summary>Implement this method to learn when notifications are removed.</summary>
        <remarks>
          <para>Implement this method to learn when notifications are removed.</para>
          <para>This might occur because the user has dismissed the notification using system UI (or another
            notification listener) or because the app has withdrawn the notification.</para>
          <para>NOTE: The <c>StatusBarNotification</c> object you receive will be "light"; that is, the
            result from <c>StatusBarNotification#getNotification</c> may be missing some heavyweight
            fields such as <c>android.app.Notification#contentView</c> and
            <c>android.app.Notification#largeIcon</c>. However, all other fields on
            <c>StatusBarNotification</c>, sufficient to match this call with a prior call to
            <c>#onNotificationPosted(StatusBarNotification)</c>, will be intact.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onNotificationRemoved(android.service.notification.StatusBarNotification)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onNotificationRemoved(android.service.notification.StatusBarNotification)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="OnNotificationRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnNotificationRemoved (Android.Service.Notification.StatusBarNotification? sbn, Android.Service.Notification.NotificationListenerService.RankingMap? rankingMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationRemoved(class Android.Service.Notification.StatusBarNotification sbn, class Android.Service.Notification.NotificationListenerService/RankingMap rankingMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnNotificationRemoved(Android.Service.Notification.StatusBarNotification,Android.Service.Notification.NotificationListenerService.RankingMap)" />
      <MemberSignature Language="F#" Value="abstract member OnNotificationRemoved : Android.Service.Notification.StatusBarNotification * Android.Service.Notification.NotificationListenerService.RankingMap -&gt; unit&#xA;override this.OnNotificationRemoved : Android.Service.Notification.StatusBarNotification * Android.Service.Notification.NotificationListenerService.RankingMap -&gt; unit" Usage="notificationListenerService.OnNotificationRemoved (sbn, rankingMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNotificationRemoved", "(Landroid/service/notification/StatusBarNotification;Landroid/service/notification/NotificationListenerService$RankingMap;)V", "GetOnNotificationRemoved_Landroid_service_notification_StatusBarNotification_Landroid_service_notification_NotificationListenerService_RankingMap_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNotificationRemoved", "(Landroid/service/notification/StatusBarNotification;Landroid/service/notification/NotificationListenerService$RankingMap;)V", "GetOnNotificationRemoved_Landroid_service_notification_StatusBarNotification_Landroid_service_notification_NotificationListenerService_RankingMap_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sbn" Type="Android.Service.Notification.StatusBarNotification" />
        <Parameter Name="rankingMap" Type="Android.Service.Notification.NotificationListenerService+RankingMap" />
      </Parameters>
      <Docs>
        <param name="sbn">A data structure encapsulating at least the original information (tag and id)
                       and source (package name) used to post the <c>android.app.Notification</c> that
                       was just removed.</param>
        <param name="rankingMap">The current ranking map that can be used to retrieve ranking information
                   for active notifications.

</param>
        <summary>Implement this method to learn when notifications are removed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onNotificationRemoved(android.service.notification.StatusBarNotification)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onNotificationRemoved(android.service.notification.StatusBarNotification)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotificationRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnNotificationRemoved (Android.Service.Notification.StatusBarNotification? sbn, Android.Service.Notification.NotificationListenerService.RankingMap? rankingMap, Android.Service.Notification.NotificationCancelReason reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationRemoved(class Android.Service.Notification.StatusBarNotification sbn, class Android.Service.Notification.NotificationListenerService/RankingMap rankingMap, valuetype Android.Service.Notification.NotificationCancelReason reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnNotificationRemoved(Android.Service.Notification.StatusBarNotification,Android.Service.Notification.NotificationListenerService.RankingMap,Android.Service.Notification.NotificationCancelReason)" />
      <MemberSignature Language="F#" Value="abstract member OnNotificationRemoved : Android.Service.Notification.StatusBarNotification * Android.Service.Notification.NotificationListenerService.RankingMap * Android.Service.Notification.NotificationCancelReason -&gt; unit&#xA;override this.OnNotificationRemoved : Android.Service.Notification.StatusBarNotification * Android.Service.Notification.NotificationListenerService.RankingMap * Android.Service.Notification.NotificationCancelReason -&gt; unit" Usage="notificationListenerService.OnNotificationRemoved (sbn, rankingMap, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNotificationRemoved", "(Landroid/service/notification/StatusBarNotification;Landroid/service/notification/NotificationListenerService$RankingMap;I)V", "GetOnNotificationRemoved_Landroid_service_notification_StatusBarNotification_Landroid_service_notification_NotificationListenerService_RankingMap_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNotificationRemoved", "(Landroid/service/notification/StatusBarNotification;Landroid/service/notification/NotificationListenerService$RankingMap;I)V", "GetOnNotificationRemoved_Landroid_service_notification_StatusBarNotification_Landroid_service_notification_NotificationListenerService_RankingMap_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sbn" Type="Android.Service.Notification.StatusBarNotification" />
        <Parameter Name="rankingMap" Type="Android.Service.Notification.NotificationListenerService+RankingMap" />
        <Parameter Name="reason" Type="Android.Service.Notification.NotificationCancelReason">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sbn">A data structure encapsulating at least the original information (tag and id)
                       and source (package name) used to post the <c>android.app.Notification</c> that
                       was just removed.</param>
        <param name="rankingMap">To be added.</param>
        <param name="reason">To be added.</param>
        <summary>Implement this method to learn when notifications are removed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onNotificationRemoved(android.service.notification.StatusBarNotification)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onNotificationRemoved(android.service.notification.StatusBarNotification)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSilentStatusBarIconsVisibilityChanged">
      <MemberSignature Language="C#" Value="public virtual void OnSilentStatusBarIconsVisibilityChanged (bool hideSilentStatusIcons);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSilentStatusBarIconsVisibilityChanged(bool hideSilentStatusIcons) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.OnSilentStatusBarIconsVisibilityChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnSilentStatusBarIconsVisibilityChanged : bool -&gt; unit&#xA;override this.OnSilentStatusBarIconsVisibilityChanged : bool -&gt; unit" Usage="notificationListenerService.OnSilentStatusBarIconsVisibilityChanged hideSilentStatusIcons" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSilentStatusBarIconsVisibilityChanged", "(Z)V", "GetOnSilentStatusBarIconsVisibilityChanged_ZHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSilentStatusBarIconsVisibilityChanged", "(Z)V", "GetOnSilentStatusBarIconsVisibilityChanged_ZHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hideSilentStatusIcons" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hideSilentStatusIcons">whether or not status bar icons should be hidden for silent
                                         notifications</param>
        <summary>Implement this method to be notified when the behavior of silent notifications in the status
            bar changes.</summary>
        <remarks>
          <para>Implement this method to be notified when the behavior of silent notifications in the status
            bar changes. See <c>NotificationManager#shouldHideSilentStatusBarIcons()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#onSilentStatusBarIconsVisibilityChanged(boolean)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.onSilentStatusBarIconsVisibilityChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReasonAssistantCancel">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.NotificationCancelReason ReasonAssistantCancel = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.NotificationCancelReason ReasonAssistantCancel = (22)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.ReasonAssistantCancel" />
      <MemberSignature Language="F#" Value="val mutable ReasonAssistantCancel : Android.Service.Notification.NotificationCancelReason" Usage="Android.Service.Notification.NotificationListenerService.ReasonAssistantCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("REASON_ASSISTANT_CANCEL", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("REASON_ASSISTANT_CANCEL", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.NotificationCancelReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.NotificationCancelReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.NotificationCancelReason</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>Notification was canceled due to an assistant adjustment update.</summary>
        <remarks>
          <para>Notification was canceled due to an assistant adjustment update.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#REASON_ASSISTANT_CANCEL" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.REASON_ASSISTANT_CANCEL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReasonChannelRemoved">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.NotificationCancelReason ReasonChannelRemoved = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.NotificationCancelReason ReasonChannelRemoved = (20)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.ReasonChannelRemoved" />
      <MemberSignature Language="F#" Value="val mutable ReasonChannelRemoved : Android.Service.Notification.NotificationCancelReason" Usage="Android.Service.Notification.NotificationListenerService.ReasonChannelRemoved" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("REASON_CHANNEL_REMOVED", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("REASON_CHANNEL_REMOVED", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.NotificationCancelReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.NotificationCancelReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.NotificationCancelReason</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>Notification was canceled due to the backing channel being deleted</summary>
        <remarks>
          <para>Notification was canceled due to the backing channel being deleted</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#REASON_CHANNEL_REMOVED" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.REASON_CHANNEL_REMOVED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReasonClearData">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.NotificationCancelReason ReasonClearData = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.NotificationCancelReason ReasonClearData = (21)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.ReasonClearData" />
      <MemberSignature Language="F#" Value="val mutable ReasonClearData : Android.Service.Notification.NotificationCancelReason" Usage="Android.Service.Notification.NotificationListenerService.ReasonClearData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("REASON_CLEAR_DATA", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("REASON_CLEAR_DATA", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.NotificationCancelReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.NotificationCancelReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.NotificationCancelReason</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>Notification was canceled due to the app's storage being cleared</summary>
        <remarks>
          <para>Notification was canceled due to the app's storage being cleared</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#REASON_CLEAR_DATA" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.REASON_CLEAR_DATA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReasonLockdown">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.NotificationCancelReason ReasonLockdown = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.NotificationCancelReason ReasonLockdown = (23)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.ReasonLockdown" />
      <MemberSignature Language="F#" Value="val mutable ReasonLockdown : Android.Service.Notification.NotificationCancelReason" Usage="Android.Service.Notification.NotificationListenerService.ReasonLockdown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("REASON_LOCKDOWN", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("REASON_LOCKDOWN", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.NotificationCancelReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Service.Notification.NotificationCancelReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.NotificationCancelReason</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>Notification was canceled when entering lockdown mode, which turns off
            Smart Lock, fingerprint unlocking, and notifications on the lock screen.</summary>
        <remarks>
          <para>Notification was canceled when entering lockdown mode, which turns off
            Smart Lock, fingerprint unlocking, and notifications on the lock screen.
            All the listeners shall ensure the canceled notifications are indeed removed
            on their end to prevent data leaking.
            When the user exits the lockdown mode, the removed notifications (due to lockdown)
            will be restored via NotificationListeners#notifyPostedLocked()</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#REASON_LOCKDOWN" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.REASON_LOCKDOWN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestInterruptionFilter">
      <MemberSignature Language="C#" Value="public void RequestInterruptionFilter (Android.Service.Notification.InterruptionFilterType interruptionFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestInterruptionFilter(valuetype Android.Service.Notification.InterruptionFilterType interruptionFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.RequestInterruptionFilter(Android.Service.Notification.InterruptionFilterType)" />
      <MemberSignature Language="F#" Value="member this.RequestInterruptionFilter : Android.Service.Notification.InterruptionFilterType -&gt; unit" Usage="notificationListenerService.RequestInterruptionFilter interruptionFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestInterruptionFilter", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestInterruptionFilter", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interruptionFilter" Type="Android.Service.Notification.InterruptionFilterType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="interruptionFilter">One of the INTERRUPTION_FILTER_ constants.</param>
        <summary>Sets the desired <c>#getCurrentInterruptionFilter() interruption filter</c>.</summary>
        <remarks>
          <para>Sets the desired <c>#getCurrentInterruptionFilter() interruption filter</c>.</para>
          <para>This is merely a request, the host may or may not choose to apply the requested
            interruption filter depending on other listener requests or other global state.</para>
          <para>Listen for updates using <c>#onInterruptionFilterChanged(int)</c>.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#requestInterruptionFilter(int)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.requestInterruptionFilter(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestListenerHints">
      <MemberSignature Language="C#" Value="public void RequestListenerHints (Android.Service.Notification.NotificationListenerServiceHint hints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestListenerHints(valuetype Android.Service.Notification.NotificationListenerServiceHint hints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.RequestListenerHints(Android.Service.Notification.NotificationListenerServiceHint)" />
      <MemberSignature Language="F#" Value="member this.RequestListenerHints : Android.Service.Notification.NotificationListenerServiceHint -&gt; unit" Usage="notificationListenerService.RequestListenerHints hints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestListenerHints", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestListenerHints", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hints" Type="Android.Service.Notification.NotificationListenerServiceHint">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hints">One or more of the HINT_ constants.</param>
        <summary>Sets the desired <c>#getCurrentListenerHints() listener hints</c>.</summary>
        <remarks>
          <para>Sets the desired <c>#getCurrentListenerHints() listener hints</c>.</para>
          <para>This is merely a request, the host may or may not choose to take action depending
            on other listener requests or other global state.</para>
          <para>Listen for updates using <c>#onListenerHintsChanged(int)</c>.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#requestListenerHints(int)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.requestListenerHints(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestRebind">
      <MemberSignature Language="C#" Value="public static void RequestRebind (Android.Content.ComponentName? componentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestRebind(class Android.Content.ComponentName componentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.RequestRebind(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="static member RequestRebind : Android.Content.ComponentName -&gt; unit" Usage="Android.Service.Notification.NotificationListenerService.RequestRebind componentName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestRebind", "(Landroid/content/ComponentName;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestRebind", "(Landroid/content/ComponentName;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="componentName">To be added.</param>
        <summary>Request that the listener be rebound, after a previous call to <c>#requestUnbind</c>.</summary>
        <remarks>
          <para>Request that the listener be rebound, after a previous call to <c>#requestUnbind</c>.</para>
          <para>This method will fail for listeners that have
            not been granted the permission by the user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#requestRebind(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.requestRebind(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUnbind">
      <MemberSignature Language="C#" Value="public void RequestUnbind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestUnbind() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.RequestUnbind" />
      <MemberSignature Language="F#" Value="member this.RequestUnbind : unit -&gt; unit" Usage="notificationListenerService.RequestUnbind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestUnbind", "()V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestUnbind", "()V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request that the service be unbound.</summary>
        <remarks>
          <para>Request that the service be unbound.</para>
          <para>Once this is called, you will no longer receive updates and no method calls are
            guaranteed to be successful, until you next receive the <c>#onListenerConnected()</c> event.
            The service will likely be killed by the system after this call.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation. I know it's tempting, but you must wait.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#requestUnbind()" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.requestUnbind()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUnbind">
      <MemberSignature Language="C#" Value="public static void RequestUnbind (Android.Content.ComponentName componentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestUnbind(class Android.Content.ComponentName componentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.RequestUnbind(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="static member RequestUnbind : Android.Content.ComponentName -&gt; unit" Usage="Android.Service.Notification.NotificationListenerService.RequestUnbind componentName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestUnbind", "(Landroid/content/ComponentName;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestUnbind", "(Landroid/content/ComponentName;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="componentName">To be added.</param>
        <summary>Request that the service be unbound.</summary>
        <remarks>
          <para>Request that the service be unbound.</para>
          <para>This method will fail for components that are not part of the calling app.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#requestUnbind(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.requestUnbind(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInterface">
      <MemberSignature Language="C#" Value="public const string ServiceInterface;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceInterface" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.ServiceInterface" />
      <MemberSignature Language="F#" Value="val mutable ServiceInterface : string" Usage="Android.Service.Notification.NotificationListenerService.ServiceInterface" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SERVICE_INTERFACE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SERVICE_INTERFACE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Intent</c> that must be declared as handled by the service.</summary>
        <remarks>
          <para>The <c>Intent</c> that must be declared as handled by the service.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#SERVICE_INTERFACE" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.SERVICE_INTERFACE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SetNotificationsShown">
      <MemberSignature Language="C#" Value="public void SetNotificationsShown (string[]? keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNotificationsShown(string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.SetNotificationsShown(System.String[])" />
      <MemberSignature Language="F#" Value="member this.SetNotificationsShown : string[] -&gt; unit" Usage="notificationListenerService.SetNotificationsShown keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNotificationsShown", "([Ljava/lang/String;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNotificationsShown", "([Ljava/lang/String;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="keys">Notifications to mark as seen.</param>
        <summary>Inform the notification manager that these notifications have been viewed by the
            user.</summary>
        <remarks>
          <para>Inform the notification manager that these notifications have been viewed by the
            user. This should only be called when there is sufficient confidence that the user is
            looking at the notifications, such as when the notifications appear on the screen due to
            an explicit user interaction.</para>
          <para>The service should wait for the <c>#onListenerConnected()</c> event
            before performing this operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#setNotificationsShown(java.lang.String[])" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.setNotificationsShown(java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnoozeNotification">
      <MemberSignature Language="C#" Value="public void SnoozeNotification (string? key, long durationMs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SnoozeNotification(string key, int64 durationMs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.SnoozeNotification(System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.SnoozeNotification : string * int64 -&gt; unit" Usage="notificationListenerService.SnoozeNotification (key, durationMs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("snoozeNotification", "(Ljava/lang/String;J)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("snoozeNotification", "(Ljava/lang/String;J)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="durationMs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="key">The key of the notification to snooze</param>
        <param name="durationMs">A duration to snooze the notification for, in milliseconds.</param>
        <summary>Inform the notification manager about snoozing a specific notification.</summary>
        <remarks>
          <para>Inform the notification manager about snoozing a specific notification.</para>
          <para>Use this if your listener has a user interface that allows the user to snooze a notification
            for a time. It should be called after the user snoozes a single notification using
            your UI; upon being informed, the notification manager will actually remove the notification
            and you will get an <c>#onNotificationRemoved(StatusBarNotification)</c> callback. When the
            snoozing period expires, you will get a
            <c>#onNotificationPosted(StatusBarNotification, RankingMap)</c> callback for the
            notification.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#snoozeNotification(java.lang.String,%20long)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.snoozeNotification(java.lang.String, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressedEffectScreenOff">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.SuppressEffect SuppressedEffectScreenOff = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.SuppressEffect SuppressedEffectScreenOff = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.SuppressedEffectScreenOff" />
      <MemberSignature Language="F#" Value="val mutable SuppressedEffectScreenOff : Android.Service.Notification.SuppressEffect" Usage="Android.Service.Notification.NotificationListenerService.SuppressedEffectScreenOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SUPPRESSED_EFFECT_SCREEN_OFF", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SUPPRESSED_EFFECT_SCREEN_OFF", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0", "This constant will be removed in the future version. Use Android.Service.Notification.SuppressEffect enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0", "This constant will be removed in the future version. Use Android.Service.Notification.SuppressEffect enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.SuppressEffect</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Whether notification suppressed by DND should not interruption visually when the screen is
            off.</summary>
        <remarks>
          <para>Whether notification suppressed by DND should not interruption visually when the screen is
            off.</para>
          <para>This member is deprecated. Use the more specific visual effects in <c>NotificationManager.Policy</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#SUPPRESSED_EFFECT_SCREEN_OFF" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.SUPPRESSED_EFFECT_SCREEN_OFF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressedEffectScreenOn">
      <MemberSignature Language="C#" Value="public const Android.Service.Notification.SuppressEffect SuppressedEffectScreenOn = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Service.Notification.SuppressEffect SuppressedEffectScreenOn = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Notification.NotificationListenerService.SuppressedEffectScreenOn" />
      <MemberSignature Language="F#" Value="val mutable SuppressedEffectScreenOn : Android.Service.Notification.SuppressEffect" Usage="Android.Service.Notification.NotificationListenerService.SuppressedEffectScreenOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SUPPRESSED_EFFECT_SCREEN_ON", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SUPPRESSED_EFFECT_SCREEN_ON", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0", "This constant will be removed in the future version. Use Android.Service.Notification.SuppressEffect enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0", "This constant will be removed in the future version. Use Android.Service.Notification.SuppressEffect enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.SuppressEffect</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Whether notification suppressed by DND should not interruption visually when the screen is
            on.</summary>
        <remarks>
          <para>Whether notification suppressed by DND should not interruption visually when the screen is
            on.</para>
          <para>This member is deprecated. Use the more specific visual effects in <c>NotificationManager.Policy</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#SUPPRESSED_EFFECT_SCREEN_ON" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.SUPPRESSED_EFFECT_SCREEN_ON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Notification.NotificationListenerService.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Service.Notification.NotificationListenerService.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Notification.NotificationListenerService.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Service.Notification.NotificationListenerService.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateNotificationChannel">
      <MemberSignature Language="C#" Value="public void UpdateNotificationChannel (string pkg, Android.OS.UserHandle user, Android.App.NotificationChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateNotificationChannel(string pkg, class Android.OS.UserHandle user, class Android.App.NotificationChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Notification.NotificationListenerService.UpdateNotificationChannel(System.String,Android.OS.UserHandle,Android.App.NotificationChannel)" />
      <MemberSignature Language="F#" Value="member this.UpdateNotificationChannel : string * Android.OS.UserHandle * Android.App.NotificationChannel -&gt; unit" Usage="notificationListenerService.UpdateNotificationChannel (pkg, user, channel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateNotificationChannel", "(Ljava/lang/String;Landroid/os/UserHandle;Landroid/app/NotificationChannel;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateNotificationChannel", "(Ljava/lang/String;Landroid/os/UserHandle;Landroid/app/NotificationChannel;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="channel" Type="Android.App.NotificationChannel" />
      </Parameters>
      <Docs>
        <param name="pkg">The package the channel belongs to.</param>
        <param name="user">The user the channel belongs to.</param>
        <param name="channel">the channel to update.</param>
        <summary>Updates a notification channel for a given package for a given user.</summary>
        <remarks>
          <para>Updates a notification channel for a given package for a given user. This should only be used
            to reflect changes a user has made to the channel via the listener's user interface.</para>
          <para>This method will throw a security exception if you don't have access to notifications
            for the given user.</para>
          <para>The caller must have <c>CompanionDeviceManager#getAssociations() an associated
            device</c> in order to use this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/notification/NotificationListenerService#updateNotificationChannel(java.lang.String,%20android.os.UserHandle,%20android.app.NotificationChannel)" title="Reference documentation">Java documentation for <code>android.service.notification.NotificationListenerService.updateNotificationChannel(java.lang.String, android.os.UserHandle, android.app.NotificationChannel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
