<Type Name="IInherited" FullName="Java.Lang.Annotation.IInherited">
  <TypeSignature Language="C#" Value="public interface IInherited : IDisposable, Java.Interop.IJavaPeerable, Java.Lang.Annotation.IAnnotation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInherited implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.Annotation.IAnnotation, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Annotation.IInherited" />
  <TypeSignature Language="F#" Value="type IInherited = interface&#xA;    interface IAnnotation&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Annotation.IAnnotation</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/annotation/Inherited", "", "Java.Lang.Annotation.IInheritedInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/annotation/Inherited", "", "Java.Lang.Annotation.IInheritedInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Indicates that an annotation interface is automatically inherited.</summary>
    <remarks>
      <para>Indicates that an annotation interface is automatically inherited.  If
            an Inherited meta-annotation is present on an annotation interface
            declaration, and the user queries the annotation interface on a class
            declaration, and the class declaration has no annotation for this interface,
            then the class's superclass will automatically be queried for the
            annotation interface.  This process will be repeated until an annotation for
            this interface is found, or the top of the class hierarchy (Object)
            is reached.  If no superclass has an annotation for this interface, then
            the query will indicate that the class in question has no such annotation.</para>
      <para>Note that this meta-annotation interface has no effect if the annotated
            interface is used to annotate anything other than a class.  Note also
            that this meta-annotation only causes annotations to be inherited
            from superclasses; annotations on implemented interfaces have no
            effect.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/annotation/Inherited" title="Reference documentation">Java documentation for <code>java.lang.annotation.Inherited</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members />
</Type>
