<Type Name="SQLiteDatabase" FullName="Android.Database.Sqlite.SQLiteDatabase">
  <TypeSignature Language="C#" Value="public class SQLiteDatabase : Android.Database.Sqlite.SQLiteClosable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SQLiteDatabase extends Android.Database.Sqlite.SQLiteClosable" />
  <TypeSignature Language="DocId" Value="T:Android.Database.Sqlite.SQLiteDatabase" />
  <TypeSignature Language="F#" Value="type SQLiteDatabase = class&#xA;    inherit SQLiteClosable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Database.Sqlite.SQLiteClosable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/database/sqlite/SQLiteDatabase", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/database/sqlite/SQLiteDatabase", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Exposes methods to manage a SQLite database.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SQLiteDatabase (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Database.Sqlite.SQLiteDatabase : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="new Android.Database.Sqlite.SQLiteDatabase (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public virtual void BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.BeginTransaction" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction : unit -&gt; unit&#xA;override this.BeginTransaction : unit -&gt; unit" Usage="sQLiteDatabase.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("beginTransaction", "()V", "GetBeginTransactionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("beginTransaction", "()V", "GetBeginTransactionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins a transaction in EXCLUSIVE mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#beginTransaction()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.beginTransaction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransactionNonExclusive">
      <MemberSignature Language="C#" Value="public virtual void BeginTransactionNonExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransactionNonExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.BeginTransactionNonExclusive" />
      <MemberSignature Language="F#" Value="abstract member BeginTransactionNonExclusive : unit -&gt; unit&#xA;override this.BeginTransactionNonExclusive : unit -&gt; unit" Usage="sQLiteDatabase.BeginTransactionNonExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("beginTransactionNonExclusive", "()V", "GetBeginTransactionNonExclusiveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("beginTransactionNonExclusive", "()V", "GetBeginTransactionNonExclusiveHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins a transaction in IMMEDIATE mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#beginTransactionNonExclusive()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.beginTransactionNonExclusive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransactionWithListener">
      <MemberSignature Language="C#" Value="public virtual void BeginTransactionWithListener (Android.Database.Sqlite.ISQLiteTransactionListener? transactionListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransactionWithListener(class Android.Database.Sqlite.ISQLiteTransactionListener transactionListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.BeginTransactionWithListener(Android.Database.Sqlite.ISQLiteTransactionListener)" />
      <MemberSignature Language="F#" Value="abstract member BeginTransactionWithListener : Android.Database.Sqlite.ISQLiteTransactionListener -&gt; unit&#xA;override this.BeginTransactionWithListener : Android.Database.Sqlite.ISQLiteTransactionListener -&gt; unit" Usage="sQLiteDatabase.BeginTransactionWithListener transactionListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("beginTransactionWithListener", "(Landroid/database/sqlite/SQLiteTransactionListener;)V", "GetBeginTransactionWithListener_Landroid_database_sqlite_SQLiteTransactionListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("beginTransactionWithListener", "(Landroid/database/sqlite/SQLiteTransactionListener;)V", "GetBeginTransactionWithListener_Landroid_database_sqlite_SQLiteTransactionListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionListener" Type="Android.Database.Sqlite.ISQLiteTransactionListener" />
      </Parameters>
      <Docs>
        <param name="transactionListener">listener that should be notified when the transaction begins,
            commits, or is rolled back, either explicitly or by a call to
            <c>#yieldIfContendedSafely</c>.</param>
        <summary>Begins a transaction in EXCLUSIVE mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransactionWithListenerNonExclusive">
      <MemberSignature Language="C#" Value="public virtual void BeginTransactionWithListenerNonExclusive (Android.Database.Sqlite.ISQLiteTransactionListener? transactionListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransactionWithListenerNonExclusive(class Android.Database.Sqlite.ISQLiteTransactionListener transactionListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.BeginTransactionWithListenerNonExclusive(Android.Database.Sqlite.ISQLiteTransactionListener)" />
      <MemberSignature Language="F#" Value="abstract member BeginTransactionWithListenerNonExclusive : Android.Database.Sqlite.ISQLiteTransactionListener -&gt; unit&#xA;override this.BeginTransactionWithListenerNonExclusive : Android.Database.Sqlite.ISQLiteTransactionListener -&gt; unit" Usage="sQLiteDatabase.BeginTransactionWithListenerNonExclusive transactionListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("beginTransactionWithListenerNonExclusive", "(Landroid/database/sqlite/SQLiteTransactionListener;)V", "GetBeginTransactionWithListenerNonExclusive_Landroid_database_sqlite_SQLiteTransactionListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("beginTransactionWithListenerNonExclusive", "(Landroid/database/sqlite/SQLiteTransactionListener;)V", "GetBeginTransactionWithListenerNonExclusive_Landroid_database_sqlite_SQLiteTransactionListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionListener" Type="Android.Database.Sqlite.ISQLiteTransactionListener" />
      </Parameters>
      <Docs>
        <param name="transactionListener">listener that should be notified when the
                       transaction begins, commits, or is rolled back, either
                       explicitly or by a call to <c>#yieldIfContendedSafely</c>.</param>
        <summary>Begins a transaction in IMMEDIATE mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Close" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sQLiteDatabase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileStatement">
      <MemberSignature Language="C#" Value="public virtual Android.Database.Sqlite.SQLiteStatement? CompileStatement (string? sql);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.Sqlite.SQLiteStatement CompileStatement(string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.CompileStatement(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CompileStatement : string -&gt; Android.Database.Sqlite.SQLiteStatement&#xA;override this.CompileStatement : string -&gt; Android.Database.Sqlite.SQLiteStatement" Usage="sQLiteDatabase.CompileStatement sql" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compileStatement", "(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;", "GetCompileStatement_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compileStatement", "(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;", "GetCompileStatement_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">The raw SQL statement, may contain ? for unknown values to be
                       bound later.</param>
        <summary>Compiles an SQL statement into a reusable pre-compiled statement object.</summary>
        <returns>A pre-compiled <c>SQLiteStatement</c> object. Note that
            <c>SQLiteStatement</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#compileStatement(java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Database.SQLException" />
      </Docs>
    </Member>
    <Member MemberName="ConflictAbort">
      <MemberSignature Language="C#" Value="public const Android.Database.Sqlite.Conflict ConflictAbort = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Database.Sqlite.Conflict ConflictAbort = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Database.Sqlite.SQLiteDatabase.ConflictAbort" />
      <MemberSignature Language="F#" Value="val mutable ConflictAbort : Android.Database.Sqlite.Conflict" Usage="Android.Database.Sqlite.SQLiteDatabase.ConflictAbort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONFLICT_ABORT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONFLICT_ABORT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.Conflict</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>When a constraint violation occurs,no ROLLBACK is executed
            so changes from prior commands within the same transaction
            are preserved.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#CONFLICT_ABORT" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.CONFLICT_ABORT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ConflictFail">
      <MemberSignature Language="C#" Value="public const Android.Database.Sqlite.Conflict ConflictFail = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Database.Sqlite.Conflict ConflictFail = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Database.Sqlite.SQLiteDatabase.ConflictFail" />
      <MemberSignature Language="F#" Value="val mutable ConflictFail : Android.Database.Sqlite.Conflict" Usage="Android.Database.Sqlite.SQLiteDatabase.ConflictFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONFLICT_FAIL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONFLICT_FAIL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.Conflict</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>When a constraint violation occurs, the command aborts with a return
            code SQLITE_CONSTRAINT.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#CONFLICT_FAIL" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.CONFLICT_FAIL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ConflictIgnore">
      <MemberSignature Language="C#" Value="public const Android.Database.Sqlite.Conflict ConflictIgnore = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Database.Sqlite.Conflict ConflictIgnore = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Database.Sqlite.SQLiteDatabase.ConflictIgnore" />
      <MemberSignature Language="F#" Value="val mutable ConflictIgnore : Android.Database.Sqlite.Conflict" Usage="Android.Database.Sqlite.SQLiteDatabase.ConflictIgnore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONFLICT_IGNORE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONFLICT_IGNORE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.Conflict</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>When a constraint violation occurs, the one row that contains
            the constraint violation is not inserted or changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#CONFLICT_IGNORE" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.CONFLICT_IGNORE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ConflictNone">
      <MemberSignature Language="C#" Value="public const Android.Database.Sqlite.Conflict ConflictNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Database.Sqlite.Conflict ConflictNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Database.Sqlite.SQLiteDatabase.ConflictNone" />
      <MemberSignature Language="F#" Value="val mutable ConflictNone : Android.Database.Sqlite.Conflict" Usage="Android.Database.Sqlite.SQLiteDatabase.ConflictNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONFLICT_NONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONFLICT_NONE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.Conflict</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Use the following when no conflict action is specified.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#CONFLICT_NONE" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.CONFLICT_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ConflictReplace">
      <MemberSignature Language="C#" Value="public const Android.Database.Sqlite.Conflict ConflictReplace = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Database.Sqlite.Conflict ConflictReplace = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Database.Sqlite.SQLiteDatabase.ConflictReplace" />
      <MemberSignature Language="F#" Value="val mutable ConflictReplace : Android.Database.Sqlite.Conflict" Usage="Android.Database.Sqlite.SQLiteDatabase.ConflictReplace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONFLICT_REPLACE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONFLICT_REPLACE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.Conflict</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>When a UNIQUE constraint violation occurs, the pre-existing rows that
            are causing the constraint violation are removed prior to inserting
            or updating the current row.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#CONFLICT_REPLACE" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.CONFLICT_REPLACE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ConflictRollback">
      <MemberSignature Language="C#" Value="public const Android.Database.Sqlite.Conflict ConflictRollback = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Database.Sqlite.Conflict ConflictRollback = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Database.Sqlite.SQLiteDatabase.ConflictRollback" />
      <MemberSignature Language="F#" Value="val mutable ConflictRollback : Android.Database.Sqlite.Conflict" Usage="Android.Database.Sqlite.SQLiteDatabase.ConflictRollback" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONFLICT_ROLLBACK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONFLICT_ROLLBACK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Database.Sqlite.Conflict enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.Conflict</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>When a constraint violation occurs, an immediate ROLLBACK occurs,
            thus ending the current transaction, and the command aborts with a
            return code of SQLITE_CONSTRAINT.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#CONFLICT_ROLLBACK" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.CONFLICT_ROLLBACK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Database.Sqlite.SQLiteDatabase Create (Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Database.Sqlite.SQLiteDatabase Create(class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Create(Android.Database.Sqlite.SQLiteDatabase.ICursorFactory)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="Android.Database.Sqlite.SQLiteDatabase.Create factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("create", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("create", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
      </Parameters>
      <Docs>
        <param name="factory">an optional factory class that is called to instantiate a
                       cursor when query is called</param>
        <summary>Create a memory backed SQLite database.</summary>
        <returns>a SQLiteDatabase instance</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#create(android.database.sqlite.CursorFactory)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.create(android.database.sqlite.CursorFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateInMemory">
      <MemberSignature Language="C#" Value="public static Android.Database.Sqlite.SQLiteDatabase CreateInMemory (Android.Database.Sqlite.SQLiteDatabase.OpenParams openParams);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Database.Sqlite.SQLiteDatabase CreateInMemory(class Android.Database.Sqlite.SQLiteDatabase/OpenParams openParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.CreateInMemory(Android.Database.Sqlite.SQLiteDatabase.OpenParams)" />
      <MemberSignature Language="F#" Value="static member CreateInMemory : Android.Database.Sqlite.SQLiteDatabase.OpenParams -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="Android.Database.Sqlite.SQLiteDatabase.CreateInMemory openParams" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createInMemory", "(Landroid/database/sqlite/SQLiteDatabase$OpenParams;)Landroid/database/sqlite/SQLiteDatabase;", "", ApiSince=27)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createInMemory", "(Landroid/database/sqlite/SQLiteDatabase$OpenParams;)Landroid/database/sqlite/SQLiteDatabase;", "", ApiSince=27)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openParams" Type="Android.Database.Sqlite.SQLiteDatabase+OpenParams" />
      </Parameters>
      <Docs>
        <param name="openParams">configuration parameters that are used for opening SQLiteDatabase</param>
        <summary>Create a memory backed SQLite database.</summary>
        <returns>a SQLiteDatabase instance</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#createInMemory(android.database.sqlite.OpenParams)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.createInMemory(android.database.sqlite.OpenParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual int Delete (string? table, string? whereClause, string[]? whereArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Delete(string table, string whereClause, string[] whereArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Delete(System.String,System.String,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * string[] -&gt; int&#xA;override this.Delete : string * string * string[] -&gt; int" Usage="sQLiteDatabase.Delete (table, whereClause, whereArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("delete", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I", "GetDelete_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("delete", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I", "GetDelete_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="whereClause" Type="System.String" />
        <Parameter Name="whereArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="table">the table to delete from</param>
        <param name="whereClause">the optional WHERE clause to apply when deleting.
                       Passing null will delete all rows.</param>
        <param name="whereArgs">You may include ?s in the where clause, which
                       will be replaced by the values from whereArgs. The values
                       will be bound as Strings.</param>
        <summary>Convenience method for deleting rows in the database.</summary>
        <returns>the number of rows affected if a whereClause is passed in, 0
                    otherwise. To remove all rows and get a count pass "1" as the
                    whereClause.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#delete(java.lang.String,%20java.lang.String,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.delete(java.lang.String, java.lang.String, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public static bool DeleteDatabase (Java.IO.File file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteDatabase(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.DeleteDatabase(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member DeleteDatabase : Java.IO.File -&gt; bool" Usage="Android.Database.Sqlite.SQLiteDatabase.DeleteDatabase file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteDatabase", "(Ljava/io/File;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteDatabase", "(Ljava/io/File;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">The database file path.</param>
        <summary>Deletes a database including its journal file and other auxiliary files
            that may have been created by the database engine.</summary>
        <returns>True if the database was successfully deleted.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#deleteDatabase(java.io.File)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.deleteDatabase(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DisableWriteAheadLogging">
      <MemberSignature Language="C#" Value="public virtual void DisableWriteAheadLogging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisableWriteAheadLogging() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.DisableWriteAheadLogging" />
      <MemberSignature Language="F#" Value="abstract member DisableWriteAheadLogging : unit -&gt; unit&#xA;override this.DisableWriteAheadLogging : unit -&gt; unit" Usage="sQLiteDatabase.DisableWriteAheadLogging " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("disableWriteAheadLogging", "()V", "GetDisableWriteAheadLoggingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("disableWriteAheadLogging", "()V", "GetDisableWriteAheadLoggingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method disables the features enabled by <c>#enableWriteAheadLogging()</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#disableWriteAheadLogging()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.disableWriteAheadLogging()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if there are transactions in progress at the
 time this method is called.  WAL mode can only be changed when there are no
 transactions in progress.</exception>
        <altmember cref="M:Android.Database.Sqlite.SQLiteDatabase.EnableWriteAheadLogging" />
      </Docs>
    </Member>
    <Member MemberName="EnableWriteAheadLogging">
      <MemberSignature Language="C#" Value="public virtual bool EnableWriteAheadLogging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EnableWriteAheadLogging() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.EnableWriteAheadLogging" />
      <MemberSignature Language="F#" Value="abstract member EnableWriteAheadLogging : unit -&gt; bool&#xA;override this.EnableWriteAheadLogging : unit -&gt; bool" Usage="sQLiteDatabase.EnableWriteAheadLogging " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enableWriteAheadLogging", "()Z", "GetEnableWriteAheadLoggingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enableWriteAheadLogging", "()Z", "GetEnableWriteAheadLoggingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method enables parallel execution of queries from multiple threads on the
            same database.</summary>
        <returns>True if write-ahead logging is enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#enableWriteAheadLogging()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.enableWriteAheadLogging()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalStateException">if there are transactions in progress at the
 time this method is called.  WAL mode can only be changed when there are no
 transactions in progress.</exception>
        <altmember cref="M:Android.Database.Sqlite.SQLiteDatabase.DisableWriteAheadLogging" />
      </Docs>
    </Member>
    <Member MemberName="EndTransaction">
      <MemberSignature Language="C#" Value="public virtual void EndTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.EndTransaction" />
      <MemberSignature Language="F#" Value="abstract member EndTransaction : unit -&gt; unit&#xA;override this.EndTransaction : unit -&gt; unit" Usage="sQLiteDatabase.EndTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endTransaction", "()V", "GetEndTransactionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endTransaction", "()V", "GetEndTransactionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>End a transaction.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#endTransaction()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.endTransaction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExecPerConnectionSQL">
      <MemberSignature Language="C#" Value="public virtual void ExecPerConnectionSQL (string sql, Java.Lang.Object[]? bindArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecPerConnectionSQL(string sql, class Java.Lang.Object[] bindArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.ExecPerConnectionSQL(System.String,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member ExecPerConnectionSQL : string * Java.Lang.Object[] -&gt; unit&#xA;override this.ExecPerConnectionSQL : string * Java.Lang.Object[] -&gt; unit" Usage="sQLiteDatabase.ExecPerConnectionSQL (sql, bindArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("execPerConnectionSQL", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetExecPerConnectionSQL_Ljava_lang_String_arrayLjava_lang_Object_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("execPerConnectionSQL", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetExecPerConnectionSQL_Ljava_lang_String_arrayLjava_lang_Object_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="bindArgs" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="sql">The SQL statement to be executed. Multiple statements
                       separated by semicolons are not supported.</param>
        <param name="bindArgs">The arguments that should be bound to the SQL statement.</param>
        <summary>Execute the given SQL statement on all connections to this database.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#execPerConnectionSQL(java.lang.String,%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.execPerConnectionSQL(java.lang.String, java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecSQL">
      <MemberSignature Language="C#" Value="public virtual void ExecSQL (string? sql);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecSQL(string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.ExecSQL(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ExecSQL : string -&gt; unit&#xA;override this.ExecSQL : string -&gt; unit" Usage="sQLiteDatabase.ExecSQL sql" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("execSQL", "(Ljava/lang/String;)V", "GetExecSQL_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("execSQL", "(Ljava/lang/String;)V", "GetExecSQL_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement to be executed. Multiple statements separated by semicolons are
            not supported.</param>
        <summary>Execute a single SQL statement that is NOT a SELECT
            or any other SQL statement that returns data.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#execSQL(java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Database.SQLException">if the SQL string is invalid
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecSQL">
      <MemberSignature Language="C#" Value="public virtual void ExecSQL (string? sql, Java.Lang.Object[]? bindArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecSQL(string sql, class Java.Lang.Object[] bindArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.ExecSQL(System.String,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member ExecSQL : string * Java.Lang.Object[] -&gt; unit&#xA;override this.ExecSQL : string * Java.Lang.Object[] -&gt; unit" Usage="sQLiteDatabase.ExecSQL (sql, bindArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("execSQL", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetExecSQL_Ljava_lang_String_arrayLjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("execSQL", "(Ljava/lang/String;[Ljava/lang/Object;)V", "GetExecSQL_Ljava_lang_String_arrayLjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="bindArgs" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement to be executed. Multiple statements separated by semicolons are
            not supported.</param>
        <param name="bindArgs">only byte[], String, Long and Double are supported in bindArgs.</param>
        <summary>Execute a single SQL statement that is NOT a SELECT/INSERT/UPDATE/DELETE.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#execSQL(java.lang.String,%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String, java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Database.SQLException">if the SQL string is invalid
</exception>
      </Docs>
    </Member>
    <Member MemberName="FindEditTable">
      <MemberSignature Language="C#" Value="public static string? FindEditTable (string? tables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindEditTable(string tables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.FindEditTable(System.String)" />
      <MemberSignature Language="F#" Value="static member FindEditTable : string -&gt; string" Usage="Android.Database.Sqlite.SQLiteDatabase.FindEditTable tables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findEditTable", "(Ljava/lang/String;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findEditTable", "(Ljava/lang/String;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tables" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tables">a list of tables</param>
        <summary>Finds the name of the first table, which is editable.</summary>
        <returns>the first table listed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#findEditTable(java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.findEditTable(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual long Insert (string? table, string? nullColumnHack, Android.Content.ContentValues? values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Insert(string table, string nullColumnHack, class Android.Content.ContentValues values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Insert(System.String,System.String,Android.Content.ContentValues)" />
      <MemberSignature Language="F#" Value="abstract member Insert : string * string * Android.Content.ContentValues -&gt; int64&#xA;override this.Insert : string * string * Android.Content.ContentValues -&gt; int64" Usage="sQLiteDatabase.Insert (table, nullColumnHack, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insert", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J", "GetInsert_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insert", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J", "GetInsert_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="nullColumnHack" Type="System.String" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
      </Parameters>
      <Docs>
        <param name="table">the table to insert the row into</param>
        <param name="nullColumnHack">optional; may be <c>null</c>.
                       SQL doesn't allow inserting a completely empty row without
                       naming at least one column name.  If your provided <c>values</c> is
                       empty, no column names are known and an empty row can't be inserted.
                       If not set to null, the <c>nullColumnHack</c> parameter
                       provides the name of nullable column name to explicitly insert a NULL into
                       in the case where your <c>values</c> is empty.</param>
        <param name="values">this map contains the initial column values for the
                       row. The keys should be the column names and the values the
                       column values</param>
        <summary>Convenience method for inserting a row into the database.</summary>
        <returns>the row ID of the newly inserted row, or -1 if an error occurred</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#insert(java.lang.String,%20java.lang.String,%20android.content.ContentValues)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.insert(java.lang.String, java.lang.String, android.content.ContentValues)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InsertOrThrow">
      <MemberSignature Language="C#" Value="public virtual long InsertOrThrow (string? table, string? nullColumnHack, Android.Content.ContentValues? values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 InsertOrThrow(string table, string nullColumnHack, class Android.Content.ContentValues values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.InsertOrThrow(System.String,System.String,Android.Content.ContentValues)" />
      <MemberSignature Language="F#" Value="abstract member InsertOrThrow : string * string * Android.Content.ContentValues -&gt; int64&#xA;override this.InsertOrThrow : string * string * Android.Content.ContentValues -&gt; int64" Usage="sQLiteDatabase.InsertOrThrow (table, nullColumnHack, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insertOrThrow", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J", "GetInsertOrThrow_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insertOrThrow", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J", "GetInsertOrThrow_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="nullColumnHack" Type="System.String" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
      </Parameters>
      <Docs>
        <param name="table">the table to insert the row into</param>
        <param name="nullColumnHack">optional; may be <c>null</c>.
                       SQL doesn't allow inserting a completely empty row without
                       naming at least one column name.  If your provided <c>values</c> is
                       empty, no column names are known and an empty row can't be inserted.
                       If not set to null, the <c>nullColumnHack</c> parameter
                       provides the name of nullable column name to explicitly insert a NULL into
                       in the case where your <c>values</c> is empty.</param>
        <param name="values">this map contains the initial column values for the
                       row. The keys should be the column names and the values the
                       column values</param>
        <summary>Convenience method for inserting a row into the database.</summary>
        <returns>the row ID of the newly inserted row, or -1 if an error occurred</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#insertOrThrow(java.lang.String,%20java.lang.String,%20android.content.ContentValues)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.insertOrThrow(java.lang.String, java.lang.String, android.content.ContentValues)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Database.SQLException" />
        <exception cref="T:Android.Database.SQLException" />
      </Docs>
    </Member>
    <Member MemberName="InsertWithOnConflict">
      <MemberSignature Language="C#" Value="public virtual long InsertWithOnConflict (string? table, string? nullColumnHack, Android.Content.ContentValues? initialValues, Android.Database.Sqlite.Conflict conflictAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 InsertWithOnConflict(string table, string nullColumnHack, class Android.Content.ContentValues initialValues, valuetype Android.Database.Sqlite.Conflict conflictAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.InsertWithOnConflict(System.String,System.String,Android.Content.ContentValues,Android.Database.Sqlite.Conflict)" />
      <MemberSignature Language="F#" Value="abstract member InsertWithOnConflict : string * string * Android.Content.ContentValues * Android.Database.Sqlite.Conflict -&gt; int64&#xA;override this.InsertWithOnConflict : string * string * Android.Content.ContentValues * Android.Database.Sqlite.Conflict -&gt; int64" Usage="sQLiteDatabase.InsertWithOnConflict (table, nullColumnHack, initialValues, conflictAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insertWithOnConflict", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;I)J", "GetInsertWithOnConflict_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insertWithOnConflict", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;I)J", "GetInsertWithOnConflict_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="nullColumnHack" Type="System.String" />
        <Parameter Name="initialValues" Type="Android.Content.ContentValues" />
        <Parameter Name="conflictAlgorithm" Type="Android.Database.Sqlite.Conflict">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="table">the table to insert the row into</param>
        <param name="nullColumnHack">optional; may be <c>null</c>.
                       SQL doesn't allow inserting a completely empty row without
                       naming at least one column name.  If your provided <c>initialValues</c> is
                       empty, no column names are known and an empty row can't be inserted.
                       If not set to null, the <c>nullColumnHack</c> parameter
                       provides the name of nullable column name to explicitly insert a NULL into
                       in the case where your <c>initialValues</c> is empty.</param>
        <param name="initialValues">this map contains the initial column values for the
                       row. The keys should be the column names and the values the
                       column values</param>
        <param name="conflictAlgorithm">for insert conflict resolver</param>
        <summary>General method for inserting a row into the database.</summary>
        <returns>the row ID of the newly inserted row OR <c>-1</c> if either the
                       input parameter <c>conflictAlgorithm</c> = <c>#CONFLICT_IGNORE</c>
                       or an error occurred.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#insertWithOnConflict(java.lang.String,%20java.lang.String,%20android.content.ContentValues,%20int)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.insertWithOnConflict(java.lang.String, java.lang.String, android.content.ContentValues, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public virtual bool InTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.InTransaction" />
      <MemberSignature Language="F#" Value="abstract member InTransaction : unit -&gt; bool&#xA;override this.InTransaction : unit -&gt; bool" Usage="sQLiteDatabase.InTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inTransaction", "()Z", "GetInTransactionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inTransaction", "()Z", "GetInTransactionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if the current thread has a transaction pending.</summary>
        <returns>True if the current thread is in a transaction.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#inTransaction()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.inTransaction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDatabaseIntegrityOk">
      <MemberSignature Language="C#" Value="public virtual bool IsDatabaseIntegrityOk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDatabaseIntegrityOk" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.IsDatabaseIntegrityOk" />
      <MemberSignature Language="F#" Value="member this.IsDatabaseIntegrityOk : bool" Usage="Android.Database.Sqlite.SQLiteDatabase.IsDatabaseIntegrityOk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDatabaseIntegrityOk", "()Z", "GetIsDatabaseIntegrityOkHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDatabaseIntegrityOk", "()Z", "GetIsDatabaseIntegrityOkHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Runs 'pragma integrity_check' on the given database (and all the attached databases)
            and returns true if the given database (and all its attached databases) pass integrity_check,
            false otherwise.</summary>
        <value>true if the given database (and all its attached databases) pass integrity_check,
            false otherwise.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#isDatabaseIntegrityOk()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.isDatabaseIntegrityOk()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsDbLockedByCurrentThread">
      <MemberSignature Language="C#" Value="public virtual bool IsDbLockedByCurrentThread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbLockedByCurrentThread" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.IsDbLockedByCurrentThread" />
      <MemberSignature Language="F#" Value="member this.IsDbLockedByCurrentThread : bool" Usage="Android.Database.Sqlite.SQLiteDatabase.IsDbLockedByCurrentThread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDbLockedByCurrentThread", "()Z", "GetIsDbLockedByCurrentThreadHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDbLockedByCurrentThread", "()Z", "GetIsDbLockedByCurrentThreadHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the current thread is holding an active connection to the database.</summary>
        <value>True if the current thread is holding an active connection to the database.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#isDbLockedByCurrentThread()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.isDbLockedByCurrentThread()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDbLockedByOtherThreads">
      <MemberSignature Language="C#" Value="public virtual bool IsDbLockedByOtherThreads { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbLockedByOtherThreads" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.IsDbLockedByOtherThreads" />
      <MemberSignature Language="F#" Value="member this.IsDbLockedByOtherThreads : bool" Usage="Android.Database.Sqlite.SQLiteDatabase.IsDbLockedByOtherThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDbLockedByOtherThreads", "()Z", "GetIsDbLockedByOtherThreadsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDbLockedByOtherThreads", "()Z", "GetIsDbLockedByOtherThreadsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Always returns false.</summary>
        <value>False.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#isDbLockedByOtherThreads()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.isDbLockedByOtherThreads()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public virtual bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.IsOpen" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool" Usage="Android.Database.Sqlite.SQLiteDatabase.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOpen", "()Z", "GetIsOpenHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOpen", "()Z", "GetIsOpenHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the database is currently open.</summary>
        <value>True if the database is currently open (has not been closed).</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#isOpen()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.isOpen()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.IsReadOnly" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Android.Database.Sqlite.SQLiteDatabase.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isReadOnly", "()Z", "GetIsReadOnlyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isReadOnly", "()Z", "GetIsReadOnlyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the database is opened as read only.</summary>
        <value>True if database is opened as read only.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#isReadOnly()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.isReadOnly()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsWriteAheadLoggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsWriteAheadLoggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteAheadLoggingEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.IsWriteAheadLoggingEnabled" />
      <MemberSignature Language="F#" Value="member this.IsWriteAheadLoggingEnabled : bool" Usage="Android.Database.Sqlite.SQLiteDatabase.IsWriteAheadLoggingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isWriteAheadLoggingEnabled", "()Z", "GetIsWriteAheadLoggingEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isWriteAheadLoggingEnabled", "()Z", "GetIsWriteAheadLoggingEnabledHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if write-ahead logging has been enabled for this database.</summary>
        <value>True if write-ahead logging has been enabled for this database.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#isWriteAheadLoggingEnabled()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.isWriteAheadLoggingEnabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Database.Sqlite.SQLiteDatabase.EnableWriteAheadLogging" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Database.Sqlite.SQLiteDatabase.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkTableSyncable">
      <MemberSignature Language="C#" Value="public virtual void MarkTableSyncable (string? table, string? deletedTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MarkTableSyncable(string table, string deletedTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.MarkTableSyncable(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member MarkTableSyncable : string * string -&gt; unit&#xA;override this.MarkTableSyncable : string * string -&gt; unit" Usage="sQLiteDatabase.MarkTableSyncable (table, deletedTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("markTableSyncable", "(Ljava/lang/String;Ljava/lang/String;)V", "GetMarkTableSyncable_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("markTableSyncable", "(Ljava/lang/String;Ljava/lang/String;)V", "GetMarkTableSyncable_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="deletedTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">the table to mark as syncable</param>
        <param name="deletedTable">The deleted table that corresponds to the
                     syncable table</param>
        <summary>Mark this table as syncable.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#markTableSyncable(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.markTableSyncable(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MarkTableSyncable">
      <MemberSignature Language="C#" Value="public virtual void MarkTableSyncable (string? table, string? foreignKey, string? updateTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MarkTableSyncable(string table, string foreignKey, string updateTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.MarkTableSyncable(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member MarkTableSyncable : string * string * string -&gt; unit&#xA;override this.MarkTableSyncable : string * string * string -&gt; unit" Usage="sQLiteDatabase.MarkTableSyncable (table, foreignKey, updateTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("markTableSyncable", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetMarkTableSyncable_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("markTableSyncable", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetMarkTableSyncable_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="foreignKey" Type="System.String" />
        <Parameter Name="updateTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">an update on this table will trigger a sync time removal</param>
        <param name="foreignKey">this is the column in table whose value is an _id in
                     updateTable</param>
        <param name="updateTable">this is the table that will have its _sync_dirty</param>
        <summary>Mark this table as syncable, with the _sync_dirty residing in another
            table.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#markTableSyncable(java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.markTableSyncable(java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public virtual long MaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumSize" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.MaximumSize" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : int64" Usage="Android.Database.Sqlite.SQLiteDatabase.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaximumSize", "()J", "GetGetMaximumSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaximumSize", "()J", "GetGetMaximumSizeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum size the database may grow to.</summary>
        <value>the new maximum database size</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#getMaximumSize()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.getMaximumSize()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxSqlCacheSize">
      <MemberSignature Language="C#" Value="public const int MaxSqlCacheSize = 100;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxSqlCacheSize = (100)" />
      <MemberSignature Language="DocId" Value="F:Android.Database.Sqlite.SQLiteDatabase.MaxSqlCacheSize" />
      <MemberSignature Language="F#" Value="val mutable MaxSqlCacheSize : int" Usage="Android.Database.Sqlite.SQLiteDatabase.MaxSqlCacheSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_SQL_CACHE_SIZE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_SQL_CACHE_SIZE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>100</MemberValue>
      <Docs>
        <summary>Absolute max value that can be set by <c>#setMaxSqlCacheSize(int)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#MAX_SQL_CACHE_SIZE" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.MAX_SQL_CACHE_SIZE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NeedUpgrade">
      <MemberSignature Language="C#" Value="public virtual bool NeedUpgrade (int newVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NeedUpgrade(int32 newVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.NeedUpgrade(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member NeedUpgrade : int -&gt; bool&#xA;override this.NeedUpgrade : int -&gt; bool" Usage="sQLiteDatabase.NeedUpgrade newVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("needUpgrade", "(I)Z", "GetNeedUpgrade_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("needUpgrade", "(I)Z", "GetNeedUpgrade_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newVersion" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newVersion">The new version code.</param>
        <summary>Returns true if the new version code is greater than the current database version.</summary>
        <returns>True if the new version code is greater than the current database version.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#needUpgrade(int)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.needUpgrade(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnAllReferencesReleased">
      <MemberSignature Language="C#" Value="protected override void OnAllReferencesReleased ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAllReferencesReleased() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.OnAllReferencesReleased" />
      <MemberSignature Language="F#" Value="override this.OnAllReferencesReleased : unit -&gt; unit" Usage="sQLiteDatabase.OnAllReferencesReleased " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAllReferencesReleased", "()V", "GetOnAllReferencesReleasedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAllReferencesReleased", "()V", "GetOnAllReferencesReleasedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the last reference to the object was released by
 a call to <see cref="M:Android.Database.Sqlite.SQLiteClosable.ReleaseReference" /> or <see cref="M:Android.Database.Sqlite.SQLiteClosable.Close" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public static Android.Database.Sqlite.SQLiteDatabase? OpenDatabase (Java.IO.File path, Android.Database.Sqlite.SQLiteDatabase.OpenParams openParams);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Database.Sqlite.SQLiteDatabase OpenDatabase(class Java.IO.File path, class Android.Database.Sqlite.SQLiteDatabase/OpenParams openParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.OpenDatabase(Java.IO.File,Android.Database.Sqlite.SQLiteDatabase.OpenParams)" />
      <MemberSignature Language="F#" Value="static member OpenDatabase : Java.IO.File * Android.Database.Sqlite.SQLiteDatabase.OpenParams -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="Android.Database.Sqlite.SQLiteDatabase.OpenDatabase (path, openParams)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openDatabase", "(Ljava/io/File;Landroid/database/sqlite/SQLiteDatabase$OpenParams;)Landroid/database/sqlite/SQLiteDatabase;", "", ApiSince=27)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openDatabase", "(Ljava/io/File;Landroid/database/sqlite/SQLiteDatabase$OpenParams;)Landroid/database/sqlite/SQLiteDatabase;", "", ApiSince=27)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
        <Parameter Name="openParams" Type="Android.Database.Sqlite.SQLiteDatabase+OpenParams" />
      </Parameters>
      <Docs>
        <param name="path">path to database file to open and/or create.
            &lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The file should be constructed either from an absolute path or
            by using <c>android.content.Context#getDatabasePath(String)</c>.</param>
        <param name="openParams">configuration parameters that are used for opening <c>SQLiteDatabase</c></param>
        <summary>Open the database according to the specified <c>OpenParams parameters</c></summary>
        <returns>the newly opened database</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#openDatabase(java.io.File,%20android.database.sqlite.OpenParams)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.openDatabase(java.io.File, android.database.sqlite.OpenParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public static Android.Database.Sqlite.SQLiteDatabase? OpenDatabase (string path, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? factory, Android.Database.Sqlite.DatabaseOpenFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Database.Sqlite.SQLiteDatabase OpenDatabase(string path, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory, valuetype Android.Database.Sqlite.DatabaseOpenFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.OpenDatabase(System.String,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,Android.Database.Sqlite.DatabaseOpenFlags)" />
      <MemberSignature Language="F#" Value="static member OpenDatabase : string * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * Android.Database.Sqlite.DatabaseOpenFlags -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="Android.Database.Sqlite.SQLiteDatabase.OpenDatabase (path, factory, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openDatabase", "(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openDatabase", "(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="flags" Type="Android.Database.Sqlite.DatabaseOpenFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">path to database file to open and/or create.
            &lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The file should be constructed either from an absolute path or
            by using <c>android.content.Context#getDatabasePath(String)</c>.</param>
        <param name="factory">an optional factory class that is called to instantiate a
            cursor when query is called, or null for default</param>
        <param name="flags">to control database access mode</param>
        <summary>Open the database according to the specified <c>OpenParams parameters</c></summary>
        <returns>the newly opened database</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#openDatabase(java.io.File,%20android.database.sqlite.OpenParams)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.openDatabase(java.io.File, android.database.sqlite.OpenParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Database.Sqlite.SQLiteException">if the database cannot be opened
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public static Android.Database.Sqlite.SQLiteDatabase? OpenDatabase (string path, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? factory, Android.Database.Sqlite.DatabaseOpenFlags flags, Android.Database.IDatabaseErrorHandler? errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Database.Sqlite.SQLiteDatabase OpenDatabase(string path, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory, valuetype Android.Database.Sqlite.DatabaseOpenFlags flags, class Android.Database.IDatabaseErrorHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.OpenDatabase(System.String,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,Android.Database.Sqlite.DatabaseOpenFlags,Android.Database.IDatabaseErrorHandler)" />
      <MemberSignature Language="F#" Value="static member OpenDatabase : string * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * Android.Database.Sqlite.DatabaseOpenFlags * Android.Database.IDatabaseErrorHandler -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="Android.Database.Sqlite.SQLiteDatabase.OpenDatabase (path, factory, flags, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openDatabase", "(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILandroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openDatabase", "(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILandroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="flags" Type="Android.Database.Sqlite.DatabaseOpenFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="errorHandler" Type="Android.Database.IDatabaseErrorHandler" />
      </Parameters>
      <Docs>
        <param name="path">path to database file to open and/or create.
            &lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The file should be constructed either from an absolute path or
            by using <c>android.content.Context#getDatabasePath(String)</c>.</param>
        <param name="factory">an optional factory class that is called to instantiate a
            cursor when query is called, or null for default</param>
        <param name="flags">to control database access mode</param>
        <param name="errorHandler">the <see cref="T:Android.Database.IDatabaseErrorHandler" /> obj to be used to handle corruption
 when sqlite reports database corruption</param>
        <summary>Open the database according to the specified <c>OpenParams parameters</c></summary>
        <returns>the newly opened database</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#openDatabase(java.io.File,%20android.database.sqlite.OpenParams)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.openDatabase(java.io.File, android.database.sqlite.OpenParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Android.Database.Sqlite.SQLiteException">if the database cannot be opened
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreateDatabase">
      <MemberSignature Language="C#" Value="public static Android.Database.Sqlite.SQLiteDatabase? OpenOrCreateDatabase (Java.IO.File file, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(class Java.IO.File file, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.OpenOrCreateDatabase(Java.IO.File,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory)" />
      <MemberSignature Language="F#" Value="static member OpenOrCreateDatabase : Java.IO.File * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="Android.Database.Sqlite.SQLiteDatabase.OpenOrCreateDatabase (file, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openOrCreateDatabase", "(Ljava/io/File;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openOrCreateDatabase", "(Ljava/io/File;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <param name="factory">To be added.</param>
        <summary>Equivalent to openDatabase(file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#openOrCreateDatabase(java.io.File,%20android.database.sqlite.CursorFactory)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(java.io.File, android.database.sqlite.CursorFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreateDatabase">
      <MemberSignature Language="C#" Value="public static Android.Database.Sqlite.SQLiteDatabase? OpenOrCreateDatabase (string path, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(string path, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.OpenOrCreateDatabase(System.String,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory)" />
      <MemberSignature Language="F#" Value="static member OpenOrCreateDatabase : string * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="Android.Database.Sqlite.SQLiteDatabase.OpenOrCreateDatabase (path, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openOrCreateDatabase", "(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openOrCreateDatabase", "(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="factory">To be added.</param>
        <summary>Equivalent to openDatabase(file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#openOrCreateDatabase(java.io.File,%20android.database.sqlite.CursorFactory)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(java.io.File, android.database.sqlite.CursorFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreateDatabase">
      <MemberSignature Language="C#" Value="public static Android.Database.Sqlite.SQLiteDatabase? OpenOrCreateDatabase (string path, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? factory, Android.Database.IDatabaseErrorHandler? errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(string path, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory, class Android.Database.IDatabaseErrorHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.OpenOrCreateDatabase(System.String,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,Android.Database.IDatabaseErrorHandler)" />
      <MemberSignature Language="F#" Value="static member OpenOrCreateDatabase : string * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * Android.Database.IDatabaseErrorHandler -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="Android.Database.Sqlite.SQLiteDatabase.OpenOrCreateDatabase (path, factory, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openOrCreateDatabase", "(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Landroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openOrCreateDatabase", "(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Landroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="errorHandler" Type="Android.Database.IDatabaseErrorHandler" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="factory">To be added.</param>
        <param name="errorHandler">To be added.</param>
        <summary>Equivalent to openDatabase(file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#openOrCreateDatabase(java.io.File,%20android.database.sqlite.CursorFactory)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(java.io.File, android.database.sqlite.CursorFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual long PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PageSize" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.PageSize" />
      <MemberSignature Language="F#" Value="member this.PageSize : int64 with get, set" Usage="Android.Database.Sqlite.SQLiteDatabase.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPageSize", "()J", "GetGetPageSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPageSize", "()J", "GetGetPageSizeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPageSize", "(J)V", "GetSetPageSize_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPageSize", "(J)V", "GetSetPageSize_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="numBytes">the database page size, in bytes</param>
        <summary>Returns the current database page size, in bytes. -or- Sets the database page size.</summary>
        <value>the database page size, in bytes</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#getPageSize()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.getPageSize()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setPageSize(long)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setPageSize(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string? Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.Path" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="Android.Database.Sqlite.SQLiteDatabase.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPath", "()Ljava/lang/String;", "GetGetPathHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPath", "()Ljava/lang/String;", "GetGetPathHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the path to the database file.</summary>
        <value>The path to the database file.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#getPath()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.getPath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? Query (string? table, string[]? columns, string? selection, string[]? selectionArgs, string? groupBy, string? having, string? orderBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor Query(string table, string[] columns, string selection, string[] selectionArgs, string groupBy, string having, string orderBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Query(System.String,System.String[],System.String,System.String[],System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Query : string * string[] * string * string[] * string * string * string -&gt; Android.Database.ICursor&#xA;override this.Query : string * string[] * string * string[] * string * string * string -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.Query (table, columns, selection, selectionArgs, groupBy, having, orderBy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("query", "(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("query", "(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">The table name to compile the query against.</param>
        <param name="columns">A list of which columns to return. Passing null will
                       return all columns, which is discouraged to prevent reading
                       data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
                       SQL WHERE clause (excluding the WHERE itself). Passing null
                       will return all rows for the given table.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
                    replaced by the values from selectionArgs, in order that they
                    appear in the selection. The values will be bound as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted as an SQL
                       GROUP BY clause (excluding the GROUP BY itself). Passing null
                       will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in the cursor,
                       if row grouping is being used, formatted as an SQL HAVING
                       clause (excluding the HAVING itself). Passing null will cause
                       all row groups to be included, and is required when row
                       grouping is not being used.</param>
        <param name="orderBy">How to order the rows, formatted as an SQL ORDER BY clause
                       (excluding the ORDER BY itself). Passing null will use the
                       default sort order, which may be unordered.</param>
        <summary>Query the given table, returning a <c>Cursor</c> over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#query(java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? Query (string? table, string[]? columns, string? selection, string[]? selectionArgs, string? groupBy, string? having, string? orderBy, string? limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor Query(string table, string[] columns, string selection, string[] selectionArgs, string groupBy, string having, string orderBy, string limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Query(System.String,System.String[],System.String,System.String[],System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Query : string * string[] * string * string[] * string * string * string * string -&gt; Android.Database.ICursor&#xA;override this.Query : string * string[] * string * string[] * string * string * string * string -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.Query (table, columns, selection, selectionArgs, groupBy, having, orderBy, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("query", "(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("query", "(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">The table name to compile the query against.</param>
        <param name="columns">A list of which columns to return. Passing null will
                       return all columns, which is discouraged to prevent reading
                       data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
                       SQL WHERE clause (excluding the WHERE itself). Passing null
                       will return all rows for the given table.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
                    replaced by the values from selectionArgs, in order that they
                    appear in the selection. The values will be bound as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted as an SQL
                       GROUP BY clause (excluding the GROUP BY itself). Passing null
                       will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in the cursor,
                       if row grouping is being used, formatted as an SQL HAVING
                       clause (excluding the HAVING itself). Passing null will cause
                       all row groups to be included, and is required when row
                       grouping is not being used.</param>
        <param name="orderBy">How to order the rows, formatted as an SQL ORDER BY clause
                       (excluding the ORDER BY itself). Passing null will use the
                       default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
                       formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <summary>Query the given table, returning a <c>Cursor</c> over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#query(java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? Query (bool distinct, string? table, string[]? columns, string? selection, string[]? selectionArgs, string? groupBy, string? having, string? orderBy, string? limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor Query(bool distinct, string table, string[] columns, string selection, string[] selectionArgs, string groupBy, string having, string orderBy, string limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Query(System.Boolean,System.String,System.String[],System.String,System.String[],System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Query : bool * string * string[] * string * string[] * string * string * string * string -&gt; Android.Database.ICursor&#xA;override this.Query : bool * string * string[] * string * string[] * string * string * string * string -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.Query (distinct, table, columns, selection, selectionArgs, groupBy, having, orderBy, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("query", "(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_ZLjava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("query", "(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_ZLjava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distinct" Type="System.Boolean" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="distinct">true if you want each row to be unique, false otherwise.</param>
        <param name="table">The table name to compile the query against.</param>
        <param name="columns">A list of which columns to return. Passing null will
                       return all columns, which is discouraged to prevent reading
                       data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
                       SQL WHERE clause (excluding the WHERE itself). Passing null
                       will return all rows for the given table.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
                    replaced by the values from selectionArgs, in order that they
                    appear in the selection. The values will be bound as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted as an SQL
                       GROUP BY clause (excluding the GROUP BY itself). Passing null
                       will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in the cursor,
                       if row grouping is being used, formatted as an SQL HAVING
                       clause (excluding the HAVING itself). Passing null will cause
                       all row groups to be included, and is required when row
                       grouping is not being used.</param>
        <param name="orderBy">How to order the rows, formatted as an SQL ORDER BY clause
                       (excluding the ORDER BY itself). Passing null will use the
                       default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
                       formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <summary>Query the given URL, returning a <c>Cursor</c> over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#query(boolean,%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.query(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? Query (bool distinct, string? table, string[]? columns, string? selection, string[]? selectionArgs, string? groupBy, string? having, string? orderBy, string? limit, Android.OS.CancellationSignal? cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor Query(bool distinct, string table, string[] columns, string selection, string[] selectionArgs, string groupBy, string having, string orderBy, string limit, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Query(System.Boolean,System.String,System.String[],System.String,System.String[],System.String,System.String,System.String,System.String,Android.OS.CancellationSignal)" />
      <MemberSignature Language="F#" Value="abstract member Query : bool * string * string[] * string * string[] * string * string * string * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor&#xA;override this.Query : bool * string * string[] * string * string[] * string * string * string * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.Query (distinct, table, columns, selection, selectionArgs, groupBy, having, orderBy, limit, cancellationSignal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("query", "(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetQuery_ZLjava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Landroid_os_CancellationSignal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("query", "(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetQuery_ZLjava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Landroid_os_CancellationSignal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distinct" Type="System.Boolean" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="distinct">true if you want each row to be unique, false otherwise.</param>
        <param name="table">The table name to compile the query against.</param>
        <param name="columns">A list of which columns to return. Passing null will
                       return all columns, which is discouraged to prevent reading
                       data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
                       SQL WHERE clause (excluding the WHERE itself). Passing null
                       will return all rows for the given table.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
                    replaced by the values from selectionArgs, in order that they
                    appear in the selection. The values will be bound as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted as an SQL
                       GROUP BY clause (excluding the GROUP BY itself). Passing null
                       will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in the cursor,
                       if row grouping is being used, formatted as an SQL HAVING
                       clause (excluding the HAVING itself). Passing null will cause
                       all row groups to be included, and is required when row
                       grouping is not being used.</param>
        <param name="orderBy">How to order the rows, formatted as an SQL ORDER BY clause
                       (excluding the ORDER BY itself). Passing null will use the
                       default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
                       formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if none.
            If the operation is canceled, then <c>OperationCanceledException</c> will be thrown
            when the query is executed.</param>
        <summary>Query the given URL, returning a <c>Cursor</c> over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#query(boolean,%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20android.os.CancellationSignal)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.query(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.CancellationSignal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryWithFactory">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? QueryWithFactory (Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? cursorFactory, bool distinct, string? table, string[]? columns, string? selection, string[]? selectionArgs, string? groupBy, string? having, string? orderBy, string? limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor QueryWithFactory(class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory cursorFactory, bool distinct, string table, string[] columns, string selection, string[] selectionArgs, string groupBy, string having, string orderBy, string limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.QueryWithFactory(Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,System.Boolean,System.String,System.String[],System.String,System.String[],System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member QueryWithFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * bool * string * string[] * string * string[] * string * string * string * string -&gt; Android.Database.ICursor&#xA;override this.QueryWithFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * bool * string * string[] * string * string[] * string * string * string * string -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.QueryWithFactory (cursorFactory, distinct, table, columns, selection, selectionArgs, groupBy, having, orderBy, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryWithFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQueryWithFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_ZLjava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryWithFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQueryWithFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_ZLjava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorFactory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="distinct" Type="System.Boolean" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cursorFactory">the cursor factory to use, or null for the default factory</param>
        <param name="distinct">true if you want each row to be unique, false otherwise.</param>
        <param name="table">The table name to compile the query against.</param>
        <param name="columns">A list of which columns to return. Passing null will
                       return all columns, which is discouraged to prevent reading
                       data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
                       SQL WHERE clause (excluding the WHERE itself). Passing null
                       will return all rows for the given table.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
                    replaced by the values from selectionArgs, in order that they
                    appear in the selection. The values will be bound as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted as an SQL
                       GROUP BY clause (excluding the GROUP BY itself). Passing null
                       will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in the cursor,
                       if row grouping is being used, formatted as an SQL HAVING
                       clause (excluding the HAVING itself). Passing null will cause
                       all row groups to be included, and is required when row
                       grouping is not being used.</param>
        <param name="orderBy">How to order the rows, formatted as an SQL ORDER BY clause
                       (excluding the ORDER BY itself). Passing null will use the
                       default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
                       formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <summary>Query the given URL, returning a <c>Cursor</c> over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#queryWithFactory(android.database.sqlite.CursorFactory,%20boolean,%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.queryWithFactory(android.database.sqlite.CursorFactory, boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryWithFactory">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? QueryWithFactory (Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? cursorFactory, bool distinct, string? table, string[]? columns, string? selection, string[]? selectionArgs, string? groupBy, string? having, string? orderBy, string? limit, Android.OS.CancellationSignal? cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor QueryWithFactory(class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory cursorFactory, bool distinct, string table, string[] columns, string selection, string[] selectionArgs, string groupBy, string having, string orderBy, string limit, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.QueryWithFactory(Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,System.Boolean,System.String,System.String[],System.String,System.String[],System.String,System.String,System.String,System.String,Android.OS.CancellationSignal)" />
      <MemberSignature Language="F#" Value="abstract member QueryWithFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * bool * string * string[] * string * string[] * string * string * string * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor&#xA;override this.QueryWithFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * bool * string * string[] * string * string[] * string * string * string * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.QueryWithFactory (cursorFactory, distinct, table, columns, selection, selectionArgs, groupBy, having, orderBy, limit, cancellationSignal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryWithFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetQueryWithFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_ZLjava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Landroid_os_CancellationSignal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryWithFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetQueryWithFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_ZLjava_lang_String_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Landroid_os_CancellationSignal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorFactory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="distinct" Type="System.Boolean" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="cursorFactory">the cursor factory to use, or null for the default factory</param>
        <param name="distinct">true if you want each row to be unique, false otherwise.</param>
        <param name="table">The table name to compile the query against.</param>
        <param name="columns">A list of which columns to return. Passing null will
                       return all columns, which is discouraged to prevent reading
                       data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
                       SQL WHERE clause (excluding the WHERE itself). Passing null
                       will return all rows for the given table.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
                    replaced by the values from selectionArgs, in order that they
                    appear in the selection. The values will be bound as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted as an SQL
                       GROUP BY clause (excluding the GROUP BY itself). Passing null
                       will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in the cursor,
                       if row grouping is being used, formatted as an SQL HAVING
                       clause (excluding the HAVING itself). Passing null will cause
                       all row groups to be included, and is required when row
                       grouping is not being used.</param>
        <param name="orderBy">How to order the rows, formatted as an SQL ORDER BY clause
                       (excluding the ORDER BY itself). Passing null will use the
                       default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
                       formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if none.
 If the operation is canceled, then <see cref="T:Android.OS.OperationCanceledException" /> will be thrown
 when the query is executed.</param>
        <summary>Query the given URL, returning a <c>Cursor</c> over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#queryWithFactory(android.database.sqlite.CursorFactory,%20boolean,%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String[],%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.queryWithFactory(android.database.sqlite.CursorFactory, boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="RawQuery">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? RawQuery (string? sql, string[]? selectionArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor RawQuery(string sql, string[] selectionArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.RawQuery(System.String,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member RawQuery : string * string[] -&gt; Android.Database.ICursor&#xA;override this.RawQuery : string * string[] -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.RawQuery (sql, selectionArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rawQuery", "(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;", "GetRawQuery_Ljava_lang_String_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rawQuery", "(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;", "GetRawQuery_Ljava_lang_String_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL query. The SQL string must not be ; terminated</param>
        <param name="selectionArgs">You may include ?s in where clause in the query,
                which will be replaced by the values from selectionArgs. The
                values will be bound as Strings.</param>
        <summary>Runs the provided SQL and returns a <c>Cursor</c> over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#rawQuery(java.lang.String,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RawQuery">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? RawQuery (string? sql, string[]? selectionArgs, Android.OS.CancellationSignal? cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor RawQuery(string sql, string[] selectionArgs, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.RawQuery(System.String,System.String[],Android.OS.CancellationSignal)" />
      <MemberSignature Language="F#" Value="abstract member RawQuery : string * string[] * Android.OS.CancellationSignal -&gt; Android.Database.ICursor&#xA;override this.RawQuery : string * string[] * Android.OS.CancellationSignal -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.RawQuery (sql, selectionArgs, cancellationSignal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rawQuery", "(Ljava/lang/String;[Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetRawQuery_Ljava_lang_String_arrayLjava_lang_String_Landroid_os_CancellationSignal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rawQuery", "(Ljava/lang/String;[Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetRawQuery_Ljava_lang_String_arrayLjava_lang_String_Landroid_os_CancellationSignal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL query. The SQL string must not be ; terminated</param>
        <param name="selectionArgs">You may include ?s in where clause in the query,
                which will be replaced by the values from selectionArgs. The
                values will be bound as Strings.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if none.
            If the operation is canceled, then <c>OperationCanceledException</c> will be thrown
            when the query is executed.</param>
        <summary>Runs the provided SQL and returns a <c>Cursor</c> over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#rawQuery(java.lang.String,%20java.lang.String[],%20android.os.CancellationSignal)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String, java.lang.String[], android.os.CancellationSignal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RawQueryWithFactory">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? RawQueryWithFactory (Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? cursorFactory, string? sql, string[]? selectionArgs, string? editTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor RawQueryWithFactory(class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory cursorFactory, string sql, string[] selectionArgs, string editTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.RawQueryWithFactory(Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,System.String,System.String[],System.String)" />
      <MemberSignature Language="F#" Value="abstract member RawQueryWithFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * string * string[] * string -&gt; Android.Database.ICursor&#xA;override this.RawQueryWithFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * string * string[] * string -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.RawQueryWithFactory (cursorFactory, sql, selectionArgs, editTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rawQueryWithFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetRawQueryWithFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rawQueryWithFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetRawQueryWithFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorFactory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="editTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cursorFactory">the cursor factory to use, or null for the default factory</param>
        <param name="sql">the SQL query. The SQL string must not be ; terminated</param>
        <param name="selectionArgs">You may include ?s in where clause in the query,
                which will be replaced by the values from selectionArgs. The
                values will be bound as Strings.</param>
        <param name="editTable">the name of the first table, which is editable</param>
        <summary>Runs the provided SQL and returns a cursor over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#rawQueryWithFactory(android.database.sqlite.CursorFactory,%20java.lang.String,%20java.lang.String[],%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(android.database.sqlite.CursorFactory, java.lang.String, java.lang.String[], java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RawQueryWithFactory">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor? RawQueryWithFactory (Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? cursorFactory, string? sql, string[]? selectionArgs, string? editTable, Android.OS.CancellationSignal? cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor RawQueryWithFactory(class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory cursorFactory, string sql, string[] selectionArgs, string editTable, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.RawQueryWithFactory(Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,System.String,System.String[],System.String,Android.OS.CancellationSignal)" />
      <MemberSignature Language="F#" Value="abstract member RawQueryWithFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * string * string[] * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor&#xA;override this.RawQueryWithFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * string * string[] * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor" Usage="sQLiteDatabase.RawQueryWithFactory (cursorFactory, sql, selectionArgs, editTable, cancellationSignal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rawQueryWithFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetRawQueryWithFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Landroid_os_CancellationSignal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rawQueryWithFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetRawQueryWithFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Landroid_os_CancellationSignal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorFactory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="editTable" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="cursorFactory">the cursor factory to use, or null for the default factory</param>
        <param name="sql">the SQL query. The SQL string must not be ; terminated</param>
        <param name="selectionArgs">You may include ?s in where clause in the query,
                which will be replaced by the values from selectionArgs. The
                values will be bound as Strings.</param>
        <param name="editTable">the name of the first table, which is editable</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if none.
 If the operation is canceled, then <see cref="T:Android.OS.OperationCanceledException" /> will be thrown
 when the query is executed.</param>
        <summary>Runs the provided SQL and returns a cursor over the result set.</summary>
        <returns>A <c>Cursor</c> object, which is positioned before the first entry. Note that
            <c>Cursor</c>s are not synchronized, see the documentation for more details.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#rawQueryWithFactory(android.database.sqlite.CursorFactory,%20java.lang.String,%20java.lang.String[],%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(android.database.sqlite.CursorFactory, java.lang.String, java.lang.String[], java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseMemory">
      <MemberSignature Language="C#" Value="public static int ReleaseMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReleaseMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.ReleaseMemory" />
      <MemberSignature Language="F#" Value="static member ReleaseMemory : unit -&gt; int" Usage="Android.Database.Sqlite.SQLiteDatabase.ReleaseMemory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("releaseMemory", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("releaseMemory", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Attempts to release memory that SQLite holds but does not require to
            operate properly.</summary>
        <returns>the number of bytes actually released</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#releaseMemory()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.releaseMemory()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual long Replace (string? table, string? nullColumnHack, Android.Content.ContentValues? initialValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Replace(string table, string nullColumnHack, class Android.Content.ContentValues initialValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Replace(System.String,System.String,Android.Content.ContentValues)" />
      <MemberSignature Language="F#" Value="abstract member Replace : string * string * Android.Content.ContentValues -&gt; int64&#xA;override this.Replace : string * string * Android.Content.ContentValues -&gt; int64" Usage="sQLiteDatabase.Replace (table, nullColumnHack, initialValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replace", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J", "GetReplace_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replace", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J", "GetReplace_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="nullColumnHack" Type="System.String" />
        <Parameter Name="initialValues" Type="Android.Content.ContentValues" />
      </Parameters>
      <Docs>
        <param name="table">the table in which to replace the row</param>
        <param name="nullColumnHack">optional; may be <c>null</c>.
                       SQL doesn't allow inserting a completely empty row without
                       naming at least one column name.  If your provided <c>initialValues</c> is
                       empty, no column names are known and an empty row can't be inserted.
                       If not set to null, the <c>nullColumnHack</c> parameter
                       provides the name of nullable column name to explicitly insert a NULL into
                       in the case where your <c>initialValues</c> is empty.</param>
        <param name="initialValues">this map contains the initial column values for
              the row. The keys should be the column names and the values the column values.</param>
        <summary>Convenience method for replacing a row in the database.</summary>
        <returns>the row ID of the newly inserted row, or -1 if an error occurred</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#replace(java.lang.String,%20java.lang.String,%20android.content.ContentValues)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.replace(java.lang.String, java.lang.String, android.content.ContentValues)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceOrThrow">
      <MemberSignature Language="C#" Value="public virtual long ReplaceOrThrow (string? table, string? nullColumnHack, Android.Content.ContentValues? initialValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReplaceOrThrow(string table, string nullColumnHack, class Android.Content.ContentValues initialValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.ReplaceOrThrow(System.String,System.String,Android.Content.ContentValues)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceOrThrow : string * string * Android.Content.ContentValues -&gt; int64&#xA;override this.ReplaceOrThrow : string * string * Android.Content.ContentValues -&gt; int64" Usage="sQLiteDatabase.ReplaceOrThrow (table, nullColumnHack, initialValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replaceOrThrow", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J", "GetReplaceOrThrow_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replaceOrThrow", "(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J", "GetReplaceOrThrow_Ljava_lang_String_Ljava_lang_String_Landroid_content_ContentValues_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="nullColumnHack" Type="System.String" />
        <Parameter Name="initialValues" Type="Android.Content.ContentValues" />
      </Parameters>
      <Docs>
        <param name="table">the table in which to replace the row</param>
        <param name="nullColumnHack">optional; may be <c>null</c>.
                       SQL doesn't allow inserting a completely empty row without
                       naming at least one column name.  If your provided <c>initialValues</c> is
                       empty, no column names are known and an empty row can't be inserted.
                       If not set to null, the <c>nullColumnHack</c> parameter
                       provides the name of nullable column name to explicitly insert a NULL into
                       in the case where your <c>initialValues</c> is empty.</param>
        <param name="initialValues">this map contains the initial column values for
              the row. The keys should be the column names and the values the column values.</param>
        <summary>Convenience method for replacing a row in the database.</summary>
        <returns>the row ID of the newly inserted row, or -1 if an error occurred</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#replaceOrThrow(java.lang.String,%20java.lang.String,%20android.content.ContentValues)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.replaceOrThrow(java.lang.String, java.lang.String, android.content.ContentValues)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Database.SQLException" />
        <exception cref="T:Android.Database.SQLException" />
      </Docs>
    </Member>
    <Member MemberName="SetCustomAggregateFunction">
      <MemberSignature Language="C#" Value="public virtual void SetCustomAggregateFunction (string functionName, Java.Util.Functions.IBinaryOperator aggregateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCustomAggregateFunction(string functionName, class Java.Util.Functions.IBinaryOperator aggregateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.SetCustomAggregateFunction(System.String,Java.Util.Functions.IBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member SetCustomAggregateFunction : string * Java.Util.Functions.IBinaryOperator -&gt; unit&#xA;override this.SetCustomAggregateFunction : string * Java.Util.Functions.IBinaryOperator -&gt; unit" Usage="sQLiteDatabase.SetCustomAggregateFunction (functionName, aggregateFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCustomAggregateFunction", "(Ljava/lang/String;Ljava/util/function/BinaryOperator;)V", "GetSetCustomAggregateFunction_Ljava_lang_String_Ljava_util_function_BinaryOperator_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCustomAggregateFunction", "(Ljava/lang/String;Ljava/util/function/BinaryOperator;)V", "GetSetCustomAggregateFunction_Ljava_lang_String_Ljava_util_function_BinaryOperator_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="aggregateFunction" Type="Java.Util.Functions.IBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="functionName">Case-insensitive name to register this function
                       under, limited to 255 UTF-8 bytes in length.</param>
        <param name="aggregateFunction">Functional interface that will be invoked when
                       the function name is used by a SQL statement. The argument
                       values from the SQL statement are passed to the functional
                       interface, and the return values from the functional interface
                       are returned back into the SQL statement.</param>
        <summary>Register a custom aggregate function that can be called from SQL
            expressions.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setCustomAggregateFunction(java.lang.String,%20java.util.function.BinaryOperator%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setCustomAggregateFunction(java.lang.String, java.util.function.BinaryOperator&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCustomScalarFunction">
      <MemberSignature Language="C#" Value="public virtual void SetCustomScalarFunction (string functionName, Java.Util.Functions.IUnaryOperator scalarFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCustomScalarFunction(string functionName, class Java.Util.Functions.IUnaryOperator scalarFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.SetCustomScalarFunction(System.String,Java.Util.Functions.IUnaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member SetCustomScalarFunction : string * Java.Util.Functions.IUnaryOperator -&gt; unit&#xA;override this.SetCustomScalarFunction : string * Java.Util.Functions.IUnaryOperator -&gt; unit" Usage="sQLiteDatabase.SetCustomScalarFunction (functionName, scalarFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCustomScalarFunction", "(Ljava/lang/String;Ljava/util/function/UnaryOperator;)V", "GetSetCustomScalarFunction_Ljava_lang_String_Ljava_util_function_UnaryOperator_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCustomScalarFunction", "(Ljava/lang/String;Ljava/util/function/UnaryOperator;)V", "GetSetCustomScalarFunction_Ljava_lang_String_Ljava_util_function_UnaryOperator_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="scalarFunction" Type="Java.Util.Functions.IUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="functionName">Case-insensitive name to register this function
                       under, limited to 255 UTF-8 bytes in length.</param>
        <param name="scalarFunction">Functional interface that will be invoked when the
                       function name is used by a SQL statement. The argument values
                       from the SQL statement are passed to the functional interface,
                       and the return values from the functional interface are
                       returned back into the SQL statement.</param>
        <summary>Register a custom scalar function that can be called from SQL
            expressions.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setCustomScalarFunction(java.lang.String,%20java.util.function.UnaryOperator%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setCustomScalarFunction(java.lang.String, java.util.function.UnaryOperator&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetForeignKeyConstraintsEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetForeignKeyConstraintsEnabled (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetForeignKeyConstraintsEnabled(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.SetForeignKeyConstraintsEnabled(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetForeignKeyConstraintsEnabled : bool -&gt; unit&#xA;override this.SetForeignKeyConstraintsEnabled : bool -&gt; unit" Usage="sQLiteDatabase.SetForeignKeyConstraintsEnabled enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setForeignKeyConstraintsEnabled", "(Z)V", "GetSetForeignKeyConstraintsEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setForeignKeyConstraintsEnabled", "(Z)V", "GetSetForeignKeyConstraintsEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">True to enable foreign key constraints, false to disable them.</param>
        <summary>Sets whether foreign key constraints are enabled for the database.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setForeignKeyConstraintsEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setForeignKeyConstraintsEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if the are transactions is in progress
 when this method is called.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLocale">
      <MemberSignature Language="C#" Value="public virtual void SetLocale (Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocale(class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.SetLocale(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="abstract member SetLocale : Java.Util.Locale -&gt; unit&#xA;override this.SetLocale : Java.Util.Locale -&gt; unit" Usage="sQLiteDatabase.SetLocale locale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLocale", "(Ljava/util/Locale;)V", "GetSetLocale_Ljava_util_Locale_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLocale", "(Ljava/util/Locale;)V", "GetSetLocale_Ljava_util_Locale_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">The new locale.</param>
        <summary>Sets the locale for this database.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setLocale(java.util.Locale)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setLocale(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Database.SQLException">if the locale could not be set.  The most common reason
 for this is that there is no collator available for the locale you requested.
 In this case the database remains unchanged.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLockingEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetLockingEnabled (bool lockingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLockingEnabled(bool lockingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.SetLockingEnabled(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetLockingEnabled : bool -&gt; unit&#xA;override this.SetLockingEnabled : bool -&gt; unit" Usage="sQLiteDatabase.SetLockingEnabled lockingEnabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLockingEnabled", "(Z)V", "GetSetLockingEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLockingEnabled", "(Z)V", "GetSetLockingEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="lockingEnabled">set to true to enable locks, false otherwise</param>
        <summary>Control whether or not the SQLiteDatabase is made thread-safe by using locks
            around critical sections.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setLockingEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setLockingEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMaximumSize">
      <MemberSignature Language="C#" Value="public virtual long SetMaximumSize (long numBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 SetMaximumSize(int64 numBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.SetMaximumSize(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetMaximumSize : int64 -&gt; int64&#xA;override this.SetMaximumSize : int64 -&gt; int64" Usage="sQLiteDatabase.SetMaximumSize numBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMaximumSize", "(J)J", "GetSetMaximumSize_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMaximumSize", "(J)J", "GetSetMaximumSize_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numBytes" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="numBytes">the maximum database size, in bytes</param>
        <summary>Sets the maximum size the database will grow to.</summary>
        <returns>the new maximum database size</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setMaximumSize(long)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setMaximumSize(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMaxSqlCacheSize">
      <MemberSignature Language="C#" Value="public virtual void SetMaxSqlCacheSize (int cacheSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxSqlCacheSize(int32 cacheSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.SetMaxSqlCacheSize(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetMaxSqlCacheSize : int -&gt; unit&#xA;override this.SetMaxSqlCacheSize : int -&gt; unit" Usage="sQLiteDatabase.SetMaxSqlCacheSize cacheSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMaxSqlCacheSize", "(I)V", "GetSetMaxSqlCacheSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMaxSqlCacheSize", "(I)V", "GetSetMaxSqlCacheSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cacheSize">the size of the cache. can be (0 to <c>#MAX_SQL_CACHE_SIZE</c>)</param>
        <summary>Sets the maximum size of the prepared-statement cache for this database.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setMaxSqlCacheSize(int)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setMaxSqlCacheSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalStateException">if input cacheSize &gt; <see cref="F:Android.Database.Sqlite.SQLiteDatabase.MaxSqlCacheSize" />.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransactionSuccessful">
      <MemberSignature Language="C#" Value="public virtual void SetTransactionSuccessful ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTransactionSuccessful() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.SetTransactionSuccessful" />
      <MemberSignature Language="F#" Value="abstract member SetTransactionSuccessful : unit -&gt; unit&#xA;override this.SetTransactionSuccessful : unit -&gt; unit" Usage="sQLiteDatabase.SetTransactionSuccessful " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTransactionSuccessful", "()V", "GetSetTransactionSuccessfulHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTransactionSuccessful", "()V", "GetSetTransactionSuccessfulHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marks the current transaction as successful.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setTransactionSuccessful()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the current thread is not in a transaction or the
 transaction is already marked as successful.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SqliteMaxLikePatternLength">
      <MemberSignature Language="C#" Value="public const int SqliteMaxLikePatternLength = 50000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 SqliteMaxLikePatternLength = (50000)" />
      <MemberSignature Language="DocId" Value="F:Android.Database.Sqlite.SQLiteDatabase.SqliteMaxLikePatternLength" />
      <MemberSignature Language="F#" Value="val mutable SqliteMaxLikePatternLength : int" Usage="Android.Database.Sqlite.SQLiteDatabase.SqliteMaxLikePatternLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SQLITE_MAX_LIKE_PATTERN_LENGTH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SQLITE_MAX_LIKE_PATTERN_LENGTH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>50000</MemberValue>
      <Docs>
        <summary>Maximum Length Of A LIKE Or GLOB Pattern
            The pattern matching algorithm used in the default LIKE and GLOB implementation
            of SQLite can exhibit O(N^2) performance (where N is the number of characters in
            the pattern) for certain pathological cases.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#SQLITE_MAX_LIKE_PATTERN_LENGTH" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.SQLITE_MAX_LIKE_PATTERN_LENGTH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncedTables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt;? SyncedTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; SyncedTables" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.SyncedTables" />
      <MemberSignature Language="F#" Value="member this.SyncedTables : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Android.Database.Sqlite.SQLiteDatabase.SyncedTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSyncedTables", "()Ljava/util/Map;", "GetGetSyncedTablesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSyncedTables", "()Ljava/util/Map;", "GetGetSyncedTablesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#getSyncedTables()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.getSyncedTables()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Database.Sqlite.SQLiteDatabase.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Database.Sqlite.SQLiteDatabase.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual int Update (string? table, Android.Content.ContentValues? values, string? whereClause, string[]? whereArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(string table, class Android.Content.ContentValues values, string whereClause, string[] whereArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.Update(System.String,Android.Content.ContentValues,System.String,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Update : string * Android.Content.ContentValues * string * string[] -&gt; int&#xA;override this.Update : string * Android.Content.ContentValues * string * string[] -&gt; int" Usage="sQLiteDatabase.Update (table, values, whereClause, whereArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "GetUpdate_Ljava_lang_String_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "GetUpdate_Ljava_lang_String_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
        <Parameter Name="whereClause" Type="System.String" />
        <Parameter Name="whereArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="table">the table to update in</param>
        <param name="values">a map from column names to new column values. null is a
                       valid value that will be translated to NULL.</param>
        <param name="whereClause">the optional WHERE clause to apply when updating.
                       Passing null will update all rows.</param>
        <param name="whereArgs">You may include ?s in the where clause, which
                       will be replaced by the values from whereArgs. The values
                       will be bound as Strings.</param>
        <summary>Convenience method for updating rows in the database.</summary>
        <returns>the number of rows affected</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#update(java.lang.String,%20android.content.ContentValues,%20java.lang.String,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.update(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UpdateWithOnConflict">
      <MemberSignature Language="C#" Value="public virtual int UpdateWithOnConflict (string? table, Android.Content.ContentValues? values, string? whereClause, string[]? whereArgs, Android.Database.Sqlite.Conflict conflictAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 UpdateWithOnConflict(string table, class Android.Content.ContentValues values, string whereClause, string[] whereArgs, valuetype Android.Database.Sqlite.Conflict conflictAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.UpdateWithOnConflict(System.String,Android.Content.ContentValues,System.String,System.String[],Android.Database.Sqlite.Conflict)" />
      <MemberSignature Language="F#" Value="abstract member UpdateWithOnConflict : string * Android.Content.ContentValues * string * string[] * Android.Database.Sqlite.Conflict -&gt; int&#xA;override this.UpdateWithOnConflict : string * Android.Content.ContentValues * string * string[] * Android.Database.Sqlite.Conflict -&gt; int" Usage="sQLiteDatabase.UpdateWithOnConflict (table, values, whereClause, whereArgs, conflictAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateWithOnConflict", "(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;I)I", "GetUpdateWithOnConflict_Ljava_lang_String_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateWithOnConflict", "(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;I)I", "GetUpdateWithOnConflict_Ljava_lang_String_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
        <Parameter Name="whereClause" Type="System.String" />
        <Parameter Name="whereArgs" Type="System.String[]" />
        <Parameter Name="conflictAlgorithm" Type="Android.Database.Sqlite.Conflict">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="table">the table to update in</param>
        <param name="values">a map from column names to new column values. null is a
                       valid value that will be translated to NULL.</param>
        <param name="whereClause">the optional WHERE clause to apply when updating.
                       Passing null will update all rows.</param>
        <param name="whereArgs">You may include ?s in the where clause, which
                       will be replaced by the values from whereArgs. The values
                       will be bound as Strings.</param>
        <param name="conflictAlgorithm">for update conflict resolver</param>
        <summary>Convenience method for updating rows in the database.</summary>
        <returns>the number of rows affected</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#updateWithOnConflict(java.lang.String,%20android.content.ContentValues,%20java.lang.String,%20java.lang.String[],%20int)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.updateWithOnConflict(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSql">
      <MemberSignature Language="C#" Value="public virtual void ValidateSql (string sql, Android.OS.CancellationSignal? cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateSql(string sql, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.ValidateSql(System.String,Android.OS.CancellationSignal)" />
      <MemberSignature Language="F#" Value="abstract member ValidateSql : string * Android.OS.CancellationSignal -&gt; unit&#xA;override this.ValidateSql : string * Android.OS.CancellationSignal -&gt; unit" Usage="sQLiteDatabase.ValidateSql (sql, cancellationSignal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("validateSql", "(Ljava/lang/String;Landroid/os/CancellationSignal;)V", "GetValidateSql_Ljava_lang_String_Landroid_os_CancellationSignal_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("validateSql", "(Ljava/lang/String;Landroid/os/CancellationSignal;)V", "GetValidateSql_Ljava_lang_String_Landroid_os_CancellationSignal_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="sql">SQL to be validated</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if none.
            If the operation is canceled, then <c>OperationCanceledException</c> will be thrown
            when the query is executed.</param>
        <summary>Verifies that a SQL SELECT statement is valid by compiling it.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#validateSql(java.lang.String,%20android.os.CancellationSignal)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.validateSql(java.lang.String, android.os.CancellationSignal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public virtual int Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteDatabase.Version" />
      <MemberSignature Language="F#" Value="member this.Version : int with get, set" Usage="Android.Database.Sqlite.SQLiteDatabase.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVersion", "()I", "GetGetVersionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVersion", "()I", "GetGetVersionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVersion", "(I)V", "GetSetVersion_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVersion", "(I)V", "GetSetVersion_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="version">the new database version</param>
        <summary>Gets the database version. -or- Sets the database version.</summary>
        <value>the database version</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#getVersion()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.getVersion()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#setVersion(int)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.setVersion(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="YieldIfContended">
      <MemberSignature Language="C#" Value="public virtual bool YieldIfContended ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool YieldIfContended() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.YieldIfContended" />
      <MemberSignature Language="F#" Value="abstract member YieldIfContended : unit -&gt; bool&#xA;override this.YieldIfContended : unit -&gt; bool" Usage="sQLiteDatabase.YieldIfContended " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("yieldIfContended", "()Z", "GetYieldIfContendedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("yieldIfContended", "()Z", "GetYieldIfContendedHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Temporarily end the transaction to let other threads run.</summary>
        <returns>true if the transaction was yielded</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#yieldIfContended()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.yieldIfContended()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="YieldIfContendedSafely">
      <MemberSignature Language="C#" Value="public virtual bool YieldIfContendedSafely ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool YieldIfContendedSafely() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.YieldIfContendedSafely" />
      <MemberSignature Language="F#" Value="abstract member YieldIfContendedSafely : unit -&gt; bool&#xA;override this.YieldIfContendedSafely : unit -&gt; bool" Usage="sQLiteDatabase.YieldIfContendedSafely " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("yieldIfContendedSafely", "()Z", "GetYieldIfContendedSafelyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("yieldIfContendedSafely", "()Z", "GetYieldIfContendedSafelyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Temporarily end the transaction to let other threads run.</summary>
        <returns>true if the transaction was yielded</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#yieldIfContendedSafely()" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="YieldIfContendedSafely">
      <MemberSignature Language="C#" Value="public virtual bool YieldIfContendedSafely (long sleepAfterYieldDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool YieldIfContendedSafely(int64 sleepAfterYieldDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteDatabase.YieldIfContendedSafely(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member YieldIfContendedSafely : int64 -&gt; bool&#xA;override this.YieldIfContendedSafely : int64 -&gt; bool" Usage="sQLiteDatabase.YieldIfContendedSafely sleepAfterYieldDelay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("yieldIfContendedSafely", "(J)Z", "GetYieldIfContendedSafely_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("yieldIfContendedSafely", "(J)Z", "GetYieldIfContendedSafely_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sleepAfterYieldDelay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sleepAfterYieldDelay">if &gt; 0, sleep this long before starting a new transaction if
              the lock was actually yielded. This will allow other background threads to make some
              more progress than they would if we started the transaction immediately.</param>
        <summary>Temporarily end the transaction to let other threads run.</summary>
        <returns>true if the transaction was yielded</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase#yieldIfContendedSafely(long)" title="Reference documentation">Java documentation for <code>android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
  </Members>
</Type>
