<Type Name="SliceProvider" FullName="Android.App.Slices.SliceProvider">
  <TypeSignature Language="C#" Value="public abstract class SliceProvider : Android.Content.ContentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SliceProvider extends Android.Content.ContentProvider" />
  <TypeSignature Language="DocId" Value="T:Android.App.Slices.SliceProvider" />
  <TypeSignature Language="F#" Value="type SliceProvider = class&#xA;    inherit ContentProvider" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.ContentProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/slice/SliceProvider", ApiSince=28, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/slice/SliceProvider", ApiSince=28, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A SliceProvider allows an app to provide content to be displayed in system spaces.</summary>
    <remarks>
      <para>A SliceProvider allows an app to provide content to be displayed in system spaces. This content
            is templated and can contain actions, and the behavior of how it is surfaced is specific to the
            system surface.</para>
      <para>Slices are not currently live content. They are bound once and shown to the user. If the content
            changes due to a callback from user interaction, then
            <c>ContentResolver#notifyChange(Uri, ContentObserver)</c> should be used to notify the system.</para>
      <para>The provider needs to be declared in the manifest to provide the authority for the app. The
            authority for most slices is expected to match the package of the application.</para>
      <code lang="text/java">{@literal
            &lt;provider
                android:name="com.example.mypkg.MySliceProvider"
                android:authorities="com.example.mypkg" /&gt;}
            </code>
      <para>Slices can be identified by a Uri or by an Intent. To link an Intent with a slice, the provider
            must have an <c>IntentFilter</c> matching the slice intent. When a slice is being requested via
            an intent, <c>#onMapIntentToUri(Intent)</c> can be called and is expected to return an
            appropriate Uri representing the slice.</para>
      <code lang="text/java">{@literal
            &lt;provider
                android:name="com.example.mypkg.MySliceProvider"
                android:authorities="com.example.mypkg"&gt;
                &lt;intent-filter&gt;
                    &lt;action android:name="com.example.mypkg.intent.action.MY_SLICE_INTENT" /&gt;
                    &lt;category android:name="android.app.slice.category.SLICE" /&gt;
                &lt;/intent-filter&gt;
            &lt;/provider&gt;}
            </code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/slice/SliceProvider" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SliceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>A version of constructing a SliceProvider that allows autogranting slice permissions
            to apps that hold specific platform permissions.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#SliceProvider(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.SliceProvider(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SliceProvider (params string[] autoGrantPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] autoGrantPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.#ctor(System.String[])" />
      <MemberSignature Language="F#" Value="new Android.App.Slices.SliceProvider : string[] -&gt; Android.App.Slices.SliceProvider" Usage="new Android.App.Slices.SliceProvider autoGrantPermissions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([Ljava/lang/String;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([Ljava/lang/String;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="autoGrantPermissions" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="autoGrantPermissions">List of permissions that holders are auto-granted access
                                        to slices.</param>
        <summary>A version of constructing a SliceProvider that allows autogranting slice permissions
            to apps that hold specific platform permissions.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#SliceProvider(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.SliceProvider(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SliceProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.Slices.SliceProvider : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.Slices.SliceProvider" Usage="new Android.App.Slices.SliceProvider (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override sealed int Delete (Android.Net.Uri? uri, string? selection, string[]? selectionArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Delete(class Android.Net.Uri uri, string selection, string[] selectionArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.Delete(Android.Net.Uri,System.String,System.String[])" />
      <MemberSignature Language="F#" Value="override this.Delete : Android.Net.Uri * string * string[] -&gt; int" Usage="sliceProvider.Delete (uri, selection, selectionArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("delete", "(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("delete", "(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="selection">To be added.</param>
        <param name="selectionArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override sealed string? GetType (Android.Net.Uri? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetType(class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.GetType(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="override this.GetType : Android.Net.Uri -&gt; string" Usage="sliceProvider.GetType uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getType", "(Landroid/net/Uri;)Ljava/lang/String;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getType", "(Landroid/net/Uri;)Ljava/lang/String;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public override sealed Android.Net.Uri? Insert (Android.Net.Uri? uri, Android.Content.ContentValues? values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Net.Uri Insert(class Android.Net.Uri uri, class Android.Content.ContentValues values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.Insert(Android.Net.Uri,Android.Content.ContentValues)" />
      <MemberSignature Language="F#" Value="override this.Insert : Android.Net.Uri * Android.Content.ContentValues -&gt; Android.Net.Uri" Usage="sliceProvider.Insert (uri, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insert", "(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insert", "(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Slices.SliceProvider.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Slices.SliceProvider.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindSlice">
      <MemberSignature Language="C#" Value="public virtual Android.App.Slices.Slice? OnBindSlice (Android.Net.Uri? sliceUri, System.Collections.Generic.ICollection&lt;Android.App.Slices.SliceSpec&gt;? supportedSpecs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Slices.Slice OnBindSlice(class Android.Net.Uri sliceUri, class System.Collections.Generic.ICollection`1&lt;class Android.App.Slices.SliceSpec&gt; supportedSpecs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.OnBindSlice(Android.Net.Uri,System.Collections.Generic.ICollection{Android.App.Slices.SliceSpec})" />
      <MemberSignature Language="F#" Value="abstract member OnBindSlice : Android.Net.Uri * System.Collections.Generic.ICollection&lt;Android.App.Slices.SliceSpec&gt; -&gt; Android.App.Slices.Slice&#xA;override this.OnBindSlice : Android.Net.Uri * System.Collections.Generic.ICollection&lt;Android.App.Slices.SliceSpec&gt; -&gt; Android.App.Slices.Slice" Usage="sliceProvider.OnBindSlice (sliceUri, supportedSpecs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBindSlice", "(Landroid/net/Uri;Ljava/util/Set;)Landroid/app/slice/Slice;", "GetOnBindSlice_Landroid_net_Uri_Ljava_util_Set_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBindSlice", "(Landroid/net/Uri;Ljava/util/Set;)Landroid/app/slice/Slice;", "GetOnBindSlice_Landroid_net_Uri_Ljava_util_Set_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Slices.Slice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sliceUri" Type="Android.Net.Uri" />
        <Parameter Name="supportedSpecs" Type="System.Collections.Generic.ICollection&lt;Android.App.Slices.SliceSpec&gt;" />
      </Parameters>
      <Docs>
        <param name="sliceUri">Uri to bind.</param>
        <param name="supportedSpecs">List of supported specs.</param>
        <summary>Implemented to create a slice.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Implemented to create a slice.</para>
          <para>onBindSlice should return as quickly as possible so that the UI tied
            to this slice can be responsive. No network or other IO will be allowed
            during onBindSlice. Any loading that needs to be done should happen
            in the background with a call to <c>ContentResolver#notifyChange(Uri, ContentObserver)</c>
            when the app is ready to provide the complete data in onBindSlice.</para>
          <para>The slice returned should have a spec that is compatible with one of
            the supported specs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#onBindSlice(android.net.Uri,%20java.util.Set%3Candroid.app.slice.SliceSpec%3E)" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.onBindSlice(android.net.Uri, java.util.Set&lt;android.app.slice.SliceSpec&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreatePermissionRequest">
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent OnCreatePermissionRequest (Android.Net.Uri? sliceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent OnCreatePermissionRequest(class Android.Net.Uri sliceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.OnCreatePermissionRequest(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member OnCreatePermissionRequest : Android.Net.Uri -&gt; Android.App.PendingIntent&#xA;override this.OnCreatePermissionRequest : Android.Net.Uri -&gt; Android.App.PendingIntent" Usage="sliceProvider.OnCreatePermissionRequest sliceUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreatePermissionRequest", "(Landroid/net/Uri;)Landroid/app/PendingIntent;", "GetOnCreatePermissionRequest_Landroid_net_Uri_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreatePermissionRequest", "(Landroid/net/Uri;)Landroid/app/PendingIntent;", "GetOnCreatePermissionRequest_Landroid_net_Uri_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sliceUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="sliceUri">the Uri of the slice attempting to be bound.</param>
        <summary>Called when an app requests a slice it does not have write permission
            to the uri for.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Called when an app requests a slice it does not have write permission
            to the uri for.</para>
          <para>The return value will be the action on a slice that prompts the user that
            the calling app wants to show slices from this app. The default implementation
            launches a dialog that allows the user to grant access to this slice. Apps
            that do not want to allow this user grant, can override this and instead
            launch their own dialog with different behavior.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#onCreatePermissionRequest(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.onCreatePermissionRequest(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetSliceDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; OnGetSliceDescendants (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class Android.Net.Uri&gt; OnGetSliceDescendants(class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.OnGetSliceDescendants(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member OnGetSliceDescendants : Android.Net.Uri -&gt; System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt;&#xA;override this.OnGetSliceDescendants : Android.Net.Uri -&gt; System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt;" Usage="sliceProvider.OnGetSliceDescendants uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onGetSliceDescendants", "(Landroid/net/Uri;)Ljava/util/Collection;", "GetOnGetSliceDescendants_Landroid_net_Uri_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onGetSliceDescendants", "(Landroid/net/Uri;)Ljava/util/Collection;", "GetOnGetSliceDescendants_Landroid_net_Uri_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The uri to look for descendants under.</param>
        <summary>Obtains a list of slices that are descendants of the specified Uri.</summary>
        <returns>All slices within the space.</returns>
        <remarks>
          <para>Obtains a list of slices that are descendants of the specified Uri.</para>
          <para>Implementing this is optional for a SliceProvider, but does provide a good
            discovery mechanism for finding slice Uris.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#onGetSliceDescendants(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.onGetSliceDescendants(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMapIntentToUri">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Uri OnMapIntentToUri (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.Uri OnMapIntentToUri(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.OnMapIntentToUri(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnMapIntentToUri : Android.Content.Intent -&gt; Android.Net.Uri&#xA;override this.OnMapIntentToUri : Android.Content.Intent -&gt; Android.Net.Uri" Usage="sliceProvider.OnMapIntentToUri intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMapIntentToUri", "(Landroid/content/Intent;)Landroid/net/Uri;", "GetOnMapIntentToUri_Landroid_content_Intent_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMapIntentToUri", "(Landroid/content/Intent;)Landroid/net/Uri;", "GetOnMapIntentToUri_Landroid_content_Intent_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <summary>This method must be overridden if an <c>IntentFilter</c> is specified on the SliceProvider.</summary>
        <returns>Uri representing the slice associated with the provided intent.</returns>
        <remarks>
          <para>This method must be overridden if an <c>IntentFilter</c> is specified on the SliceProvider.
            In that case, this method can be called and is expected to return a non-null Uri representing
            a slice. Otherwise this will throw <c>UnsupportedOperationException</c>.
            
            Any intent filter added to a slice provider should also contain
            <c>SliceManager#CATEGORY_SLICE</c>, because otherwise it will not be detected by
            <c>SliceManager#mapIntentToUri(Intent)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#onMapIntentToUri(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.onMapIntentToUri(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSlicePinned">
      <MemberSignature Language="C#" Value="public virtual void OnSlicePinned (Android.Net.Uri? sliceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSlicePinned(class Android.Net.Uri sliceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.OnSlicePinned(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member OnSlicePinned : Android.Net.Uri -&gt; unit&#xA;override this.OnSlicePinned : Android.Net.Uri -&gt; unit" Usage="sliceProvider.OnSlicePinned sliceUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSlicePinned", "(Landroid/net/Uri;)V", "GetOnSlicePinned_Landroid_net_Uri_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSlicePinned", "(Landroid/net/Uri;)V", "GetOnSlicePinned_Landroid_net_Uri_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sliceUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="sliceUri">The uri of the slice being unpinned.</param>
        <summary>Called to inform an app that a slice has been pinned.</summary>
        <remarks>
          <para>Called to inform an app that a slice has been pinned.</para>
          <para>Pinning is a way that slice hosts use to notify apps of which slices
            they care about updates for. When a slice is pinned the content is
            expected to be relatively fresh and kept up to date.</para>
          <para>Being pinned does not provide any escalated privileges for the slice
            provider. So apps should do things such as turn on syncing or schedule
            a job in response to a onSlicePinned.</para>
          <para>Pinned state is not persisted through a reboot, and apps can expect a
            new call to onSlicePinned for any slices that should remain pinned
            after a reboot occurs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#onSlicePinned(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.onSlicePinned(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSliceUnpinned">
      <MemberSignature Language="C#" Value="public virtual void OnSliceUnpinned (Android.Net.Uri? sliceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSliceUnpinned(class Android.Net.Uri sliceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.OnSliceUnpinned(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member OnSliceUnpinned : Android.Net.Uri -&gt; unit&#xA;override this.OnSliceUnpinned : Android.Net.Uri -&gt; unit" Usage="sliceProvider.OnSliceUnpinned sliceUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSliceUnpinned", "(Landroid/net/Uri;)V", "GetOnSliceUnpinned_Landroid_net_Uri_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSliceUnpinned", "(Landroid/net/Uri;)V", "GetOnSliceUnpinned_Landroid_net_Uri_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sliceUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="sliceUri">To be added.</param>
        <summary>Called to inform an app that a slices is no longer pinned.</summary>
        <remarks>
          <para>Called to inform an app that a slices is no longer pinned.</para>
          <para>This means that no other apps on the device care about updates to this
            slice anymore and therefore it is not important to be updated. Any syncs
            or jobs related to this slice should be cancelled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#onSliceUnpinned(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.onSliceUnpinned(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public override sealed Android.Database.ICursor? Query (Android.Net.Uri? uri, string[]? projection, Android.OS.Bundle? queryArgs, Android.OS.CancellationSignal? cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Database.ICursor Query(class Android.Net.Uri uri, string[] projection, class Android.OS.Bundle queryArgs, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.Query(Android.Net.Uri,System.String[],Android.OS.Bundle,Android.OS.CancellationSignal)" />
      <MemberSignature Language="F#" Value="override this.Query : Android.Net.Uri * string[] * Android.OS.Bundle * Android.OS.CancellationSignal -&gt; Android.Database.ICursor" Usage="sliceProvider.Query (uri, projection, queryArgs, cancellationSignal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Landroid/os/Bundle;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Landroid/os/Bundle;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="projection" Type="System.String[]" />
        <Parameter Name="queryArgs" Type="Android.OS.Bundle" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="projection">To be added.</param>
        <param name="queryArgs">To be added.</param>
        <param name="cancellationSignal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public override sealed Android.Database.ICursor? Query (Android.Net.Uri? uri, string[]? projection, string? selection, string[]? selectionArgs, string? sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Database.ICursor Query(class Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.Query(Android.Net.Uri,System.String[],System.String,System.String[],System.String)" />
      <MemberSignature Language="F#" Value="override this.Query : Android.Net.Uri * string[] * string * string[] * string -&gt; Android.Database.ICursor" Usage="sliceProvider.Query (uri, projection, selection, selectionArgs, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="projection" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="sortOrder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="projection">To be added.</param>
        <param name="selection">To be added.</param>
        <param name="selectionArgs">To be added.</param>
        <param name="sortOrder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public override sealed Android.Database.ICursor? Query (Android.Net.Uri? uri, string[]? projection, string? selection, string[]? selectionArgs, string? sortOrder, Android.OS.CancellationSignal? cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Database.ICursor Query(class Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.Query(Android.Net.Uri,System.String[],System.String,System.String[],System.String,Android.OS.CancellationSignal)" />
      <MemberSignature Language="F#" Value="override this.Query : Android.Net.Uri * string[] * string * string[] * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor" Usage="sliceProvider.Query (uri, projection, selection, selectionArgs, sortOrder, cancellationSignal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="projection" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="sortOrder" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="projection">To be added.</param>
        <param name="selection">To be added.</param>
        <param name="selectionArgs">To be added.</param>
        <param name="sortOrder">To be added.</param>
        <param name="cancellationSignal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SliceType">
      <MemberSignature Language="C#" Value="public const string SliceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SliceType" />
      <MemberSignature Language="DocId" Value="F:Android.App.Slices.SliceProvider.SliceType" />
      <MemberSignature Language="F#" Value="val mutable SliceType : string" Usage="Android.App.Slices.SliceProvider.SliceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SLICE_TYPE", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SLICE_TYPE", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the Android platform's MIME type for a URI
            containing a slice implemented through <c>SliceProvider</c>.</summary>
        <remarks>
          <para>This is the Android platform's MIME type for a URI
            containing a slice implemented through <c>SliceProvider</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/slice/SliceProvider#SLICE_TYPE" title="Reference documentation">Java documentation for <code>android.app.slice.SliceProvider.SLICE_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Slices.SliceProvider.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Slices.SliceProvider.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Slices.SliceProvider.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Slices.SliceProvider.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override sealed int Update (Android.Net.Uri? uri, Android.Content.ContentValues? values, string? selection, string[]? selectionArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class Android.Net.Uri uri, class Android.Content.ContentValues values, string selection, string[] selectionArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Slices.SliceProvider.Update(Android.Net.Uri,Android.Content.ContentValues,System.String,System.String[])" />
      <MemberSignature Language="F#" Value="override this.Update : Android.Net.Uri * Android.Content.ContentValues * string * string[] -&gt; int" Usage="sliceProvider.Update (uri, values, selection, selectionArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="values">To be added.</param>
        <param name="selection">To be added.</param>
        <param name="selectionArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
