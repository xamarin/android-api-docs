<Type Name="EventHelper" FullName="Java.Interop.EventHelper">
  <TypeSignature Language="C#" Value="public static class EventHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Interop.EventHelper" />
  <TypeSignature Language="F#" Value="type EventHelper = class" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventHandler&lt;TInterface,TImplementor&gt;">
      <MemberSignature Language="C#" Value="public static void AddEventHandler&lt;TInterface,TImplementor&gt; (ref WeakReference implementor, Func&lt;TImplementor&gt; creator, Action&lt;TInterface&gt; setListener, Action&lt;TImplementor&gt; add) where TImplementor : Java.Lang.Object, TInterface;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEventHandler&lt;TInterface, (class Java.Lang.Object, !!TInterface) TImplementor&gt;(class System.WeakReference&amp; implementor, class System.Func`1&lt;!!TImplementor&gt; creator, class System.Action`1&lt;!!TInterface&gt; setListener, class System.Action`1&lt;!!TImplementor&gt; add) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.EventHelper.AddEventHandler``2(System.WeakReference@,System.Func{``1},System.Action{``0},System.Action{``1})" />
      <MemberSignature Language="F#" Value="static member AddEventHandler :  * Func&lt;'Implementor (requires 'Implementor :&gt; Java.Lang.Object and 'Implementor :&gt; 'Interface)&gt; * Action&lt;'Interface&gt; * Action&lt;'Implementor (requires 'Implementor :&gt; Java.Lang.Object and 'Implementor :&gt; 'Interface)&gt; -&gt; unit (requires 'Implementor :&gt; Java.Lang.Object and 'Implementor :&gt; 'Interface)" Usage="Java.Interop.EventHelper.AddEventHandler (implementor, creator, setListener, add)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInterface" />
        <TypeParameter Name="TImplementor">
          <Constraints>
            <BaseTypeName>Java.Lang.Object</BaseTypeName>
            <BaseTypeName>TInterface</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementor" Type="System.WeakReference" RefType="ref" />
        <Parameter Name="creator" Type="System.Func&lt;TImplementor&gt;" />
        <Parameter Name="setListener" Type="System.Action&lt;TInterface&gt;" />
        <Parameter Name="add" Type="System.Action&lt;TImplementor&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInterface">To be added.</typeparam>
        <typeparam name="TImplementor">To be added.</typeparam>
        <param name="implementor">To be added.</param>
        <param name="creator">To be added.</param>
        <param name="setListener">To be added.</param>
        <param name="add">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler&lt;TInterface,TImplementor&gt;">
      <MemberSignature Language="C#" Value="public static void AddEventHandler&lt;TInterface,TImplementor&gt; (ref WeakReference implementor, Func&lt;TImplementor&gt; creator, Action&lt;TInterface&gt; setListener, Action&lt;TImplementor&gt; add) where TImplementor : Java.Lang.Object, TInterface;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEventHandler&lt;TInterface, (class Java.Lang.Object, !!TInterface) TImplementor&gt;(class System.WeakReference&amp; implementor, class System.Func`1&lt;!!TImplementor&gt; creator, class System.Action`1&lt;!!TInterface&gt; setListener, class System.Action`1&lt;!!TImplementor&gt; add) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.EventHelper.AddEventHandler``2(System.WeakReference@,System.Func{``1},System.Action{``0},System.Action{``1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInterface" />
        <TypeParameter Name="TImplementor">
          <Constraints>
            <BaseTypeName>Java.Lang.Object</BaseTypeName>
            <BaseTypeName>TInterface</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementor" Type="System.WeakReference&amp;" RefType="ref" />
        <Parameter Name="creator" Type="System.Func&lt;TImplementor&gt;" />
        <Parameter Name="setListener" Type="System.Action&lt;TInterface&gt;" />
        <Parameter Name="add" Type="System.Action&lt;TImplementor&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInterface">To be added.</typeparam>
        <typeparam name="TImplementor">To be added.</typeparam>
        <param name="implementor">To be added.</param>
        <param name="creator">To be added.</param>
        <param name="setListener">To be added.</param>
        <param name="add">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler&lt;TInterface,TImplementor&gt;">
      <MemberSignature Language="C#" Value="public static void RemoveEventHandler&lt;TInterface,TImplementor&gt; (ref WeakReference implementor, Func&lt;TImplementor,bool&gt; empty, Action&lt;TInterface&gt; unsetListener, Action&lt;TImplementor&gt; remove) where TImplementor : Java.Lang.Object, TInterface;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveEventHandler&lt;TInterface, (class Java.Lang.Object, !!TInterface) TImplementor&gt;(class System.WeakReference&amp; implementor, class System.Func`2&lt;!!TImplementor, bool&gt; empty, class System.Action`1&lt;!!TInterface&gt; unsetListener, class System.Action`1&lt;!!TImplementor&gt; remove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.EventHelper.RemoveEventHandler``2(System.WeakReference@,System.Func{``1,System.Boolean},System.Action{``0},System.Action{``1})" />
      <MemberSignature Language="F#" Value="static member RemoveEventHandler :  * Func&lt;'Implementor, bool (requires 'Implementor :&gt; Java.Lang.Object and 'Implementor :&gt; 'Interface)&gt; * Action&lt;'Interface&gt; * Action&lt;'Implementor (requires 'Implementor :&gt; Java.Lang.Object and 'Implementor :&gt; 'Interface)&gt; -&gt; unit (requires 'Implementor :&gt; Java.Lang.Object and 'Implementor :&gt; 'Interface)" Usage="Java.Interop.EventHelper.RemoveEventHandler (implementor, empty, unsetListener, remove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInterface" />
        <TypeParameter Name="TImplementor">
          <Constraints>
            <BaseTypeName>Java.Lang.Object</BaseTypeName>
            <BaseTypeName>TInterface</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementor" Type="System.WeakReference" RefType="ref" />
        <Parameter Name="empty" Type="System.Func&lt;TImplementor,System.Boolean&gt;" />
        <Parameter Name="unsetListener" Type="System.Action&lt;TInterface&gt;" />
        <Parameter Name="remove" Type="System.Action&lt;TImplementor&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInterface">To be added.</typeparam>
        <typeparam name="TImplementor">To be added.</typeparam>
        <param name="implementor">To be added.</param>
        <param name="empty">To be added.</param>
        <param name="unsetListener">To be added.</param>
        <param name="remove">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler&lt;TInterface,TImplementor&gt;">
      <MemberSignature Language="C#" Value="public static void RemoveEventHandler&lt;TInterface,TImplementor&gt; (ref WeakReference implementor, Func&lt;TImplementor,bool&gt; empty, Action&lt;TInterface&gt; unsetListener, Action&lt;TImplementor&gt; remove) where TImplementor : Java.Lang.Object, TInterface;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveEventHandler&lt;TInterface, (class Java.Lang.Object, !!TInterface) TImplementor&gt;(class System.WeakReference&amp; implementor, class System.Func`2&lt;!!TImplementor, bool&gt; empty, class System.Action`1&lt;!!TInterface&gt; unsetListener, class System.Action`1&lt;!!TImplementor&gt; remove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.EventHelper.RemoveEventHandler``2(System.WeakReference@,System.Func{``1,System.Boolean},System.Action{``0},System.Action{``1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInterface" />
        <TypeParameter Name="TImplementor">
          <Constraints>
            <BaseTypeName>Java.Lang.Object</BaseTypeName>
            <BaseTypeName>TInterface</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="implementor" Type="System.WeakReference&amp;" RefType="ref" />
        <Parameter Name="empty" Type="System.Func&lt;TImplementor,System.Boolean&gt;" />
        <Parameter Name="unsetListener" Type="System.Action&lt;TInterface&gt;" />
        <Parameter Name="remove" Type="System.Action&lt;TImplementor&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInterface">To be added.</typeparam>
        <typeparam name="TImplementor">To be added.</typeparam>
        <param name="implementor">To be added.</param>
        <param name="empty">To be added.</param>
        <param name="unsetListener">To be added.</param>
        <param name="remove">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
