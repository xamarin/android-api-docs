<Type Name="JniRuntime+JniMarshalMemberBuilder" FullName="Java.Interop.JniRuntime+JniMarshalMemberBuilder">
  <TypeSignature Language="C#" Value="public abstract class JniRuntime.JniMarshalMemberBuilder : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit JniRuntime/JniMarshalMemberBuilder extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Interop.JniRuntime.JniMarshalMemberBuilder" />
  <TypeSignature Language="F#" Value="type JniRuntime.JniMarshalMemberBuilder = class&#xA;    interface IDisposable&#xA;    interface JniRuntime.ISetRuntime" />
  <AssemblyInfo>
    <AssemblyName>Java.Interop</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JniMarshalMemberBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConstructActivationPeerExpression">
      <MemberSignature Language="C#" Value="public abstract System.Linq.Expressions.Expression&lt;Func&lt;System.Reflection.ConstructorInfo,Java.Interop.JniObjectReference,object?[]?,object&gt;&gt; CreateConstructActivationPeerExpression (System.Reflection.ConstructorInfo constructor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;class System.Reflection.ConstructorInfo, valuetype Java.Interop.JniObjectReference, object[], object&gt;&gt; CreateConstructActivationPeerExpression(class System.Reflection.ConstructorInfo constructor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.CreateConstructActivationPeerExpression(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="F#" Value="abstract member CreateConstructActivationPeerExpression : System.Reflection.ConstructorInfo -&gt; System.Linq.Expressions.Expression&lt;Func&lt;System.Reflection.ConstructorInfo, Java.Interop.JniObjectReference, obj[], obj&gt;&gt;" Usage="jniMarshalMemberBuilder.CreateConstructActivationPeerExpression constructor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.Reflection.ConstructorInfo,Java.Interop.JniObjectReference,System.Object[],System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="constructor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConstructActivationPeerFunc">
      <MemberSignature Language="C#" Value="public Func&lt;System.Reflection.ConstructorInfo,Java.Interop.JniObjectReference,object?[]?,object&gt; CreateConstructActivationPeerFunc (System.Reflection.ConstructorInfo constructor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Func`4&lt;class System.Reflection.ConstructorInfo, valuetype Java.Interop.JniObjectReference, object[], object&gt; CreateConstructActivationPeerFunc(class System.Reflection.ConstructorInfo constructor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.CreateConstructActivationPeerFunc(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="F#" Value="member this.CreateConstructActivationPeerFunc : System.Reflection.ConstructorInfo -&gt; Func&lt;System.Reflection.ConstructorInfo, Java.Interop.JniObjectReference, obj[], obj&gt;" Usage="jniMarshalMemberBuilder.CreateConstructActivationPeerFunc constructor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Reflection.ConstructorInfo,Java.Interop.JniObjectReference,System.Object[],System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="constructor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMarshalToManagedDelegate">
      <MemberSignature Language="C#" Value="public Delegate CreateMarshalToManagedDelegate (Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Delegate CreateMarshalToManagedDelegate(class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.CreateMarshalToManagedDelegate(System.Delegate)" />
      <MemberSignature Language="F#" Value="member this.CreateMarshalToManagedDelegate : Delegate -&gt; Delegate" Usage="jniMarshalMemberBuilder.CreateMarshalToManagedDelegate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMarshalToManagedExpression">
      <MemberSignature Language="C#" Value="public abstract System.Linq.Expressions.LambdaExpression CreateMarshalToManagedExpression (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.LambdaExpression CreateMarshalToManagedExpression(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.CreateMarshalToManagedExpression(System.Reflection.MethodInfo)" />
      <MemberSignature Language="F#" Value="abstract member CreateMarshalToManagedExpression : System.Reflection.MethodInfo -&gt; System.Linq.Expressions.LambdaExpression" Usage="jniMarshalMemberBuilder.CreateMarshalToManagedExpression method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="jniMarshalMemberBuilder.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="jniMarshalMemberBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportedMemberRegistrations">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Java.Interop.JniNativeMethodRegistration&gt; GetExportedMemberRegistrations (Type declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Java.Interop.JniNativeMethodRegistration&gt; GetExportedMemberRegistrations(class System.Type declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.GetExportedMemberRegistrations(System.Type)" />
      <MemberSignature Language="F#" Value="abstract member GetExportedMemberRegistrations : Type -&gt; seq&lt;Java.Interop.JniNativeMethodRegistration&gt;" Usage="jniMarshalMemberBuilder.GetExportedMemberRegistrations declaringType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Java.Interop.JniNativeMethodRegistration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaringType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJniMethodSignature">
      <MemberSignature Language="C#" Value="public string GetJniMethodSignature (System.Reflection.MethodBase member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetJniMethodSignature(class System.Reflection.MethodBase member) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.GetJniMethodSignature(System.Reflection.MethodBase)" />
      <MemberSignature Language="F#" Value="member this.GetJniMethodSignature : System.Reflection.MethodBase -&gt; string" Usage="jniMarshalMemberBuilder.GetJniMethodSignature member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterMarshaler">
      <MemberSignature Language="C#" Value="public Java.Interop.JniValueMarshaler GetParameterMarshaler (System.Reflection.ParameterInfo parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Interop.JniValueMarshaler GetParameterMarshaler(class System.Reflection.ParameterInfo parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.GetParameterMarshaler(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="F#" Value="member this.GetParameterMarshaler : System.Reflection.ParameterInfo -&gt; Java.Interop.JniValueMarshaler" Usage="jniMarshalMemberBuilder.GetParameterMarshaler parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniValueMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectMethod">
      <MemberSignature Language="C#" Value="public bool IsDirectMethod (System.Reflection.ParameterInfo[] methodParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectMethod(class System.Reflection.ParameterInfo[] methodParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.IsDirectMethod(System.Reflection.ParameterInfo[])" />
      <MemberSignature Language="F#" Value="member this.IsDirectMethod : System.Reflection.ParameterInfo[] -&gt; bool" Usage="jniMarshalMemberBuilder.IsDirectMethod methodParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodParameters" Type="System.Reflection.ParameterInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodParameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetRuntime">
      <MemberSignature Language="C#" Value="public virtual void OnSetRuntime (Java.Interop.JniRuntime runtime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetRuntime(class Java.Interop.JniRuntime runtime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Interop.JniRuntime.JniMarshalMemberBuilder.OnSetRuntime(Java.Interop.JniRuntime)" />
      <MemberSignature Language="F#" Value="abstract member OnSetRuntime : Java.Interop.JniRuntime -&gt; unit&#xA;override this.OnSetRuntime : Java.Interop.JniRuntime -&gt; unit" Usage="jniMarshalMemberBuilder.OnSetRuntime runtime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runtime" Type="Java.Interop.JniRuntime" />
      </Parameters>
      <Docs>
        <param name="runtime">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Runtime">
      <MemberSignature Language="C#" Value="public Java.Interop.JniRuntime Runtime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniRuntime Runtime" />
      <MemberSignature Language="DocId" Value="P:Java.Interop.JniRuntime.JniMarshalMemberBuilder.Runtime" />
      <MemberSignature Language="F#" Value="member this.Runtime : Java.Interop.JniRuntime" Usage="Java.Interop.JniRuntime.JniMarshalMemberBuilder.Runtime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Java.Interop</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
