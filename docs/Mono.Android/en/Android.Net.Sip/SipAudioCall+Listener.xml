<Type Name="SipAudioCall+Listener" FullName="Android.Net.Sip.SipAudioCall+Listener">
  <TypeSignature Language="C#" Value="public class SipAudioCall.Listener : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit SipAudioCall/Listener extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/sip/SipAudioCall$Listener", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Listener for events relating to a SIP call, such as when a call is being
 recieved ("on ringing") or a call is outgoing ("on calling").</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Listener for events relating to a SIP call, such as when a call is being
 recieved ("on ringing") or a call is outgoing ("on calling").
 </para>
      <para tool="javadoc-to-mdoc">Many of these events are also received by <c><see cref="T:Android.Net.Sip.SipSession+Listener" /></c>.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Listener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#SipAudioCall.Listener()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Listener (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCallBusy">
      <MemberSignature Language="C#" Value="public virtual void OnCallBusy (Android.Net.Sip.SipAudioCall call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCallBusy(class Android.Net.Sip.SipAudioCall call) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCallBusy", "(Landroid/net/sip/SipAudioCall;)V", "GetOnCallBusy_Landroid_net_sip_SipAudioCall_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
      </Parameters>
      <Docs>
        <param name="call">the call object that carries out the audio call
</param>
        <summary>Called when the peer is busy during session initialization.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the peer is busy during session initialization.
 The default implementation calls <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnChanged(Android.Net.Sip.SipAudioCall)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onCallBusy(android.net.sip.SipAudioCall)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnCallEnded">
      <MemberSignature Language="C#" Value="public virtual void OnCallEnded (Android.Net.Sip.SipAudioCall call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCallEnded(class Android.Net.Sip.SipAudioCall call) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCallEnded", "(Landroid/net/sip/SipAudioCall;)V", "GetOnCallEnded_Landroid_net_sip_SipAudioCall_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
      </Parameters>
      <Docs>
        <param name="call">the call object that carries out the audio call
</param>
        <summary>Called when the session is terminated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the session is terminated.
 The default implementation calls <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnChanged(Android.Net.Sip.SipAudioCall)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onCallEnded(android.net.sip.SipAudioCall)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnCallEstablished">
      <MemberSignature Language="C#" Value="public virtual void OnCallEstablished (Android.Net.Sip.SipAudioCall call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCallEstablished(class Android.Net.Sip.SipAudioCall call) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCallEstablished", "(Landroid/net/sip/SipAudioCall;)V", "GetOnCallEstablished_Landroid_net_sip_SipAudioCall_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
      </Parameters>
      <Docs>
        <param name="call">the call object that carries out the audio call
</param>
        <summary>Called when the session is established.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the session is established.
 The default implementation calls <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnChanged(Android.Net.Sip.SipAudioCall)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onCallEstablished(android.net.sip.SipAudioCall)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnCallHeld">
      <MemberSignature Language="C#" Value="public virtual void OnCallHeld (Android.Net.Sip.SipAudioCall call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCallHeld(class Android.Net.Sip.SipAudioCall call) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCallHeld", "(Landroid/net/sip/SipAudioCall;)V", "GetOnCallHeld_Landroid_net_sip_SipAudioCall_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
      </Parameters>
      <Docs>
        <param name="call">the call object that carries out the audio call
</param>
        <summary>Called when the call is on hold.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the call is on hold.
 The default implementation calls <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnChanged(Android.Net.Sip.SipAudioCall)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onCallHeld(android.net.sip.SipAudioCall)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnCalling">
      <MemberSignature Language="C#" Value="public virtual void OnCalling (Android.Net.Sip.SipAudioCall call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCalling(class Android.Net.Sip.SipAudioCall call) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCalling", "(Landroid/net/sip/SipAudioCall;)V", "GetOnCalling_Landroid_net_sip_SipAudioCall_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
      </Parameters>
      <Docs>
        <param name="call">the call object that carries out the audio call
</param>
        <summary>Called when a request is sent out to initiate a new call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a request is sent out to initiate a new call.
 The default implementation calls <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnChanged(Android.Net.Sip.SipAudioCall)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onCalling(android.net.sip.SipAudioCall)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="public virtual void OnChanged (Android.Net.Sip.SipAudioCall call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChanged(class Android.Net.Sip.SipAudioCall call) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onChanged", "(Landroid/net/sip/SipAudioCall;)V", "GetOnChanged_Landroid_net_sip_SipAudioCall_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
      </Parameters>
      <Docs>
        <param name="call">To be added.</param>
        <summary>Called when an event occurs and the corresponding callback is not
 overridden.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when an event occurs and the corresponding callback is not
 overridden. The default implementation is no op. Error events are
 not re-directed to this callback and are handled in <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnError(Android.Net.Sip.SipAudioCall,Android.Net.Sip.SipErrorCodes,Android.Net.Sip.SipErrorCodes)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onChanged(android.net.sip.SipAudioCall)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public virtual void OnError (Android.Net.Sip.SipAudioCall call, Android.Net.Sip.SipErrorCodes errorCode, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class Android.Net.Sip.SipAudioCall call, valuetype Android.Net.Sip.SipErrorCodes errorCode, string errorMessage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onError", "(Landroid/net/sip/SipAudioCall;ILjava/lang/String;)V", "GetOnError_Landroid_net_sip_SipAudioCall_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
        <Parameter Name="errorCode" Type="Android.Net.Sip.SipErrorCodes">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="call">the call object that carries out the audio call</param>
        <param name="errorCode">error code of this error</param>
        <param name="errorMessage">error message</param>
        <summary>Called when an error occurs.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when an error occurs. The default implementation is no op.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onError(android.net.sip.SipAudioCall, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="T:Android.Net.Sip.SipErrorCode" />
      </Docs>
    </Member>
    <Member MemberName="OnReadyToCall">
      <MemberSignature Language="C#" Value="public virtual void OnReadyToCall (Android.Net.Sip.SipAudioCall call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReadyToCall(class Android.Net.Sip.SipAudioCall call) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onReadyToCall", "(Landroid/net/sip/SipAudioCall;)V", "GetOnReadyToCall_Landroid_net_sip_SipAudioCall_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
      </Parameters>
      <Docs>
        <param name="call">the call object that is ready to make another call
</param>
        <summary>Called when the call object is ready to make another call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the call object is ready to make another call.
 The default implementation calls <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnChanged(Android.Net.Sip.SipAudioCall)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onReadyToCall(android.net.sip.SipAudioCall)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnRinging">
      <MemberSignature Language="C#" Value="public virtual void OnRinging (Android.Net.Sip.SipAudioCall call, Android.Net.Sip.SipProfile caller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRinging(class Android.Net.Sip.SipAudioCall call, class Android.Net.Sip.SipProfile caller) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRinging", "(Landroid/net/sip/SipAudioCall;Landroid/net/sip/SipProfile;)V", "GetOnRinging_Landroid_net_sip_SipAudioCall_Landroid_net_sip_SipProfile_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
        <Parameter Name="caller" Type="Android.Net.Sip.SipProfile" />
      </Parameters>
      <Docs>
        <param name="call">the call object that carries out the audio call</param>
        <param name="caller">the SIP profile of the caller
</param>
        <summary>Called when a new call comes in.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a new call comes in.
 The default implementation calls <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnChanged(Android.Net.Sip.SipAudioCall)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onRinging(android.net.sip.SipAudioCall, android.net.sip.SipProfile)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnRingingBack">
      <MemberSignature Language="C#" Value="public virtual void OnRingingBack (Android.Net.Sip.SipAudioCall call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRingingBack(class Android.Net.Sip.SipAudioCall call) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRingingBack", "(Landroid/net/sip/SipAudioCall;)V", "GetOnRingingBack_Landroid_net_sip_SipAudioCall_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Android.Net.Sip.SipAudioCall" />
      </Parameters>
      <Docs>
        <param name="call">the call object that carries out the audio call
</param>
        <summary>Called when a RINGING response is received for the INVITE request
 sent.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a RINGING response is received for the INVITE request
 sent. The default implementation calls <c><see cref="M:Android.Net.Sip.SipAudioCall.Listener.OnChanged(Android.Net.Sip.SipAudioCall)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html#onRingingBack(android.net.sip.SipAudioCall)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
