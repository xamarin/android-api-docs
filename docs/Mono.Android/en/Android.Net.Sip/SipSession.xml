<Type Name="SipSession" FullName="Android.Net.Sip.SipSession">
  <TypeSignature Language="C#" Value="public sealed class SipSession : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SipSession extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/sip/SipSession", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>Represents a SIP session that is associated with a SIP dialog or a standalone
 transaction not within a dialog.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Represents a SIP session that is associated with a SIP dialog or a standalone
 transaction not within a dialog.
 </para>
      <para tool="javadoc-to-mdoc">You can get a <c><see cref="T:Android.Net.Sip.SipSession" /></c> from <c><see cref="T:Android.Net.Sip.SipManager" /></c> with <c><see cref="M:Android.Net.Sip.SipManager.CreateSipSession(Android.Net.Sip.SipProfile,.Listener)" /></c> (when initiating calls) or <c><see cref="M:Android.Net.Sip.SipManager.GetSessionFor(Android.Content.Intent)" /></c> (when receiving calls).</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/net/sip/SipSession.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName="AnswerCall">
      <MemberSignature Language="C#" Value="public void AnswerCall (string sessionDescription, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AnswerCall(string sessionDescription, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("answerCall", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionDescription" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionDescription">the session description to answer this call</param>
        <param name="timeout">the session will be timed out if the call is not
        established within <c>timeout</c> seconds. Default value (defined
        by SIP protocol) is used if <c>timeout</c> is zero or negative.
</param>
        <summary>Answers an incoming call with the specified session description.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Answers an incoming call with the specified session description. The
 method is only valid to call when the session state is in
 <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#INCOMING_CALL" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#answerCall(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="CallId">
      <MemberSignature Language="C#" Value="public string CallId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CallId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCallId", "()Ljava/lang/String;", "GetGetCallIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the call ID of the session.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the call ID of the session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#getCallId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ChangeCall">
      <MemberSignature Language="C#" Value="public void ChangeCall (string sessionDescription, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeCall(string sessionDescription, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("changeCall", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionDescription" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionDescription">the new session description</param>
        <param name="timeout">the session will be timed out if the call is not
        established within <c>timeout</c> seconds. Default value (defined
        by SIP protocol) is used if <c>timeout</c> is zero or negative.
</param>
        <summary>Changes the session description during a call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Changes the session description during a call. The method is only valid
 to call when the session state is in <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#IN_CALL" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#changeCall(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="EndCall">
      <MemberSignature Language="C#" Value="public void EndCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCall() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endCall", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ends an established call, terminates an outgoing call or rejects an
 incoming call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Ends an established call, terminates an outgoing call or rejects an
 incoming call. The method is only valid to call when the session state is
 in <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#IN_CALL" /></c>,
 <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#INCOMING_CALL" /></c>,
 <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#OUTGOING_CALL" /></c> or
 <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#OUTGOING_CALL_RING_BACK" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#endCall()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public Android.Net.Sip.SipSessionState GetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Android.Net.Sip.SipSessionState GetState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getState", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipSessionState</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the session state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the session state. The value returned must be one of the states in
 <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#getState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsInCall">
      <MemberSignature Language="C#" Value="public bool IsInCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInCall", "()Z", "GetIsInCallHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks if the session is in a call.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the session is in a call.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#isInCall()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="LocalIp">
      <MemberSignature Language="C#" Value="public string LocalIp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalIp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalIp", "()Ljava/lang/String;", "GetGetLocalIpHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the IP address of the local host on which this SIP session runs.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the IP address of the local host on which this SIP session runs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#getLocalIp()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="LocalProfile">
      <MemberSignature Language="C#" Value="public Android.Net.Sip.SipProfile LocalProfile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.Sip.SipProfile LocalProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalProfile", "()Landroid/net/sip/SipProfile;", "GetGetLocalProfileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the SIP profile that this session is associated with.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the SIP profile that this session is associated with.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#getLocalProfile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="MakeCall">
      <MemberSignature Language="C#" Value="public void MakeCall (Android.Net.Sip.SipProfile callee, string sessionDescription, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeCall(class Android.Net.Sip.SipProfile callee, string sessionDescription, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeCall", "(Landroid/net/sip/SipProfile;Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callee" Type="Android.Net.Sip.SipProfile" />
        <Parameter Name="sessionDescription" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="callee">the SIP profile to make the call to</param>
        <param name="sessionDescription">the session description of this call</param>
        <param name="timeout">the session will be timed out if the call is not
        established within <c>timeout</c> seconds. Default value (defined
        by SIP protocol) is used if <c>timeout</c> is zero or negative.</param>
        <summary>Initiates a call to the specified profile.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initiates a call to the specified profile. The session listener is called
 back upon defined session events. The method is only valid to call when
 the session state is in <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#READY_TO_CALL" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#makeCall(android.net.sip.SipProfile, java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="PeerProfile">
      <MemberSignature Language="C#" Value="public Android.Net.Sip.SipProfile PeerProfile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.Sip.SipProfile PeerProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPeerProfile", "()Landroid/net/sip/SipProfile;", "GetGetPeerProfileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the SIP profile that this session is connected to.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the SIP profile that this session is connected to. Only available
 when the session is associated with a SIP dialog.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#getPeerProfile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Register(int32 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("register", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="duration">duration in second before the registration expires</param>
        <summary>Performs registration to the server specified by the associated local
 profile.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs registration to the server specified by the associated local
 profile. The session listener is called back upon success or failure of
 registration. The method is only valid to call when the session state is
 in <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#READY_TO_CALL" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#register(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetListener">
      <MemberSignature Language="C#" Value="public void SetListener (Android.Net.Sip.SipSession.Listener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetListener(class Android.Net.Sip.SipSession/Listener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setListener", "(Landroid/net/sip/SipSession$Listener;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Net.Sip.SipSession+Listener" />
      </Parameters>
      <Docs>
        <param name="listener">to listen to the session events of this object
</param>
        <summary>Sets the listener to listen to the session events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener to listen to the session events. A <c>SipSession</c>
 can only hold one listener at a time. Subsequent calls to this method
 override the previous listener.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#setListener(android.net.sip.SipSession.Listener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unregister() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregister", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs unregistration to the server specified by the associated local
 profile.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs unregistration to the server specified by the associated local
 profile. Unregistration is technically the same as registration with zero
 expiration duration. The session listener is called back upon success or
 failure of unregistration. The method is only valid to call when the
 session state is in <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html#READY_TO_CALL" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipSession.html#unregister()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
  </Members>
</Type>
