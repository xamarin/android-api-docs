<Type Name="SipAudioCall" FullName="Android.Net.Sip.SipAudioCall">
  <TypeSignature Language="C#" Value="public class SipAudioCall : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SipAudioCall extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/sip/SipAudioCall", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>Handles an Internet audio call over SIP.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Handles an Internet audio call over SIP. You can instantiate this class with <c><see cref="T:Android.Net.Sip.SipManager" /></c>,
 using <c><see cref="M:Android.Net.Sip.SipManager.MakeAudioCall(Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile)" /></c> and  <c><see cref="M:Android.Net.Sip.SipManager.TakeAudioCall(Android.Content.Intent,.Listener)" /></c>.

 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">
        <i>Note:</i> Using this class require the
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#INTERNET" /></c> and
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#USE_SIP" /></c> permissions. In addition, <c><see cref="M:Android.Net.Sip.SipAudioCall.StartAudio" /></c> requires the
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#RECORD_AUDIO" /></c>,
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#ACCESS_WIFI_STATE" /></c>, and
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#WAKE_LOCK" /></c> permissions; and <c><see cref="M:Android.Net.Sip.SipAudioCall.SetSpeakerMode(System.Boolean)" /></c> requires the
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#MODIFY_AUDIO_SETTINGS" /></c> permission.</para>
      <para tool="javadoc-to-mdoc">For more information about using SIP, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/network/sip.html">Session Initiation Protocol</a></format>
 developer guide.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SipAudioCall (Android.Content.Context context, Android.Net.Sip.SipProfile localProfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Net.Sip.SipProfile localProfile) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/net/sip/SipProfile;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="localProfile" Type="Android.Net.Sip.SipProfile" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="localProfile">To be added.</param>
        <summary>Creates a call object with the local SIP profile.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a call object with the local SIP profile.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#SipAudioCall(android.content.Context, android.net.sip.SipProfile)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SipAudioCall (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerCall">
      <MemberSignature Language="C#" Value="public virtual void AnswerCall (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnswerCall(int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("answerCall", "(I)V", "GetAnswerCall_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">the timeout value in seconds. Default value (defined by
        SIP protocol) is used if <c>timeout</c> is zero or negative.</param>
        <summary>Answers a call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Answers a call. The attempt will be timed out if the call is not
 established within <c>timeout</c> seconds and
 <c><see cref="!:NoType:android/net/sip/SipAudioCall$Listener;Href=../../../../reference/android/net/sip/SipAudioCall.Listener.html#onError(android.net.sip.SipAudioCall,int,java.lang.String)" /></c>
 will be called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#answerCall(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if the SIP service fails to answer the call
</exception>
      </Docs>
    </Member>
    <Member MemberName="AttachCall">
      <MemberSignature Language="C#" Value="public virtual void AttachCall (Android.Net.Sip.SipSession session, string sessionDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachCall(class Android.Net.Sip.SipSession session, string sessionDescription) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("attachCall", "(Landroid/net/sip/SipSession;Ljava/lang/String;)V", "GetAttachCall_Landroid_net_sip_SipSession_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="Android.Net.Sip.SipSession" />
        <Parameter Name="sessionDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="session">the session that receives the incoming call</param>
        <param name="sessionDescription">the session description of the incoming call</param>
        <summary>Attaches an incoming call to this call object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Attaches an incoming call to this call object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#attachCall(android.net.sip.SipSession, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if the SIP service fails to attach this object to
        the session or VOIP API is not supported by the device</exception>
        <altmember cref="M:Android.Net.Sip.SipManager.IsVoipSupported(Android.Content.Context)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes this object. This object is not usable after being closed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ContinueCall">
      <MemberSignature Language="C#" Value="public virtual void ContinueCall (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ContinueCall(int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("continueCall", "(I)V", "GetContinueCall_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">the timeout value in seconds. Default value (defined by
        SIP protocol) is used if <c>timeout</c> is zero or negative.</param>
        <summary>Continues a call that's on hold.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a call that's on hold. When succeeds,
 <c><see cref="!:NoType:android/net/sip/SipAudioCall$Listener;Href=../../../../reference/android/net/sip/SipAudioCall.Listener.html#onCallEstablished(android.net.sip.SipAudioCall)" /></c> is called. The attempt will be timed
 out if the call is not established within <c>timeout</c> seconds and
 <c><see cref="!:NoType:android/net/sip/SipAudioCall$Listener;Href=../../../../reference/android/net/sip/SipAudioCall.Listener.html#onError(android.net.sip.SipAudioCall,int,java.lang.String)" /></c>
 will be called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#continueCall(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if the SIP service fails to unhold the call
</exception>
      </Docs>
    </Member>
    <Member MemberName="EndCall">
      <MemberSignature Language="C#" Value="public virtual void EndCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCall() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endCall", "()V", "GetEndCallHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ends a call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Ends a call.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#endCall()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if the SIP service fails to end the call
</exception>
      </Docs>
    </Member>
    <Member MemberName="HoldCall">
      <MemberSignature Language="C#" Value="public virtual void HoldCall (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HoldCall(int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("holdCall", "(I)V", "GetHoldCall_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">the timeout value in seconds. Default value (defined by
        SIP protocol) is used if <c>timeout</c> is zero or negative.</param>
        <summary>Puts a call on hold.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Puts a call on hold.  When succeeds, <c><see cref="!:NoType:android/net/sip/SipAudioCall$Listener;Href=../../../../reference/android/net/sip/SipAudioCall.Listener.html#onCallHeld(android.net.sip.SipAudioCall)" /></c> is
 called. The attempt will be timed out if the call is not established
 within <c>timeout</c> seconds and
 <c><see cref="!:NoType:android/net/sip/SipAudioCall$Listener;Href=../../../../reference/android/net/sip/SipAudioCall.Listener.html#onError(android.net.sip.SipAudioCall,int,java.lang.String)" /></c>
 will be called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#holdCall(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if the SIP service fails to hold the call
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInCall">
      <MemberSignature Language="C#" Value="public virtual bool IsInCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInCall", "()Z", "GetIsInCallHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks if the call is established.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the call is established.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#isInCall()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsMuted">
      <MemberSignature Language="C#" Value="public virtual bool IsMuted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMuted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isMuted", "()Z", "GetIsMutedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks if the call is muted.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the call is muted.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#isMuted()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsOnHold">
      <MemberSignature Language="C#" Value="public virtual bool IsOnHold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnHold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOnHold", "()Z", "GetIsOnHoldHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks if the call is on hold.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the call is on hold.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#isOnHold()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="LocalProfile">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Sip.SipProfile LocalProfile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.Sip.SipProfile LocalProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalProfile", "()Landroid/net/sip/SipProfile;", "GetGetLocalProfileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local SIP profile.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the local SIP profile.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#getLocalProfile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="MakeCall">
      <MemberSignature Language="C#" Value="public virtual void MakeCall (Android.Net.Sip.SipProfile peerProfile, Android.Net.Sip.SipSession sipSession, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MakeCall(class Android.Net.Sip.SipProfile peerProfile, class Android.Net.Sip.SipSession sipSession, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeCall", "(Landroid/net/sip/SipProfile;Landroid/net/sip/SipSession;I)V", "GetMakeCall_Landroid_net_sip_SipProfile_Landroid_net_sip_SipSession_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerProfile" Type="Android.Net.Sip.SipProfile" />
        <Parameter Name="sipSession" Type="Android.Net.Sip.SipSession" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerProfile">the SIP profile to make the call to</param>
        <param name="sipSession">the <c><see cref="T:Android.Net.Sip.SipSession" /></c> for carrying out the call</param>
        <param name="timeout">the timeout value in seconds. Default value (defined by
        SIP protocol) is used if <c>timeout</c> is zero or negative.</param>
        <summary>Initiates an audio call to the specified profile.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initiates an audio call to the specified profile. The attempt will be
 timed out if the call is not established within <c>timeout</c> seconds
 and <c><see cref="!:NoType:android/net/sip/SipAudioCall$Listener;Href=../../../../reference/android/net/sip/SipAudioCall.Listener.html#onError(android.net.sip.SipAudioCall,int,java.lang.String)" /></c>
 will be called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#makeCall(android.net.sip.SipProfile, android.net.sip.SipSession, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if the SIP service fails to create a session for the
        call or VOIP API is not supported by the device</exception>
        <altmember cref="M:Android.Net.Sip.SipManager.IsVoipSupported(Android.Content.Context)" />
      </Docs>
    </Member>
    <Member MemberName="PeerProfile">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Sip.SipProfile PeerProfile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.Sip.SipProfile PeerProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPeerProfile", "()Landroid/net/sip/SipProfile;", "GetGetPeerProfileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the peer's SIP profile.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the peer's SIP profile.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#getPeerProfile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SendDtmf">
      <MemberSignature Language="C#" Value="public virtual void SendDtmf (int code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendDtmf(int32 code) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendDtmf", "(I)V", "GetSendDtmf_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">the DTMF code to send. Value 0 to 15 (inclusive) are valid
        inputs.
</param>
        <summary>Sends a DTMF code.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sends a DTMF code. According to ,
 event 0--9 maps to decimal
 value 0--9, '*' to 10, '#' to 11, event 'A'--'D' to 12--15, and event
 flash to 16. Currently, event flash is not supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#sendDtmf(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SendDtmf">
      <MemberSignature Language="C#" Value="public virtual void SendDtmf (int code, Android.OS.Message result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendDtmf(int32 code, class Android.OS.Message result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendDtmf", "(ILandroid/os/Message;)V", "GetSendDtmf_ILandroid_os_Message_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
        <Parameter Name="result" Type="Android.OS.Message" />
      </Parameters>
      <Docs>
        <param name="code">the DTMF code to send. Value 0 to 15 (inclusive) are valid
        inputs.</param>
        <param name="result">the result message to send when done
</param>
        <summary>Sends a DTMF code.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sends a DTMF code. According to ,
 event 0--9 maps to decimal
 value 0--9, '*' to 10, '#' to 11, event 'A'--'D' to 12--15, and event
 flash to 16. Currently, event flash is not supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#sendDtmf(int, android.os.Message)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetListener">
      <MemberSignature Language="C#" Value="public virtual void SetListener (Android.Net.Sip.SipAudioCall.Listener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetListener(class Android.Net.Sip.SipAudioCall/Listener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setListener", "(Landroid/net/sip/SipAudioCall$Listener;)V", "GetSetListener_Landroid_net_sip_SipAudioCall_Listener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Net.Sip.SipAudioCall+Listener" />
      </Parameters>
      <Docs>
        <param name="listener">to listen to the audio call events of this object</param>
        <summary>Sets the listener to listen to the audio call events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener to listen to the audio call events. The method calls
 <c><see cref="M:Android.Net.Sip.SipAudioCall.SetListener(.Listener)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#setListener(android.net.sip.SipAudioCall.Listener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Net.Sip.SipAudioCall.SetListener(.Listener, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetListener">
      <MemberSignature Language="C#" Value="public virtual void SetListener (Android.Net.Sip.SipAudioCall.Listener listener, bool callbackImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetListener(class Android.Net.Sip.SipAudioCall/Listener listener, bool callbackImmediately) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setListener", "(Landroid/net/sip/SipAudioCall$Listener;Z)V", "GetSetListener_Landroid_net_sip_SipAudioCall_Listener_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Net.Sip.SipAudioCall+Listener" />
        <Parameter Name="callbackImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="listener">to listen to the audio call events of this object</param>
        <param name="callbackImmediately">set to true if the caller wants to be called
      back immediately on the current state
</param>
        <summary>Sets the listener to listen to the audio call events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener to listen to the audio call events. A
 <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c> can only hold one listener at a time. Subsequent
 calls to this method override the previous listener.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#setListener(android.net.sip.SipAudioCall.Listener, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetSpeakerMode">
      <MemberSignature Language="C#" Value="public virtual void SetSpeakerMode (bool speakerMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSpeakerMode(bool speakerMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSpeakerMode", "(Z)V", "GetSetSpeakerMode_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speakerMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="speakerMode">set true to enable speaker mode; false to disable
</param>
        <summary>Puts the device to speaker mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Puts the device to speaker mode.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Requires the
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#MODIFY_AUDIO_SETTINGS" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#setSpeakerMode(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="StartAudio">
      <MemberSignature Language="C#" Value="public virtual void StartAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAudio() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startAudio", "()V", "GetStartAudioHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the audio for the established call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts the audio for the established call. This method should be called
 after <c><see cref="!:NoType:android/net/sip/SipAudioCall$Listener;Href=../../../../reference/android/net/sip/SipAudioCall.Listener.html#onCallEstablished(android.net.sip.SipAudioCall)" /></c> is called.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Requires the
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#RECORD_AUDIO" /></c>,
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#ACCESS_WIFI_STATE" /></c> and
   <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#WAKE_LOCK" /></c> permissions.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#startAudio()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Sip.SipSessionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Net.Sip.SipSessionState State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the state of the <c><see cref="T:Android.Net.Sip.SipSession" /></c> that carries this call.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the state of the <c><see cref="T:Android.Net.Sip.SipSession" /></c> that carries this call.
 The value returned must be one of the states in <c><see cref="!:NoType:android/net/sip/SipSession$State;Href=../../../../reference/android/net/sip/SipSession.State.html" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#getState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleMute">
      <MemberSignature Language="C#" Value="public virtual void ToggleMute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleMute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toggleMute", "()V", "GetToggleMuteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Toggles mute.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Toggles mute. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/sip/SipAudioCall.html#toggleMute()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
  </Members>
</Type>
