<Type Name="Duration" FullName="Javax.Xml.Datatype.Duration">
  <TypeSignature Language="C#" Value="public abstract class Duration : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Duration extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/datatype/Duration", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">Immutable representation of a time span as defined in
 the W3C XML Schema 1.0 specification.</para>
      <para tool="javadoc-to-mdoc">A Duration object represents a period of Gregorian time,
 which consists of six fields (years, months, days, hours,
 minutes, and seconds) plus a sign (+/-) field.</para>
      <para tool="javadoc-to-mdoc">The first five fields have non-negative (&gt;=0) integers or null
 (which represents that the field is not set),
 and the seconds field has a non-negative decimal or null.
 A negative sign indicates a negative duration.</para>
      <para tool="javadoc-to-mdoc">This class provides a number of methods that make it easy
 to use for the duration datatype of XML Schema 1.0 with
 the errata.<format type="text/html"><h2>Order relationship</h2></format></para>
      <para tool="javadoc-to-mdoc">Duration objects only have partial order, where two values A and B
 maybe either:<list type="number"><item><term>A&lt;B (A is shorter than B)
  </term></item><item><term>A&gt;B (A is longer than B)
  </term></item><item><term>A==B   (A and B are of the same duration)
  </term></item><item><term>A&lt;&gt;B (Comparison between A and B is indeterminate)
 </term></item></list></para>
      <para tool="javadoc-to-mdoc">For example, 30 days cannot be meaningfully compared to one month.
 The <c><see cref="M:Javax.Xml.Datatype.Duration.Compare(Javax.Xml.Datatype.Duration)" /></c> method implements this
 relationship.</para>
      <para tool="javadoc-to-mdoc">See the <c><see cref="M:Javax.Xml.Datatype.Duration.IsLongerThan(Javax.Xml.Datatype.Duration)" /></c> method for details about
 the order relationship among <c>Duration</c> objects.</para>
      <format type="text/html">
        <h2>Operations over Duration</h2>
      </format>
      <para tool="javadoc-to-mdoc">This class provides a set of basic arithmetic operations, such
 as addition, subtraction and multiplication.
 Because durations don't have total order, an operation could
 fail for some combinations of operations. For example, you cannot
 subtract 15 days from 1 month. See the javadoc of those methods
 for detailed conditions where this could happen.</para>
      <para tool="javadoc-to-mdoc">Also, division of a duration by a number is not provided because
 the <c>Duration</c> class can only deal with finite precision
 decimal numbers. For example, one cannot represent 1 sec divided by 3.</para>
      <para tool="javadoc-to-mdoc">However, you could substitute a division by 3 with multiplying
 by numbers such as 0.3 or 0.333.<format type="text/html"><h2>Range of allowed values</h2></format></para>
      <para tool="javadoc-to-mdoc">
 Because some operations of <c>Duration</c> rely on <c><see cref="T:Java.Util.Calendar" /></c>
 even though <c><see cref="T:Javax.Xml.Datatype.Duration" /></c> can hold very large or very small values,
 some of the methods may not work correctly on such <c>Duration</c>s.
 The impacted methods document their dependency on <c><see cref="T:Java.Util.Calendar" /></c>.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="M:Javax.Xml.Datatype.XMLGregorianCalendar.Add(Javax.Xml.Datatype.Duration)" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Duration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#Duration()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Duration (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Datatype.Duration Add (Javax.Xml.Datatype.Duration rhs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Datatype.Duration Add(class Javax.Xml.Datatype.Duration rhs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("add", "(Ljavax/xml/datatype/Duration;)Ljavax/xml/datatype/Duration;", "GetAdd_Ljavax_xml_datatype_Duration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Datatype.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rhs" Type="Javax.Xml.Datatype.Duration" />
      </Parameters>
      <Docs>
        <param name="rhs">
          <c>Duration</c> to add to this <c>Duration</c></param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Computes a new duration whose value is <c>this+rhs</c>.</para>
          <para tool="javadoc-to-mdoc">For example,<example><code lang="java">
 "1 day" + "-3 days" = "-2 days"
 "1 year" + "1 day" = "1 year and 1 day"
 "-(1 hour,50 minutes)" + "-20 minutes" = "-(1 hours,70 minutes)"
 "15 hours" + "-3 days" = "-(2 days,9 hours)"
 "1 year" + "-1 day" = IllegalStateException
 </code></example></para>
          <para tool="javadoc-to-mdoc">Since there's no way to meaningfully subtract 1 day from 1 month,
 there are cases where the operation fails in
 <c><see cref="T:Java.Lang.IllegalStateException" /></c>.</para>
          <para tool="javadoc-to-mdoc">
 Formally, the computation is defined as follows.</para>
          <para tool="javadoc-to-mdoc">
 Firstly, we can assume that two <c>Duration</c>s to be added
 are both positive without losing generality (i.e.,
 <c>(-X)+Y=Y-X</c>, <c>X+(-Y)=X-Y</c>,
 <c>(-X)+(-Y)=-(X+Y)</c>)

 </para>
          <para tool="javadoc-to-mdoc">
 Addition of two positive <c>Duration</c>s are simply defined as
 field by field addition where missing fields are treated as 0.
 </para>
          <para tool="javadoc-to-mdoc">
 A field of the resulting <c>Duration</c> will be unset if and
 only if respective fields of two input <c>Duration</c>s are unset.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that <c>lhs.add(rhs)</c> will be always successful if
 <c>lhs.signum()*rhs.signum()!=-1</c> or both of them are
 normalized.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#add(javax.xml.datatype.Duration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">If the rhs parameter is null.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If two durations cannot be meaningfully added. For
      example, adding negative one day to one month causes
      this exception.</exception>
        <altmember cref="M:Javax.Xml.Datatype.Duration.Subtract(Javax.Xml.Datatype.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="AddTo">
      <MemberSignature Language="C#" Value="public abstract void AddTo (Java.Util.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTo(class Java.Util.Calendar calendar) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTo", "(Ljava/util/Calendar;)V", "GetAddTo_Ljava_util_Calendar_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calendar" Type="Java.Util.Calendar" />
      </Parameters>
      <Docs>
        <param name="calendar">A calendar object whose value will be modified.</param>
        <summary>Adds this duration to a <c><see cref="T:Java.Util.Calendar" /></c> object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds this duration to a <c><see cref="T:Java.Util.Calendar" /></c> object.

 </para>
          <para tool="javadoc-to-mdoc">
 Calls <c><see cref="M:Java.Util.Calendar.Add(Java.Util.CalendarField,System.Int32)" /></c> in the
 order of YEARS, MONTHS, DAYS, HOURS, MINUTES, SECONDS, and MILLISECONDS
 if those fields are present. Because the <c><see cref="T:Java.Util.Calendar" /></c> class
 uses int to hold values, there are cases where this method
 won't work correctly (for example if values of fields
 exceed the range of int.)
 </para>
          <para tool="javadoc-to-mdoc">
 Also, since this duration class is a Gregorian duration, this
 method will not work correctly if the given <c><see cref="T:Java.Util.Calendar" /></c>
 object is based on some other calendar systems.
 </para>
          <para tool="javadoc-to-mdoc">
 Any fractional parts of this <c>Duration</c> object
 beyond milliseconds will be simply ignored. For example, if
 this duration is "P1.23456S", then 1 is added to SECONDS,
 234 is added to MILLISECONDS, and the rest will be unused.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that because <c><see cref="M:Java.Util.Calendar.Add(Java.Util.CalendarField,System.Int32)" /></c> is using
 <c>int</c>, <c>Duration</c> with values beyond the
 range of <c>int</c> in its fields
 will cause overflow/underflow to the given <c><see cref="T:Java.Util.Calendar" /></c>.
 <c><see cref="M:Javax.Xml.Datatype.XMLGregorianCalendar.Add(Javax.Xml.Datatype.Duration)" /></c> provides the same
 basic operation as this method while avoiding
 the overflow/underflow issues.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#addTo(java.util.Calendar)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">if the calendar parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTo">
      <MemberSignature Language="C#" Value="public virtual void AddTo (Java.Util.Date date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTo(class Java.Util.Date date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTo", "(Ljava/util/Date;)V", "GetAddTo_Ljava_util_Date_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="Java.Util.Date" />
      </Parameters>
      <Docs>
        <param name="date">A date object whose value will be modified.</param>
        <summary>Adds this duration to a <c><see cref="T:Java.Util.Date" /></c> object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds this duration to a <c><see cref="T:Java.Util.Date" /></c> object.

 </para>
          <para tool="javadoc-to-mdoc">
 The given date is first converted into
 a <c><see cref="T:Java.Util.GregorianCalendar" /></c>, then the duration
 is added exactly like the <c><see cref="M:Javax.Xml.Datatype.Duration.AddTo(Java.Util.Calendar)" /></c> method.

 </para>
          <para tool="javadoc-to-mdoc">
 The updated time instant is then converted back into a
 <c><see cref="T:Java.Util.Date" /></c> object and used to update the given <c><see cref="T:Java.Util.Date" /></c> object.

 </para>
          <para tool="javadoc-to-mdoc">
 This somewhat redundant computation is necessary to unambiguously
 determine the duration of months and years.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#addTo(java.util.Date)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">if the date parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (Javax.Xml.Datatype.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class Javax.Xml.Datatype.Duration duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compare", "(Ljavax/xml/datatype/Duration;)I", "GetCompare_Ljavax_xml_datatype_Duration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="Javax.Xml.Datatype.Duration" />
      </Parameters>
      <Docs>
        <param name="duration">to compare</param>
        <summary>
          <list type="bullet">
            <item>
              <term>
                <c>
                  <see cref="F:Javax.Xml.Datatype.DatatypeConstants.Lesser" />
                </c> if this <c>Duration</c> is shorter than <c>duration</c> parameter</term>
            </item>
            <item>
              <term>
                <c>
                  <see cref="F:Javax.Xml.Datatype.DatatypeConstants.Equal" />
                </c> if this <c>Duration</c> is equal to <c>duration</c> parameter</term>
            </item>
            <item>
              <term>
                <c>
                  <see cref="F:Javax.Xml.Datatype.DatatypeConstants.Greater" />
                </c> if this <c>Duration</c> is longer than <c>duration</c> parameter</term>
            </item>
            <item>
              <term>
                <c>
                  <see cref="F:Javax.Xml.Datatype.DatatypeConstants.Indeterminate" />
                </c> if a conclusive partial order relation cannot be determined</term>
            </item>
          </list>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="bullet">
              <item>
                <term>
                  <c>
                    <see cref="F:Javax.Xml.Datatype.DatatypeConstants.Lesser" />
                  </c> if this <c>Duration</c> is shorter than <c>duration</c> parameter</term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="F:Javax.Xml.Datatype.DatatypeConstants.Equal" />
                  </c> if this <c>Duration</c> is equal to <c>duration</c> parameter</term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="F:Javax.Xml.Datatype.DatatypeConstants.Greater" />
                  </c> if this <c>Duration</c> is longer than <c>duration</c> parameter</term>
              </item>
              <item>
                <term>
                  <c>
                    <see cref="F:Javax.Xml.Datatype.DatatypeConstants.Indeterminate" />
                  </c> if a conclusive partial order relation cannot be determined</term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Partial order relation comparison with this <c>Duration</c> instance.</para>
          <para tool="javadoc-to-mdoc">Comparison result must be in accordance with
 .</para>
          <para tool="javadoc-to-mdoc">Return:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#compare(javax.xml.datatype.Duration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">If the underlying implementation
   cannot reasonably process the request, e.g. W3C XML Schema allows for
   arbitrarily large/small/precise values, the request may be beyond the
   implementations capability.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>duration</c> is <c>null</c>.</exception>
        <altmember cref="M:Javax.Xml.Datatype.Duration.IsShorterThan(Javax.Xml.Datatype.Duration)" />
        <altmember cref="M:Javax.Xml.Datatype.Duration.IsLongerThan(Javax.Xml.Datatype.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="C#" Value="public virtual int Days { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Days" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDays", "()I", "GetGetDaysHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the value of the DAYS field as an integer value,
 or 0 if not present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the value of the DAYS field as an integer value,
 or 0 if not present.

 This method works just like <c><see cref="P:Javax.Xml.Datatype.Duration.Years" /></c> except
 that this method works on the DAYS field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getDays()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Number GetField (Javax.Xml.Datatype.DatatypeConstants.Field field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Number GetField(class Javax.Xml.Datatype.DatatypeConstants/Field field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getField", "(Ljavax/xml/datatype/DatatypeConstants$Field;)Ljava/lang/Number;", "GetGetField_Ljavax_xml_datatype_DatatypeConstants_Field_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Number</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Javax.Xml.Datatype.DatatypeConstants+Field" />
      </Parameters>
      <Docs>
        <param name="field">one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
      MINUTES, or SECONDS.)</param>
        <summary>Gets the value of a field.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the value of a field.

 Fields of a duration object may contain arbitrary large value.
 Therefore this method is designed to return a <c><see cref="T:Java.Lang.Number" /></c> object.

 In case of YEARS, MONTHS, DAYS, HOURS, and MINUTES, the returned
 number will be a non-negative integer. In case of seconds,
 the returned number may be a non-negative decimal value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getField(javax.xml.datatype.DatatypeConstants.Field)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">If the <c>field</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hashCode", "()I", "GetGetHashCodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash code consistent with the definition of the equals method.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a hash code consistent with the definition of the equals method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#hashCode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Java.Lang.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTimeInMillis">
      <MemberSignature Language="C#" Value="public virtual long GetTimeInMillis (Java.Util.Calendar startInstant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetTimeInMillis(class Java.Util.Calendar startInstant) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTimeInMillis", "(Ljava/util/Calendar;)J", "GetGetTimeInMillis_Ljava_util_Calendar_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startInstant" Type="Java.Util.Calendar" />
      </Parameters>
      <Docs>
        <param name="startInstant">The length of a month/year varies. The <c>startInstant</c> is
      used to disambiguate this variance. Specifically, this method
      returns the difference between <c>startInstant</c> and
      <c>startInstant+duration</c></param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the length of the duration in milliseconds.</para>
          <para tool="javadoc-to-mdoc">If the seconds field carries more digits than millisecond order,
 those will be simply discarded (or in other words, rounded to zero.)
 For example, for any Calendar value <c>x</c>,</para>
          <example>
            <code lang="java">new Duration("PT10.00099S").getTimeInMills(x) == 10000.
 new Duration("-PT10.00099S").getTimeInMills(x) == -10000.
 </code>
          </example>
          <para tool="javadoc-to-mdoc">
 Note that this method uses the <c><see cref="M:Javax.Xml.Datatype.Duration.AddTo(Java.Util.Calendar)" /></c> method,
 which may work incorrectly with <c>Duration</c> objects with
 very large values in its fields. See the <c><see cref="M:Javax.Xml.Datatype.Duration.AddTo(Java.Util.Calendar)" /></c>
 method for details.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getTimeInMillis(java.util.Calendar)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>startInstant</c> parameter
 is null.

</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeInMillis">
      <MemberSignature Language="C#" Value="public virtual long GetTimeInMillis (Java.Util.Date startInstant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetTimeInMillis(class Java.Util.Date startInstant) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTimeInMillis", "(Ljava/util/Date;)J", "GetGetTimeInMillis_Ljava_util_Date_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startInstant" Type="Java.Util.Date" />
      </Parameters>
      <Docs>
        <param name="startInstant">The length of a month/year varies. The <c>startInstant</c> is
      used to disambiguate this variance. Specifically, this method
      returns the difference between <c>startInstant</c> and
      <c>startInstant+duration</c>.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the length of the duration in milliseconds.</para>
          <para tool="javadoc-to-mdoc">If the seconds field carries more digits than millisecond order,
 those will be simply discarded (or in other words, rounded to zero.)
 For example, for any <c>Date</c> value <c>x</c>,</para>
          <example>
            <code lang="java">new Duration("PT10.00099S").getTimeInMills(x) == 10000.
 new Duration("-PT10.00099S").getTimeInMills(x) == -10000.
 </code>
          </example>
          <para tool="javadoc-to-mdoc">
 Note that this method uses the <c><see cref="M:Javax.Xml.Datatype.Duration.AddTo(Java.Util.Date)" /></c> method,
 which may work incorrectly with <c>Duration</c> objects with
 very large values in its fields. See the <c><see cref="M:Javax.Xml.Datatype.Duration.AddTo(Java.Util.Date)" /></c>
 method for details.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getTimeInMillis(java.util.Date)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">If the startInstant parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Datatype.Duration.GetTimeInMillis(Java.Util.Calendar)" />
      </Docs>
    </Member>
    <Member MemberName="Hours">
      <MemberSignature Language="C#" Value="public virtual int Hours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHours", "()I", "GetGetHoursHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the value of the HOURS field as an integer value,
 or 0 if not present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the value of the HOURS field as an integer value,
 or 0 if not present.

 This method works just like <c><see cref="P:Javax.Xml.Datatype.Duration.Years" /></c> except
 that this method works on the HOURS field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getHours()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IsLongerThan">
      <MemberSignature Language="C#" Value="public virtual bool IsLongerThan (Javax.Xml.Datatype.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLongerThan(class Javax.Xml.Datatype.Duration duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLongerThan", "(Ljavax/xml/datatype/Duration;)Z", "GetIsLongerThan_Ljavax_xml_datatype_Duration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="Javax.Xml.Datatype.Duration" />
      </Parameters>
      <Docs>
        <param name="duration">
          <c>Duration</c> to test this <c>Duration</c> against.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Checks if this duration object is strictly longer than
 another <c>Duration</c> object.</para>
          <para tool="javadoc-to-mdoc">Duration X is "longer" than Y if and only if X&gt;Y
 as defined in the section 3.2.6.2 of the XML Schema 1.0
 specification.</para>
          <para tool="javadoc-to-mdoc">For example, "P1D" (one day) &gt; "PT12H" (12 hours) and
 "P2Y" (two years) &gt; "P23M" (23 months).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#isLongerThan(javax.xml.datatype.Duration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">If the underlying implementation
   cannot reasonably process the request, e.g. W3C XML Schema allows for
   arbitrarily large/small/precise values, the request may be beyond the
   implementations capability.</exception>
        <exception cref="T:Java.Lang.NullPointerException">If <c>duration</c> is null.</exception>
        <altmember cref="M:Javax.Xml.Datatype.Duration.IsShorterThan(Javax.Xml.Datatype.Duration)" />
        <altmember cref="M:Javax.Xml.Datatype.Duration.Compare(Javax.Xml.Datatype.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="IsSet">
      <MemberSignature Language="C#" Value="public abstract bool IsSet (Javax.Xml.Datatype.DatatypeConstants.Field field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSet(class Javax.Xml.Datatype.DatatypeConstants/Field field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSet", "(Ljavax/xml/datatype/DatatypeConstants$Field;)Z", "GetIsSet_Ljavax_xml_datatype_DatatypeConstants_Field_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Javax.Xml.Datatype.DatatypeConstants+Field" />
      </Parameters>
      <Docs>
        <param name="field">one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
      MINUTES, or SECONDS.)</param>
        <summary>Checks if a field is set.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if a field is set.

 A field of a duration object may or may not be present.
 This method can be used to test if a field is present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#isSet(javax.xml.datatype.DatatypeConstants.Field)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">If the field parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsShorterThan">
      <MemberSignature Language="C#" Value="public virtual bool IsShorterThan (Javax.Xml.Datatype.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsShorterThan(class Javax.Xml.Datatype.Duration duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isShorterThan", "(Ljavax/xml/datatype/Duration;)Z", "GetIsShorterThan_Ljavax_xml_datatype_Duration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="Javax.Xml.Datatype.Duration" />
      </Parameters>
      <Docs>
        <param name="duration">
          <c>Duration</c> to test this <c>Duration</c> against.</param>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Checks if this duration object is strictly shorter than
 another <c>Duration</c> object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#isShorterThan(javax.xml.datatype.Duration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">If the underlying implementation
   cannot reasonably process the request, e.g. W3C XML Schema allows for
   arbitrarily large/small/precise values, the request may be beyond the
   implementations capability.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>duration</c> is null.</exception>
        <altmember cref="M:Javax.Xml.Datatype.Duration.IsLongerThan(Javax.Xml.Datatype.Duration)" />
        <altmember cref="M:Javax.Xml.Datatype.Duration.Compare(Javax.Xml.Datatype.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Minutes">
      <MemberSignature Language="C#" Value="public virtual int Minutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinutes", "()I", "GetGetMinutesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the value of the MINUTES field as an integer value,
 or 0 if not present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the value of the MINUTES field as an integer value,
 or 0 if not present.

 This method works just like <c><see cref="P:Javax.Xml.Datatype.Duration.Years" /></c> except
 that this method works on the MINUTES field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getMinutes()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Months">
      <MemberSignature Language="C#" Value="public virtual int Months { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Months" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMonths", "()I", "GetGetMonthsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the value of the MONTHS field as an integer value,
 or 0 if not present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the value of the MONTHS field as an integer value,
 or 0 if not present.

 This method works just like <c><see cref="P:Javax.Xml.Datatype.Duration.Years" /></c> except
 that this method works on the MONTHS field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getMonths()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Datatype.Duration Multiply (Java.Math.BigDecimal factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Datatype.Duration Multiply(class Java.Math.BigDecimal factor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("multiply", "(Ljava/math/BigDecimal;)Ljavax/xml/datatype/Duration;", "GetMultiply_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Datatype.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="factor">to multiply by</param>
        <summary tool="true">Computes a new duration whose value is <c>factor</c> times
 longer than the value of this duration.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Computes a new duration whose value is <c>factor</c> times
 longer than the value of this duration.

 </para>
          <para tool="javadoc-to-mdoc">
 For example,
 <example><code lang="java">
 "P1M" (1 month) * "12" = "P12M" (12 months)
 "PT1M" (1 min) * "0.3" = "PT18S" (18 seconds)
 "P1M" (1 month) * "1.5" = IllegalStateException
 </code></example></para>
          <para tool="javadoc-to-mdoc">
 Since the <c>Duration</c> class is immutable, this method
 doesn't change the value of this object. It simply computes
 a new Duration object and returns it.

 </para>
          <para tool="javadoc-to-mdoc">
 The operation will be performed field by field with the precision
 of <c><see cref="T:Java.Math.BigDecimal" /></c>. Since all the fields except seconds are
 restricted to hold integers,
 any fraction produced by the computation will be
 carried down toward the next lower unit. For example,
 if you multiply "P1D" (1 day) with "0.5", then it will be 0.5 day,
 which will be carried down to "PT12H" (12 hours).
 When fractions of month cannot be meaningfully carried down
 to days, or year to months, this will cause an
 <c><see cref="T:Java.Lang.IllegalStateException" /></c> to be thrown.
 For example if you multiple one month by 0.5.</para>
          <para tool="javadoc-to-mdoc">
 To avoid <c><see cref="T:Java.Lang.IllegalStateException" /></c>, use
 the <c><see cref="M:Javax.Xml.Datatype.Duration.NormalizeWith(Java.Util.Calendar)" /></c> method to remove the years
 and months fields.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#multiply(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalStateException">if operation produces fraction in
 the months field.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the <c>factor</c> parameter is
 <c>null</c>.

</exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Datatype.Duration Multiply (int factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Datatype.Duration Multiply(int32 factor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("multiply", "(I)Ljavax/xml/datatype/Duration;", "GetMultiply_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Datatype.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="factor">Factor times longer of new <c>Duration</c> to create.</param>
        <summary>
          <example>
            <code lang="java">
 multiply(new BigDecimal(String.valueOf(factor)))
 </code>
          </example>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <example>
              <code lang="java">
 multiply(new BigDecimal(String.valueOf(factor)))
 </code>
            </example>
          </para>
          <para tool="javadoc-to-mdoc">Computes a new duration whose value is <c>factor</c> times
 longer than the value of this duration.</para>
          <para tool="javadoc-to-mdoc">This method is provided for the convenience.
 It is functionally equivalent to the following code:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#multiply(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Javax.Xml.Datatype.Duration.Multiply(Java.Math.BigDecimal)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Datatype.Duration Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Datatype.Duration Negate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("negate", "()Ljavax/xml/datatype/Duration;", "GetNegateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Datatype.Duration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>Duration</c> object whose
 value is <c>-this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>Duration</c> object whose
 value is <c>-this</c>.

 </para>
          <para tool="javadoc-to-mdoc">
 Since the <c>Duration</c> class is immutable, this method
 doesn't change the value of this object. It simply computes
 a new Duration object and returns it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#negate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="NormalizeWith">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Datatype.Duration NormalizeWith (Java.Util.Calendar startTimeInstant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Datatype.Duration NormalizeWith(class Java.Util.Calendar startTimeInstant) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("normalizeWith", "(Ljava/util/Calendar;)Ljavax/xml/datatype/Duration;", "GetNormalizeWith_Ljava_util_Calendar_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Datatype.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startTimeInstant" Type="Java.Util.Calendar" />
      </Parameters>
      <Docs>
        <param name="startTimeInstant">
          <c>Calendar</c> reference point.</param>
        <summary>
          <list type="number">
            <item>
              <term>the given Calendar object is cloned</term>
            </item>
            <item>
              <term>the years, months and days fields will be added to the <c><see cref="T:Java.Util.Calendar" /></c> object
      by using the <c><see cref="M:Java.Util.Calendar.Add(Java.Util.CalendarField,System.Int32)" /></c> method</term>
            </item>
            <item>
              <term>the difference between the two Calendars in computed in milliseconds and converted to days,
     if a remainder occurs due to Daylight Savings Time, it is discarded</term>
            </item>
            <item>
              <term>the computed days, along with the hours, minutes and seconds
      fields of this duration object is used to construct a new
      Duration object.</term>
            </item>
          </list>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="number">
              <item>
                <term>the given Calendar object is cloned</term>
              </item>
              <item>
                <term>the years, months and days fields will be added to the <c><see cref="T:Java.Util.Calendar" /></c> object
      by using the <c><see cref="M:Java.Util.Calendar.Add(Java.Util.CalendarField,System.Int32)" /></c> method</term>
              </item>
              <item>
                <term>the difference between the two Calendars in computed in milliseconds and converted to days,
     if a remainder occurs due to Daylight Savings Time, it is discarded</term>
              </item>
              <item>
                <term>the computed days, along with the hours, minutes and seconds
      fields of this duration object is used to construct a new
      Duration object.</term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Converts the years and months fields into the days field
 by using a specific time instant as the reference point.</para>
          <para tool="javadoc-to-mdoc">For example, duration of one month normalizes to 31 days
 given the start time instance "July 8th 2003, 17:40:32".</para>
          <para tool="javadoc-to-mdoc">Formally, the computation is done as follows:</para>
          <para tool="javadoc-to-mdoc">Note that since the Calendar class uses <c>int</c> to
 hold the value of year and month, this method may produce
 an unexpected result if this duration object holds
 a very large value in the years or months fields.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#normalizeWith(java.util.Calendar)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">If the startTimeInstant parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Seconds">
      <MemberSignature Language="C#" Value="public virtual int Seconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Seconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSeconds", "()I", "GetGetSecondsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the value of the SECONDS field as an integer value,
 or 0 if not present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the value of the SECONDS field as an integer value,
 or 0 if not present.

 This method works just like <c><see cref="P:Javax.Xml.Datatype.Duration.Years" /></c> except
 that this method works on the SECONDS field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getSeconds()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public abstract int Sign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSign", "()I", "GetGetSignHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the sign of this duration in -1,0, or 1.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the sign of this duration in -1,0, or 1.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getSign()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Datatype.Duration Subtract (Javax.Xml.Datatype.Duration rhs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Datatype.Duration Subtract(class Javax.Xml.Datatype.Duration rhs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("subtract", "(Ljavax/xml/datatype/Duration;)Ljavax/xml/datatype/Duration;", "GetSubtract_Ljavax_xml_datatype_Duration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Datatype.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rhs" Type="Javax.Xml.Datatype.Duration" />
      </Parameters>
      <Docs>
        <param name="rhs">
          <c>Duration</c> to subtract from this <c>Duration</c>.</param>
        <summary>
          <example>
            <code lang="java">
 "1 day" - "-3 days" = "4 days"
 "1 year" - "1 day" = IllegalStateException
 "-(1 hour,50 minutes)" - "-20 minutes" = "-(1hours,30 minutes)"
 "15 hours" - "-3 days" = "3 days and 15 hours"
 "1 year" - "-1 day" = "1 year and 1 day"
 </code>
          </example>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <example>
              <code lang="java">
 "1 day" - "-3 days" = "4 days"
 "1 year" - "1 day" = IllegalStateException
 "-(1 hour,50 minutes)" - "-20 minutes" = "-(1hours,30 minutes)"
 "15 hours" - "-3 days" = "3 days and 15 hours"
 "1 year" - "-1 day" = "1 year and 1 day"
 </code>
            </example>
          </para>
          <para tool="javadoc-to-mdoc">Computes a new duration whose value is <c>this-rhs</c>.</para>
          <para tool="javadoc-to-mdoc">For example:</para>
          <para tool="javadoc-to-mdoc">Since there's no way to meaningfully subtract 1 day from 1 month,
 there are cases where the operation fails in <c><see cref="T:Java.Lang.IllegalStateException" /></c>.</para>
          <para tool="javadoc-to-mdoc">Formally the computation is defined as follows.
 First, we can assume that two <c>Duration</c>s are both positive
 without losing generality.  (i.e.,
 <c>(-X)-Y=-(X+Y)</c>, <c>X-(-Y)=X+Y</c>,
 <c>(-X)-(-Y)=-(X-Y)</c>)</para>
          <para tool="javadoc-to-mdoc">Then two durations are subtracted field by field.
 If the sign of any non-zero field <c>F</c> is different from
 the sign of the most significant field,
 1 (if <c>F</c> is negative) or -1 (otherwise)
 will be borrowed from the next bigger unit of <c>F</c>.</para>
          <para tool="javadoc-to-mdoc">This process is repeated until all the non-zero fields have
 the same sign.</para>
          <para tool="javadoc-to-mdoc">If a borrow occurs in the days field (in other words, if
 the computation needs to borrow 1 or -1 month to compensate
 days), then the computation fails by throwing an
 <c><see cref="T:Java.Lang.IllegalStateException" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#subtract(javax.xml.datatype.Duration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalStateException">If two durations cannot be meaningfully subtracted. For
      example, subtracting one day from one month causes
      this exception.</exception>
        <exception cref="T:Java.Lang.NullPointerException">If the rhs parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Datatype.Duration.Add(Javax.Xml.Datatype.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLSchemaType">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Namespace.QName XMLSchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Namespace.QName XMLSchemaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getXMLSchemaType", "()Ljavax/xml/namespace/QName;", "GetGetXMLSchemaTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Namespace.QName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
          <format type="text/html">
            <table border="2" rules="all" cellpadding="2">
              <thead>
                <tr>
                  <th align="center" colspan="7">
         Required fields for XML Schema 1.0 Date/Time Datatypes.<br /><i>(timezone is optional for all date/time datatypes)</i></th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Datatype</td>
                  <td>year</td>
                  <td>month</td>
                  <td>day</td>
                  <td>hour</td>
                  <td>minute</td>
                  <td>second</td>
                </tr>
                <tr>
                  <td>
                    <c>
                      <see cref="P:Javax.Xml.Datatype.DatatypeConstants.Duration" />
                    </c>
                  </td>
                  <td>X</td>
                  <td>X</td>
                  <td>X</td>
                  <td>X</td>
                  <td>X</td>
                  <td>X</td>
                </tr>
                <tr>
                  <td>
                    <c>
                      <see cref="P:Javax.Xml.Datatype.DatatypeConstants.DurationDaytime" />
                    </c>
                  </td>
                  <td />
                  <td />
                  <td>X</td>
                  <td>X</td>
                  <td>X</td>
                  <td>X</td>
                </tr>
                <tr>
                  <td>
                    <c>
                      <see cref="P:Javax.Xml.Datatype.DatatypeConstants.DurationYearmonth" />
                    </c>
                  </td>
                  <td>X</td>
                  <td>X</td>
                  <td />
                  <td />
                  <td />
                  <td />
                </tr>
              </tbody>
            </table>
          </format>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <table border="2" rules="all" cellpadding="2">
                <thead>
                  <tr>
                    <th align="center" colspan="7">
         Required fields for XML Schema 1.0 Date/Time Datatypes.<br /><i>(timezone is optional for all date/time datatypes)</i></th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>Datatype</td>
                    <td>year</td>
                    <td>month</td>
                    <td>day</td>
                    <td>hour</td>
                    <td>minute</td>
                    <td>second</td>
                  </tr>
                  <tr>
                    <td>
                      <c>
                        <see cref="P:Javax.Xml.Datatype.DatatypeConstants.Duration" />
                      </c>
                    </td>
                    <td>X</td>
                    <td>X</td>
                    <td>X</td>
                    <td>X</td>
                    <td>X</td>
                    <td>X</td>
                  </tr>
                  <tr>
                    <td>
                      <c>
                        <see cref="P:Javax.Xml.Datatype.DatatypeConstants.DurationDaytime" />
                      </c>
                    </td>
                    <td />
                    <td />
                    <td>X</td>
                    <td>X</td>
                    <td>X</td>
                    <td>X</td>
                  </tr>
                  <tr>
                    <td>
                      <c>
                        <see cref="P:Javax.Xml.Datatype.DatatypeConstants.DurationYearmonth" />
                      </c>
                    </td>
                    <td>X</td>
                    <td>X</td>
                    <td />
                    <td />
                    <td />
                    <td />
                  </tr>
                </tbody>
              </table>
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Return the name of the XML Schema date/time type that this instance
 maps to. Type is computed based on fields that are set,
 i.e. <c><see cref="M:Javax.Xml.Datatype.Duration.IsSet(.Field)" /></c> == <c>true</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getXMLSchemaType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalStateException">If the combination of set fields does not match one of the XML Schema date/time datatypes.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Years">
      <MemberSignature Language="C#" Value="public virtual int Years { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Years" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getYears", "()I", "GetGetYearsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Get the years value of this <c>Duration</c> as an <c>int</c> or <c>0</c> if not present.</para>
          <para tool="javadoc-to-mdoc">
            <c>getYears()</c> is a convenience method for
 <c><see cref="M:Javax.Xml.Datatype.Duration.GetField(.Field)" /></c>.</para>
          <para tool="javadoc-to-mdoc">As the return value is an <c>int</c>, an incorrect value will be returned for <c>Duration</c>s
 with years that go beyond the range of an <c>int</c>.
 Use <c><see cref="M:Javax.Xml.Datatype.Duration.GetField(.Field)" /></c> to avoid possible loss of precision.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/datatype/Duration.html#getYears()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
