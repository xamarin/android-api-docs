<Type Name="HostApduService" FullName="Android.Nfc.CardEmulators.HostApduService">
  <TypeSignature Language="C#" Value="public abstract class HostApduService : Android.App.Service" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HostApduService extends Android.App.Service" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Service</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/nfc/cardemulation/HostApduService", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">HostApduService is a convenience <c><see cref="T:Android.App.Service" /></c> class that can be
 extended to emulate an NFC card inside an Android
 service component.

 <format type="text/html"><h3>Developer Guide</h3></format>
 For a general introduction into the topic of card emulation,
 please read the <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/nfc/ce.html">
 NFC card emulation developer guide.</a></format></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <h3>NFC Protocols</h3>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">Cards emulated by this class are based on the NFC-Forum ISO-DEP
 protocol (based on ISO/IEC 14443-4) and support processing
 command Application Protocol Data Units (APDUs) as
 defined in the ISO/IEC 7816-4 specification.

 <format type="text/html"><h3>Service selection</h3></format></para>
      <para tool="javadoc-to-mdoc">When a remote NFC device wants to talk to your
 service, it sends a so-called
 "SELECT AID" APDU as defined in the ISO/IEC 7816-4 specification.
 The AID is an application identifier defined in ISO/IEC 7816-4.

 </para>
      <para tool="javadoc-to-mdoc">The registration procedure for AIDs is defined in the
 ISO/IEC 7816-5 specification. If you don't want to register an
 AID, you are free to use AIDs in the proprietary range:
 bits 8-5 of the first byte must each be set to '1'. For example,
 "0xF00102030405" is a proprietary AID. If you do use proprietary
 AIDs, it is recommended to choose an AID of at least 6 bytes,
 to reduce the risk of collisions with other applications that
 might be using proprietary AIDs as well.

 <format type="text/html"><h3>AID groups</h3></format></para>
      <para tool="javadoc-to-mdoc">In some cases, a service may need to register multiple AIDs
 to implement a certain application, and it needs to be sure
 that it is the default handler for all of these AIDs (as opposed
 to some AIDs in the group going to another service).

 </para>
      <para tool="javadoc-to-mdoc">An AID group is a list of AIDs that should be considered as
 belonging together by the OS. For all AIDs in an AID group, the
 OS will guarantee one of the following:
 <list type="bullet"><item><term>All AIDs in the group are routed to this service
 </term></item><item><term>No AIDs in the group are routed to this service
 </term></item></list>
 In other words, there is no in-between state, where some AIDs
 in the group can be routed to this service, and some to another.
 <format type="text/html"><h3>AID groups and categories</h3></format></para>
      <para tool="javadoc-to-mdoc">Each AID group can be associated with a category. This allows
 the Android OS to classify services, and it allows the user to
 set defaults at the category level instead of the AID level.

 </para>
      <para tool="javadoc-to-mdoc">You can use
 <c><see cref="M:Android.Nfc.CardEmulators.CardEmulation.IsDefaultServiceForCategory(Android.Content.ComponentName,System.String)" /></c>
 to determine if your service is the default handler for a category.

 </para>
      <para tool="javadoc-to-mdoc">In this version of the platform, the only known categories
 are <c><see cref="F:Android.Nfc.CardEmulators.CardEmulation.CategoryPayment" /></c> and <c><see cref="F:Android.Nfc.CardEmulators.CardEmulation.CategoryOther" /></c>.
 AID groups without a category, or with a category that is not recognized
 by the current platform version, will automatically be
 grouped into the <c><see cref="F:Android.Nfc.CardEmulators.CardEmulation.CategoryOther" /></c> category.
 <format type="text/html"><h3>Service AID registration</h3></format></para>
      <para tool="javadoc-to-mdoc">To tell the platform which AIDs groups
 are requested by this service, a <c><see cref="F:Android.Nfc.CardEmulators.HostApduService.ServiceMetaData" /></c>
 entry must be included in the declaration of the service. An
 example of a HostApduService manifest declaration is shown below:
 <example><code lang="xml"> &lt;service android:name=".MyHostApduService" android:exported="true" android:permission="android.permission.BIND_NFC_SERVICE"&gt;
     &lt;intent-filter&gt;
         &lt;action android:name="android.nfc.cardemulation.action.HOST_APDU_SERVICE"/&gt;
     &lt;/intent-filter&gt;
     &lt;meta-data android:name="android.nfc.cardemulation.host_apdu_ervice" android:resource="@xml/apduservice"/&gt;
 &lt;/service&gt;</code></example>

 This meta-data tag points to an apduservice.xml file.
 An example of this file with a single AID group declaration is shown below:
 <example><code lang="xml">
 &lt;host-apdu-service xmlns:android="http://schemas.android.com/apk/res/android"
           android:description="@string/servicedesc" android:requireDeviceUnlock="false"&gt;
       &lt;aid-group android:description="@string/aiddescription" android:category="other"&gt;
           &lt;aid-filter android:name="F0010203040506"/&gt;
           &lt;aid-filter android:name="F0394148148100"/&gt;
       &lt;/aid-group&gt;
 &lt;/host-apdu-service&gt;
 </code></example></para>
      <para tool="javadoc-to-mdoc">The <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#HostApduService" /></c> is required
 to contain a
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#HostApduService_description" /></c>
 attribute that contains a user-friendly description of the service that may be shown in UI.
 The
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#HostApduService_requireDeviceUnlock" /></c>
 attribute can be used to specify that the device must be unlocked before this service
 can be invoked to handle APDUs.
 </para>
      <para tool="javadoc-to-mdoc">The <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#HostApduService" /></c> must
 contain one or more <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AidGroup" /></c> tags.
 Each <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AidGroup" /></c> must contain one or
 more <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AidFilter" /></c> tags, each of which
 contains a single AID. The AID must be specified in hexadecimal format, and contain
 an even number of characters.
 <format type="text/html"><h3>AID conflict resolution</h3></format>
 Multiple HostApduServices may be installed on a single device, and the same AID
 can be registered by more than one service. The Android platform resolves AID
 conflicts depending on which category an AID belongs to. Each category may
 have a different conflict resolution policy. For example, for some categories
 the user may be able to select a default service in the Android settings UI.
 For other categories, to policy may be to always ask the user which service
 is to be invoked in case of conflict.

 To query the conflict resolution policy for a certain category, see
 <c><see cref="M:Android.Nfc.CardEmulators.CardEmulation.GetSelectionModeForCategory(System.String)" /></c>.

 <format type="text/html"><h3>Data exchange</h3></format></para>
      <para tool="javadoc-to-mdoc">Once the platform has resolved a "SELECT AID" command APDU to a specific
 service component, the "SELECT AID" command APDU and all subsequent
 command APDUs will be sent to that service through
 <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.ProcessCommandApdu(System.Byte[],Android.OS.Bundle)" /></c>, until either:
 <list type="bullet"><item><term>The NFC link is broken</term></item><item><term>A "SELECT AID" APDU is received which resolves to another service</term></item></list>
 These two scenarios are indicated by a call to <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.OnDeactivated(Android.Nfc.CardEmulators.DeactivationReason)" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">Use of this class requires the
 <c><see cref="F:Android.Content.PM.PackageManager.FeatureNfcHostCardEmulation" /></c> to be present
 on the device.

</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostApduService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#HostApduService()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HostApduService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeactivationDeselected">
      <MemberSignature Language="C#" Value="public const Android.Nfc.CardEmulators.DeactivationReason DeactivationDeselected = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.CardEmulators.DeactivationReason DeactivationDeselected = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEACTIVATION_DESELECTED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.DeactivationReason enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.DeactivationReason</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Reason for <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.OnDeactivated(Android.Nfc.CardEmulators.DeactivationReason)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Reason for <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.OnDeactivated(Android.Nfc.CardEmulators.DeactivationReason)" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">Indicates deactivation was due to a different AID
 being selected (which implicitly deselects the AID
 currently active on the logical channel).

 </para>
          <para tool="javadoc-to-mdoc">Note that this next AID may still be resolved to this
 service, in which case <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.ProcessCommandApdu(System.Byte[],Android.OS.Bundle)" /></c>
 will be called again.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#DEACTIVATION_DESELECTED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeactivationLinkLoss">
      <MemberSignature Language="C#" Value="public const Android.Nfc.CardEmulators.DeactivationReason DeactivationLinkLoss = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.CardEmulators.DeactivationReason DeactivationLinkLoss = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEACTIVATION_LINK_LOSS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.DeactivationReason enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.DeactivationReason</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Reason for <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.OnDeactivated(Android.Nfc.CardEmulators.DeactivationReason)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Reason for <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.OnDeactivated(Android.Nfc.CardEmulators.DeactivationReason)" /></c>.
 Indicates deactivation was due to the NFC link
 being lost.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#DEACTIVATION_LINK_LOSS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyUnhandled">
      <MemberSignature Language="C#" Value="public void NotifyUnhandled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyUnhandled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notifyUnhandled", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calling this method allows the service to tell the OS
 that it won't be able to complete this transaction -
 for example, because it requires data connectivity
 that is not present at that moment.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Calling this method allows the service to tell the OS
 that it won't be able to complete this transaction -
 for example, because it requires data connectivity
 that is not present at that moment.

 The OS may use this indication to give the user a list
 of alternative applications that can handle the last
 AID that was selected. If the user would select an
 application from the list, that action by itself
 will not cause the default to be changed; the selected
 application will be invoked for the next tap only.

 If there are no other applications that can handle
 this transaction, the OS will show an error dialog
 indicating your service could not complete the
 transaction.

 </para>
          <para tool="javadoc-to-mdoc">Note: this method may be called anywhere between
    the first <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.ProcessCommandApdu(System.Byte[],Android.OS.Bundle)" /></c>
    call and a <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.OnDeactivated(Android.Nfc.CardEmulators.DeactivationReason)" /></c> call.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#notifyUnhandled()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public override sealed Android.OS.IBinder OnBind (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>Return the communication channel to the service.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the communication channel to the service.  May return null if 
 clients can not bind to the service.  The returned
 <c><see cref="T:Android.OS.BinderConsts" /></c> is usually for a complex interface
 that has been <format type="text/html"><a href="http://developer.android.com/reference/../guide/components/aidl.html">described using
 aidl</a></format>.
 
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note that unlike other application components, calls on to the
 IBinder interface returned here may not happen on the main thread
 of the process</i>.  More information about the main thread can be found in
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/fundamentals/processes-and-threads.html">Processes and
 Threads</a></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#onBind(android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="public abstract void OnDeactivated (Android.Nfc.CardEmulators.DeactivationReason reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeactivated(valuetype Android.Nfc.CardEmulators.DeactivationReason reason) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDeactivated", "(I)V", "GetOnDeactivated_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="Android.Nfc.CardEmulators.DeactivationReason">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="reason">Either <c><see cref="F:Android.Nfc.CardEmulators.HostApduService.DeactivationLinkLoss" /></c> or <c><see cref="F:Android.Nfc.CardEmulators.HostApduService.DeactivationDeselected" /></c></param>
        <summary>This method will be called in two possible scenarios:
 <item><term>The NFC link has been deactivated or lost
 <item><term>A different AID has been selected and was resolved to a different
     service component</term></item></term></item></summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will be called in two possible scenarios:
 <item><term>The NFC link has been deactivated or lost
 <item><term>A different AID has been selected and was resolved to a different
     service component</term></item></term></item></para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#onDeactivated(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCommandApdu">
      <MemberSignature Language="C#" Value="public abstract byte[] ProcessCommandApdu (byte[] commandApdu, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ProcessCommandApdu(unsigned int8[] commandApdu, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("processCommandApdu", "([BLandroid/os/Bundle;)[B", "GetProcessCommandApdu_arrayBLandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandApdu" Type="System.Byte[]" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="commandApdu">The APDU that was received from the remote device</param>
        <param name="extras">A bundle containing extra data. May be null.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">This method will be called when a command APDU has been received
 from a remote device. A response APDU can be provided directly
 by returning a byte-array in this method. Note that in general
 response APDUs must be sent as quickly as possible, given the fact
 that the user is likely holding his device over an NFC reader
 when this method is called.

 </para>
          <para tool="javadoc-to-mdoc">If there are multiple services that have registered for the same
 AIDs in their meta-data entry, you will only get called if the user has
 explicitly selected your service, either as a default or just for the next tap.

 </para>
          <para tool="javadoc-to-mdoc">This method is running on the main thread of your application.
 If you cannot return a response APDU immediately, return null
 and use the <c><see cref="M:Android.Nfc.CardEmulators.HostApduService.SendResponseApdu(System.Byte[])" /></c> method later.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#processCommandApdu(byte[], android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseApdu">
      <MemberSignature Language="C#" Value="public void SendResponseApdu (byte[] responseApdu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResponseApdu(unsigned int8[] responseApdu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendResponseApdu", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseApdu" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="responseApdu">A byte-array containing the reponse APDU.
</param>
        <summary>Sends a response APDU back to the remote device.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sends a response APDU back to the remote device.

 </para>
          <para tool="javadoc-to-mdoc">Note: this method may be called from any thread and will not block.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#sendResponseApdu(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInterface">
      <MemberSignature Language="C#" Value="public const string ServiceInterface;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceInterface" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SERVICE_INTERFACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c><see cref="T:Android.Content.Intent" /></c> action that must be declared as handled by the service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The <c><see cref="T:Android.Content.Intent" /></c> action that must be declared as handled by the service.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#SERVICE_INTERFACE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceMetaData">
      <MemberSignature Language="C#" Value="public const string ServiceMetaData;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceMetaData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SERVICE_META_DATA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the meta-data element that contains
 more information about this service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the meta-data element that contains
 more information about this service.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html#SERVICE_META_DATA" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
