<Type Name="HostApduService" FullName="Android.Nfc.CardEmulators.HostApduService">
  <TypeSignature Language="C#" Value="public abstract class HostApduService : Android.App.Service" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HostApduService extends Android.App.Service" />
  <TypeSignature Language="DocId" Value="T:Android.Nfc.CardEmulators.HostApduService" />
  <TypeSignature Language="F#" Value="type HostApduService = class&#xA;    inherit Service" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Service</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/nfc/cardemulation/HostApduService", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/nfc/cardemulation/HostApduService", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>HostApduService is a convenience <c>Service</c> class that can be
            extended to emulate an NFC card inside an Android
            service component.</summary>
    <remarks>
      <para>HostApduService is a convenience <c>Service</c> class that can be
            extended to emulate an NFC card inside an Android
            service component.
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guide&lt;/h3&gt;
            For a general introduction to card emulation, see
            <see href="https://developer.android.com/guide/topics/connectivity/nfc/hce.html">
            Host-based Card Emulation</see>.</para>
      <para>&lt;/div&gt;
            
            &lt;h3&gt;NFC Protocols&lt;/h3&gt;</para>
      <para>Cards emulated by this class are based on the NFC-Forum ISO-DEP
            protocol (based on ISO/IEC 14443-4) and support processing
            command Application Protocol Data Units (APDUs) as
            defined in the ISO/IEC 7816-4 specification.
            
            &lt;h3&gt;Service selection&lt;/h3&gt;</para>
      <para>When a remote NFC device wants to talk to your
            service, it sends a so-called
            "SELECT AID" APDU as defined in the ISO/IEC 7816-4 specification.
            The AID is an application identifier defined in ISO/IEC 7816-4.</para>
      <para>The registration procedure for AIDs is defined in the
            ISO/IEC 7816-5 specification. If you don't want to register an
            AID, you are free to use AIDs in the proprietary range:
            bits 8-5 of the first byte must each be set to '1'. For example,
            "0xF00102030405" is a proprietary AID. If you do use proprietary
            AIDs, it is recommended to choose an AID of at least 6 bytes,
            to reduce the risk of collisions with other applications that
            might be using proprietary AIDs as well.
            
            &lt;h3&gt;AID groups&lt;/h3&gt;</para>
      <para>In some cases, a service may need to register multiple AIDs
            to implement a certain application, and it needs to be sure
            that it is the default handler for all of these AIDs (as opposed
            to some AIDs in the group going to another service).</para>
      <para>An AID group is a list of AIDs that should be considered as
            belonging together by the OS. For all AIDs in an AID group, the
            OS will guarantee one of the following:
            &lt;ul&gt;
            &lt;li&gt;All AIDs in the group are routed to this service
            &lt;li&gt;No AIDs in the group are routed to this service
            &lt;/ul&gt;
            In other words, there is no in-between state, where some AIDs
            in the group can be routed to this service, and some to another.
            &lt;h3&gt;AID groups and categories&lt;/h3&gt;</para>
      <para>Each AID group can be associated with a category. This allows
            the Android OS to classify services, and it allows the user to
            set defaults at the category level instead of the AID level.</para>
      <para>You can use
            <c>CardEmulation#isDefaultServiceForCategory(android.content.ComponentName, String)</c>
            to determine if your service is the default handler for a category.</para>
      <para>In this version of the platform, the only known categories
            are <c>CardEmulation#CATEGORY_PAYMENT</c> and <c>CardEmulation#CATEGORY_OTHER</c>.
            AID groups without a category, or with a category that is not recognized
            by the current platform version, will automatically be
            grouped into the <c>CardEmulation#CATEGORY_OTHER</c> category.
            &lt;h3&gt;Service AID registration&lt;/h3&gt;</para>
      <para>To tell the platform which AIDs groups
            are requested by this service, a <c>#SERVICE_META_DATA</c>
            entry must be included in the declaration of the service. An
            example of a HostApduService manifest declaration is shown below:</para>
      <code lang="text/java">&amp;lt;service android:name=".MyHostApduService" android:exported="true" android:permission="android.permission.BIND_NFC_SERVICE"&amp;gt;
                &amp;lt;intent-filter&amp;gt;
                    &amp;lt;action android:name="android.nfc.cardemulation.action.HOST_APDU_SERVICE"/&amp;gt;
                &amp;lt;/intent-filter&amp;gt;
                &amp;lt;meta-data android:name="android.nfc.cardemulation.host_apdu_ervice" android:resource="@xml/apduservice"/&amp;gt;
            &amp;lt;/service&amp;gt;</code>
      <para>This meta-data tag points to an apduservice.xml file.
            An example of this file with a single AID group declaration is shown below:</para>
      <code lang="text/java">&amp;lt;host-apdu-service xmlns:android="http://schemas.android.com/apk/res/android"
                      android:description="@string/servicedesc" android:requireDeviceUnlock="false"&amp;gt;
                  &amp;lt;aid-group android:description="@string/aiddescription" android:category="other"&gt;
                      &amp;lt;aid-filter android:name="F0010203040506"/&amp;gt;
                      &amp;lt;aid-filter android:name="F0394148148100"/&amp;gt;
                  &amp;lt;/aid-group&amp;gt;
            &amp;lt;/host-apdu-service&amp;gt;
            </code>
      <para>The <c>android.R.styleable#HostApduService &amp;lt;host-apdu-service&amp;gt;</c> is required
            to contain a
            <c>android.R.styleable#HostApduService_description &amp;lt;android:description&amp;gt;</c>
            attribute that contains a user-friendly description of the service that may be shown in UI.
            The
            <c>android.R.styleable#HostApduService_requireDeviceUnlock &amp;lt;requireDeviceUnlock&amp;gt;</c>
            attribute can be used to specify that the device must be unlocked before this service
            can be invoked to handle APDUs.</para>
      <para>The <c>android.R.styleable#HostApduService &amp;lt;host-apdu-service&amp;gt;</c> must
            contain one or more <c>android.R.styleable#AidGroup &amp;lt;aid-group&amp;gt;</c> tags.
            Each <c>android.R.styleable#AidGroup &amp;lt;aid-group&amp;gt;</c> must contain one or
            more <c>android.R.styleable#AidFilter &amp;lt;aid-filter&amp;gt;</c> tags, each of which
            contains a single AID. The AID must be specified in hexadecimal format, and contain
            an even number of characters.
            &lt;h3&gt;AID conflict resolution&lt;/h3&gt;
            Multiple HostApduServices may be installed on a single device, and the same AID
            can be registered by more than one service. The Android platform resolves AID
            conflicts depending on which category an AID belongs to. Each category may
            have a different conflict resolution policy. For example, for some categories
            the user may be able to select a default service in the Android settings UI.
            For other categories, to policy may be to always ask the user which service
            is to be invoked in case of conflict.
            
            To query the conflict resolution policy for a certain category, see
            <c>CardEmulation#getSelectionModeForCategory(String)</c>.
            
            &lt;h3&gt;Data exchange&lt;/h3&gt;</para>
      <para>Once the platform has resolved a "SELECT AID" command APDU to a specific
            service component, the "SELECT AID" command APDU and all subsequent
            command APDUs will be sent to that service through
            <c>#processCommandApdu(byte[], Bundle)</c>, until either:
            &lt;ul&gt;
            &lt;li&gt;The NFC link is broken&lt;/li&gt;
            &lt;li&gt;A "SELECT AID" APDU is received which resolves to another service&lt;/li&gt;
            &lt;/ul&gt;
            These two scenarios are indicated by a call to <c>#onDeactivated(int)</c>.
            
            &lt;p class="note"&gt;Use of this class requires the
            <c>PackageManager#FEATURE_NFC_HOST_CARD_EMULATION</c> to be present
            on the device.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostApduService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.HostApduService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HostApduService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.HostApduService.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Nfc.CardEmulators.HostApduService : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Nfc.CardEmulators.HostApduService" Usage="new Android.Nfc.CardEmulators.HostApduService (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeactivationDeselected">
      <MemberSignature Language="C#" Value="public const Android.Nfc.CardEmulators.DeactivationReason DeactivationDeselected = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.CardEmulators.DeactivationReason DeactivationDeselected = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.HostApduService.DeactivationDeselected" />
      <MemberSignature Language="F#" Value="val mutable DeactivationDeselected : Android.Nfc.CardEmulators.DeactivationReason" Usage="Android.Nfc.CardEmulators.HostApduService.DeactivationDeselected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEACTIVATION_DESELECTED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEACTIVATION_DESELECTED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.DeactivationReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.DeactivationReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.DeactivationReason</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Reason for <c>#onDeactivated(int)</c>.</summary>
        <remarks>
          <para>Reason for <c>#onDeactivated(int)</c>.</para>
          <para>Indicates deactivation was due to a different AID
            being selected (which implicitly deselects the AID
            currently active on the logical channel).</para>
          <para>Note that this next AID may still be resolved to this
            service, in which case <c>#processCommandApdu(byte[], Bundle)</c>
            will be called again.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService#DEACTIVATION_DESELECTED" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService.DEACTIVATION_DESELECTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeactivationLinkLoss">
      <MemberSignature Language="C#" Value="public const Android.Nfc.CardEmulators.DeactivationReason DeactivationLinkLoss = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.CardEmulators.DeactivationReason DeactivationLinkLoss = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.HostApduService.DeactivationLinkLoss" />
      <MemberSignature Language="F#" Value="val mutable DeactivationLinkLoss : Android.Nfc.CardEmulators.DeactivationReason" Usage="Android.Nfc.CardEmulators.HostApduService.DeactivationLinkLoss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEACTIVATION_LINK_LOSS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEACTIVATION_LINK_LOSS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.DeactivationReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.DeactivationReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.DeactivationReason</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Reason for <c>#onDeactivated(int)</c>.</summary>
        <remarks>
          <para>Reason for <c>#onDeactivated(int)</c>.
            Indicates deactivation was due to the NFC link
            being lost.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService#DEACTIVATION_LINK_LOSS" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService.DEACTIVATION_LINK_LOSS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.HostApduService.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Nfc.CardEmulators.HostApduService.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyUnhandled">
      <MemberSignature Language="C#" Value="public void NotifyUnhandled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyUnhandled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.HostApduService.NotifyUnhandled" />
      <MemberSignature Language="F#" Value="member this.NotifyUnhandled : unit -&gt; unit" Usage="hostApduService.NotifyUnhandled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("notifyUnhandled", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("notifyUnhandled", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calling this method allows the service to tell the OS
            that it won't be able to complete this transaction -
            for example, because it requires data connectivity
            that is not present at that moment.</summary>
        <remarks>
          <para>Calling this method allows the service to tell the OS
            that it won't be able to complete this transaction -
            for example, because it requires data connectivity
            that is not present at that moment.</para>
          <para>The OS may use this indication to give the user a list
            of alternative applications that can handle the last
            AID that was selected. If the user would select an
            application from the list, that action by itself
            will not cause the default to be changed; the selected
            application will be invoked for the next tap only.</para>
          <para>If there are no other applications that can handle
            this transaction, the OS will show an error dialog
            indicating your service could not complete the
            transaction.</para>
          <para>Note: this method may be called anywhere between
               the first <c>#processCommandApdu(byte[], Bundle)</c>
               call and a <c>#onDeactivated(int)</c> call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService#notifyUnhandled()" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService.notifyUnhandled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public override sealed Android.OS.IBinder? OnBind (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.HostApduService.OnBind(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="override this.OnBind : Android.Content.Intent -&gt; Android.OS.IBinder" Usage="hostApduService.OnBind intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content Context BindService(Android Content Intent,Android Content IServiceConnection,Android Content IServiceConnection)';scope=Xamarin" title="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)">M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)</a></format>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>Return the communication channel to the service.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="public abstract void OnDeactivated (Android.Nfc.CardEmulators.DeactivationReason reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeactivated(valuetype Android.Nfc.CardEmulators.DeactivationReason reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.HostApduService.OnDeactivated(Android.Nfc.CardEmulators.DeactivationReason)" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivated : Android.Nfc.CardEmulators.DeactivationReason -&gt; unit" Usage="hostApduService.OnDeactivated reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDeactivated", "(I)V", "GetOnDeactivated_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDeactivated", "(I)V", "GetOnDeactivated_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="Android.Nfc.CardEmulators.DeactivationReason">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="reason">Either <c>#DEACTIVATION_LINK_LOSS</c> or <c>#DEACTIVATION_DESELECTED</c></param>
        <summary>This method will be called in two possible scenarios:
            &lt;li&gt;The NFC link has been deactivated or lost
            &lt;li&gt;A different AID has been selected and was resolved to a different
                service component</summary>
        <remarks>
          <para>This method will be called in two possible scenarios:
            &lt;li&gt;The NFC link has been deactivated or lost
            &lt;li&gt;A different AID has been selected and was resolved to a different
                service component</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService#onDeactivated(int)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService.onDeactivated(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCommandApdu">
      <MemberSignature Language="C#" Value="public abstract byte[]? ProcessCommandApdu (byte[]? commandApdu, Android.OS.Bundle? extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ProcessCommandApdu(unsigned int8[] commandApdu, class Android.OS.Bundle extras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.HostApduService.ProcessCommandApdu(System.Byte[],Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member ProcessCommandApdu : byte[] * Android.OS.Bundle -&gt; byte[]" Usage="hostApduService.ProcessCommandApdu (commandApdu, extras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("processCommandApdu", "([BLandroid/os/Bundle;)[B", "GetProcessCommandApdu_arrayBLandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("processCommandApdu", "([BLandroid/os/Bundle;)[B", "GetProcessCommandApdu_arrayBLandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandApdu" Type="System.Byte[]" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="commandApdu">The APDU that was received from the remote device</param>
        <param name="extras">A bundle containing extra data. May be null.</param>
        <summary>This method will be called when a command APDU has been received
            from a remote device.</summary>
        <returns>a byte-array containing the response APDU, or null if no
                    response APDU can be sent at this point.</returns>
        <remarks>
          <para>This method will be called when a command APDU has been received
            from a remote device. A response APDU can be provided directly
            by returning a byte-array in this method. Note that in general
            response APDUs must be sent as quickly as possible, given the fact
            that the user is likely holding their device over an NFC reader
            when this method is called.
            
            &lt;p class="note"&gt;If there are multiple services that have registered for the same
            AIDs in their meta-data entry, you will only get called if the user has
            explicitly selected your service, either as a default or just for the next tap.
            
            &lt;p class="note"&gt;This method is running on the main thread of your application.
            If you cannot return a response APDU immediately, return null
            and use the <c>#sendResponseApdu(byte[])</c> method later.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService#processCommandApdu(byte[],%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService.processCommandApdu(byte[], android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseApdu">
      <MemberSignature Language="C#" Value="public void SendResponseApdu (byte[]? responseApdu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResponseApdu(unsigned int8[] responseApdu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.HostApduService.SendResponseApdu(System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.SendResponseApdu : byte[] -&gt; unit" Usage="hostApduService.SendResponseApdu responseApdu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendResponseApdu", "([B)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendResponseApdu", "([B)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseApdu" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="responseApdu">A byte-array containing the reponse APDU.</param>
        <summary>Sends a response APDU back to the remote device.</summary>
        <remarks>
          <para>Sends a response APDU back to the remote device.</para>
          <para>Note: this method may be called from any thread and will not block.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService#sendResponseApdu(byte[])" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService.sendResponseApdu(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInterface">
      <MemberSignature Language="C#" Value="public const string ServiceInterface;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceInterface" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.HostApduService.ServiceInterface" />
      <MemberSignature Language="F#" Value="val mutable ServiceInterface : string" Usage="Android.Nfc.CardEmulators.HostApduService.ServiceInterface" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SERVICE_INTERFACE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SERVICE_INTERFACE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Intent</c> action that must be declared as handled by the service.</summary>
        <remarks>
          <para>The <c>Intent</c> action that must be declared as handled by the service.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService#SERVICE_INTERFACE" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService.SERVICE_INTERFACE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceMetaData">
      <MemberSignature Language="C#" Value="public const string ServiceMetaData;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceMetaData" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.HostApduService.ServiceMetaData" />
      <MemberSignature Language="F#" Value="val mutable ServiceMetaData : string" Usage="Android.Nfc.CardEmulators.HostApduService.ServiceMetaData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SERVICE_META_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SERVICE_META_DATA")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the meta-data element that contains
            more information about this service.</summary>
        <remarks>
          <para>The name of the meta-data element that contains
            more information about this service.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/HostApduService#SERVICE_META_DATA" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.HostApduService.SERVICE_META_DATA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.HostApduService.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Nfc.CardEmulators.HostApduService.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.HostApduService.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Nfc.CardEmulators.HostApduService.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
