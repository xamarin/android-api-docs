<Type Name="PKIXCertPathChecker" FullName="Java.Security.Cert.PKIXCertPathChecker">
  <TypeSignature Language="C#" Value="public abstract class PKIXCertPathChecker : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.ICloneable, Java.Security.Cert.ICertPathChecker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PKIXCertPathChecker extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.ICloneable, class Java.Security.Cert.ICertPathChecker, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Security.Cert.PKIXCertPathChecker" />
  <TypeSignature Language="F#" Value="type PKIXCertPathChecker = class&#xA;    inherit Object&#xA;    interface ICloneable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ICertPathChecker" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Security.Cert.ICertPathChecker</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/security/cert/PKIXCertPathChecker", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/security/cert/PKIXCertPathChecker", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An abstract class that performs one or more checks on an
            <c>X509Certificate</c>.</summary>
    <remarks>
      <para>An abstract class that performs one or more checks on an
            <c>X509Certificate</c>.</para>
      <para>A concrete implementation of the <c>PKIXCertPathChecker</c> class
            can be created to extend the PKIX certification path validation algorithm.
            For example, an implementation may check for and process a critical private
            extension of each certificate in a certification path.</para>
      <para>Instances of <c>PKIXCertPathChecker</c> are passed as parameters
            using the <c>PKIXParameters#setCertPathCheckers setCertPathCheckers</c>
            or <c>PKIXParameters#addCertPathChecker addCertPathChecker</c> methods
            of the <c>PKIXParameters</c> and <c>PKIXBuilderParameters</c>
            class. Each of the <c>PKIXCertPathChecker</c>s <c>#check check</c>
            methods will be called, in turn, for each certificate processed by a PKIX
            <c>CertPathValidator</c> or <c>CertPathBuilder</c>
            implementation.</para>
      <para>A <c>PKIXCertPathChecker</c> may be called multiple times on
            successive certificates in a certification path. Concrete subclasses
            are expected to maintain any internal state that may be necessary to
            check successive certificates. The <c>#init init</c> method is used
            to initialize the internal state of the checker so that the certificates
            of a new certification path may be checked. A stateful implementation
            &lt;b&gt;must&lt;/b&gt; override the <c>#clone clone</c> method if necessary in
            order to allow a PKIX <c>CertPathBuilder</c> to efficiently
            backtrack and try other paths. In these situations, the
            <c>CertPathBuilder</c> is able to restore prior path validation
            states by restoring the cloned <c>PKIXCertPathChecker</c>s.</para>
      <para>The order in which the certificates are presented to the
            <c>PKIXCertPathChecker</c> may be either in the forward direction
            (from target to most-trusted CA) or in the reverse direction (from
            most-trusted CA to target). A <c>PKIXCertPathChecker</c> implementation
            &lt;b&gt;must&lt;/b&gt; support reverse checking (the ability to perform its checks when
            it is presented with certificates in the reverse direction) and &lt;b&gt;may&lt;/b&gt;
            support forward checking (the ability to perform its checks when it is
            presented with certificates in the forward direction). The
            <c>#isForwardCheckingSupported isForwardCheckingSupported</c> method
            indicates whether forward checking is supported.</para>
      <para>Additional input parameters required for executing the check may be
            specified through constructors of concrete implementations of this class.</para>
      <para>&lt;b&gt;Concurrent Access&lt;/b&gt;</para>
      <para>Unless otherwise specified, the methods defined in this class are not
            thread-safe. Multiple threads that need to access a single
            object concurrently should synchronize amongst themselves and
            provide the necessary locking. Multiple threads each manipulating
            separate objects need not synchronize.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/security/cert/PKIXCertPathChecker" title="Reference documentation">Java documentation for <code>java.security.cert.PKIXCertPathChecker</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PKIXCertPathChecker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.PKIXCertPathChecker.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor.</summary>
        <remarks>
          <para>Default constructor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/PKIXCertPathChecker#PKIXCertPathChecker()" title="Reference documentation">Java documentation for <code>java.security.cert.PKIXCertPathChecker.PKIXCertPathChecker()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PKIXCertPathChecker (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.PKIXCertPathChecker.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Security.Cert.PKIXCertPathChecker : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Security.Cert.PKIXCertPathChecker" Usage="new Java.Security.Cert.PKIXCertPathChecker (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public virtual void Check (Java.Security.Cert.Certificate? cert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Check(class Java.Security.Cert.Certificate cert) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.PKIXCertPathChecker.Check(Java.Security.Cert.Certificate)" />
      <MemberSignature Language="F#" Value="abstract member Check : Java.Security.Cert.Certificate -&gt; unit&#xA;override this.Check : Java.Security.Cert.Certificate -&gt; unit" Usage="pKIXCertPathChecker.Check cert" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Security.Cert.ICertPathChecker.Check(Java.Security.Cert.Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("check", "(Ljava/security/cert/Certificate;)V", "GetCheck_Ljava_security_cert_Certificate_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("check", "(Ljava/security/cert/Certificate;)V", "GetCheck_Ljava_security_cert_Certificate_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cert" Type="Java.Security.Cert.Certificate" />
      </Parameters>
      <Docs>
        <param name="cert">To be added.</param>
        <summary>To be added</summary>
        <remarks>
          <para>To be added</para>
          <para>This implementation calls
            <c>check(cert, java.util.Collections.&lt;String&gt;emptySet())</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/PKIXCertPathChecker#check(java.security.cert.Certificate)" title="Reference documentation">Java documentation for <code>java.security.cert.PKIXCertPathChecker.check(java.security.cert.Certificate)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public abstract void Check (Java.Security.Cert.Certificate? cert, System.Collections.Generic.ICollection&lt;string&gt;? unresolvedCritExts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Check(class Java.Security.Cert.Certificate cert, class System.Collections.Generic.ICollection`1&lt;string&gt; unresolvedCritExts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.PKIXCertPathChecker.Check(Java.Security.Cert.Certificate,System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="F#" Value="abstract member Check : Java.Security.Cert.Certificate * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit" Usage="pKIXCertPathChecker.Check (cert, unresolvedCritExts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("check", "(Ljava/security/cert/Certificate;Ljava/util/Collection;)V", "GetCheck_Ljava_security_cert_Certificate_Ljava_util_Collection_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("check", "(Ljava/security/cert/Certificate;Ljava/util/Collection;)V", "GetCheck_Ljava_security_cert_Certificate_Ljava_util_Collection_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cert" Type="Java.Security.Cert.Certificate" />
        <Parameter Name="unresolvedCritExts" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="cert">the <c>Certificate</c> to be checked</param>
        <param name="unresolvedCritExts">a <c>Collection</c> of OID strings
            representing the current set of unresolved critical extensions</param>
        <summary>Performs the check(s) on the specified certificate using its internal
            state and removes any critical extensions that it processes from the
            specified collection of OID strings that represent the unresolved
            critical extensions.</summary>
        <remarks>
          <para>Performs the check(s) on the specified certificate using its internal
            state and removes any critical extensions that it processes from the
            specified collection of OID strings that represent the unresolved
            critical extensions. The certificates are presented in the order
            specified by the <c>init</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/PKIXCertPathChecker#check(java.security.cert.Certificate,%20java.util.Collection%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.security.cert.PKIXCertPathChecker.check(java.security.cert.Certificate, java.util.Collection&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.PKIXCertPathChecker.Clone" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Java.Lang.Object" Usage="pKIXCertPathChecker.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a clone of this object.</summary>
        <returns>a copy of this <c>PKIXCertPathChecker</c></returns>
        <remarks>
          <para>Returns a clone of this object. Calls the <c>Object.clone()</c>
            method.
            All subclasses which maintain state must support and
            override this method, if necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/PKIXCertPathChecker#clone()" title="Reference documentation">Java documentation for <code>java.security.cert.PKIXCertPathChecker.clone()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public abstract void Init (bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.PKIXCertPathChecker.Init(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Init : bool -&gt; unit" Usage="pKIXCertPathChecker.Init forward" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Security.Cert.ICertPathChecker.Init(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(Z)V", "GetInit_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(Z)V", "GetInit_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forward">the order that certificates are presented to
            the <c>check</c> method. If <c>true</c>, certificates
            are presented from target to most-trusted CA (forward); if
            <c>false</c>, from most-trusted CA to target (reverse).</param>
        <summary>Initializes the internal state of this <c>PKIXCertPathChecker</c>.</summary>
        <remarks>
          <para>Initializes the internal state of this <c>PKIXCertPathChecker</c>.</para>
          <para>The <c>forward</c> flag specifies the order that
            certificates will be passed to the <c>#check check</c> method
            (forward or reverse). A <c>PKIXCertPathChecker</c>&lt;b&gt;must&lt;/b&gt;
            support reverse checking and &lt;b&gt;may&lt;/b&gt; support forward checking.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/PKIXCertPathChecker#init(boolean)" title="Reference documentation">Java documentation for <code>java.security.cert.PKIXCertPathChecker.init(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertPathValidatorException">if initialization of this <c>PKIXCertPathChecker</c>
             instance fails, or if it cannot process certificates in the
             specified order.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsForwardCheckingSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsForwardCheckingSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForwardCheckingSupported" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.PKIXCertPathChecker.IsForwardCheckingSupported" />
      <MemberSignature Language="F#" Value="member this.IsForwardCheckingSupported : bool" Usage="Java.Security.Cert.PKIXCertPathChecker.IsForwardCheckingSupported" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Security.Cert.ICertPathChecker.IsForwardCheckingSupported</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isForwardCheckingSupported", "()Z", "GetIsForwardCheckingSupportedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isForwardCheckingSupported", "()Z", "GetIsForwardCheckingSupportedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this <c>PKIXCertPathChecker</c> instance supports
 <format type="text/html"><i>forward checking</i></format>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.PKIXCertPathChecker.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Security.Cert.PKIXCertPathChecker.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedExtensions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;string&gt;? SupportedExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; SupportedExtensions" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.PKIXCertPathChecker.SupportedExtensions" />
      <MemberSignature Language="F#" Value="member this.SupportedExtensions : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Java.Security.Cert.PKIXCertPathChecker.SupportedExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSupportedExtensions", "()Ljava/util/Set;", "GetGetSupportedExtensionsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSupportedExtensions", "()Ljava/util/Set;", "GetGetSupportedExtensionsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the list of extensions of X.509 certificates that this <c>PKIXCertPathChecker</c> is able to process.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.PKIXCertPathChecker.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Security.Cert.PKIXCertPathChecker.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.PKIXCertPathChecker.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Security.Cert.PKIXCertPathChecker.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
