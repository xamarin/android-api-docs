<Type Name="CertificateFactory" FullName="Java.Security.Cert.CertificateFactory">
  <TypeSignature Language="C#" Value="public class CertificateFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CertificateFactory extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Security.Cert.CertificateFactory" />
  <TypeSignature Language="F#" Value="type CertificateFactory = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/security/cert/CertificateFactory", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/security/cert/CertificateFactory", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class defines the functionality of a certificate factory, which is
            used to generate certificate, certification path (<c>CertPath</c>)
            and certificate revocation list (CRL) objects from their encodings.</summary>
    <remarks>
      <para>This class defines the functionality of a certificate factory, which is
            used to generate certificate, certification path (<c>CertPath</c>)
            and certificate revocation list (CRL) objects from their encodings.</para>
      <para>For encodings consisting of multiple certificates, use
            <c>generateCertificates</c> when you want to
            parse a collection of possibly unrelated certificates. Otherwise,
            use <c>generateCertPath</c> when you want to generate
            a <c>CertPath</c> (a certificate chain) and subsequently
            validate it with a <c>CertPathValidator</c>.</para>
      <para>A certificate factory for X.509 must return certificates that are an
            instance of <c>java.security.cert.X509Certificate</c>, and CRLs
            that are an instance of <c>java.security.cert.X509CRL</c>.</para>
      <para>The following example reads a file with Base64 encoded certificates,
            which are each bounded at the beginning by -----BEGIN CERTIFICATE-----, and
            bounded at the end by -----END CERTIFICATE-----. We convert the
            <c>FileInputStream</c> (which does not support <c>mark</c>
            and <c>reset</c>) to a <c>BufferedInputStream</c> (which
            supports those methods), so that each call to
            <c>generateCertificate</c> consumes only one certificate, and the
            read position of the input stream is positioned to the next certificate in
            the file:</para>
      <code lang="text/java">{@code
            FileInputStream fis = new FileInputStream(filename);
            BufferedInputStream bis = new BufferedInputStream(fis);
            
            CertificateFactory cf = CertificateFactory.getInstance("X.509");
            
            while (bis.available() &gt; 0) {
               Certificate cert = cf.generateCertificate(bis);
               System.out.println(cert.toString());
            }
            }</code>
      <para>The following example parses a PKCS#7-formatted certificate reply stored
            in a file and extracts all the certificates from it:</para>
      <code lang="text/java">FileInputStream fis = new FileInputStream(filename);
            CertificateFactory cf = CertificateFactory.getInstance("X.509");
            Collection c = cf.generateCertificates(fis);
            Iterator i = c.iterator();
            while (i.hasNext()) {
               Certificate cert = (Certificate)i.next();
               System.out.println(cert);
            }
            </code>
      <para>Android provides the following <c>CertificateFactory</c> types:
            &lt;table&gt;
              &lt;thead&gt;
                &lt;tr&gt;
                  &lt;th&gt;Algorithm&lt;/th&gt;
                  &lt;th&gt;Supported API Levels&lt;/th&gt;
                &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody&gt;
                &lt;tr&gt;
                  &lt;td&gt;X.509&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
            and the following <c>CertPath</c> encodings:
            &lt;table&gt;
                &lt;thead&gt;
                    &lt;tr&gt;
                        &lt;th&gt;Name&lt;/th&gt;
                        &lt;th&gt;Supported (API Levels)&lt;/th&gt;
                    &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;
                    &lt;tr&gt;
                        &lt;td&gt;PKCS7&lt;/td&gt;
                        &lt;td&gt;1+&lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;tr&gt;
                        &lt;td&gt;PkiPath&lt;/td&gt;
                        &lt;td&gt;1+&lt;/td&gt;
                    &lt;/tr&gt;
                &lt;/tbody&gt;
            &lt;/table&gt;
            
            The type and encodings are described in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#CertificateFactory">
            CertificateFactory section</see> and the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#CertPathEncodings">
            CertPath Encodings section</see> of the
            Java Cryptography Architecture Standard Algorithm Name Documentation.</para>
      <para>Added in 1.2.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CertificateFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Security.Cert.CertificateFactory : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Security.Cert.CertificateFactory" Usage="new Java.Security.Cert.CertificateFactory (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CertificateFactory (Java.Security.Cert.CertificateFactorySpi? certFacSpi, Java.Security.Provider? provider, string? type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Security.Cert.CertificateFactorySpi certFacSpi, class Java.Security.Provider provider, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.#ctor(Java.Security.Cert.CertificateFactorySpi,Java.Security.Provider,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Security.Cert.CertificateFactory : Java.Security.Cert.CertificateFactorySpi * Java.Security.Provider * string -&gt; Java.Security.Cert.CertificateFactory" Usage="new Java.Security.Cert.CertificateFactory (certFacSpi, provider, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/security/cert/CertificateFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/security/cert/CertificateFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="certFacSpi" Type="Java.Security.Cert.CertificateFactorySpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certFacSpi">the provider implementation.</param>
        <param name="provider">the provider.</param>
        <param name="type">the certificate type.</param>
        <summary>Creates a CertificateFactory object of the given type, and encapsulates
            the given provider implementation (SPI object) in it.</summary>
        <remarks>
          <para>Creates a CertificateFactory object of the given type, and encapsulates
            the given provider implementation (SPI object) in it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#CertificateFactory(java.security.cert.CertificateFactorySpi,%20java.security.Provider,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.CertificateFactory(java.security.cert.CertificateFactorySpi, java.security.Provider, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CertPathEncodings">
      <MemberSignature Language="C#" Value="public Java.Util.IIterator? CertPathEncodings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.IIterator CertPathEncodings" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.CertificateFactory.CertPathEncodings" />
      <MemberSignature Language="F#" Value="member this.CertPathEncodings : Java.Util.IIterator" Usage="Java.Security.Cert.CertificateFactory.CertPathEncodings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCertPathEncodings", "()Ljava/util/Iterator;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCertPathEncodings", "()Ljava/util/Iterator;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an iteration of the <c>CertPath</c> encodings supported
            by this certificate factory, with the default encoding first.</summary>
        <value>an <c>Iterator</c> over the names of the supported
                    <c>CertPath</c> encodings (as <c>String</c>s)</value>
        <remarks>
          <para>Returns an iteration of the <c>CertPath</c> encodings supported
            by this certificate factory, with the default encoding first. See
            the CertPath Encodings section in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#CertPathEncodings">
            Java Cryptography Architecture Standard Algorithm Name Documentation</see>
            for information about standard encoding names and their formats.</para>
          <para>Attempts to modify the returned <c>Iterator</c> via its
            <c>remove</c> method result in an
            <c>UnsupportedOperationException</c>.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#getCertPathEncodings()" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.getCertPathEncodings()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCertificate">
      <MemberSignature Language="C#" Value="public Java.Security.Cert.Certificate? GenerateCertificate (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.Cert.Certificate GenerateCertificate(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertificate(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCertificate : System.IO.Stream -&gt; Java.Security.Cert.Certificate" Usage="certificateFactory.GenerateCertificate inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateCertificate", "(Ljava/io/InputStream;)Ljava/security/cert/Certificate;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateCertificate", "(Ljava/io/InputStream;)Ljava/security/cert/Certificate;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.Certificate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">an input stream with the certificate data.</param>
        <summary>Generates a certificate object and initializes it with
            the data read from the input stream <c>inStream</c>.</summary>
        <returns>a certificate object initialized with the data
            from the input stream.</returns>
        <remarks>
          <para>Generates a certificate object and initializes it with
            the data read from the input stream <c>inStream</c>.</para>
          <para>In order to take advantage of the specialized certificate format
            supported by this certificate factory,
            the returned certificate object can be typecast to the corresponding
            certificate class. For example, if this certificate
            factory implements X.509 certificates, the returned certificate object
            can be typecast to the <c>X509Certificate</c> class.</para>
          <para>In the case of a certificate factory for X.509 certificates, the
            certificate provided in <c>inStream</c> must be DER-encoded and
            may be supplied in binary or printable (Base64) encoding. If the
            certificate is provided in Base64 encoding, it must be bounded at
            the beginning by -----BEGIN CERTIFICATE-----, and must be bounded at
            the end by -----END CERTIFICATE-----.</para>
          <para>Note that if the given input stream does not support
            <c>java.io.InputStream#mark(int) mark</c> and
            <c>java.io.InputStream#reset() reset</c>, this method will
            consume the entire input stream. Otherwise, each call to this
            method consumes one certificate and the read position of the
            input stream is positioned to the next available byte after
            the inherent end-of-certificate marker. If the data in the input stream
            does not contain an inherent end-of-certificate marker (other
            than EOF) and there is trailing data after the certificate is parsed, a
            <c>CertificateException</c> is thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#generateCertificate(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertificateException">if parsing problems are detected.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Security.Cert.Certificate?&gt; GenerateCertificateAsync (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Security.Cert.Certificate&gt; GenerateCertificateAsync(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertificateAsync(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCertificateAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Java.Security.Cert.Certificate&gt;" Usage="certificateFactory.GenerateCertificateAsync inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Security.Cert.Certificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Java.Security.Cert.Certificate&gt;? GenerateCertificates (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Java.Security.Cert.Certificate&gt; GenerateCertificates(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertificates(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCertificates : System.IO.Stream -&gt; System.Collections.Generic.ICollection&lt;Java.Security.Cert.Certificate&gt;" Usage="certificateFactory.GenerateCertificates inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateCertificates", "(Ljava/io/InputStream;)Ljava/util/Collection;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateCertificates", "(Ljava/io/InputStream;)Ljava/util/Collection;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Security.Cert.Certificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">the input stream with the certificates.</param>
        <summary>Returns a (possibly empty) collection view of the certificates read
            from the given input stream <c>inStream</c>.</summary>
        <returns>a (possibly empty) collection view of
            java.security.cert.Certificate objects
            initialized with the data from the input stream.</returns>
        <remarks>
          <para>Returns a (possibly empty) collection view of the certificates read
            from the given input stream <c>inStream</c>.</para>
          <para>In order to take advantage of the specialized certificate format
            supported by this certificate factory, each element in
            the returned collection view can be typecast to the corresponding
            certificate class. For example, if this certificate
            factory implements X.509 certificates, the elements in the returned
            collection can be typecast to the <c>X509Certificate</c> class.</para>
          <para>In the case of a certificate factory for X.509 certificates,
            <c>inStream</c> may contain a sequence of DER-encoded certificates
            in the formats described for
            <c>#generateCertificate(java.io.InputStream) generateCertificate</c>.
            In addition, <c>inStream</c> may contain a PKCS#7 certificate
            chain. This is a PKCS#7 <i>SignedData</i> object, with the only
            significant field being <i>certificates</i>. In particular, the
            signature and the contents are ignored. This format allows multiple
            certificates to be downloaded at once. If no certificates are present,
            an empty collection is returned.</para>
          <para>Note that if the given input stream does not support
            <c>java.io.InputStream#mark(int) mark</c> and
            <c>java.io.InputStream#reset() reset</c>, this method will
            consume the entire input stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#generateCertificates(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.generateCertificates(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertificateException">if parsing problems are detected.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertificatesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.ICollection&lt;Java.Security.Cert.Certificate&gt;?&gt; GenerateCertificatesAsync (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.ICollection`1&lt;class Java.Security.Cert.Certificate&gt;&gt; GenerateCertificatesAsync(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertificatesAsync(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCertificatesAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.ICollection&lt;Java.Security.Cert.Certificate&gt;&gt;" Usage="certificateFactory.GenerateCertificatesAsync inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.ICollection&lt;Java.Security.Cert.Certificate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertPath">
      <MemberSignature Language="C#" Value="public Java.Security.Cert.CertPath? GenerateCertPath (System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt;? certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.Cert.CertPath GenerateCertPath(class System.Collections.Generic.IList`1&lt;class Java.Security.Cert.Certificate&gt; certificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertPath(System.Collections.Generic.IList{Java.Security.Cert.Certificate})" />
      <MemberSignature Language="F#" Value="member this.GenerateCertPath : System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt; -&gt; Java.Security.Cert.CertPath" Usage="certificateFactory.GenerateCertPath certificates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateCertPath", "(Ljava/util/List;)Ljava/security/cert/CertPath;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateCertPath", "(Ljava/util/List;)Ljava/security/cert/CertPath;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificates" Type="System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt;" />
      </Parameters>
      <Docs>
        <param name="certificates">a <c>List</c> of <c>Certificate</c>s</param>
        <summary>Generates a <c>CertPath</c> object and initializes it with
            a <c>List</c> of <c>Certificate</c>s.</summary>
        <returns>a <c>CertPath</c> initialized with the supplied list of
              certificates</returns>
        <remarks>
          <para>Generates a <c>CertPath</c> object and initializes it with
            a <c>List</c> of <c>Certificate</c>s.</para>
          <para>The certificates supplied must be of a type supported by the
            <c>CertificateFactory</c>. They will be copied out of the supplied
            <c>List</c> object.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#generateCertPath(java.util.List%3C?%20extends%20java.security.cert.Certificate%3E)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.generateCertPath(java.util.List&lt;? extends java.security.cert.Certificate&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCertPath">
      <MemberSignature Language="C#" Value="public Java.Security.Cert.CertPath? GenerateCertPath (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.Cert.CertPath GenerateCertPath(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertPath(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCertPath : System.IO.Stream -&gt; Java.Security.Cert.CertPath" Usage="certificateFactory.GenerateCertPath inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateCertPath", "(Ljava/io/InputStream;)Ljava/security/cert/CertPath;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateCertPath", "(Ljava/io/InputStream;)Ljava/security/cert/CertPath;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">an <c>InputStream</c> containing the data</param>
        <summary>Generates a <c>CertPath</c> object and initializes it with
            the data read from the <c>InputStream</c> inStream.</summary>
        <returns>a <c>CertPath</c> initialized with the data from the
              <c>InputStream</c></returns>
        <remarks>
          <para>Generates a <c>CertPath</c> object and initializes it with
            the data read from the <c>InputStream</c> inStream. The data
            is assumed to be in the default encoding. The name of the default
            encoding is the first element of the <c>Iterator</c> returned by
            the <c>#getCertPathEncodings getCertPathEncodings</c> method.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#generateCertPath(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.generateCertPath(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertificateException">if parsing problems are detected.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertPath">
      <MemberSignature Language="C#" Value="public Java.Security.Cert.CertPath? GenerateCertPath (System.IO.Stream? inStream, string? encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.Cert.CertPath GenerateCertPath(class System.IO.Stream inStream, string encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertPath(System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="member this.GenerateCertPath : System.IO.Stream * string -&gt; Java.Security.Cert.CertPath" Usage="certificateFactory.GenerateCertPath (inStream, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateCertPath", "(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/cert/CertPath;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateCertPath", "(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/cert/CertPath;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inStream">an <c>InputStream</c> containing the data</param>
        <param name="encoding">the encoding used for the data</param>
        <summary>Generates a <c>CertPath</c> object and initializes it with
            the data read from the <c>InputStream</c> inStream.</summary>
        <returns>a <c>CertPath</c> initialized with the data from the
              <c>InputStream</c></returns>
        <remarks>
          <para>Generates a <c>CertPath</c> object and initializes it with
            the data read from the <c>InputStream</c> inStream. The data
            is assumed to be in the specified encoding. See
            the CertPath Encodings section in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#CertPathEncodings">
            Java Cryptography Architecture Standard Algorithm Name Documentation</see>
            for information about standard encoding names and their formats.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#generateCertPath(java.io.InputStream,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.generateCertPath(java.io.InputStream, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertificateException">if parsing problems are detected.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the provider does not implement this method.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertPathAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath?&gt; GenerateCertPathAsync (System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt;? certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Security.Cert.CertPath&gt; GenerateCertPathAsync(class System.Collections.Generic.IList`1&lt;class Java.Security.Cert.Certificate&gt; certificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertPathAsync(System.Collections.Generic.IList{Java.Security.Cert.Certificate})" />
      <MemberSignature Language="F#" Value="member this.GenerateCertPathAsync : System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt; -&gt; System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath&gt;" Usage="certificateFactory.GenerateCertPathAsync certificates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificates" Type="System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt;" />
      </Parameters>
      <Docs>
        <param name="certificates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertPathAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath?&gt; GenerateCertPathAsync (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Security.Cert.CertPath&gt; GenerateCertPathAsync(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertPathAsync(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCertPathAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath&gt;" Usage="certificateFactory.GenerateCertPathAsync inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCertPathAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath?&gt; GenerateCertPathAsync (System.IO.Stream? inStream, string? encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Security.Cert.CertPath&gt; GenerateCertPathAsync(class System.IO.Stream inStream, string encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCertPathAsync(System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="member this.GenerateCertPathAsync : System.IO.Stream * string -&gt; System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath&gt;" Usage="certificateFactory.GenerateCertPathAsync (inStream, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Security.Cert.CertPath&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inStream">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCRL">
      <MemberSignature Language="C#" Value="public Java.Security.Cert.CRL? GenerateCRL (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.Cert.CRL GenerateCRL(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCRL(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCRL : System.IO.Stream -&gt; Java.Security.Cert.CRL" Usage="certificateFactory.GenerateCRL inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateCRL", "(Ljava/io/InputStream;)Ljava/security/cert/CRL;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateCRL", "(Ljava/io/InputStream;)Ljava/security/cert/CRL;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CRL</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">an input stream with the CRL data.</param>
        <summary>Generates a certificate revocation list (CRL) object and initializes it
            with the data read from the input stream <c>inStream</c>.</summary>
        <returns>a CRL object initialized with the data
            from the input stream.</returns>
        <remarks>
          <para>Generates a certificate revocation list (CRL) object and initializes it
            with the data read from the input stream <c>inStream</c>.</para>
          <para>In order to take advantage of the specialized CRL format
            supported by this certificate factory,
            the returned CRL object can be typecast to the corresponding
            CRL class. For example, if this certificate
            factory implements X.509 CRLs, the returned CRL object
            can be typecast to the <c>X509CRL</c> class.</para>
          <para>Note that if the given input stream does not support
            <c>java.io.InputStream#mark(int) mark</c> and
            <c>java.io.InputStream#reset() reset</c>, this method will
            consume the entire input stream. Otherwise, each call to this
            method consumes one CRL and the read position of the input stream
            is positioned to the next available byte after the inherent
            end-of-CRL marker. If the data in the
            input stream does not contain an inherent end-of-CRL marker (other
            than EOF) and there is trailing data after the CRL is parsed, a
            <c>CRLException</c> is thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#generateCRL(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.generateCRL(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CRLException">if parsing problems are detected.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateCRLAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Security.Cert.CRL?&gt; GenerateCRLAsync (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Security.Cert.CRL&gt; GenerateCRLAsync(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCRLAsync(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCRLAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Java.Security.Cert.CRL&gt;" Usage="certificateFactory.GenerateCRLAsync inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Security.Cert.CRL&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCRLs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Java.Security.Cert.CRL&gt;? GenerateCRLs (System.IO.Stream? inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Java.Security.Cert.CRL&gt; GenerateCRLs(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GenerateCRLs(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.GenerateCRLs : System.IO.Stream -&gt; System.Collections.Generic.ICollection&lt;Java.Security.Cert.CRL&gt;" Usage="certificateFactory.GenerateCRLs inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateCRLs", "(Ljava/io/InputStream;)Ljava/util/Collection;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateCRLs", "(Ljava/io/InputStream;)Ljava/util/Collection;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Security.Cert.CRL&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">the input stream with the CRLs.</param>
        <summary>Returns a (possibly empty) collection view of the CRLs read
            from the given input stream <c>inStream</c>.</summary>
        <returns>a (possibly empty) collection view of
            java.security.cert.CRL objects initialized with the data from the input
            stream.</returns>
        <remarks>
          <para>Returns a (possibly empty) collection view of the CRLs read
            from the given input stream <c>inStream</c>.</para>
          <para>In order to take advantage of the specialized CRL format
            supported by this certificate factory, each element in
            the returned collection view can be typecast to the corresponding
            CRL class. For example, if this certificate
            factory implements X.509 CRLs, the elements in the returned
            collection can be typecast to the <c>X509CRL</c> class.</para>
          <para>In the case of a certificate factory for X.509 CRLs,
            <c>inStream</c> may contain a sequence of DER-encoded CRLs.
            In addition, <c>inStream</c> may contain a PKCS#7 CRL
            set. This is a PKCS#7 <i>SignedData</i> object, with the only
            significant field being <i>crls</i>. In particular, the
            signature and the contents are ignored. This format allows multiple
            CRLs to be downloaded at once. If no CRLs are present,
            an empty collection is returned.</para>
          <para>Note that if the given input stream does not support
            <c>java.io.InputStream#mark(int) mark</c> and
            <c>java.io.InputStream#reset() reset</c>, this method will
            consume the entire input stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#generateCRLs(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.generateCRLs(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CRLException">if parsing problems are detected.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Cert.CertificateFactory? GetInstance (string? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Cert.CertificateFactory GetInstance(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GetInstance(System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; Java.Security.Cert.CertificateFactory" Usage="Java.Security.Cert.CertificateFactory.GetInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertificateFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">the name of the requested certificate type.
            See the CertificateFactory section in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#CertificateFactory">
            Java Cryptography Architecture Standard Algorithm Name Documentation</see>
            for information about standard certificate types.</param>
        <summary>Returns a certificate factory object that implements the
            specified certificate type.</summary>
        <returns>a certificate factory object for the specified type.</returns>
        <remarks>
          <para>Returns a certificate factory object that implements the
            specified certificate type.</para>
          <para>This method traverses the list of registered security Providers,
            starting with the most preferred Provider.
            A new CertificateFactory object encapsulating the
            CertificateFactorySpi implementation from the first
            Provider that supports the specified type is returned.</para>
          <para>Note that the list of registered providers may be retrieved via
            the <c>Security#getProviders() Security.getProviders()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#getInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.getInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertificateException">if the specified certificate type is not available at any
             installed provider.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>type == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Cert.CertificateFactory? GetInstance (string? type, Java.Security.Provider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Cert.CertificateFactory GetInstance(string type, class Java.Security.Provider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GetInstance(System.String,Java.Security.Provider)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Java.Security.Provider -&gt; Java.Security.Cert.CertificateFactory" Usage="Java.Security.Cert.CertificateFactory.GetInstance (type, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/cert/CertificateFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/cert/CertificateFactory;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertificateFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="type">the certificate type.
            See the CertificateFactory section in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#CertificateFactory">
            Java Cryptography Architecture Standard Algorithm Name Documentation</see>
            for information about standard certificate types.</param>
        <param name="provider">the provider.</param>
        <summary>Returns a certificate factory object for the specified
            certificate type.</summary>
        <returns>a certificate factory object for the specified type.</returns>
        <remarks>
          <para>Returns a certificate factory object for the specified
            certificate type.</para>
          <para>A new CertificateFactory object encapsulating the
            CertificateFactorySpi implementation from the specified Provider
            object is returned.  Note that the specified Provider object
            does not have to be registered in the provider list.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#getInstance(java.lang.String,%20java.security.Provider)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.getInstance(java.lang.String, java.security.Provider)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertificateException">if the specified certificate type is not available at the
             specified provider.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified provider is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>type == null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Cert.CertificateFactory? GetInstance (string? type, string? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Cert.CertificateFactory GetInstance(string type, string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.Cert.CertificateFactory.GetInstance(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * string -&gt; Java.Security.Cert.CertificateFactory" Usage="Java.Security.Cert.CertificateFactory.GetInstance (type, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/cert/CertificateFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/cert/CertificateFactory;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertificateFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">the certificate type.
            See the CertificateFactory section in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#CertificateFactory">
            Java Cryptography Architecture Standard Algorithm Name Documentation</see>
            for information about standard certificate types.</param>
        <param name="provider">the name of the provider.</param>
        <summary>Returns a certificate factory object for the specified
            certificate type.</summary>
        <returns>a certificate factory object for the specified type.</returns>
        <remarks>
          <para>Returns a certificate factory object for the specified
            certificate type.</para>
          <para>A new CertificateFactory object encapsulating the
            CertificateFactorySpi implementation from the specified provider
            is returned.  The specified provider must be registered
            in the security provider list.</para>
          <para>Note that the list of registered providers may be retrieved via
            the <c>Security#getProviders() Security.getProviders()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#getInstance(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.getInstance(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertificateException">if the specified certificate type is not available by the
             specified provider.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if no provider with the specified name can be found.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null || provider.isEmpty()</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">it <c>type</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.CertificateFactory.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Security.Cert.CertificateFactory.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider? Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.CertificateFactory.Provider" />
      <MemberSignature Language="F#" Value="member this.Provider : Java.Security.Provider" Usage="Java.Security.Cert.CertificateFactory.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this certificate factory.</summary>
        <value>the provider of this certificate factory.</value>
        <remarks>
          <para>Returns the provider of this certificate factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#getProvider()" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.getProvider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.CertificateFactory.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Security.Cert.CertificateFactory.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.CertificateFactory.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Security.Cert.CertificateFactory.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string? Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:Java.Security.Cert.CertificateFactory.Type" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="Java.Security.Cert.CertificateFactory.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getType", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getType", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the certificate type associated with this
            certificate factory.</summary>
        <value>the name of the certificate type associated with this
            certificate factory.</value>
        <remarks>
          <para>Returns the name of the certificate type associated with this
            certificate factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/cert/CertificateFactory#getType()" title="Reference documentation">Java documentation for <code>java.security.cert.CertificateFactory.getType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
