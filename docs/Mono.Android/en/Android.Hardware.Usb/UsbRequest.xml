<Type Name="UsbRequest" FullName="Android.Hardware.Usb.UsbRequest">
  <TypeSignature Language="C#" Value="public class UsbRequest : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UsbRequest extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/usb/UsbRequest", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="12">
    <summary>A class representing USB request packet.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A class representing USB request packet.
 This can be used for both reading and writing data to or from a
 <c><see cref="T:Android.Hardware.Usb.UsbDeviceConnection" /></c>.
 UsbRequests can be used to transfer data on bulk and interrupt endpoints.
 Requests on bulk endpoints can be sent synchronously via <c><see cref="M:Android.Hardware.Usb.UsbDeviceConnection.BulkTransfer(Android.Hardware.Usb.UsbEndpoint,System.Byte[],System.Byte[],System.Byte[])" /></c>
 or asynchronously via <c><see cref="M:Android.Hardware.Usb.UsbRequest.Queue(Java.Nio.ByteBuffer,System.Int32)" /></c> and <c><see cref="M:Android.Hardware.Usb.UsbDeviceConnection.RequestWait" /></c>.
 Requests on interrupt endpoints are only send and received asynchronously.

 </para>
      <para tool="javadoc-to-mdoc">Requests on endpoint zero are not supported by this class;
 use <c><see cref="M:Android.Hardware.Usb.UsbDeviceConnection.ControlTransfer(Android.Hardware.Usb.UsbAddressing,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></c> for endpoint zero requests instead.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 12" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsbRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html#UsbRequest()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UsbRequest (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Cancel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancel", "()Z", "GetCancelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels a pending queue operation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancels a pending queue operation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html#cancel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ClientData">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object ClientData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object ClientData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getClientData", "()Ljava/lang/Object;", "GetGetClientDataHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setClientData", "(Ljava/lang/Object;)V", "GetSetClientData_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the client data for the request.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html#getClientData()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the client data for the request.
 This can be used in conjunction with <c><see cref="P:Android.Hardware.Usb.UsbRequest.ClientData" /></c>
 to associate another object with this request, which can be useful for
 maintaining state between calls to <c><see cref="M:Android.Hardware.Usb.UsbRequest.Queue(Java.Nio.ByteBuffer,System.Int32)" /></c> and
 <c><see cref="M:Android.Hardware.Usb.UsbDeviceConnection.RequestWait" /></c></para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html#setClientData(java.lang.Object)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the client data for the request.
 This can be used in conjunction with <c><see cref="P:Android.Hardware.Usb.UsbRequest.ClientData" /></c>
 to associate another object with this request, which can be useful for
 maintaining state between calls to <c><see cref="M:Android.Hardware.Usb.UsbRequest.Queue(Java.Nio.ByteBuffer,System.Int32)" /></c> and
 <c><see cref="M:Android.Hardware.Usb.UsbDeviceConnection.RequestWait" /></c></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all resources related to this request.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Releases all resources related to this request.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Usb.UsbEndpoint Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Hardware.Usb.UsbEndpoint Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEndpoint", "()Landroid/hardware/usb/UsbEndpoint;", "GetGetEndpointHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Usb.UsbEndpoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the endpoint for the request, or null if the request is not opened.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the endpoint for the request, or null if the request is not opened.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html#getEndpoint()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual bool Initialize (Android.Hardware.Usb.UsbDeviceConnection connection, Android.Hardware.Usb.UsbEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(class Android.Hardware.Usb.UsbDeviceConnection connection, class Android.Hardware.Usb.UsbEndpoint endpoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initialize", "(Landroid/hardware/usb/UsbDeviceConnection;Landroid/hardware/usb/UsbEndpoint;)Z", "GetInitialize_Landroid_hardware_usb_UsbDeviceConnection_Landroid_hardware_usb_UsbEndpoint_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Android.Hardware.Usb.UsbDeviceConnection" />
        <Parameter Name="endpoint" Type="Android.Hardware.Usb.UsbEndpoint" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="endpoint">the endpoint to be used for this request.</param>
        <summary>Initializes the request so it can read or write data on the given endpoint.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes the request so it can read or write data on the given endpoint.
 Whether the request allows reading or writing depends on the direction of the endpoint.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html#initialize(android.hardware.usb.UsbDeviceConnection, android.hardware.usb.UsbEndpoint)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Queue">
      <MemberSignature Language="C#" Value="public virtual bool Queue (Java.Nio.ByteBuffer buffer, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Queue(class Java.Nio.ByteBuffer buffer, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queue", "(Ljava/nio/ByteBuffer;I)Z", "GetQueue_Ljava_nio_ByteBuffer_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">the buffer containing the bytes to write, or location to store
 the results of a read</param>
        <param name="length">number of bytes to read or write</param>
        <summary>Queues the request to send or receive data on its endpoint.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Queues the request to send or receive data on its endpoint.
 For OUT endpoints, the given buffer data will be sent on the endpoint.
 For IN endpoints, the endpoint will attempt to read the given number of bytes
 into the specified buffer.
 If the queueing operation is successful, we return true and the result will be
 returned via <c><see cref="M:Android.Hardware.Usb.UsbDeviceConnection.RequestWait" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbRequest.html#queue(java.nio.ByteBuffer, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
