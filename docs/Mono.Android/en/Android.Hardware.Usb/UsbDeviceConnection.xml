<Type Name="UsbDeviceConnection" FullName="Android.Hardware.Usb.UsbDeviceConnection">
  <TypeSignature Language="C#" Value="public class UsbDeviceConnection : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UsbDeviceConnection extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/usb/UsbDeviceConnection", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="12">
    <summary>This class is used for sending and receiving data and control messages to a USB device.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class is used for sending and receiving data and control messages to a USB device.
 Instances of this class are created by <c><see cref="M:Android.Hardware.Usb.UsbManager.OpenDevice(Android.Hardware.Usb.UsbDevice)" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 12" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UsbDeviceConnection (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BulkTransfer">
      <MemberSignature Language="C#" Value="public virtual int BulkTransfer (Android.Hardware.Usb.UsbEndpoint endpoint, byte[] buffer, int length, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BulkTransfer(class Android.Hardware.Usb.UsbEndpoint endpoint, unsigned int8[] buffer, int32 length, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bulkTransfer", "(Landroid/hardware/usb/UsbEndpoint;[BII)I", "GetBulkTransfer_Landroid_hardware_usb_UsbEndpoint_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Android.Hardware.Usb.UsbEndpoint" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">the endpoint for this transaction</param>
        <param name="buffer">buffer for data to send or receive</param>
        <param name="length">the length of the data to send or receive</param>
        <param name="timeout">in milliseconds</param>
        <summary>Performs a bulk transaction on the given endpoint.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs a bulk transaction on the given endpoint.
 The direction of the transfer is determined by the direction of the endpoint.
 </para>
          <para tool="javadoc-to-mdoc">
 This method transfers data starting from index 0 in the buffer.
 To specify a different offset, use
 <c><see cref="M:Android.Hardware.Usb.UsbDeviceConnection.BulkTransfer(Android.Hardware.Usb.UsbEndpoint,System.Byte[],System.Byte[],System.Byte[],System.Byte[])" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#bulkTransfer(android.hardware.usb.UsbEndpoint, byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="BulkTransfer">
      <MemberSignature Language="C#" Value="public virtual int BulkTransfer (Android.Hardware.Usb.UsbEndpoint endpoint, byte[] buffer, int offset, int length, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BulkTransfer(class Android.Hardware.Usb.UsbEndpoint endpoint, unsigned int8[] buffer, int32 offset, int32 length, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bulkTransfer", "(Landroid/hardware/usb/UsbEndpoint;[BIII)I", "GetBulkTransfer_Landroid_hardware_usb_UsbEndpoint_arrayBIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Android.Hardware.Usb.UsbEndpoint" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">the endpoint for this transaction</param>
        <param name="buffer">buffer for data to send or receive</param>
        <param name="offset">the index of the first byte in the buffer to send or receive</param>
        <param name="length">the length of the data to send or receive</param>
        <param name="timeout">in milliseconds</param>
        <summary>Performs a bulk transaction on the given endpoint.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs a bulk transaction on the given endpoint.
 The direction of the transfer is determined by the direction of the endpoint.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#bulkTransfer(android.hardware.usb.UsbEndpoint, byte[], int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="BulkTransferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; BulkTransferAsync (Android.Hardware.Usb.UsbEndpoint endpoint, byte[] buffer, int length, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; BulkTransferAsync(class Android.Hardware.Usb.UsbEndpoint endpoint, unsigned int8[] buffer, int32 length, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Android.Hardware.Usb.UsbEndpoint" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="length">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BulkTransferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; BulkTransferAsync (Android.Hardware.Usb.UsbEndpoint endpoint, byte[] buffer, int offset, int length, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; BulkTransferAsync(class Android.Hardware.Usb.UsbEndpoint endpoint, unsigned int8[] buffer, int32 offset, int32 length, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Android.Hardware.Usb.UsbEndpoint" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimInterface">
      <MemberSignature Language="C#" Value="public virtual bool ClaimInterface (Android.Hardware.Usb.UsbInterface intf, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClaimInterface(class Android.Hardware.Usb.UsbInterface intf, bool force) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("claimInterface", "(Landroid/hardware/usb/UsbInterface;Z)Z", "GetClaimInterface_Landroid_hardware_usb_UsbInterface_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intf" Type="Android.Hardware.Usb.UsbInterface" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="intf">the interface to claim</param>
        <param name="force">true to disconnect kernel driver if necessary</param>
        <summary>Claims exclusive access to a <c><see cref="T:Android.Hardware.Usb.UsbInterface" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Claims exclusive access to a <c><see cref="T:Android.Hardware.Usb.UsbInterface" /></c>.
 This must be done before sending or receiving data on any
 <c><see cref="T:Android.Hardware.Usb.UsbEndpoint" /></c>s belonging to the interface.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#claimInterface(android.hardware.usb.UsbInterface, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all system resources related to the device.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Releases all system resources related to the device.
 Once the object is closed it cannot be used again.
 The client must call <c><see cref="M:Android.Hardware.Usb.UsbManager.OpenDevice(Android.Hardware.Usb.UsbDevice)" /></c> again
 to retrieve a new instance to reestablish communication with the device.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ControlTransfer">
      <MemberSignature Language="C#" Value="public virtual int ControlTransfer (Android.Hardware.Usb.UsbAddressing requestType, int request, int value, int index, byte[] buffer, int length, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ControlTransfer(valuetype Android.Hardware.Usb.UsbAddressing requestType, int32 request, int32 value, int32 index, unsigned int8[] buffer, int32 length, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("controlTransfer", "(IIII[BII)I", "GetControlTransfer_IIIIarrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestType" Type="Android.Hardware.Usb.UsbAddressing">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="request" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="requestType">request type for this transaction</param>
        <param name="request">request ID for this transaction</param>
        <param name="value">value field for this transaction</param>
        <param name="index">index field for this transaction</param>
        <param name="buffer">buffer for data portion of transaction,
 or null if no data needs to be sent or received</param>
        <param name="length">the length of the data to send or receive</param>
        <param name="timeout">in milliseconds</param>
        <summary>Performs a control transaction on endpoint zero for this device.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs a control transaction on endpoint zero for this device.
 The direction of the transfer is determined by the request type.
 If requestType &amp; <c><see cref="!:Android.Hardware.Usb.UsbConstants.USB_ENDPOINT_DIR_MASK" /></c> is
 <c><see cref="!:Android.Hardware.Usb.UsbConstants.USB_DIR_OUT" /></c>, then the transfer is a write,
 and if it is <c><see cref="!:Android.Hardware.Usb.UsbConstants.USB_DIR_IN" /></c>, then the transfer
 is a read.
 </para>
          <para tool="javadoc-to-mdoc">
 This method transfers data starting from index 0 in the buffer.
 To specify a different offset, use
 <c><see cref="M:Android.Hardware.Usb.UsbDeviceConnection.ControlTransfer(Android.Hardware.Usb.UsbAddressing,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#controlTransfer(int, int, int, int, byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ControlTransfer">
      <MemberSignature Language="C#" Value="public virtual int ControlTransfer (Android.Hardware.Usb.UsbAddressing requestType, int request, int value, int index, byte[] buffer, int offset, int length, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ControlTransfer(valuetype Android.Hardware.Usb.UsbAddressing requestType, int32 request, int32 value, int32 index, unsigned int8[] buffer, int32 offset, int32 length, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("controlTransfer", "(IIII[BIII)I", "GetControlTransfer_IIIIarrayBIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestType" Type="Android.Hardware.Usb.UsbAddressing">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="request" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="requestType">request type for this transaction</param>
        <param name="request">request ID for this transaction</param>
        <param name="value">value field for this transaction</param>
        <param name="index">index field for this transaction</param>
        <param name="buffer">buffer for data portion of transaction,
 or null if no data needs to be sent or received</param>
        <param name="offset">the index of the first byte in the buffer to send or receive</param>
        <param name="length">the length of the data to send or receive</param>
        <param name="timeout">in milliseconds</param>
        <summary>Performs a control transaction on endpoint zero for this device.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs a control transaction on endpoint zero for this device.
 The direction of the transfer is determined by the request type.
 If requestType &amp; <c><see cref="!:Android.Hardware.Usb.UsbConstants.USB_ENDPOINT_DIR_MASK" /></c> is
 <c><see cref="!:Android.Hardware.Usb.UsbConstants.USB_DIR_OUT" /></c>, then the transfer is a write,
 and if it is <c><see cref="!:Android.Hardware.Usb.UsbConstants.USB_DIR_IN" /></c>, then the transfer
 is a read.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#controlTransfer(int, int, int, int, byte[], int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ControlTransferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ControlTransferAsync (Android.Hardware.Usb.UsbAddressing requestType, int request, int value, int index, byte[] buffer, int length, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ControlTransferAsync(valuetype Android.Hardware.Usb.UsbAddressing requestType, int32 request, int32 value, int32 index, unsigned int8[] buffer, int32 length, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestType" Type="Android.Hardware.Usb.UsbAddressing">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="request" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="requestType">To be added.</param>
        <param name="request">To be added.</param>
        <param name="value">To be added.</param>
        <param name="index">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="length">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlTransferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ControlTransferAsync (Android.Hardware.Usb.UsbAddressing requestType, int request, int value, int index, byte[] buffer, int offset, int length, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ControlTransferAsync(valuetype Android.Hardware.Usb.UsbAddressing requestType, int32 request, int32 value, int32 index, unsigned int8[] buffer, int32 offset, int32 length, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestType" Type="Android.Hardware.Usb.UsbAddressing">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="request" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="requestType">To be added.</param>
        <param name="request">To be added.</param>
        <param name="value">To be added.</param>
        <param name="index">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDescriptor">
      <MemberSignature Language="C#" Value="public virtual int FileDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFileDescriptor", "()I", "GetGetFileDescriptorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the native file descriptor for the device, or
 -1 if the device is not opened.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the native file descriptor for the device, or
 -1 if the device is not opened.
 This is intended for passing to native code to access the device.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#getFileDescriptor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="GetRawDescriptors">
      <MemberSignature Language="C#" Value="public virtual byte[] GetRawDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetRawDescriptors() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRawDescriptors", "()[B", "GetGetRawDescriptorsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the raw USB descriptors for the device.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the raw USB descriptors for the device.
 This can be used to access descriptors not supported directly
 via the higher level APIs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#getRawDescriptors()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseInterface">
      <MemberSignature Language="C#" Value="public virtual bool ReleaseInterface (Android.Hardware.Usb.UsbInterface intf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReleaseInterface(class Android.Hardware.Usb.UsbInterface intf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("releaseInterface", "(Landroid/hardware/usb/UsbInterface;)Z", "GetReleaseInterface_Landroid_hardware_usb_UsbInterface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intf" Type="Android.Hardware.Usb.UsbInterface" />
      </Parameters>
      <Docs>
        <param name="intf">To be added.</param>
        <summary>Releases exclusive access to a <c><see cref="T:Android.Hardware.Usb.UsbInterface" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Releases exclusive access to a <c><see cref="T:Android.Hardware.Usb.UsbInterface" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#releaseInterface(android.hardware.usb.UsbInterface)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="RequestWait">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Usb.UsbRequest RequestWait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.Usb.UsbRequest RequestWait() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestWait", "()Landroid/hardware/usb/UsbRequest;", "GetRequestWaitHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Usb.UsbRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Waits for the result of a <c><see cref="M:Android.Hardware.Usb.UsbRequest.Queue(Java.Nio.ByteBuffer,System.Int32)" /></c> operation
 Note that this may return requests queued on multiple 
 <c><see cref="T:Android.Hardware.Usb.UsbEndpoint" /></c>s.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Waits for the result of a <c><see cref="M:Android.Hardware.Usb.UsbRequest.Queue(Java.Nio.ByteBuffer,System.Int32)" /></c> operation
 Note that this may return requests queued on multiple 
 <c><see cref="T:Android.Hardware.Usb.UsbEndpoint" /></c>s.
 When multiple endpoints are in use, <c><see cref="P:Android.Hardware.Usb.UsbRequest.Endpoint" /></c> and
 <c><see cref="P:Android.Hardware.Usb.UsbRequest.ClientData" /></c> can be useful in determining
 how to process the result of this function.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#requestWait()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="RequestWaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Android.Hardware.Usb.UsbRequest&gt; RequestWaitAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Android.Hardware.Usb.UsbRequest&gt; RequestWaitAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Hardware.Usb.UsbRequest&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serial">
      <MemberSignature Language="C#" Value="public virtual string Serial { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Serial" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSerial", "()Ljava/lang/String;", "GetGetSerialHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the serial number for the device.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the serial number for the device.
 This will return null if the device has not been opened.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#getSerial()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool SetConfiguration (Android.Hardware.Usb.UsbConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetConfiguration(class Android.Hardware.Usb.UsbConfiguration configuration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setConfiguration", "(Landroid/hardware/usb/UsbConfiguration;)Z", "GetSetConfiguration_Landroid_hardware_usb_UsbConfiguration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Android.Hardware.Usb.UsbConfiguration" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <summary>Sets the device's current <c><see cref="T:Android.Hardware.Usb.UsbConfiguration" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the device's current <c><see cref="T:Android.Hardware.Usb.UsbConfiguration" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#setConfiguration(android.hardware.usb.UsbConfiguration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInterface">
      <MemberSignature Language="C#" Value="public virtual bool SetInterface (Android.Hardware.Usb.UsbInterface intf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetInterface(class Android.Hardware.Usb.UsbInterface intf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInterface", "(Landroid/hardware/usb/UsbInterface;)Z", "GetSetInterface_Landroid_hardware_usb_UsbInterface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intf" Type="Android.Hardware.Usb.UsbInterface" />
      </Parameters>
      <Docs>
        <param name="intf">To be added.</param>
        <summary>Sets the current <c><see cref="T:Android.Hardware.Usb.UsbInterface" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the current <c><see cref="T:Android.Hardware.Usb.UsbInterface" /></c>.
 Used to select between two interfaces with the same ID but different alternate setting.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html#setInterface(android.hardware.usb.UsbInterface)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
