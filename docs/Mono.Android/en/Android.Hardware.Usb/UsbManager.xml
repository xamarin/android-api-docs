<Type Name="UsbManager" FullName="Android.Hardware.Usb.UsbManager">
  <TypeSignature Language="C#" Value="public class UsbManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UsbManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Hardware.Usb.UsbManager" />
  <TypeSignature Language="F#" Value="type UsbManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/hardware/usb/UsbManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/hardware/usb/UsbManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="12">
    <summary>This class allows you to access the state of USB and communicate with USB devices.</summary>
    <remarks>
      <para>This class allows you to access the state of USB and communicate with USB devices.
            Currently only host mode is supported in the public API.
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about communicating with USB hardware, read the
            <see href="https://developer.android.com/guide/topics/connectivity/usb/index.html">USB developer guide</see>.</para>
      <para>&lt;/div&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 12" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UsbManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Usb.UsbManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Hardware.Usb.UsbManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Hardware.Usb.UsbManager" Usage="new Android.Hardware.Usb.UsbManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionUsbAccessoryAttached">
      <MemberSignature Language="C#" Value="public const string ActionUsbAccessoryAttached;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionUsbAccessoryAttached" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Usb.UsbManager.ActionUsbAccessoryAttached" />
      <MemberSignature Language="F#" Value="val mutable ActionUsbAccessoryAttached : string" Usage="Android.Hardware.Usb.UsbManager.ActionUsbAccessoryAttached" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_USB_ACCESSORY_ATTACHED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_USB_ACCESSORY_ATTACHED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity intent sent when user attaches a USB accessory.</summary>
        <remarks>
          <para>Activity intent sent when user attaches a USB accessory.
            
            &lt;ul&gt;
            &lt;li&gt; <c>#EXTRA_ACCESSORY</c> containing the <c>android.hardware.usb.UsbAccessory</c>
            for the attached accessory
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#ACTION_USB_ACCESSORY_ATTACHED" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.ACTION_USB_ACCESSORY_ATTACHED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ActionUsbAccessoryDetached">
      <MemberSignature Language="C#" Value="public const string ActionUsbAccessoryDetached;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionUsbAccessoryDetached" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Usb.UsbManager.ActionUsbAccessoryDetached" />
      <MemberSignature Language="F#" Value="val mutable ActionUsbAccessoryDetached : string" Usage="Android.Hardware.Usb.UsbManager.ActionUsbAccessoryDetached" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_USB_ACCESSORY_DETACHED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_USB_ACCESSORY_DETACHED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action:  A broadcast for USB accessory detached event.</summary>
        <remarks>
          <para>Broadcast Action:  A broadcast for USB accessory detached event.
            
            This intent is sent when a USB accessory is detached.
            &lt;ul&gt;
            &lt;li&gt; <c>#EXTRA_ACCESSORY</c> containing the <c>UsbAccessory</c>
            for the attached accessory that was detached
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#ACTION_USB_ACCESSORY_DETACHED" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.ACTION_USB_ACCESSORY_DETACHED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ActionUsbDeviceAttached">
      <MemberSignature Language="C#" Value="public const string ActionUsbDeviceAttached;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionUsbDeviceAttached" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Usb.UsbManager.ActionUsbDeviceAttached" />
      <MemberSignature Language="F#" Value="val mutable ActionUsbDeviceAttached : string" Usage="Android.Hardware.Usb.UsbManager.ActionUsbDeviceAttached" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_USB_DEVICE_ATTACHED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_USB_DEVICE_ATTACHED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity intent sent when user attaches a USB device.</summary>
        <remarks>
          <para>Activity intent sent when user attaches a USB device.
            
            This intent is sent when a USB device is attached to the USB bus when in host mode.
            &lt;ul&gt;
            &lt;li&gt; <c>#EXTRA_DEVICE</c> containing the <c>android.hardware.usb.UsbDevice</c>
            for the attached device
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#ACTION_USB_DEVICE_ATTACHED" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.ACTION_USB_DEVICE_ATTACHED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ActionUsbDeviceDetached">
      <MemberSignature Language="C#" Value="public const string ActionUsbDeviceDetached;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionUsbDeviceDetached" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Usb.UsbManager.ActionUsbDeviceDetached" />
      <MemberSignature Language="F#" Value="val mutable ActionUsbDeviceDetached : string" Usage="Android.Hardware.Usb.UsbManager.ActionUsbDeviceDetached" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_USB_DEVICE_DETACHED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_USB_DEVICE_DETACHED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action:  A broadcast for USB device detached event.</summary>
        <remarks>
          <para>Broadcast Action:  A broadcast for USB device detached event.
            
            This intent is sent when a USB device is detached from the USB bus when in host mode.
            &lt;ul&gt;
            &lt;li&gt; <c>#EXTRA_DEVICE</c> containing the <c>android.hardware.usb.UsbDevice</c>
            for the detached device
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#ACTION_USB_DEVICE_DETACHED" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.ACTION_USB_DEVICE_DETACHED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="DeviceList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,Android.Hardware.Usb.UsbDevice&gt;? DeviceList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Android.Hardware.Usb.UsbDevice&gt; DeviceList" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Usb.UsbManager.DeviceList" />
      <MemberSignature Language="F#" Value="member this.DeviceList : System.Collections.Generic.IDictionary&lt;string, Android.Hardware.Usb.UsbDevice&gt;" Usage="Android.Hardware.Usb.UsbManager.DeviceList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDeviceList", "()Ljava/util/HashMap;", "GetGetDeviceListHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDeviceList", "()Ljava/util/HashMap;", "GetGetDeviceListHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Android.Hardware.Usb.UsbDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a HashMap containing all USB devices currently attached.</summary>
        <value>HashMap containing all connected USB devices.</value>
        <remarks>
          <para>Returns a HashMap containing all USB devices currently attached.
            USB device name is the key for the returned HashMap.
            The result will be empty if no devices are attached, or if
            USB host mode is inactive or unsupported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#getDeviceList()" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.getDeviceList()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ExtraAccessory">
      <MemberSignature Language="C#" Value="public const string ExtraAccessory;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraAccessory" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Usb.UsbManager.ExtraAccessory" />
      <MemberSignature Language="F#" Value="val mutable ExtraAccessory : string" Usage="Android.Hardware.Usb.UsbManager.ExtraAccessory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_ACCESSORY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_ACCESSORY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of extra for <c>#ACTION_USB_ACCESSORY_ATTACHED</c> and
            <c>#ACTION_USB_ACCESSORY_DETACHED</c> broadcasts
            containing the <c>UsbAccessory</c> object for the accessory.</summary>
        <remarks>
          <para>Name of extra for <c>#ACTION_USB_ACCESSORY_ATTACHED</c> and
            <c>#ACTION_USB_ACCESSORY_DETACHED</c> broadcasts
            containing the <c>UsbAccessory</c> object for the accessory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#EXTRA_ACCESSORY" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.EXTRA_ACCESSORY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ExtraDevice">
      <MemberSignature Language="C#" Value="public const string ExtraDevice;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDevice" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Usb.UsbManager.ExtraDevice" />
      <MemberSignature Language="F#" Value="val mutable ExtraDevice : string" Usage="Android.Hardware.Usb.UsbManager.ExtraDevice" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_DEVICE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_DEVICE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of extra for <c>#ACTION_USB_DEVICE_ATTACHED</c> and
            <c>#ACTION_USB_DEVICE_DETACHED</c> broadcasts
            containing the <c>UsbDevice</c> object for the device.</summary>
        <remarks>
          <para>Name of extra for <c>#ACTION_USB_DEVICE_ATTACHED</c> and
            <c>#ACTION_USB_DEVICE_DETACHED</c> broadcasts
            containing the <c>UsbDevice</c> object for the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#EXTRA_DEVICE" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.EXTRA_DEVICE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ExtraPermissionGranted">
      <MemberSignature Language="C#" Value="public const string ExtraPermissionGranted;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPermissionGranted" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.Usb.UsbManager.ExtraPermissionGranted" />
      <MemberSignature Language="F#" Value="val mutable ExtraPermissionGranted : string" Usage="Android.Hardware.Usb.UsbManager.ExtraPermissionGranted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PERMISSION_GRANTED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PERMISSION_GRANTED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of extra added to the <c>android.app.PendingIntent</c>
            passed into <c>#requestPermission(UsbDevice, PendingIntent)</c>
            or <c>#requestPermission(UsbAccessory, PendingIntent)</c>
            containing a boolean value indicating whether the user granted permission or not.</summary>
        <remarks>
          <para>Name of extra added to the <c>android.app.PendingIntent</c>
            passed into <c>#requestPermission(UsbDevice, PendingIntent)</c>
            or <c>#requestPermission(UsbAccessory, PendingIntent)</c>
            containing a boolean value indicating whether the user granted permission or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#EXTRA_PERMISSION_GRANTED" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.EXTRA_PERMISSION_GRANTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessoryList">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Usb.UsbAccessory[]? GetAccessoryList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.Usb.UsbAccessory[] GetAccessoryList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Usb.UsbManager.GetAccessoryList" />
      <MemberSignature Language="F#" Value="abstract member GetAccessoryList : unit -&gt; Android.Hardware.Usb.UsbAccessory[]&#xA;override this.GetAccessoryList : unit -&gt; Android.Hardware.Usb.UsbAccessory[]" Usage="usbManager.GetAccessoryList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAccessoryList", "()[Landroid/hardware/usb/UsbAccessory;", "GetGetAccessoryListHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAccessoryList", "()[Landroid/hardware/usb/UsbAccessory;", "GetGetAccessoryListHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Usb.UsbAccessory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a list of currently attached USB accessories.</summary>
        <returns>list of USB accessories, or null if none are attached.</returns>
        <remarks>
          <para>Returns a list of currently attached USB accessories.
            (in the current implementation there can be at most one)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#getAccessoryList()" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.getAccessoryList()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="HasPermission">
      <MemberSignature Language="C#" Value="public virtual bool HasPermission (Android.Hardware.Usb.UsbAccessory? accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasPermission(class Android.Hardware.Usb.UsbAccessory accessory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Usb.UsbManager.HasPermission(Android.Hardware.Usb.UsbAccessory)" />
      <MemberSignature Language="F#" Value="abstract member HasPermission : Android.Hardware.Usb.UsbAccessory -&gt; bool&#xA;override this.HasPermission : Android.Hardware.Usb.UsbAccessory -&gt; bool" Usage="usbManager.HasPermission accessory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasPermission", "(Landroid/hardware/usb/UsbAccessory;)Z", "GetHasPermission_Landroid_hardware_usb_UsbAccessory_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasPermission", "(Landroid/hardware/usb/UsbAccessory;)Z", "GetHasPermission_Landroid_hardware_usb_UsbAccessory_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="Android.Hardware.Usb.UsbAccessory" />
      </Parameters>
      <Docs>
        <param name="accessory">to check permissions for</param>
        <summary>Returns true if the caller has permission to access the accessory.</summary>
        <returns>true if caller has permission</returns>
        <remarks>
          <para>Returns true if the caller has permission to access the accessory.
            Permission might have been granted temporarily via
            <c>#requestPermission(UsbAccessory, PendingIntent)</c> or
            by the user choosing the caller as the default application for the accessory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#hasPermission(android.hardware.usb.UsbAccessory)" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.hasPermission(android.hardware.usb.UsbAccessory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="HasPermission">
      <MemberSignature Language="C#" Value="public virtual bool HasPermission (Android.Hardware.Usb.UsbDevice? device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasPermission(class Android.Hardware.Usb.UsbDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Usb.UsbManager.HasPermission(Android.Hardware.Usb.UsbDevice)" />
      <MemberSignature Language="F#" Value="abstract member HasPermission : Android.Hardware.Usb.UsbDevice -&gt; bool&#xA;override this.HasPermission : Android.Hardware.Usb.UsbDevice -&gt; bool" Usage="usbManager.HasPermission device" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasPermission", "(Landroid/hardware/usb/UsbDevice;)Z", "GetHasPermission_Landroid_hardware_usb_UsbDevice_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasPermission", "(Landroid/hardware/usb/UsbDevice;)Z", "GetHasPermission_Landroid_hardware_usb_UsbDevice_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Android.Hardware.Usb.UsbDevice" />
      </Parameters>
      <Docs>
        <param name="device">to check permissions for</param>
        <summary>Returns true if the caller has permission to access the device.</summary>
        <returns>true if caller has permission</returns>
        <remarks>
          <para>Returns true if the caller has permission to access the device.
            Permission might have been granted temporarily via
            <c>#requestPermission(UsbDevice, PendingIntent)</c> or
            by the user choosing the caller as the default application for the device.
            Permission for USB devices of class <c>UsbConstants#USB_CLASS_VIDEO</c> for clients that
            target SDK <c>android.os.Build.VERSION_CODES#P</c> and above can be granted only if they
            have additionally the <c>android.Manifest.permission#CAMERA</c> permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#hasPermission(android.hardware.usb.UsbDevice)" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.hasPermission(android.hardware.usb.UsbDevice)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Usb.UsbManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Hardware.Usb.UsbManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAccessory">
      <MemberSignature Language="C#" Value="public virtual Android.OS.ParcelFileDescriptor? OpenAccessory (Android.Hardware.Usb.UsbAccessory? accessory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.ParcelFileDescriptor OpenAccessory(class Android.Hardware.Usb.UsbAccessory accessory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Usb.UsbManager.OpenAccessory(Android.Hardware.Usb.UsbAccessory)" />
      <MemberSignature Language="F#" Value="abstract member OpenAccessory : Android.Hardware.Usb.UsbAccessory -&gt; Android.OS.ParcelFileDescriptor&#xA;override this.OpenAccessory : Android.Hardware.Usb.UsbAccessory -&gt; Android.OS.ParcelFileDescriptor" Usage="usbManager.OpenAccessory accessory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openAccessory", "(Landroid/hardware/usb/UsbAccessory;)Landroid/os/ParcelFileDescriptor;", "GetOpenAccessory_Landroid_hardware_usb_UsbAccessory_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openAccessory", "(Landroid/hardware/usb/UsbAccessory;)Landroid/os/ParcelFileDescriptor;", "GetOpenAccessory_Landroid_hardware_usb_UsbAccessory_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="Android.Hardware.Usb.UsbAccessory" />
      </Parameters>
      <Docs>
        <param name="accessory">the USB accessory to open</param>
        <summary>Opens a file descriptor for reading and writing data to the USB accessory.</summary>
        <returns>file descriptor, or null if the accessory could not be opened.</returns>
        <remarks>
          <para>Opens a file descriptor for reading and writing data to the USB accessory.</para>
          <para>If data is read from the <c>java.io.InputStream</c> created from this file descriptor all
            data of a USB transfer should be read at once. If only a partial request is read the rest of
            the transfer is dropped.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#openAccessory(android.hardware.usb.UsbAccessory)" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.openAccessory(android.hardware.usb.UsbAccessory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="OpenDevice">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Usb.UsbDeviceConnection? OpenDevice (Android.Hardware.Usb.UsbDevice? device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.Usb.UsbDeviceConnection OpenDevice(class Android.Hardware.Usb.UsbDevice device) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Usb.UsbManager.OpenDevice(Android.Hardware.Usb.UsbDevice)" />
      <MemberSignature Language="F#" Value="abstract member OpenDevice : Android.Hardware.Usb.UsbDevice -&gt; Android.Hardware.Usb.UsbDeviceConnection&#xA;override this.OpenDevice : Android.Hardware.Usb.UsbDevice -&gt; Android.Hardware.Usb.UsbDeviceConnection" Usage="usbManager.OpenDevice device" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openDevice", "(Landroid/hardware/usb/UsbDevice;)Landroid/hardware/usb/UsbDeviceConnection;", "GetOpenDevice_Landroid_hardware_usb_UsbDevice_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openDevice", "(Landroid/hardware/usb/UsbDevice;)Landroid/hardware/usb/UsbDeviceConnection;", "GetOpenDevice_Landroid_hardware_usb_UsbDevice_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Usb.UsbDeviceConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Android.Hardware.Usb.UsbDevice" />
      </Parameters>
      <Docs>
        <param name="device">the device to open</param>
        <summary>Opens the device so it can be used to send and receive
            data using <c>android.hardware.usb.UsbRequest</c>.</summary>
        <returns>a <c>UsbDeviceConnection</c>, or <c>null</c> if open failed</returns>
        <remarks>
          <para>Opens the device so it can be used to send and receive
            data using <c>android.hardware.usb.UsbRequest</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#openDevice(android.hardware.usb.UsbDevice)" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.openDevice(android.hardware.usb.UsbDevice)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="RequestPermission">
      <MemberSignature Language="C#" Value="public virtual void RequestPermission (Android.Hardware.Usb.UsbAccessory? accessory, Android.App.PendingIntent? pi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestPermission(class Android.Hardware.Usb.UsbAccessory accessory, class Android.App.PendingIntent pi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Usb.UsbManager.RequestPermission(Android.Hardware.Usb.UsbAccessory,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RequestPermission : Android.Hardware.Usb.UsbAccessory * Android.App.PendingIntent -&gt; unit&#xA;override this.RequestPermission : Android.Hardware.Usb.UsbAccessory * Android.App.PendingIntent -&gt; unit" Usage="usbManager.RequestPermission (accessory, pi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestPermission", "(Landroid/hardware/usb/UsbAccessory;Landroid/app/PendingIntent;)V", "GetRequestPermission_Landroid_hardware_usb_UsbAccessory_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestPermission", "(Landroid/hardware/usb/UsbAccessory;Landroid/app/PendingIntent;)V", "GetRequestPermission_Landroid_hardware_usb_UsbAccessory_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessory" Type="Android.Hardware.Usb.UsbAccessory" />
        <Parameter Name="pi" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="accessory">to request permissions for</param>
        <param name="pi">PendingIntent for returning result</param>
        <summary>Requests temporary permission for the given package to access the accessory.</summary>
        <remarks>
          <para>Requests temporary permission for the given package to access the accessory.
            This may result in a system dialog being displayed to the user
            if permission had not already been granted.
            Success or failure is returned via the <c>android.app.PendingIntent</c> pi.
            If successful, this grants the caller permission to access the accessory only
            until the device is disconnected.
            
            The following extras will be added to pi:
            &lt;ul&gt;
            &lt;li&gt; <c>#EXTRA_ACCESSORY</c> containing the accessory passed into this call
            &lt;li&gt; <c>#EXTRA_PERMISSION_GRANTED</c> containing boolean indicating whether
            permission was granted by the user
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#requestPermission(android.hardware.usb.UsbAccessory,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.requestPermission(android.hardware.usb.UsbAccessory, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="RequestPermission">
      <MemberSignature Language="C#" Value="public virtual void RequestPermission (Android.Hardware.Usb.UsbDevice? device, Android.App.PendingIntent? pi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestPermission(class Android.Hardware.Usb.UsbDevice device, class Android.App.PendingIntent pi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Usb.UsbManager.RequestPermission(Android.Hardware.Usb.UsbDevice,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RequestPermission : Android.Hardware.Usb.UsbDevice * Android.App.PendingIntent -&gt; unit&#xA;override this.RequestPermission : Android.Hardware.Usb.UsbDevice * Android.App.PendingIntent -&gt; unit" Usage="usbManager.RequestPermission (device, pi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestPermission", "(Landroid/hardware/usb/UsbDevice;Landroid/app/PendingIntent;)V", "GetRequestPermission_Landroid_hardware_usb_UsbDevice_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestPermission", "(Landroid/hardware/usb/UsbDevice;Landroid/app/PendingIntent;)V", "GetRequestPermission_Landroid_hardware_usb_UsbDevice_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Android.Hardware.Usb.UsbDevice" />
        <Parameter Name="pi" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="device">to request permissions for</param>
        <param name="pi">PendingIntent for returning result</param>
        <summary>Requests temporary permission for the given package to access the device.</summary>
        <remarks>
          <para>Requests temporary permission for the given package to access the device.
            This may result in a system dialog being displayed to the user
            if permission had not already been granted.
            Success or failure is returned via the <c>android.app.PendingIntent</c> pi.
            If successful, this grants the caller permission to access the device only
            until the device is disconnected.
            
            The following extras will be added to pi:
            &lt;ul&gt;
            &lt;li&gt; <c>#EXTRA_DEVICE</c> containing the device passed into this call
            &lt;li&gt; <c>#EXTRA_PERMISSION_GRANTED</c> containing boolean indicating whether
            permission was granted by the user
            &lt;/ul&gt;
            
            Permission for USB devices of class <c>UsbConstants#USB_CLASS_VIDEO</c> for clients that
            target SDK <c>android.os.Build.VERSION_CODES#P</c> and above can be granted only if they
            have additionally the <c>android.Manifest.permission#CAMERA</c> permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/usb/UsbManager#requestPermission(android.hardware.usb.UsbDevice,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.hardware.usb.UsbManager.requestPermission(android.hardware.usb.UsbDevice, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Usb.UsbManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Hardware.Usb.UsbManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Usb.UsbManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Hardware.Usb.UsbManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
