<Type Name="Resources" FullName="Android.Content.Res.Resources">
  <TypeSignature Language="C#" Value="public class Resources : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Resources extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/res/Resources", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Class for accessing an application's resources.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Class for accessing an application's resources.  This sits on top of the
 asset manager of the application (accessible through <c><see cref="P:Android.Content.Res.Resources.Assets" /></c>) and
 provides a high-level API for getting typed data from the assets.

 </para>
      <para tool="javadoc-to-mdoc">The Android resource system keeps track of all non-code assets associated with an
 application. You can use this class to access your application's resources. You can generally
 acquire the <c><see cref="T:Android.Content.Res.Resources" /></c> instance associated with your application
 with <c><see cref="P:Android.Content.Context.Resources" /></c>.</para>
      <para tool="javadoc-to-mdoc">The Android SDK tools compile your application's resources into the application binary
 at build time.  To use a resource, you must install it correctly in the source tree (inside
 your project's <c>res/</c> directory) and build your application.  As part of the build
 process, the SDK tools generate symbols for each resource, which you can use in your application
 code to access the resources.</para>
      <para tool="javadoc-to-mdoc">Using application resources makes it easy to update various characteristics of your
 application without modifying code, and&amp;mdash;by providing sets of alternative
 resources&amp;mdash;enables you to optimize your application for a variety of device configurations
 (such as for different languages and screen sizes). This is an important aspect of developing
 Android applications that are compatible on different types of devices.</para>
      <para tool="javadoc-to-mdoc">For more information about using resources, see the documentation about <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/index.html">Application Resources</a></format>.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/content/res/Resources.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Resources (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Resources (Android.Content.Res.AssetManager assets, Android.Util.DisplayMetrics metrics, Android.Content.Res.Configuration config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Res.AssetManager assets, class Android.Util.DisplayMetrics metrics, class Android.Content.Res.Configuration config) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/res/AssetManager;Landroid/util/DisplayMetrics;Landroid/content/res/Configuration;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assets" Type="Android.Content.Res.AssetManager" />
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="config" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="assets">To be added.</param>
        <param name="metrics">To be added.</param>
        <param name="config">To be added.</param>
        <summary>Create a new Resources object on top of an existing set of assets in an
 AssetManager.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new Resources object on top of an existing set of assets in an
 AssetManager.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#Resources(android.content.res.AssetManager, android.util.DisplayMetrics, android.content.res.Configuration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Assets">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetManager Assets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.AssetManager Assets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAssets", "()Landroid/content/res/AssetManager;", "GetGetAssetsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve underlying AssetManager storage for these resources.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve underlying AssetManager storage for these resources.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getAssets()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.Configuration Configuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Configuration Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getConfiguration", "()Landroid/content/res/Configuration;", "GetGetConfigurationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Configuration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current configuration that is in effect for this resource 
 object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the current configuration that is in effect for this resource 
 object.  The returned object should be treated as read-only.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getConfiguration()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DisplayMetrics">
      <MemberSignature Language="C#" Value="public virtual Android.Util.DisplayMetrics DisplayMetrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Util.DisplayMetrics DisplayMetrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDisplayMetrics", "()Landroid/util/DisplayMetrics;", "GetGetDisplayMetricsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.DisplayMetrics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current display metrics that are in effect for this resource 
 object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the current display metrics that are in effect for this resource 
 object.  The returned object should be treated as read-only.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getDisplayMetrics()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreloading">
      <MemberSignature Language="C#" Value="public void FinishPreloading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinishPreloading() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("finishPreloading", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by zygote when it is done preloading resources, to change back
 to normal Resources operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by zygote when it is done preloading resources, to change back
 to normal Resources operation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#finishPreloading()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FlushLayoutCache">
      <MemberSignature Language="C#" Value="public void FlushLayoutCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushLayoutCache() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flushLayoutCache", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this to remove all cached loaded layout resources from the
 Resources object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Call this to remove all cached loaded layout resources from the
 Resources object.  Only intended for use with performance testing
 tools.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#flushLayoutCache()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAnimation">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetAnimation (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetAnimation(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAnimation", "(I)Landroid/content/res/XmlResourceParser;", "GetGetAnimation_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return an XmlResourceParser through which you can read an animation
 description for the given resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return an XmlResourceParser through which you can read an animation
 description for the given resource ID.  This parser has limited
 functionality -- in particular, you can't change its input, and only
 the high-level events are available.
 
 </para>
          <para tool="javadoc-to-mdoc">This function is really a simple wrapper for calling
 <c><see cref="M:Android.Content.Res.Resources.GetXml(System.Int32)" /></c> with an animation resource.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getAnimation(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetXml(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public virtual bool GetBoolean (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBoolean", "(I)Z", "GetGetBoolean_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return a boolean associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a boolean associated with a particular resource ID.  This can be
 used with any integral resource value, and will return true if it is
 non-zero.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getBoolean(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color GetColor (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Graphics.Color GetColor(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getColor", "(I)I", "GetGetColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Returns a color integer associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a color integer associated with a particular resource ID. If the
 resource holds a complex <c><see cref="T:Android.Content.Res.ColorStateList" /></c>, then the default color
 from the set is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getColor(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does
         not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetColorStateList">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.ColorStateList GetColorStateList (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Res.ColorStateList GetColorStateList(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getColorStateList", "(I)Landroid/content/res/ColorStateList;", "GetGetColorStateList_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier of a <c><see cref="T:Android.Content.Res.ColorStateList" /></c>,
           as generated by the aapt tool. This integer encodes the
           package, type, and resource entry. The value 0 is an invalid
           identifier.</param>
        <summary>Returns a color state list associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a color state list associated with a particular resource ID. The
 resource may contain either a single raw color value or a complex
 <c><see cref="T:Android.Content.Res.ColorStateList" /></c> holding multiple possible colors.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getColorStateList(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does
         not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDimension">
      <MemberSignature Language="C#" Value="public virtual float GetDimension (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetDimension(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDimension", "(I)F", "GetGetDimension_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Retrieve a dimensional for a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve a dimensional for a particular resource ID.  Unit 
 conversions are based on the current <c><see cref="T:Android.Util.DisplayMetrics" /></c> associated
 with the resources.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getDimension(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetDimensionPixelOffset(System.Int32)" />
        <altmember cref="M:Android.Content.Res.Resources.GetDimensionPixelSize(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDimensionPixelOffset">
      <MemberSignature Language="C#" Value="public virtual int GetDimensionPixelOffset (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDimensionPixelOffset(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDimensionPixelOffset", "(I)I", "GetGetDimensionPixelOffset_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Retrieve a dimensional for a particular resource ID for use
 as an offset in raw pixels.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve a dimensional for a particular resource ID for use
 as an offset in raw pixels.  This is the same as
 <c><see cref="M:Android.Content.Res.Resources.GetDimension(System.Int32)" /></c>, except the returned value is converted to
 integer pixels for you.  An offset conversion involves simply
 truncating the base value to an integer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getDimensionPixelOffset(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetDimension(System.Int32)" />
        <altmember cref="M:Android.Content.Res.Resources.GetDimensionPixelSize(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDimensionPixelSize">
      <MemberSignature Language="C#" Value="public virtual int GetDimensionPixelSize (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDimensionPixelSize(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDimensionPixelSize", "(I)I", "GetGetDimensionPixelSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Retrieve a dimensional for a particular resource ID for use
 as a size in raw pixels.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve a dimensional for a particular resource ID for use
 as a size in raw pixels.  This is the same as
 <c><see cref="M:Android.Content.Res.Resources.GetDimension(System.Int32)" /></c>, except the returned value is converted to
 integer pixels for use as a size.  A size conversion involves
 rounding the base value, and ensuring that a non-zero base value
 is at least one pixel in size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getDimensionPixelSize(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetDimension(System.Int32)" />
        <altmember cref="M:Android.Content.Res.Resources.GetDimensionPixelOffset(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetDrawable (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetDrawable(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawable", "(I)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return a drawable object associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a drawable object associated with a particular resource ID.
 Various types of objects will be returned depending on the underlying
 resource -- for example, a solid color, PNG image, scalable image, etc.
 The Drawable API hides these implementation details.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Prior to
 <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../../reference/android/os/Build.VERSION_CODES.html#JELLY_BEAN" /></c>, this function
 would not correctly retrieve the final configuration density when
 the resource ID passed here is an alias to another Drawable resource.
 This means that if the density configuration of the alias resource
 is different than the actual resource, the density of the returned
 Drawable would be incorrect, resulting in bad scaling.  To work
 around this, you can instead retrieve the Drawable through
 <c><see cref="M:Android.Content.Res.TypedArray.GetDrawable(System.Int32)" /></c>.  Use
 <c><see cref="M:Android.Content.Context.ObtainStyledAttributes(System.Int32[])" /></c> with
 an array containing the resource ID of interest to create the TypedArray.</para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> To obtain a themed drawable, use
 <c><see cref="M:Android.Content.Context.GetDrawable(System.Int32)" /></c>
 or <c><see cref="M:Android.Content.Res.Resources.GetDrawable(System.Int32,.Theme)" /></c> passing the desired theme.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getDrawable(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does
         not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetDrawable(System.Int32, .Theme)" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetDrawable (int id, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetDrawable(int32 id, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawable", "(ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_ILandroid_content_res_Resources_Theme_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <param name="theme">The theme used to style the drawable attributes, may be <c>null</c>.</param>
        <summary>Return a drawable object associated with a particular resource ID and
 styled for the specified theme.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a drawable object associated with a particular resource ID and
 styled for the specified theme. Various types of objects will be
 returned depending on the underlying resource -- for example, a solid
 color, PNG image, scalable image, etc.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getDrawable(int, android.content.res.Resources.Theme)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does
         not exist.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDrawableForDensity">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetDrawableForDensity (int id, int density);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetDrawableForDensity(int32 id, int32 density) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawableForDensity", "(II)Landroid/graphics/drawable/Drawable;", "GetGetDrawableForDensity_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="density" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt tool.
            This integer encodes the package, type, and resource entry.
            The value 0 is an invalid identifier.</param>
        <param name="density">the desired screen density indicated by the resource as
            found in <c><see cref="T:Android.Util.DisplayMetrics" /></c>.</param>
        <summary>Return a drawable object associated with a particular resource ID for the
 given screen density in DPI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a drawable object associated with a particular resource ID for the
 given screen density in DPI. This will set the drawable's density to be
 the device's density multiplied by the ratio of actual drawable density
 to requested density. This allows the drawable to be scaled up to the
 correct size if needed. Various types of objects will be returned
 depending on the underlying resource -- for example, a solid color, PNG
 image, scalable image, etc. The Drawable API hides these implementation
 details.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> To obtain a themed drawable, use
 <c><see cref="M:Android.Content.Context.GetDrawable(System.Int32)" /></c>
 or <c><see cref="M:Android.Content.Res.Resources.GetDrawableForDensity(System.Int32,System.Int32,System.Int32)" /></c> passing the desired
 theme.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getDrawableForDensity(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 15" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does
             not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetDrawableForDensity(System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawableForDensity">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetDrawableForDensity (int id, int density, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetDrawableForDensity(int32 id, int32 density, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawableForDensity", "(IILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "GetGetDrawableForDensity_IILandroid_content_res_Resources_Theme_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="density" Type="System.Int32" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt tool.
            This integer encodes the package, type, and resource entry.
            The value 0 is an invalid identifier.</param>
        <param name="density">The desired screen density indicated by the resource as
            found in <c><see cref="T:Android.Util.DisplayMetrics" /></c>.</param>
        <param name="theme">The theme used to style the drawable attributes, may be <c>null</c>.</param>
        <summary>Return a drawable object associated with a particular resource ID for the
 given screen density in DPI and styled for the specified theme.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a drawable object associated with a particular resource ID for the
 given screen density in DPI and styled for the specified theme.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getDrawableForDensity(int, int, android.content.res.Resources.Theme)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does
             not exist.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFraction">
      <MemberSignature Language="C#" Value="public virtual float GetFraction (int id, int base, int pbase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFraction(int32 id, int32 base, int32 pbase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFraction", "(III)F", "GetGetFraction_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="base" Type="System.Int32" />
        <Parameter Name="pbase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <param name="base">The base value of this fraction.  In other words, a 
             standard fraction is multiplied by this value.</param>
        <param name="pbase">The parent base value of this fraction.  In other 
             words, a parent fraction (nn%p) is multiplied by this
             value.</param>
        <summary>Retrieve a fractional unit for a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve a fractional unit for a particular resource ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getFraction(int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdentifier">
      <MemberSignature Language="C#" Value="public virtual int GetIdentifier (string name, string defType, string defPackage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetIdentifier(string name, string defType, string defPackage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getIdentifier", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I", "GetGetIdentifier_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defType" Type="System.String" />
        <Parameter Name="defPackage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the desired resource.</param>
        <param name="defType">Optional default resource type to find, if "type/" is
                not included in the name.  Can be null to require an
                explicit type.</param>
        <param name="defPackage">Optional default package to find, if "package:" is
                   not included in the name.  Can be null to require an
                   explicit package.</param>
        <summary>Return a resource identifier for the given resource name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a resource identifier for the given resource name.  A fully
 qualified resource name is of the form "package:type/entry".  The first
 two components (package and type) are optional if defType and
 defPackage, respectively, are specified here.
 
 </para>
          <para tool="javadoc-to-mdoc">Note: use of this function is discouraged.  It is much more
 efficient to retrieve resources by identifier than by name.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getIdentifier(java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetIntArray">
      <MemberSignature Language="C#" Value="public virtual int[] GetIntArray (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetIntArray(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getIntArray", "(I)[I", "GetGetIntArray_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return the int array associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the int array associated with a particular resource ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getIntArray(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public virtual int GetInteger (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInteger(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInteger", "(I)I", "GetGetInteger_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return an integer associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return an integer associated with a particular resource ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getInteger(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLayout">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetLayout (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetLayout(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLayout", "(I)Landroid/content/res/XmlResourceParser;", "GetGetLayout_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return an XmlResourceParser through which you can read a view layout
 description for the given resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return an XmlResourceParser through which you can read a view layout
 description for the given resource ID.  This parser has limited
 functionality -- in particular, you can't change its input, and only
 the high-level events are available.
 
 </para>
          <para tool="javadoc-to-mdoc">This function is really a simple wrapper for calling
 <c><see cref="M:Android.Content.Res.Resources.GetXml(System.Int32)" /></c> with a layout resource.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getLayout(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetXml(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetMovie">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Movie GetMovie (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Movie GetMovie(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMovie", "(I)Landroid/graphics/Movie;", "GetGetMovie_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Movie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return a movie object associated with the particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a movie object associated with the particular resource ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getMovie(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.
 
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuantityString">
      <MemberSignature Language="C#" Value="public virtual string GetQuantityString (int id, int quantity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetQuantityString(int32 id, int32 quantity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getQuantityString", "(II)Ljava/lang/String;", "GetGetQuantityString_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="quantity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <param name="quantity">The number used to get the correct string for the current language's
           plural rules.</param>
        <summary>Returns the string necessary for grammatically correct pluralization
 of the given resource ID for the given quantity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the string necessary for grammatically correct pluralization
 of the given resource ID for the given quantity.
 Note that the string is selected based solely on grammatical necessity,
 and that such rules differ between languages. Do not assume you know which string
 will be returned for a given quantity. See
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/string-resource.html#Plurals">String Resources</a></format>
 for more detail.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getQuantityString(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuantityString">
      <MemberSignature Language="C#" Value="public virtual string GetQuantityString (int id, int quantity, Java.Lang.Object[] formatArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetQuantityString(int32 id, int32 quantity, class Java.Lang.Object[] formatArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getQuantityString", "(II[Ljava/lang/Object;)Ljava/lang/String;", "GetGetQuantityString_IIarrayLjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="quantity" Type="System.Int32" />
        <Parameter Name="formatArgs" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="quantity">To be added.</param>
        <param name="formatArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuantityText">
      <MemberSignature Language="C#" Value="public string GetQuantityText (int id, int quantity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetQuantityText(int32 id, int32 quantity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="quantity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="quantity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuantityTextFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetQuantityTextFormatted (int id, int quantity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetQuantityTextFormatted(int32 id, int32 quantity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getQuantityText", "(II)Ljava/lang/CharSequence;", "GetGetQuantityText_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="quantity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <param name="quantity">The number used to get the correct string for the current language's
           plural rules.</param>
        <summary>Returns the character sequence necessary for grammatically correct pluralization
 of the given resource ID for the given quantity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the character sequence necessary for grammatically correct pluralization
 of the given resource ID for the given quantity.
 Note that the character sequence is selected based solely on grammatical necessity,
 and that such rules differ between languages. Do not assume you know which string
 will be returned for a given quantity. See
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/string-resource.html#Plurals">String Resources</a></format>
 for more detail.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getQuantityText(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceEntryName">
      <MemberSignature Language="C#" Value="public virtual string GetResourceEntryName (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetResourceEntryName(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getResourceEntryName", "(I)Ljava/lang/String;", "GetGetResourceEntryName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The resource identifier whose entry name is to be
 retrieved.</param>
        <summary>Return the entry name for a given resource identifier.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the entry name for a given resource identifier.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getResourceEntryName(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetResourceName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceName">
      <MemberSignature Language="C#" Value="public virtual string GetResourceName (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetResourceName(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getResourceName", "(I)Ljava/lang/String;", "GetGetResourceName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The resource identifier whose name is to be retrieved.</param>
        <summary>Return the full name for a given resource identifier.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the full name for a given resource identifier.  This name is
 a single string of the form "package:type/entry".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getResourceName(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetResourcePackageName(System.Int32)" />
        <altmember cref="M:Android.Content.Res.Resources.GetResourceTypeName(System.Int32)" />
        <altmember cref="M:Android.Content.Res.Resources.GetResourceEntryName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetResourcePackageName">
      <MemberSignature Language="C#" Value="public virtual string GetResourcePackageName (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetResourcePackageName(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getResourcePackageName", "(I)Ljava/lang/String;", "GetGetResourcePackageName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The resource identifier whose package name is to be
 retrieved.</param>
        <summary>Return the package name for a given resource identifier.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the package name for a given resource identifier.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getResourcePackageName(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetResourceName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceTypeName">
      <MemberSignature Language="C#" Value="public virtual string GetResourceTypeName (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetResourceTypeName(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getResourceTypeName", "(I)Ljava/lang/String;", "GetGetResourceTypeName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The resource identifier whose type name is to be
 retrieved.</param>
        <summary>Return the type name for a given resource identifier.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the type name for a given resource identifier.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getResourceTypeName(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetResourceName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getString", "(I)Ljava/lang/String;", "GetGetString_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return the string value associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the string value associated with a particular resource ID.  It
 will be stripped of any styled text information.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getString(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (int id, Java.Lang.Object[] formatArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(int32 id, class Java.Lang.Object[] formatArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getString", "(I[Ljava/lang/Object;)Ljava/lang/String;", "GetGetString_IarrayLjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatArgs" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="formatArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringArray">
      <MemberSignature Language="C#" Value="public virtual string[] GetStringArray (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetStringArray(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStringArray", "(I)[Ljava/lang/String;", "GetGetStringArray_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return the string array associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the string array associated with a particular resource ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getStringArray(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int id, string def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(int32 id, string def) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="def" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="def">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextArray">
      <MemberSignature Language="C#" Value="public string[] GetTextArray (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTextArray(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextArrayFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence[] GetTextArrayFormatted (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence[] GetTextArrayFormatted(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextArray", "(I)[Ljava/lang/CharSequence;", "GetGetTextArray_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return the styled text array associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the styled text array associated with a particular resource ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getTextArray(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetTextFormatted (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTextFormatted(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getText", "(I)Ljava/lang/CharSequence;", "GetGetText_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return the string value associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the string value associated with a particular resource ID.  The
 returned object will be a String if this is a plain string; it will be
 some other type of CharSequence if it is styled.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getText(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetTextFormatted (int id, Java.Lang.ICharSequence def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTextFormatted(int32 id, class Java.Lang.ICharSequence def) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getText", "(ILjava/lang/CharSequence;)Ljava/lang/CharSequence;", "GetGetText_ILjava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="def" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <param name="def">The default CharSequence to return.</param>
        <summary>Return the string value associated with a particular resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the string value associated with a particular resource ID.  The
 returned object will be a String if this is a plain string; it will be
 some other type of CharSequence if it is styled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getText(int, java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual void GetValue (int id, Android.Util.TypedValue outValue, bool resolveRefs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetValue(int32 id, class Android.Util.TypedValue outValue, bool resolveRefs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getValue", "(ILandroid/util/TypedValue;Z)V", "GetGetValue_ILandroid_util_TypedValue_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="outValue" Type="Android.Util.TypedValue" />
        <Parameter Name="resolveRefs" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <param name="outValue">Object in which to place the resource data.</param>
        <param name="resolveRefs">If true, a resource that is a reference to another
                    resource will be followed so that you receive the
                    actual final resource data.  If false, the TypedValue
                    will be filled in with the reference itself.</param>
        <summary>Return the raw data associated with a particular resource ID.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the raw data associated with a particular resource ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getValue(int, android.util.TypedValue, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.

</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual void GetValue (string name, Android.Util.TypedValue outValue, bool resolveRefs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetValue(string name, class Android.Util.TypedValue outValue, bool resolveRefs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getValue", "(Ljava/lang/String;Landroid/util/TypedValue;Z)V", "GetGetValue_Ljava_lang_String_Landroid_util_TypedValue_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="outValue" Type="Android.Util.TypedValue" />
        <Parameter Name="resolveRefs" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The name of the desired resource.  This is passed to
             getIdentifier() with a default type of "string".</param>
        <param name="outValue">Object in which to place the resource data.</param>
        <param name="resolveRefs">If true, a resource that is a reference to another
                    resource will be followed so that you receive the
                    actual final resource data.  If false, the TypedValue
                    will be filled in with the reference itself.</param>
        <summary>Return the raw data associated with a particular resource ID.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the raw data associated with a particular resource ID.
 See getIdentifier() for information on how names are mapped to resource
 IDs, and getString(int) for information on how string resources are
 retrieved.
 
 </para>
          <para tool="javadoc-to-mdoc">Note: use of this function is discouraged.  It is much more
 efficient to retrieve resources by identifier than by name.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getValue(java.lang.String, android.util.TypedValue, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.

</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueForDensity">
      <MemberSignature Language="C#" Value="public virtual void GetValueForDensity (int id, int density, Android.Util.TypedValue outValue, bool resolveRefs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetValueForDensity(int32 id, int32 density, class Android.Util.TypedValue outValue, bool resolveRefs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getValueForDensity", "(IILandroid/util/TypedValue;Z)V", "GetGetValueForDensity_IILandroid_util_TypedValue_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="density" Type="System.Int32" />
        <Parameter Name="outValue" Type="Android.Util.TypedValue" />
        <Parameter Name="resolveRefs" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="id">resource identifier</param>
        <param name="density">density in DPI</param>
        <param name="outValue">To be added.</param>
        <param name="resolveRefs">If true, a resource that is a reference to another
            resource will be followed so that you receive the actual final
            resource data. If false, the TypedValue will be filled in with
            the reference itself.</param>
        <summary>Get the raw value associated with a resource with associated density.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the raw value associated with a resource with associated density.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getValueForDensity(int, int, android.util.TypedValue, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 15" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does
             not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.GetValue(System.String, Android.Util.TypedValue, Android.Util.TypedValue)" />
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetXml (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetXml(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getXml", "(I)Landroid/content/res/XmlResourceParser;", "GetGetXml_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return an XmlResourceParser through which you can read a generic XML
 resource for the given resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return an XmlResourceParser through which you can read a generic XML
 resource for the given resource ID.
 
 </para>
          <para tool="javadoc-to-mdoc">The XmlPullParser implementation returned here has some limited
 functionality.  In particular, you can't change its input, and only
 high-level parsing events are available (since the document was
 pre-parsed for you at build time, which involved merging text and
 stripping comments).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getXml(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="T:Android.Util.IAttributeSet" />
      </Docs>
    </Member>
    <Member MemberName="NewTheme">
      <MemberSignature Language="C#" Value="public Android.Content.Res.Resources.Theme NewTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.Resources/Theme NewTheme() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTheme", "()Landroid/content/res/Resources$Theme;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources+Theme</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generate a new Theme object for this set of Resources.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generate a new Theme object for this set of Resources.  It initially
 starts out empty.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#newTheme()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ObtainAttributes">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.TypedArray ObtainAttributes (Android.Util.IAttributeSet set, int[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Res.TypedArray ObtainAttributes(class Android.Util.IAttributeSet set, int32[] attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainAttributes", "(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;", "GetObtainAttributes_Landroid_util_AttributeSet_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="set" Type="Android.Util.IAttributeSet" />
        <Parameter Name="attrs" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="set">The current attribute values to retrieve.</param>
        <param name="attrs">The specific attributes to be retrieved.</param>
        <summary>Retrieve a set of basic attribute values from an AttributeSet, not
 performing styling of them using a theme and/or style resources.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve a set of basic attribute values from an AttributeSet, not
 performing styling of them using a theme and/or style resources.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#obtainAttributes(android.util.AttributeSet, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ObtainTypedArray">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.TypedArray ObtainTypedArray (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Res.TypedArray ObtainTypedArray(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainTypedArray", "(I)Landroid/content/res/TypedArray;", "GetObtainTypedArray_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Return an array of heterogeneous values.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return an array of heterogeneous values.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#obtainTypedArray(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRawResource">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenRawResource (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenRawResource(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openRawResource", "(I)Ljava/io/InputStream;", "GetOpenRawResource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The resource identifier to open, as generated by the appt
           tool.</param>
        <summary>Open a data stream for reading a raw resource.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a data stream for reading a raw resource.  This can only be used
 with resources whose value is the name of an asset files -- that is, it can be
 used to open drawable, sound, and raw resources; it will fail on string
 and color resources.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#openRawResource(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.
 
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRawResource">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenRawResource (int id, Android.Util.TypedValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenRawResource(int32 id, class Android.Util.TypedValue value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openRawResource", "(ILandroid/util/TypedValue;)Ljava/io/InputStream;", "GetOpenRawResource_ILandroid_util_TypedValue_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
      </Parameters>
      <Docs>
        <param name="id">The resource identifier to open, as generated by the appt tool.</param>
        <param name="value">The TypedValue object to hold the resource information.</param>
        <summary>Open a data stream for reading a raw resource.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a data stream for reading a raw resource.  This can only be used
 with resources whose value is the name of an asset file -- that is, it can be
 used to open drawable, sound, and raw resources; it will fail on string
 and color resources.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#openRawResource(int, android.util.TypedValue)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRawResourceFd">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.AssetFileDescriptor OpenRawResourceFd (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Res.AssetFileDescriptor OpenRawResourceFd(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openRawResourceFd", "(I)Landroid/content/res/AssetFileDescriptor;", "GetOpenRawResourceFd_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The resource identifier to open, as generated by the appt
           tool.</param>
        <summary>Open a file descriptor for reading a raw resource.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a file descriptor for reading a raw resource.  This can only be used
 with resources whose value is the name of an asset files -- that is, it can be
 used to open drawable, sound, and raw resources; it will fail on string
 and color resources.
 
 </para>
          <para tool="javadoc-to-mdoc">This function only works for resources that are stored in the package
 as uncompressed data, which typically includes things like mp3 files
 and png images.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#openRawResourceFd(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">Throws NotFoundException if the given ID does not exist.
 
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseBundleExtra">
      <MemberSignature Language="C#" Value="public virtual void ParseBundleExtra (string tagName, Android.Util.IAttributeSet attrs, Android.OS.Bundle outBundle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseBundleExtra(string tagName, class Android.Util.IAttributeSet attrs, class Android.OS.Bundle outBundle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseBundleExtra", "(Ljava/lang/String;Landroid/util/AttributeSet;Landroid/os/Bundle;)V", "GetParseBundleExtra_Ljava_lang_String_Landroid_util_AttributeSet_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="outBundle" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="tagName">The name of the tag these attributes come from; this is
 only used for reporting error messages.</param>
        <param name="attrs">The attributes from which to retrieve the name/value pair.</param>
        <param name="outBundle">The Bundle in which to place the parsed value.</param>
        <summary>Parse a name/value pair out of an XML tag holding that data.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse a name/value pair out of an XML tag holding that data.  The
 AttributeSet must be holding the data defined by
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#Extra" /></c>.  The following value types are supported:
 <list type="bullet"><item><term><c><see cref="!:Android.Util.TypedValue.TYPE_STRING" /></c>:
 <c><see cref="M:Android.OS.Bundle.PutCharSequence(System.String,Java.Lang.ICharSequence)" /></c></term></item><item><term><c><see cref="!:Android.Util.TypedValue.TYPE_INT_BOOLEAN" /></c>:
 <c><see cref="M:Android.OS.Bundle.PutCharSequence(System.String,Java.Lang.ICharSequence)" /></c></term></item><item><term><c><see cref="!:Android.Util.TypedValue.TYPE_FIRST_INT" /></c>-<c><see cref="!:Android.Util.TypedValue.TYPE_LAST_INT" /></c>:
 <c><see cref="M:Android.OS.Bundle.PutCharSequence(System.String,Java.Lang.ICharSequence)" /></c></term></item><item><term><c><see cref="!:Android.Util.TypedValue.TYPE_FLOAT" /></c>:
 <c><see cref="M:Android.OS.Bundle.PutCharSequence(System.String,Java.Lang.ICharSequence)" /></c></term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#parseBundleExtra(java.lang.String, android.util.AttributeSet, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException">If the attributes are not valid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseBundleExtras">
      <MemberSignature Language="C#" Value="public virtual void ParseBundleExtras (System.Xml.XmlReader parser, Android.OS.Bundle outBundle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseBundleExtras(class System.Xml.XmlReader parser, class Android.OS.Bundle outBundle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseBundleExtras", "(Landroid/content/res/XmlResourceParser;Landroid/os/Bundle;)V", "GetParseBundleExtras_Landroid_content_res_XmlResourceParser_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="outBundle" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="parser">The parser from which to retrieve the extras.</param>
        <param name="outBundle">A Bundle in which to place all parsed extras.</param>
        <summary>Parse a series of <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#Extra" /></c> tags from
 an XML file.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse a series of <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#Extra" /></c> tags from
 an XML file.  You call this when you are at the parent tag of the
 extra tags, and it will return once all of the child tags have been parsed.
 This will call <c><see cref="M:Android.Content.Res.Resources.ParseBundleExtra(System.String,Android.Util.IAttributeSet,Android.Util.IAttributeSet)" /></c> for each extra tag encountered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#parseBundleExtras(android.content.res.XmlResourceParser, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="!:NoType:XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="System">
      <MemberSignature Language="C#" Value="public static Android.Content.Res.Resources System { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Content.Res.Resources System" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSystem", "()Landroid/content/res/Resources;", "GetGetSystemHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a global shared Resources object that provides access to only
 system resources (no application resources), and is not configured for
 the current screen (can not use dimension units, does not change based
 on orientation, etc).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a global shared Resources object that provides access to only
 system resources (no application resources), and is not configured for
 the current screen (can not use dimension units, does not change based
 on orientation, etc).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#getSystem()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateConfiguration">
      <MemberSignature Language="C#" Value="public virtual void UpdateConfiguration (Android.Content.Res.Configuration config, Android.Util.DisplayMetrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateConfiguration(class Android.Content.Res.Configuration config, class Android.Util.DisplayMetrics metrics) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateConfiguration", "(Landroid/content/res/Configuration;Landroid/util/DisplayMetrics;)V", "GetUpdateConfiguration_Landroid_content_res_Configuration_Landroid_util_DisplayMetrics_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Content.Res.Configuration" />
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="config">To be added.</param>
        <param name="metrics">To be added.</param>
        <summary>Store the newly updated configuration.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Store the newly updated configuration.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.html#updateConfiguration(android.content.res.Configuration, android.util.DisplayMetrics)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
