<Type Name="Resources+Theme" FullName="Android.Content.Res.Resources+Theme">
  <TypeSignature Language="C#" Value="public sealed class Resources.Theme : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit Resources/Theme extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/res/Resources$Theme", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class holds the current attribute values for a particular theme.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class holds the current attribute values for a particular theme.
 In other words, a Theme is a set of values for resource attributes;
 these are used in conjunction with <c><see cref="T:Android.Content.Res.TypedArray" /></c>
 to resolve the final value for an attribute.
 
 </para>
      <para tool="javadoc-to-mdoc">The Theme's attributes come into play in two ways: (1) a styled
 attribute can explicit reference a value in the theme through the
 "?themeAttribute" syntax; (2) if no value has been defined for a
 particular styled attribute, as a last resort we will try to find that
 attribute's value in the Theme.
 
 </para>
      <para tool="javadoc-to-mdoc">You will normally use the <c><see cref="M:Android.Content.Res.Resources.Theme.ObtainStyledAttributes(Android.Util.IAttributeSet,System.Int32[],System.Int32[],System.Int32[])" /></c> APIs to
 retrieve XML attributes with style and theme information applied.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/content/res/Resources.Theme.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (int resId, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(int32 resId, bool force) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyStyle", "(IZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="resId">To be added.</param>
        <param name="force">If true, values in the style resource will always be
              used in the theme; otherwise, they will only be used
              if not already defined in the theme.
</param>
        <param name="resid">The resource ID of a style resource from which to
              obtain attribute values.</param>
        <summary>Place new attribute values into the theme.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Place new attribute values into the theme.  The style resource
 specified by <format type="text/html"><var>resid</var></format> will be retrieved from this Theme's
 resources, its values placed into the Theme object.
 
 </para>
          <para tool="javadoc-to-mdoc">The semantics of this function depends on the <format type="text/html"><var>force</var></format>
 argument:  If false, only values that are not already defined in
 the theme will be copied from the system resource; otherwise, if
 any of the style's attributes are already defined in the theme, the
 current values in the theme will be overwritten.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.Theme.html#applyStyle(int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public void Dump (Android.Util.LogPriority priority, string tag, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Dump(valuetype Android.Util.LogPriority priority, string tag, string prefix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dump", "(ILjava/lang/String;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="Android.Util.LogPriority">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="priority">The log priority to use.</param>
        <param name="tag">The log tag to use.</param>
        <param name="prefix">Text to prefix each line printed.
</param>
        <summary>Print contents of this theme out to the log.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Print contents of this theme out to the log.  For debugging only.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.Theme.html#dump(int, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawable">
      <MemberSignature Language="C#" Value="public Android.Graphics.Drawables.Drawable GetDrawable (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Drawables.Drawable GetDrawable(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawable", "(I)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObtainStyledAttributes">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray ObtainStyledAttributes (int[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.TypedArray ObtainStyledAttributes(int32[] attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainStyledAttributes", "([I)Landroid/content/res/TypedArray;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrs" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="attrs">The desired attributes.</param>
        <summary>Return a TypedArray holding the values defined by
 <format type="text/html"><var>Theme</var></format> which are listed in <format type="text/html"><var>attrs</var></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a TypedArray holding the values defined by
 <format type="text/html"><var>Theme</var></format> which are listed in <format type="text/html"><var>attrs</var></format>.
 
 </para>
          <para tool="javadoc-to-mdoc">Be sure to call <c><see cref="M:Android.Content.Res.TypedArray.Recycle" /></c> when you are done
 with the array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.Theme.html#obtainStyledAttributes(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.Res.Resources+NotFoundException">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.ObtainAttributes(Android.Util.IAttributeSet, System.Int32[])" />
        <altmember cref="M:Android.Content.Res.Resources.Theme.ObtainStyledAttributes(System.Int32, System.Int32[])" />
        <altmember cref="M:Android.Content.Res.Resources.Theme.ObtainStyledAttributes(Android.Util.IAttributeSet, System.Int32[], System.Int32[], System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="ObtainStyledAttributes">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray ObtainStyledAttributes (int resid, int[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.TypedArray ObtainStyledAttributes(int32 resid, int32[] attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainStyledAttributes", "(I[I)Landroid/content/res/TypedArray;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="attrs" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="resid">The desired style resource.</param>
        <param name="attrs">The desired attributes in the style.</param>
        <summary>Return a TypedArray holding the values defined by the style
 resource <format type="text/html"><var>resid</var></format> which are listed in <format type="text/html"><var>attrs</var></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a TypedArray holding the values defined by the style
 resource <format type="text/html"><var>resid</var></format> which are listed in <format type="text/html"><var>attrs</var></format>.
 
 </para>
          <para tool="javadoc-to-mdoc">Be sure to call <c><see cref="M:Android.Content.Res.TypedArray.Recycle" /></c> when you are done
 with the array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.Theme.html#obtainStyledAttributes(int, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.Res.Resources+NotFoundException">Throws NotFoundException if the given ID does not exist.</exception>
        <altmember cref="M:Android.Content.Res.Resources.ObtainAttributes(Android.Util.IAttributeSet, System.Int32[])" />
        <altmember cref="M:Android.Content.Res.Resources.Theme.ObtainStyledAttributes(System.Int32[])" />
        <altmember cref="M:Android.Content.Res.Resources.Theme.ObtainStyledAttributes(Android.Util.IAttributeSet, System.Int32[], System.Int32[], System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="ObtainStyledAttributes">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray ObtainStyledAttributes (Android.Util.IAttributeSet set, int[] attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.TypedArray ObtainStyledAttributes(class Android.Util.IAttributeSet set, int32[] attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainStyledAttributes", "(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="set" Type="Android.Util.IAttributeSet" />
        <Parameter Name="attrs" Type="System.Int32[]" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="set">The base set of attribute values.  May be null.</param>
        <param name="attrs">The desired attributes to be retrieved.</param>
        <param name="defStyleAttr">An attribute in the current theme that contains a
                     reference to a style resource that supplies
                     defaults values for the TypedArray.  Can be
                     0 to not look for defaults.</param>
        <param name="defStyleRes">A resource identifier of a style resource that
                    supplies default values for the TypedArray,
                    used only if defStyleAttr is 0 or can not be found
                    in the theme.  Can be 0 to not look for defaults.</param>
        <summary>Return a TypedArray holding the attribute values in
 <format type="text/html"><var>set</var></format>
 that are listed in <format type="text/html"><var>attrs</var></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a TypedArray holding the attribute values in
 <format type="text/html"><var>set</var></format>
 that are listed in <format type="text/html"><var>attrs</var></format>.  In addition, if the given
 AttributeSet specifies a style class (through the "style" attribute),
 that style will be applied on top of the base attributes it defines.
 
 </para>
          <para tool="javadoc-to-mdoc">Be sure to call <c><see cref="M:Android.Content.Res.TypedArray.Recycle" /></c> when you are done
 with the array.
 
 </para>
          <para tool="javadoc-to-mdoc">When determining the final value of a particular attribute, there
 are four inputs that come into play:<list type="number"><item><term> Any attribute values in the given AttributeSet.
     </term></item><item><term> The style resource specified in the AttributeSet (named
     "style").
     </term></item><item><term> The default style specified by <format type="text/html"><var>defStyleAttr</var></format> and
     <format type="text/html"><var>defStyleRes</var></format></term></item><item><term> The base values in this theme.
 </term></item></list></para>
          <para tool="javadoc-to-mdoc">Each of these inputs is considered in-order, with the first listed
 taking precedence over the following ones.  In other words, if in the
 AttributeSet you have supplied <c>&lt;Button
 textColor="#ff000000"&gt;</c>, then the button's text will
 <i>always</i> be black, regardless of what is specified in any of
 the styles.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.Theme.html#obtainStyledAttributes(android.util.AttributeSet, int[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Res.Resources.ObtainAttributes(Android.Util.IAttributeSet, System.Int32[])" />
        <altmember cref="M:Android.Content.Res.Resources.Theme.ObtainStyledAttributes(System.Int32[])" />
        <altmember cref="M:Android.Content.Res.Resources.Theme.ObtainStyledAttributes(System.Int32, System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="ResolveAttribute">
      <MemberSignature Language="C#" Value="public bool ResolveAttribute (int resid, Android.Util.TypedValue outValue, bool resolveRefs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ResolveAttribute(int32 resid, class Android.Util.TypedValue outValue, bool resolveRefs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveAttribute", "(ILandroid/util/TypedValue;Z)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="outValue" Type="Android.Util.TypedValue" />
        <Parameter Name="resolveRefs" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="resid">The resource identifier of the desired theme
              attribute.</param>
        <param name="outValue">Filled in with the ultimate resource value supplied
                 by the attribute.</param>
        <param name="resolveRefs">If true, resource references will be walked; if
                    false, <format type="text/html"><var>outValue</var></format> may be a
                    TYPE_REFERENCE.  In either case, it will never
                    be a TYPE_ATTRIBUTE.</param>
        <summary>Retrieve the value of an attribute in the Theme.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the value of an attribute in the Theme.  The contents of
 <format type="text/html"><var>outValue</var></format> are ultimately filled in by
 <c><see cref="M:Android.Content.Res.Resources.GetValue(System.Int32,Android.Util.TypedValue,Android.Util.TypedValue)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.Theme.html#resolveAttribute(int, android.util.TypedValue, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public Android.Content.Res.Resources Resources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Resources Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getResources", "()Landroid/content/res/Resources;", "GetGetResourcesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTo">
      <MemberSignature Language="C#" Value="public void SetTo (Android.Content.Res.Resources.Theme other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTo(class Android.Content.Res.Resources/Theme other) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTo", "(Landroid/content/res/Resources$Theme;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="other">The existing Theme to copy from.
</param>
        <summary>Set this theme to hold the same contents as the theme
 <format type="text/html"><var>other</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set this theme to hold the same contents as the theme
 <format type="text/html"><var>other</var></format>.  If both of these themes are from the same
 Resources object, they will be identical after this function
 returns.  If they are from different Resources, only the resources
 they have in common will be set in this theme.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/res/Resources.Theme.html#setTo(android.content.res.Resources.Theme)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
