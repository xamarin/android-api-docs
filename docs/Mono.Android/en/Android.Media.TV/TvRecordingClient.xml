<Type Name="TvRecordingClient" FullName="Android.Media.TV.TvRecordingClient">
  <TypeSignature Language="VB.NET" Value="Public Class TvRecordingClient&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class TvRecordingClient : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class TvRecordingClient : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TvRecordingClient extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.TV.TvRecordingClient" />
  <TypeSignature Language="F#" Value="type TvRecordingClient = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/tv/TvRecordingClient", ApiSince=24, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/tv/TvRecordingClient", ApiSince=24, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The public interface object used to interact with a specific TV input service for TV program
            recording.</summary>
    <remarks>
      <para>The public interface object used to interact with a specific TV input service for TV program
            recording.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TvRecordingClient(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected TvRecordingClient (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.TV.TvRecordingClient : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.TV.TvRecordingClient" Usage="new Android.Media.TV.TvRecordingClient (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context, tag As String, callback As TvRecordingClient.RecordingCallback, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TvRecordingClient(Android::Content::Context ^ context, System::String ^ tag, Android::Media::TV::TvRecordingClient::RecordingCallback ^ callback, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public TvRecordingClient (Android.Content.Context? context, string? tag, Android.Media.TV.TvRecordingClient.RecordingCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, string tag, class Android.Media.TV.TvRecordingClient/RecordingCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.#ctor(Android.Content.Context,System.String,Android.Media.TV.TvRecordingClient.RecordingCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="new Android.Media.TV.TvRecordingClient : Android.Content.Context * string * Android.Media.TV.TvRecordingClient.RecordingCallback * Android.OS.Handler -&gt; Android.Media.TV.TvRecordingClient" Usage="new Android.Media.TV.TvRecordingClient (context, tag, callback, handler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Ljava/lang/String;Landroid/media/tv/TvRecordingClient$RecordingCallback;Landroid/os/Handler;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Ljava/lang/String;Landroid/media/tv/TvRecordingClient$RecordingCallback;Landroid/os/Handler;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="callback" Type="Android.Media.TV.TvRecordingClient+RecordingCallback">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="context">The application context to create a TvRecordingClient with.</param>
        <param name="tag">A short name for debugging purposes.</param>
        <param name="callback">The callback to receive recording status changes.</param>
        <param name="handler">The handler to invoke the callback on.</param>
        <summary>Creates a new TvRecordingClient object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#TvRecordingClient(android.content.Context,%20java.lang.String,%20android.media.tv.RecordingCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.TvRecordingClient(android.content.Context, java.lang.String, android.media.tv.RecordingCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.TV.TvRecordingClient.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.TV.TvRecordingClient.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseRecording">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PauseRecording ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PauseRecording();" />
      <MemberSignature Language="C#" Value="public virtual void PauseRecording ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PauseRecording() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.PauseRecording" />
      <MemberSignature Language="F#" Value="abstract member PauseRecording : unit -&gt; unit&#xA;override this.PauseRecording : unit -&gt; unit" Usage="tvRecordingClient.PauseRecording " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pauseRecording", "()V", "GetPauseRecordingHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pauseRecording", "()V", "GetPauseRecordingHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pause TV program recording in the current recording session.</summary>
        <remarks>
          <para>Pause TV program recording in the current recording session. Recording is expected to pause
            immediately when this method is called. If recording has not yet started in the current
            recording session, this method does nothing.</para>
          <para>In pause status, the application can tune during recording. To continue recording,
            please call <c>TvRecordingClient#resumeRecording()</c> to resume instead of
            <c>TvRecordingClient#startRecording(Uri)</c>. Application can stop
            the recording with <c>TvRecordingClient#stopRecording()</c> in recording pause status.</para>
          <para>If the pause request cannot be fulfilled, the recording session will respond by calling
            <c>RecordingCallback#onError(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#pauseRecording()" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.pauseRecording()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseRecording">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PauseRecording (params As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PauseRecording(Android::OS::Bundle ^ params);" />
      <MemberSignature Language="C#" Value="public virtual void PauseRecording (Android.OS.Bundle params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PauseRecording(class Android.OS.Bundle params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.PauseRecording(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member PauseRecording : Android.OS.Bundle -&gt; unit&#xA;override this.PauseRecording : Android.OS.Bundle -&gt; unit" Usage="tvRecordingClient.PauseRecording params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pauseRecording", "(Landroid/os/Bundle;)V", "GetPauseRecording_Landroid_os_Bundle_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pauseRecording", "(Landroid/os/Bundle;)V", "GetPauseRecording_Landroid_os_Bundle_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="params">Domain-specific data for this request.</param>
        <summary>Pause TV program recording in the current recording session.</summary>
        <remarks>
          <para>Pause TV program recording in the current recording session. Recording is expected to pause
            immediately when this method is called. If recording has not yet started in the current
            recording session, this method does nothing.</para>
          <para>In pause status, the application can tune during recording. To continue recording,
            please call <c>TvRecordingClient#resumeRecording()</c> to resume instead of
            <c>TvRecordingClient#startRecording(Uri)</c>. Application can stop
            the recording with <c>TvRecordingClient#stopRecording()</c> in recording pause status.</para>
          <para>If the pause request cannot be fulfilled, the recording session will respond by calling
            <c>RecordingCallback#onError(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#pauseRecording(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.pauseRecording(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Release ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Release();" />
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="tvRecordingClient.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources in the current recording session immediately.</summary>
        <remarks>
          <para>Releases the resources in the current recording session immediately. This may be called at
            any time, however if the session is already released, it does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#release()" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeRecording">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResumeRecording ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResumeRecording();" />
      <MemberSignature Language="C#" Value="public virtual void ResumeRecording ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeRecording() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.ResumeRecording" />
      <MemberSignature Language="F#" Value="abstract member ResumeRecording : unit -&gt; unit&#xA;override this.ResumeRecording : unit -&gt; unit" Usage="tvRecordingClient.ResumeRecording " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resumeRecording", "()V", "GetResumeRecordingHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resumeRecording", "()V", "GetResumeRecordingHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resume TV program recording only in recording pause status in the current recording session.</summary>
        <remarks>
          <para>Resume TV program recording only in recording pause status in the current recording session.
            Recording is expected to resume immediately when this method is called. If recording has not
            yet paused in the current recording session, this method does nothing.</para>
          <para>When record is resumed, the recording is continue and can not re-tune. Application can
            stop the recording with <c>TvRecordingClient#stopRecording()</c> after record resumed.</para>
          <para>If the pause request cannot be fulfilled, the recording session will respond by calling
            <c>RecordingCallback#onError(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#resumeRecording()" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.resumeRecording()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeRecording">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResumeRecording (params As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResumeRecording(Android::OS::Bundle ^ params);" />
      <MemberSignature Language="C#" Value="public virtual void ResumeRecording (Android.OS.Bundle params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeRecording(class Android.OS.Bundle params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.ResumeRecording(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member ResumeRecording : Android.OS.Bundle -&gt; unit&#xA;override this.ResumeRecording : Android.OS.Bundle -&gt; unit" Usage="tvRecordingClient.ResumeRecording params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resumeRecording", "(Landroid/os/Bundle;)V", "GetResumeRecording_Landroid_os_Bundle_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resumeRecording", "(Landroid/os/Bundle;)V", "GetResumeRecording_Landroid_os_Bundle_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="params">Domain-specific data for this request.</param>
        <summary>Resume TV program recording only in recording pause status in the current recording session.</summary>
        <remarks>
          <para>Resume TV program recording only in recording pause status in the current recording session.
            Recording is expected to resume immediately when this method is called. If recording has not
            yet paused in the current recording session, this method does nothing.</para>
          <para>When record is resumed, the recording is continues and can not re-tune. Application can
            stop the recording with <c>TvRecordingClient#stopRecording()</c> after record resumed.</para>
          <para>If the resume request cannot be fulfilled, the recording session will respond by calling
            <c>RecordingCallback#onError(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#resumeRecording(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.resumeRecording(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAppPrivateCommand">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendAppPrivateCommand (action As String, data As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendAppPrivateCommand(System::String ^ action, Android::OS::Bundle ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void SendAppPrivateCommand (string action, Android.OS.Bundle? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAppPrivateCommand(string action, class Android.OS.Bundle data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.SendAppPrivateCommand(System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SendAppPrivateCommand : string * Android.OS.Bundle -&gt; unit&#xA;override this.SendAppPrivateCommand : string * Android.OS.Bundle -&gt; unit" Usage="tvRecordingClient.SendAppPrivateCommand (action, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendAppPrivateCommand", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendAppPrivateCommand_Ljava_lang_String_Landroid_os_Bundle_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendAppPrivateCommand", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendAppPrivateCommand_Ljava_lang_String_Landroid_os_Bundle_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="data" Type="Android.OS.Bundle">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="action">The name of the private command to send. This &lt;em&gt;must&lt;/em&gt; be a scoped name,
                       i.e. prefixed with a package name you own, so that different developers will not
                       create conflicting commands.</param>
        <param name="data">An optional bundle to send with the command.</param>
        <summary>Sends a private command to the underlying TV input.</summary>
        <remarks>
          <para>Sends a private command to the underlying TV input. This can be used to provide
            domain-specific features that are only known between certain clients and their TV inputs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#sendAppPrivateCommand(java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.sendAppPrivateCommand(java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTvInteractiveAppView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTvInteractiveAppView (view As TvInteractiveAppView, recordingId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTvInteractiveAppView(Android::Media::TV::Interactive::TvInteractiveAppView ^ view, System::String ^ recordingId);" />
      <MemberSignature Language="C#" Value="public virtual void SetTvInteractiveAppView (Android.Media.TV.Interactive.TvInteractiveAppView? view, string? recordingId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTvInteractiveAppView(class Android.Media.TV.Interactive.TvInteractiveAppView view, string recordingId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.SetTvInteractiveAppView(Android.Media.TV.Interactive.TvInteractiveAppView,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetTvInteractiveAppView : Android.Media.TV.Interactive.TvInteractiveAppView * string -&gt; unit&#xA;override this.SetTvInteractiveAppView : Android.Media.TV.Interactive.TvInteractiveAppView * string -&gt; unit" Usage="tvRecordingClient.SetTvInteractiveAppView (view, recordingId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTvInteractiveAppView", "(Landroid/media/tv/interactive/TvInteractiveAppView;Ljava/lang/String;)V", "GetSetTvInteractiveAppView_Landroid_media_tv_interactive_TvInteractiveAppView_Ljava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTvInteractiveAppView", "(Landroid/media/tv/interactive/TvInteractiveAppView;Ljava/lang/String;)V", "GetSetTvInteractiveAppView_Landroid_media_tv_interactive_TvInteractiveAppView_Ljava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Media.TV.Interactive.TvInteractiveAppView" />
        <Parameter Name="recordingId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">The related <c>TvInteractiveAppView</c> instance that is linked to this TV
                        recording client. <c>null</c> to unlink the view.</param>
        <param name="recordingId">The ID of the recording which is assigned by the TV application.
                               <c>null</c> if and only if the TvInteractiveAppView parameter is
                               <c>null</c>.</param>
        <summary>Sets the related <c>TvInteractiveAppView</c> instance so the interactive app service can be
            notified for recording events.</summary>
        <remarks>
          <para>Sets the related <c>TvInteractiveAppView</c> instance so the interactive app service can be
            notified for recording events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#setTvInteractiveAppView(android.media.tv.interactive.TvInteractiveAppView,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.setTvInteractiveAppView(android.media.tv.interactive.TvInteractiveAppView, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecording">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartRecording (programUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartRecording(Android::Net::Uri ^ programUri);" />
      <MemberSignature Language="C#" Value="public virtual void StartRecording (Android.Net.Uri? programUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartRecording(class Android.Net.Uri programUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.StartRecording(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member StartRecording : Android.Net.Uri -&gt; unit&#xA;override this.StartRecording : Android.Net.Uri -&gt; unit" Usage="tvRecordingClient.StartRecording programUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startRecording", "(Landroid/net/Uri;)V", "GetStartRecording_Landroid_net_Uri_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startRecording", "(Landroid/net/Uri;)V", "GetStartRecording_Landroid_net_Uri_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="programUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="programUri">The URI for the TV program to record, built by
                       <c>TvContract#buildProgramUri(long)</c>. Can be <c>null</c>.</param>
        <summary>Starts TV program recording in the current recording session.</summary>
        <remarks>
          <para>Starts TV program recording in the current recording session. Recording is expected to start
            immediately when this method is called. If the current recording session has not yet tuned to
            any channel, this method throws an exception.</para>
          <para>The application may supply the URI for a TV program for filling in program specific data
            fields in the <c>android.media.tv.TvContract.RecordedPrograms</c> table.
            A non-null <c>programUri</c> implies the started recording should be of that specific
            program, whereas null <c>programUri</c> does not impose such a requirement and the
            recording can span across multiple TV programs. In either case, the application must call
            <c>TvRecordingClient#stopRecording()</c> to stop the recording.</para>
          <para>The recording session will respond by calling <c>RecordingCallback#onError(int)</c> if
            the start request cannot be fulfilled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#startRecording(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.startRecording(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecording">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartRecording (programUri As Uri, params As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartRecording(Android::Net::Uri ^ programUri, Android::OS::Bundle ^ params);" />
      <MemberSignature Language="C#" Value="public virtual void StartRecording (Android.Net.Uri? programUri, Android.OS.Bundle params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartRecording(class Android.Net.Uri programUri, class Android.OS.Bundle params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.StartRecording(Android.Net.Uri,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartRecording : Android.Net.Uri * Android.OS.Bundle -&gt; unit&#xA;override this.StartRecording : Android.Net.Uri * Android.OS.Bundle -&gt; unit" Usage="tvRecordingClient.StartRecording (programUri, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startRecording", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetStartRecording_Landroid_net_Uri_Landroid_os_Bundle_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startRecording", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetStartRecording_Landroid_net_Uri_Landroid_os_Bundle_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="programUri" Type="Android.Net.Uri">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="params" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="programUri">The URI for the TV program to record, built by
                       <c>TvContract#buildProgramUri(long)</c>. Can be <c>null</c>.</param>
        <param name="params">Domain-specific data for this request. Keys &lt;em&gt;must&lt;/em&gt; be a scoped
                       name, i.e. prefixed with a package name you own, so that different developers will
                       not create conflicting keys.</param>
        <summary>Starts TV program recording in the current recording session.</summary>
        <remarks>
          <para>Starts TV program recording in the current recording session. Recording is expected to start
            immediately when this method is called. If the current recording session has not yet tuned to
            any channel, this method throws an exception.</para>
          <para>The application may supply the URI for a TV program for filling in program specific data
            fields in the <c>android.media.tv.TvContract.RecordedPrograms</c> table.
            A non-null <c>programUri</c> implies the started recording should be of that specific
            program, whereas null <c>programUri</c> does not impose such a requirement and the
            recording can span across multiple TV programs. In either case, the application must call
            <c>TvRecordingClient#stopRecording()</c> to stop the recording.</para>
          <para>The recording session will respond by calling <c>RecordingCallback#onError(int)</c> if
            the start request cannot be fulfilled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#startRecording(android.net.Uri,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.startRecording(android.net.Uri, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRecording">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StopRecording ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopRecording();" />
      <MemberSignature Language="C#" Value="public virtual void StopRecording ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopRecording() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.StopRecording" />
      <MemberSignature Language="F#" Value="abstract member StopRecording : unit -&gt; unit&#xA;override this.StopRecording : unit -&gt; unit" Usage="tvRecordingClient.StopRecording " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopRecording", "()V", "GetStopRecordingHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopRecording", "()V", "GetStopRecordingHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops TV program recording in the current recording session.</summary>
        <remarks>
          <para>Stops TV program recording in the current recording session. Recording is expected to stop
            immediately when this method is called. If recording has not yet started in the current
            recording session, this method does nothing.</para>
          <para>The recording session is expected to create a new data entry in the
            <c>android.media.tv.TvContract.RecordedPrograms</c> table that describes the newly
            recorded program and pass the URI to that entry through to
            <c>RecordingCallback#onRecordingStopped(Uri)</c>.
            If the stop request cannot be fulfilled, the recording session will respond by calling
            <c>RecordingCallback#onError(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#stopRecording()" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.stopRecording()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.TV.TvRecordingClient.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.TV.TvRecordingClient.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.TV.TvRecordingClient.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.TV.TvRecordingClient.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tune">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Tune (inputId As String, channelUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Tune(System::String ^ inputId, Android::Net::Uri ^ channelUri);" />
      <MemberSignature Language="C#" Value="public virtual void Tune (string? inputId, Android.Net.Uri? channelUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Tune(string inputId, class Android.Net.Uri channelUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.Tune(System.String,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member Tune : string * Android.Net.Uri -&gt; unit&#xA;override this.Tune : string * Android.Net.Uri -&gt; unit" Usage="tvRecordingClient.Tune (inputId, channelUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("tune", "(Ljava/lang/String;Landroid/net/Uri;)V", "GetTune_Ljava_lang_String_Landroid_net_Uri_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("tune", "(Ljava/lang/String;Landroid/net/Uri;)V", "GetTune_Ljava_lang_String_Landroid_net_Uri_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputId" Type="System.String" />
        <Parameter Name="channelUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="inputId">The ID of the TV input for the given channel.</param>
        <param name="channelUri">The URI of a channel.</param>
        <summary>Tunes to a given channel for TV program recording.</summary>
        <remarks>
          <para>Tunes to a given channel for TV program recording. The first tune request will create a new
            recording session for the corresponding TV input and establish a connection between the
            application and the session. If recording has already started in the current recording
            session, this method throws an exception.</para>
          <para>The application may call this method before starting or after stopping recording, but not
            during recording.</para>
          <para>The recording session will respond by calling
            <c>RecordingCallback#onTuned(Uri)</c> if the tune request was fulfilled, or
            <c>RecordingCallback#onError(int)</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#tune(java.lang.String,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.tune(java.lang.String, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tune">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Tune (inputId As String, channelUri As Uri, params As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Tune(System::String ^ inputId, Android::Net::Uri ^ channelUri, Android::OS::Bundle ^ params);" />
      <MemberSignature Language="C#" Value="public virtual void Tune (string? inputId, Android.Net.Uri? channelUri, Android.OS.Bundle? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Tune(string inputId, class Android.Net.Uri channelUri, class Android.OS.Bundle params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.TV.TvRecordingClient.Tune(System.String,Android.Net.Uri,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member Tune : string * Android.Net.Uri * Android.OS.Bundle -&gt; unit&#xA;override this.Tune : string * Android.Net.Uri * Android.OS.Bundle -&gt; unit" Usage="tvRecordingClient.Tune (inputId, channelUri, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("tune", "(Ljava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;)V", "GetTune_Ljava_lang_String_Landroid_net_Uri_Landroid_os_Bundle_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("tune", "(Ljava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;)V", "GetTune_Ljava_lang_String_Landroid_net_Uri_Landroid_os_Bundle_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputId" Type="System.String" />
        <Parameter Name="channelUri" Type="Android.Net.Uri" />
        <Parameter Name="params" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="inputId">The ID of the TV input for the given channel.</param>
        <param name="channelUri">The URI of a channel.</param>
        <param name="params">Domain-specific data for this tune request. Keys &lt;em&gt;must&lt;/em&gt; be a scoped
                       name, i.e. prefixed with a package name you own, so that different developers will
                       not create conflicting keys.</param>
        <summary>Tunes to a given channel for TV program recording.</summary>
        <remarks>
          <para>Tunes to a given channel for TV program recording. The first tune request will create a new
            recording session for the corresponding TV input and establish a connection between the
            application and the session. If recording has already started in the current recording
            session, this method throws an exception. This can be used to provide domain-specific
            features that are only known between certain client and their TV inputs.</para>
          <para>The application may call this method before starting or after stopping recording, but not
            during recording.</para>
          <para>The recording session will respond by calling
            <c>RecordingCallback#onTuned(Uri)</c> if the tune request was fulfilled, or
            <c>RecordingCallback#onError(int)</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/tv/TvRecordingClient#tune(java.lang.String,%20android.net.Uri,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.media.tv.TvRecordingClient.tune(java.lang.String, android.net.Uri, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
