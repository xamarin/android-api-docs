<Type Name="AsynchronousSocketChannel" FullName="Java.Nio.Channels.AsynchronousSocketChannel">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsynchronousSocketChannel&#xA;Inherits Object&#xA;Implements IAsynchronousByteChannel, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsynchronousSocketChannel abstract : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Java::Nio::Channels::IAsynchronousByteChannel" />
  <TypeSignature Language="C#" Value="public abstract class AsynchronousSocketChannel : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Nio.Channels.IAsynchronousByteChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsynchronousSocketChannel extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class Java.Nio.Channels.IAsynchronousByteChannel, class Java.Nio.Channels.IAsynchronousChannel, class Java.Nio.Channels.IChannel, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.AsynchronousSocketChannel" />
  <TypeSignature Language="F#" Value="type AsynchronousSocketChannel = class&#xA;    inherit Object&#xA;    interface IAsynchronousByteChannel&#xA;    interface IAsynchronousChannel&#xA;    interface IChannel&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IAsynchronousByteChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IAsynchronousChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/AsynchronousSocketChannel", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/AsynchronousSocketChannel", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An asynchronous channel for stream-oriented connecting sockets.</summary>
    <remarks>
      <para>An asynchronous channel for stream-oriented connecting sockets.</para>
      <para>Asynchronous socket channels are created in one of two ways. A newly-created
            <c>AsynchronousSocketChannel</c> is created by invoking one of the <c>#open open</c> methods defined by this class. A newly-created channel is open but
            not yet connected. A connected <c>AsynchronousSocketChannel</c> is created
            when a connection is made to the socket of an <c>AsynchronousServerSocketChannel</c>.
            It is not possible to create an asynchronous socket channel for an arbitrary,
            pre-existing <c>java.net.Socket socket</c>.</para>
      <para>A newly-created channel is connected by invoking its <c>#connect connect</c>
            method; once connected, a channel remains connected until it is closed.  Whether
            or not a socket channel is connected may be determined by invoking its <c>#getRemoteAddress getRemoteAddress</c> method. An attempt to invoke an I/O
            operation upon an unconnected channel will cause a <c>NotYetConnectedException</c>
            to be thrown.</para>
      <para>Channels of this type are safe for use by multiple concurrent threads.
            They support concurrent reading and writing, though at most one read operation
            and one write operation can be outstanding at any time.
            If a thread initiates a read operation before a previous read operation has
            completed then a <c>ReadPendingException</c> will be thrown. Similarly, an
            attempt to initiate a write operation before a previous write has completed
            will throw a <c>WritePendingException</c>.</para>
      <para>Socket options are configured using the <c>#setOption(SocketOption,Object)
            setOption</c> method. Asynchronous socket channels support the following options:
            &lt;blockquote&gt;
            &lt;table class="striped"&gt;
            &lt;caption style="display:none"&gt;Socket options&lt;/caption&gt;
            &lt;thead&gt;
              &lt;tr&gt;
                &lt;th scope="col"&gt;Option Name&lt;/th&gt;
                &lt;th scope="col"&gt;Description&lt;/th&gt;
              &lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
              &lt;tr&gt;
                &lt;th scope="row"&gt; <c>java.net.StandardSocketOptions#SO_SNDBUF SO_SNDBUF</c>&lt;/th&gt;
                &lt;td&gt; The size of the socket send buffer &lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;th scope="row"&gt; <c>java.net.StandardSocketOptions#SO_RCVBUF SO_RCVBUF</c>&lt;/th&gt;
                &lt;td&gt; The size of the socket receive buffer &lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;th scope="row"&gt; <c>java.net.StandardSocketOptions#SO_KEEPALIVE SO_KEEPALIVE</c>&lt;/th&gt;
                &lt;td&gt; Keep connection alive &lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;th scope="row"&gt; <c>java.net.StandardSocketOptions#SO_REUSEADDR SO_REUSEADDR</c>&lt;/th&gt;
                &lt;td&gt; Re-use address &lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;th scope="row"&gt; <c>java.net.StandardSocketOptions#TCP_NODELAY TCP_NODELAY</c>&lt;/th&gt;
                &lt;td&gt; Disable the Nagle algorithm &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;
            &lt;/blockquote&gt;
            Additional (implementation specific) options may also be supported.
            
            &lt;h2&gt;Timeouts&lt;/h2&gt;</para>
      <para>The <c>#read(ByteBuffer,long,TimeUnit,Object,CompletionHandler) read</c>
            and <c>#write(ByteBuffer,long,TimeUnit,Object,CompletionHandler) write</c>
            methods defined by this class allow a timeout to be specified when initiating
            a read or write operation. If the timeout elapses before an operation completes
            then the operation completes with the exception <c>InterruptedByTimeoutException</c>. A timeout may leave the channel, or the
            underlying connection, in an inconsistent state. Where the implementation
            cannot guarantee that bytes have not been read from the channel then it puts
            the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent
            attempt to initiate a <c>read</c> operation causes an unspecified runtime
            exception to be thrown. Similarly if a <c>write</c> operation times out and
            the implementation cannot guarantee bytes have not been written to the
            channel then further attempts to <c>write</c> to the channel cause an
            unspecified runtime exception to be thrown. When a timeout elapses then the
            state of the <c>ByteBuffer</c>, or the sequence of buffers, for the I/O
            operation is not defined. Buffers should be discarded or at least care must
            be taken to ensure that the buffers are not accessed while the channel remains
            open. All methods that accept timeout parameters treat values less than or
            equal to zero to mean that the I/O operation does not timeout.</para>
      <para>Added in 1.7.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (provider As AsynchronousChannelProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsynchronousSocketChannel(Java::Nio::Channels::Spi::AsynchronousChannelProvider ^ provider);" />
      <MemberSignature Language="C#" Value="protected AsynchronousSocketChannel (Java.Nio.Channels.Spi.AsynchronousChannelProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Channels.Spi.AsynchronousChannelProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.#ctor(Java.Nio.Channels.Spi.AsynchronousChannelProvider)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.AsynchronousSocketChannel : Java.Nio.Channels.Spi.AsynchronousChannelProvider -&gt; Java.Nio.Channels.AsynchronousSocketChannel" Usage="new Java.Nio.Channels.AsynchronousSocketChannel provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/nio/channels/spi/AsynchronousChannelProvider;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/nio/channels/spi/AsynchronousChannelProvider;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="provider" Type="Java.Nio.Channels.Spi.AsynchronousChannelProvider" />
      </Parameters>
      <Docs>
        <param name="provider">The provider that created this channel</param>
        <summary>Initializes a new instance of this class.</summary>
        <remarks>
          <para>Initializes a new instance of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#AsynchronousSocketChannel(java.nio.channels.spi.AsynchronousChannelProvider)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.AsynchronousSocketChannel(java.nio.channels.spi.AsynchronousChannelProvider)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsynchronousSocketChannel(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected AsynchronousSocketChannel (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.AsynchronousSocketChannel : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Channels.AsynchronousSocketChannel" Usage="new Java.Nio.Channels.AsynchronousSocketChannel (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Bind (local As SocketAddress) As AsynchronousSocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::AsynchronousSocketChannel ^ Bind(Java::Net::SocketAddress ^ local);" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.AsynchronousSocketChannel? Bind (Java.Net.SocketAddress? local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.AsynchronousSocketChannel Bind(class Java.Net.SocketAddress local) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Bind(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Bind : Java.Net.SocketAddress -&gt; Java.Nio.Channels.AsynchronousSocketChannel" Usage="asynchronousSocketChannel.Bind local" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)Ljava/nio/channels/AsynchronousSocketChannel;", "GetBind_Ljava_net_SocketAddress_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)Ljava/nio/channels/AsynchronousSocketChannel;", "GetBind_Ljava_net_SocketAddress_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousSocketChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="local" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="local">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#bind(java.net.SocketAddress)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.bind(java.net.SocketAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" />
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="asynchronousSocketChannel.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.Channels.IAsynchronousChannel.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this channel.</summary>
        <remarks>
          <para>Closes this channel.</para>
          <para>Any outstanding asynchronous operations upon this channel will
            complete with the exception <c>AsynchronousCloseException</c>. After a
            channel is closed, further attempts to initiate asynchronous I/O
            operations complete immediately with cause <c>ClosedChannelException</c>.</para>
          <para>This method otherwise behaves exactly as specified by the <c>Channel</c> interface.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannel#close()" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannel.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Connect (remote As SocketAddress) As IFuture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Util::Concurrent::IFuture ^ Connect(Java::Net::SocketAddress ^ remote);" />
      <MemberSignature Language="C#" Value="public abstract Java.Util.Concurrent.IFuture? Connect (Java.Net.SocketAddress? remote);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.IFuture Connect(class Java.Net.SocketAddress remote) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Connect(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Connect : Java.Net.SocketAddress -&gt; Java.Util.Concurrent.IFuture" Usage="asynchronousSocketChannel.Connect remote" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;)Ljava/util/concurrent/Future;", "GetConnect_Ljava_net_SocketAddress_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;)Ljava/util/concurrent/Future;", "GetConnect_Ljava_net_SocketAddress_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remote" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="remote">The remote address to which this channel is to be connected</param>
        <summary>Connects this channel.</summary>
        <returns>A <c>Future</c> object representing the pending result</returns>
        <remarks>
          <para>Connects this channel.</para>
          <para>This method initiates an operation to connect this channel. This
            method behaves in exactly the same manner as the <c>#connect(SocketAddress, Object, CompletionHandler)</c> method except that
            instead of specifying a completion handler, this method returns a <c>Future</c> representing the pending result. The <c>Future</c>'s <c>Future#get() get</c> method returns <c>null</c> on successful completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#connect(java.net.SocketAddress)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.connect(java.net.SocketAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Connect (remote As SocketAddress, attachment As Object, handler As ICompletionHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Connect(Java::Net::SocketAddress ^ remote, Java::Lang::Object ^ attachment, Java::Nio::Channels::ICompletionHandler ^ handler);" />
      <MemberSignature Language="C#" Value="public abstract void Connect (Java.Net.SocketAddress? remote, Java.Lang.Object? attachment, Java.Nio.Channels.ICompletionHandler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.SocketAddress remote, class Java.Lang.Object attachment, class Java.Nio.Channels.ICompletionHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Connect(Java.Net.SocketAddress,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member Connect : Java.Net.SocketAddress * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit" Usage="asynchronousSocketChannel.Connect (remote, attachment, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetConnect_Ljava_net_SocketAddress_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetConnect_Ljava_net_SocketAddress_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remote" Type="Java.Net.SocketAddress" />
        <Parameter Name="attachment" Type="Java.Lang.Object" />
        <Parameter Name="handler" Type="Java.Nio.Channels.ICompletionHandler" />
      </Parameters>
      <Docs>
        <param name="&lt;A&gt;&lt;A&gt;">The type of the attachment</param>
        <param name="remote">The remote address to which this channel is to be connected</param>
        <param name="attachment">The object to attach to the I/O operation; can be <c>null</c></param>
        <param name="handler">The handler for consuming the result</param>
        <summary>Connects this channel.</summary>
        <returns>A <c>Future</c> object representing the pending result</returns>
        <remarks>
          <para>Connects this channel.</para>
          <para>This method initiates an operation to connect this channel. The
            <c>handler</c> parameter is a completion handler that is invoked when
            the connection is successfully established or connection cannot be
            established. If the connection cannot be established then the channel is
            closed.</para>
          <para>This method performs exactly the same security checks as the <c>java.net.Socket</c> class.  That is, if a security manager has been
            installed then this method verifies that its <c>java.lang.SecurityManager#checkConnect checkConnect</c> method permits
            connecting to the address and port number of the given remote endpoint.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#connect(java.net.SocketAddress,%20A,%20java.nio.channels.CompletionHandler%3Cjava.lang.Void,%20?%20super%20A%3E)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.connect(java.net.SocketAddress, A, java.nio.channels.CompletionHandler&lt;java.lang.Void, ? super A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsOpen { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousSocketChannel.IsOpen" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool" Usage="Java.Nio.Channels.AsynchronousSocketChannel.IsOpen" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Nio.Channels.IChannel.IsOpen</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOpen", "()Z", "GetIsOpenHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOpen", "()Z", "GetIsOpenHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousSocketChannel.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Channels.AsynchronousSocketChannel.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalAddress As SocketAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Java::Net::SocketAddress ^ LocalAddress { Java::Net::SocketAddress ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Java.Net.SocketAddress? LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousSocketChannel.LocalAddress" />
      <MemberSignature Language="F#" Value="member this.LocalAddress : Java.Net.SocketAddress" Usage="Java.Nio.Channels.AsynchronousSocketChannel.LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/SocketAddress;", "GetGetLocalAddressHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/SocketAddress;", "GetGetLocalAddressHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open () As AsynchronousSocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::Channels::AsynchronousSocketChannel ^ Open();" />
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.AsynchronousSocketChannel? Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.AsynchronousSocketChannel Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Open" />
      <MemberSignature Language="F#" Value="static member Open : unit -&gt; Java.Nio.Channels.AsynchronousSocketChannel" Usage="Java.Nio.Channels.AsynchronousSocketChannel.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("open", "()Ljava/nio/channels/AsynchronousSocketChannel;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("open", "()Ljava/nio/channels/AsynchronousSocketChannel;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousSocketChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opens an asynchronous socket channel.</summary>
        <returns>A new asynchronous socket channel</returns>
        <remarks>
          <para>Opens an asynchronous socket channel.</para>
          <para>This method returns an asynchronous socket channel that is bound to
            the &lt;em&gt;default group&lt;/em&gt;.This method is equivalent to evaluating the
            expression:
            &lt;blockquote&gt;</para>
          <code lang="text/java">open((AsynchronousChannelGroup)null);
            </code>
          <para>&lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#open()" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.open()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (group As AsynchronousChannelGroup) As AsynchronousSocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::Channels::AsynchronousSocketChannel ^ Open(Java::Nio::Channels::AsynchronousChannelGroup ^ group);" />
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.AsynchronousSocketChannel? Open (Java.Nio.Channels.AsynchronousChannelGroup? group);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.AsynchronousSocketChannel Open(class Java.Nio.Channels.AsynchronousChannelGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Open(Java.Nio.Channels.AsynchronousChannelGroup)" />
      <MemberSignature Language="F#" Value="static member Open : Java.Nio.Channels.AsynchronousChannelGroup -&gt; Java.Nio.Channels.AsynchronousSocketChannel" Usage="Java.Nio.Channels.AsynchronousSocketChannel.Open group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("open", "(Ljava/nio/channels/AsynchronousChannelGroup;)Ljava/nio/channels/AsynchronousSocketChannel;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("open", "(Ljava/nio/channels/AsynchronousChannelGroup;)Ljava/nio/channels/AsynchronousSocketChannel;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousSocketChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="Java.Nio.Channels.AsynchronousChannelGroup" />
      </Parameters>
      <Docs>
        <param name="group">The group to which the newly constructed channel should be bound,
                     or <c>null</c> for the default group</param>
        <summary>Opens an asynchronous socket channel.</summary>
        <returns>A new asynchronous socket channel</returns>
        <remarks>
          <para>Opens an asynchronous socket channel.</para>
          <para>The new channel is created by invoking the <c>AsynchronousChannelProvider#openAsynchronousSocketChannel
            openAsynchronousSocketChannel</c> method on the <c>AsynchronousChannelProvider</c> that created the group. If the group parameter
            is <c>null</c> then the resulting channel is created by the system-wide
            default provider, and bound to the &lt;em&gt;default group&lt;/em&gt;.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#open(java.nio.channels.AsynchronousChannelGroup)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.open(java.nio.channels.AsynchronousChannelGroup)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="VB.NET" Value="Public Function Provider () As AsynchronousChannelProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Channels::Spi::AsynchronousChannelProvider ^ Provider();" />
      <MemberSignature Language="C#" Value="public Java.Nio.Channels.Spi.AsynchronousChannelProvider? Provider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Channels.Spi.AsynchronousChannelProvider Provider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Provider" />
      <MemberSignature Language="F#" Value="member this.Provider : unit -&gt; Java.Nio.Channels.Spi.AsynchronousChannelProvider" Usage="asynchronousSocketChannel.Provider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/AsynchronousChannelProvider;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/AsynchronousChannelProvider;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Spi.AsynchronousChannelProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the provider that created this channel.</summary>
        <returns>The provider that created this channel</returns>
        <remarks>
          <para>Returns the provider that created this channel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#provider()" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.provider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (dst As ByteBuffer) As IFuture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Util::Concurrent::IFuture ^ Read(Java::Nio::ByteBuffer ^ dst);" />
      <MemberSignature Language="C#" Value="public abstract Java.Util.Concurrent.IFuture? Read (Java.Nio.ByteBuffer? dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.IFuture Read(class Java.Nio.ByteBuffer dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Read(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.ByteBuffer -&gt; Java.Util.Concurrent.IFuture" Usage="asynchronousSocketChannel.Read dst" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.Channels.IAsynchronousByteChannel.Read(Java.Nio.ByteBuffer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;", "GetRead_Ljava_nio_ByteBuffer_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;", "GetRead_Ljava_nio_ByteBuffer_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#read(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.read(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public Sub Read (dst As ByteBuffer, attachment As Object, handler As ICompletionHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Read(Java::Nio::ByteBuffer ^ dst, Java::Lang::Object ^ attachment, Java::Nio::Channels::ICompletionHandler ^ handler);" />
      <MemberSignature Language="C#" Value="public void Read (Java.Nio.ByteBuffer? dst, Java.Lang.Object? attachment, Java.Nio.Channels.ICompletionHandler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read(class Java.Nio.ByteBuffer dst, class Java.Lang.Object attachment, class Java.Nio.Channels.ICompletionHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Read(Java.Nio.ByteBuffer,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.ByteBuffer * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit&#xA;override this.Read : Java.Nio.ByteBuffer * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit" Usage="asynchronousSocketChannel.Read (dst, attachment, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.Channels.IAsynchronousByteChannel.Read(Java.Nio.ByteBuffer,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="attachment" Type="Java.Lang.Object" />
        <Parameter Name="handler" Type="Java.Nio.Channels.ICompletionHandler" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <param name="attachment">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#read(java.nio.ByteBuffer,%20A,%20java.nio.channels.CompletionHandler%3Cjava.lang.Integer,%20?%20super%20A%3E)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.read(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer, ? super A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Read (dst As ByteBuffer, timeout As Long, unit As TimeUnit, attachment As Object, handler As ICompletionHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Read(Java::Nio::ByteBuffer ^ dst, long timeout, Java::Util::Concurrent::TimeUnit ^ unit, Java::Lang::Object ^ attachment, Java::Nio::Channels::ICompletionHandler ^ handler);" />
      <MemberSignature Language="C#" Value="public abstract void Read (Java.Nio.ByteBuffer? dst, long timeout, Java.Util.Concurrent.TimeUnit? unit, Java.Lang.Object? attachment, Java.Nio.Channels.ICompletionHandler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read(class Java.Nio.ByteBuffer dst, int64 timeout, class Java.Util.Concurrent.TimeUnit unit, class Java.Lang.Object attachment, class Java.Nio.Channels.ICompletionHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Read(Java.Nio.ByteBuffer,System.Int64,Java.Util.Concurrent.TimeUnit,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.ByteBuffer * int64 * Java.Util.Concurrent.TimeUnit * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit" Usage="asynchronousSocketChannel.Read (dst, timeout, unit, attachment, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetRead_Ljava_nio_ByteBuffer_JLjava_util_concurrent_TimeUnit_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetRead_Ljava_nio_ByteBuffer_JLjava_util_concurrent_TimeUnit_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
        <Parameter Name="attachment" Type="Java.Lang.Object" />
        <Parameter Name="handler" Type="Java.Nio.Channels.ICompletionHandler" />
      </Parameters>
      <Docs>
        <param name="&lt;A&gt;&lt;A&gt;">The type of the attachment</param>
        <param name="dst">The buffer into which bytes are to be transferred</param>
        <param name="timeout">The maximum time for the I/O operation to complete</param>
        <param name="unit">The time unit of the <c>timeout</c> argument</param>
        <param name="attachment">The object to attach to the I/O operation; can be <c>null</c></param>
        <param name="handler">The handler for consuming the result</param>
        <summary>Reads a sequence of bytes from this channel into the given buffer.</summary>
        <remarks>
          <para>Reads a sequence of bytes from this channel into the given buffer.</para>
          <para>This method initiates an asynchronous read operation to read a
            sequence of bytes from this channel into the given buffer. The <c>handler</c> parameter is a completion handler that is invoked when the read
            operation completes (or fails). The result passed to the completion
            handler is the number of bytes read or <c>-1</c> if no bytes could be
            read because the channel has reached end-of-stream.</para>
          <para>If a timeout is specified and the timeout elapses before the operation
            completes then the operation completes with the exception <c>InterruptedByTimeoutException</c>. Where a timeout occurs, and the
            implementation cannot guarantee that bytes have not been read, or will not
            be read from the channel into the given buffer, then further attempts to
            read from the channel will cause an unspecific runtime exception to be
            thrown.</para>
          <para>Otherwise this method works in the same manner as the <c>AsynchronousByteChannel#read(ByteBuffer,Object,CompletionHandler)</c>
            method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#read(java.nio.ByteBuffer,%20long,%20java.util.concurrent.TimeUnit,%20A,%20java.nio.channels.CompletionHandler%3Cjava.lang.Integer,%20?%20super%20A%3E)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.read(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer, ? super A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Read (dsts As ByteBuffer(), offset As Integer, length As Integer, timeout As Long, unit As TimeUnit, attachment As Object, handler As ICompletionHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Read(cli::array &lt;Java::Nio::ByteBuffer ^&gt; ^ dsts, int offset, int length, long timeout, Java::Util::Concurrent::TimeUnit ^ unit, Java::Lang::Object ^ attachment, Java::Nio::Channels::ICompletionHandler ^ handler);" />
      <MemberSignature Language="C#" Value="public abstract void Read (Java.Nio.ByteBuffer[]? dsts, int offset, int length, long timeout, Java.Util.Concurrent.TimeUnit? unit, Java.Lang.Object? attachment, Java.Nio.Channels.ICompletionHandler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read(class Java.Nio.ByteBuffer[] dsts, int32 offset, int32 length, int64 timeout, class Java.Util.Concurrent.TimeUnit unit, class Java.Lang.Object attachment, class Java.Nio.Channels.ICompletionHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Read(Java.Nio.ByteBuffer[],System.Int32,System.Int32,System.Int64,Java.Util.Concurrent.TimeUnit,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.ByteBuffer[] * int * int * int64 * Java.Util.Concurrent.TimeUnit * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit" Usage="asynchronousSocketChannel.Read (dsts, offset, length, timeout, unit, attachment, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "([Ljava/nio/ByteBuffer;IIJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetRead_arrayLjava_nio_ByteBuffer_IIJLjava_util_concurrent_TimeUnit_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "([Ljava/nio/ByteBuffer;IIJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetRead_arrayLjava_nio_ByteBuffer_IIJLjava_util_concurrent_TimeUnit_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dsts" Type="Java.Nio.ByteBuffer[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
        <Parameter Name="attachment" Type="Java.Lang.Object" />
        <Parameter Name="handler" Type="Java.Nio.Channels.ICompletionHandler" />
      </Parameters>
      <Docs>
        <param name="&lt;A&gt;&lt;A&gt;">The type of the attachment</param>
        <param name="dsts">The buffers into which bytes are to be transferred</param>
        <param name="offset">The offset within the buffer array of the first buffer into which
                     bytes are to be transferred; must be non-negative and no larger than
                     <c>dsts.length</c></param>
        <param name="length">The maximum number of buffers to be accessed; must be non-negative
                     and no larger than <c>dsts.length - offset</c></param>
        <param name="timeout">The maximum time for the I/O operation to complete</param>
        <param name="unit">The time unit of the <c>timeout</c> argument</param>
        <param name="attachment">The object to attach to the I/O operation; can be <c>null</c></param>
        <param name="handler">The handler for consuming the result</param>
        <summary>Reads a sequence of bytes from this channel into a subsequence of the
            given buffers.</summary>
        <remarks>
          <para>Reads a sequence of bytes from this channel into a subsequence of the
            given buffers. This operation, sometimes called a &lt;em&gt;scattering read&lt;/em&gt;,
            is often useful when implementing network protocols that group data into
            segments consisting of one or more fixed-length headers followed by a
            variable-length body. The <c>handler</c> parameter is a completion
            handler that is invoked when the read operation completes (or fails). The
            result passed to the completion handler is the number of bytes read or
            <c>-1</c> if no bytes could be read because the channel has reached
            end-of-stream.</para>
          <para>This method initiates a read of up to <i>r</i> bytes from this channel,
            where <i>r</i> is the total number of bytes remaining in the specified
            subsequence of the given buffer array, that is,
            
            &lt;blockquote&gt;</para>
          <code lang="text/java">dsts[offset].remaining()
                + dsts[offset+1].remaining()
                + ... + dsts[offset+length-1].remaining()</code>
          <para>&lt;/blockquote&gt;
            
            at the moment that the read is attempted.</para>
          <para>Suppose that a byte sequence of length <i>n</i> is read, where
            <c>0</c>&amp;nbsp;<c>&lt;</c>&amp;nbsp;<i>n</i>&amp;nbsp;<c>&lt;=</c>&amp;nbsp;<i>r</i>.
            Up to the first <c>dsts[offset].remaining()</c> bytes of this sequence
            are transferred into buffer <c>dsts[offset]</c>, up to the next
            <c>dsts[offset+1].remaining()</c> bytes are transferred into buffer
            <c>dsts[offset+1]</c>, and so forth, until the entire byte sequence
            is transferred into the given buffers.  As many bytes as possible are
            transferred into each buffer, hence the final position of each updated
            buffer, except the last updated buffer, is guaranteed to be equal to
            that buffer's limit. The underlying operating system may impose a limit
            on the number of buffers that may be used in an I/O operation. Where the
            number of buffers (with bytes remaining), exceeds this limit, then the
            I/O operation is performed with the maximum number of buffers allowed by
            the operating system.</para>
          <para>If a timeout is specified and the timeout elapses before the operation
            completes then it completes with the exception <c>InterruptedByTimeoutException</c>. Where a timeout occurs, and the
            implementation cannot guarantee that bytes have not been read, or will not
            be read from the channel into the given buffers, then further attempts to
            read from the channel will cause an unspecific runtime exception to be
            thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#read(java.nio.ByteBuffer[],%20int,%20int,%20long,%20java.util.concurrent.TimeUnit,%20A,%20java.nio.channels.CompletionHandler%3Cjava.lang.Long,%20?%20super%20A%3E)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.read(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Long, ? super A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RemoteAddress As SocketAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Java::Net::SocketAddress ^ RemoteAddress { Java::Net::SocketAddress ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Java.Net.SocketAddress? RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousSocketChannel.RemoteAddress" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : Java.Net.SocketAddress" Usage="Java.Nio.Channels.AsynchronousSocketChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRemoteAddress", "()Ljava/net/SocketAddress;", "GetGetRemoteAddressHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRemoteAddress", "()Ljava/net/SocketAddress;", "GetGetRemoteAddressHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetOption (name As ISocketOption, value As Object) As AsynchronousSocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::AsynchronousSocketChannel ^ SetOption(Java::Net::ISocketOption ^ name, Java::Lang::Object ^ value);" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.AsynchronousSocketChannel? SetOption (Java.Net.ISocketOption? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.AsynchronousSocketChannel SetOption(class Java.Net.ISocketOption name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.SetOption(Java.Net.ISocketOption,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetOption : Java.Net.ISocketOption * Java.Lang.Object -&gt; Java.Nio.Channels.AsynchronousSocketChannel" Usage="asynchronousSocketChannel.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOption", "(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/AsynchronousSocketChannel;", "GetSetOption_Ljava_net_SocketOption_Ljava_lang_Object_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOption", "(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/AsynchronousSocketChannel;", "GetSetOption_Ljava_net_SocketOption_Ljava_lang_Object_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousSocketChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Java.Net.ISocketOption" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#setOption(java.net.SocketOption%3CT%3E,%20T)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.setOption(java.net.SocketOption&lt;T&gt;, T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownInput">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShutdownInput () As AsynchronousSocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::AsynchronousSocketChannel ^ ShutdownInput();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.AsynchronousSocketChannel? ShutdownInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.AsynchronousSocketChannel ShutdownInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.ShutdownInput" />
      <MemberSignature Language="F#" Value="abstract member ShutdownInput : unit -&gt; Java.Nio.Channels.AsynchronousSocketChannel" Usage="asynchronousSocketChannel.ShutdownInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shutdownInput", "()Ljava/nio/channels/AsynchronousSocketChannel;", "GetShutdownInputHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shutdownInput", "()Ljava/nio/channels/AsynchronousSocketChannel;", "GetShutdownInputHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousSocketChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Shutdown the connection for reading without closing the channel.</summary>
        <returns>The channel</returns>
        <remarks>
          <para>Shutdown the connection for reading without closing the channel.</para>
          <para>Once shutdown for reading then further reads on the channel will
            return <c>-1</c>, the end-of-stream indication. If the input side of the
            connection is already shutdown then invoking this method has no effect.
            The effect on an outstanding read operation is system dependent and
            therefore not specified. The effect, if any, when there is data in the
            socket receive buffer that has not been read, or data arrives subsequently,
            is also system dependent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#shutdownInput()" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.shutdownInput()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownOutput">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShutdownOutput () As AsynchronousSocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::AsynchronousSocketChannel ^ ShutdownOutput();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.AsynchronousSocketChannel? ShutdownOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.AsynchronousSocketChannel ShutdownOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.ShutdownOutput" />
      <MemberSignature Language="F#" Value="abstract member ShutdownOutput : unit -&gt; Java.Nio.Channels.AsynchronousSocketChannel" Usage="asynchronousSocketChannel.ShutdownOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shutdownOutput", "()Ljava/nio/channels/AsynchronousSocketChannel;", "GetShutdownOutputHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shutdownOutput", "()Ljava/nio/channels/AsynchronousSocketChannel;", "GetShutdownOutputHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousSocketChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Shutdown the connection for writing without closing the channel.</summary>
        <returns>The channel</returns>
        <remarks>
          <para>Shutdown the connection for writing without closing the channel.</para>
          <para>Once shutdown for writing then further attempts to write to the
            channel will throw <c>ClosedChannelException</c>. If the output side of
            the connection is already shutdown then invoking this method has no
            effect. The effect on an outstanding write operation is system dependent
            and therefore not specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#shutdownOutput()" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.shutdownOutput()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousSocketChannel.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Channels.AsynchronousSocketChannel.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousSocketChannel.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Channels.AsynchronousSocketChannel.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Write (src As ByteBuffer) As IFuture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Util::Concurrent::IFuture ^ Write(Java::Nio::ByteBuffer ^ src);" />
      <MemberSignature Language="C#" Value="public abstract Java.Util.Concurrent.IFuture? Write (Java.Nio.ByteBuffer? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.IFuture Write(class Java.Nio.ByteBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Write(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Write : Java.Nio.ByteBuffer -&gt; Java.Util.Concurrent.IFuture" Usage="asynchronousSocketChannel.Write src" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.Channels.IAsynchronousByteChannel.Write(Java.Nio.ByteBuffer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;", "GetWrite_Ljava_nio_ByteBuffer_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;", "GetWrite_Ljava_nio_ByteBuffer_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#write(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.write(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Sub Write (src As ByteBuffer, attachment As Object, handler As ICompletionHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(Java::Nio::ByteBuffer ^ src, Java::Lang::Object ^ attachment, Java::Nio::Channels::ICompletionHandler ^ handler);" />
      <MemberSignature Language="C#" Value="public void Write (Java.Nio.ByteBuffer? src, Java.Lang.Object? attachment, Java.Nio.Channels.ICompletionHandler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class Java.Nio.ByteBuffer src, class Java.Lang.Object attachment, class Java.Nio.Channels.ICompletionHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Write(Java.Nio.ByteBuffer,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member Write : Java.Nio.ByteBuffer * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit&#xA;override this.Write : Java.Nio.ByteBuffer * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit" Usage="asynchronousSocketChannel.Write (src, attachment, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.Channels.IAsynchronousByteChannel.Write(Java.Nio.ByteBuffer,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="attachment" Type="Java.Lang.Object" />
        <Parameter Name="handler" Type="Java.Nio.Channels.ICompletionHandler" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="attachment">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#write(java.nio.ByteBuffer,%20A,%20java.nio.channels.CompletionHandler%3Cjava.lang.Integer,%20?%20super%20A%3E)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.write(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer, ? super A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (src As ByteBuffer, timeout As Long, unit As TimeUnit, attachment As Object, handler As ICompletionHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(Java::Nio::ByteBuffer ^ src, long timeout, Java::Util::Concurrent::TimeUnit ^ unit, Java::Lang::Object ^ attachment, Java::Nio::Channels::ICompletionHandler ^ handler);" />
      <MemberSignature Language="C#" Value="public abstract void Write (Java.Nio.ByteBuffer? src, long timeout, Java.Util.Concurrent.TimeUnit? unit, Java.Lang.Object? attachment, Java.Nio.Channels.ICompletionHandler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class Java.Nio.ByteBuffer src, int64 timeout, class Java.Util.Concurrent.TimeUnit unit, class Java.Lang.Object attachment, class Java.Nio.Channels.ICompletionHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Write(Java.Nio.ByteBuffer,System.Int64,Java.Util.Concurrent.TimeUnit,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member Write : Java.Nio.ByteBuffer * int64 * Java.Util.Concurrent.TimeUnit * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit" Usage="asynchronousSocketChannel.Write (src, timeout, unit, attachment, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetWrite_Ljava_nio_ByteBuffer_JLjava_util_concurrent_TimeUnit_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetWrite_Ljava_nio_ByteBuffer_JLjava_util_concurrent_TimeUnit_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
        <Parameter Name="attachment" Type="Java.Lang.Object" />
        <Parameter Name="handler" Type="Java.Nio.Channels.ICompletionHandler" />
      </Parameters>
      <Docs>
        <param name="&lt;A&gt;&lt;A&gt;">The type of the attachment</param>
        <param name="src">The buffer from which bytes are to be retrieved</param>
        <param name="timeout">The maximum time for the I/O operation to complete</param>
        <param name="unit">The time unit of the <c>timeout</c> argument</param>
        <param name="attachment">The object to attach to the I/O operation; can be <c>null</c></param>
        <param name="handler">The handler for consuming the result</param>
        <summary>Writes a sequence of bytes to this channel from the given buffer.</summary>
        <remarks>
          <para>Writes a sequence of bytes to this channel from the given buffer.</para>
          <para>This method initiates an asynchronous write operation to write a
            sequence of bytes to this channel from the given buffer. The <c>handler</c> parameter is a completion handler that is invoked when the write
            operation completes (or fails). The result passed to the completion
            handler is the number of bytes written.</para>
          <para>If a timeout is specified and the timeout elapses before the operation
            completes then it completes with the exception <c>InterruptedByTimeoutException</c>. Where a timeout occurs, and the
            implementation cannot guarantee that bytes have not been written, or will
            not be written to the channel from the given buffer, then further attempts
            to write to the channel will cause an unspecific runtime exception to be
            thrown.</para>
          <para>Otherwise this method works in the same manner as the <c>AsynchronousByteChannel#write(ByteBuffer,Object,CompletionHandler)</c>
            method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#write(java.nio.ByteBuffer,%20long,%20java.util.concurrent.TimeUnit,%20A,%20java.nio.channels.CompletionHandler%3Cjava.lang.Integer,%20?%20super%20A%3E)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.write(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer, ? super A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (srcs As ByteBuffer(), offset As Integer, length As Integer, timeout As Long, unit As TimeUnit, attachment As Object, handler As ICompletionHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(cli::array &lt;Java::Nio::ByteBuffer ^&gt; ^ srcs, int offset, int length, long timeout, Java::Util::Concurrent::TimeUnit ^ unit, Java::Lang::Object ^ attachment, Java::Nio::Channels::ICompletionHandler ^ handler);" />
      <MemberSignature Language="C#" Value="public abstract void Write (Java.Nio.ByteBuffer[]? srcs, int offset, int length, long timeout, Java.Util.Concurrent.TimeUnit? unit, Java.Lang.Object? attachment, Java.Nio.Channels.ICompletionHandler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class Java.Nio.ByteBuffer[] srcs, int32 offset, int32 length, int64 timeout, class Java.Util.Concurrent.TimeUnit unit, class Java.Lang.Object attachment, class Java.Nio.Channels.ICompletionHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousSocketChannel.Write(Java.Nio.ByteBuffer[],System.Int32,System.Int32,System.Int64,Java.Util.Concurrent.TimeUnit,Java.Lang.Object,Java.Nio.Channels.ICompletionHandler)" />
      <MemberSignature Language="F#" Value="abstract member Write : Java.Nio.ByteBuffer[] * int * int * int64 * Java.Util.Concurrent.TimeUnit * Java.Lang.Object * Java.Nio.Channels.ICompletionHandler -&gt; unit" Usage="asynchronousSocketChannel.Write (srcs, offset, length, timeout, unit, attachment, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([Ljava/nio/ByteBuffer;IIJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetWrite_arrayLjava_nio_ByteBuffer_IIJLjava_util_concurrent_TimeUnit_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([Ljava/nio/ByteBuffer;IIJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V", "GetWrite_arrayLjava_nio_ByteBuffer_IIJLjava_util_concurrent_TimeUnit_Ljava_lang_Object_Ljava_nio_channels_CompletionHandler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcs" Type="Java.Nio.ByteBuffer[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
        <Parameter Name="attachment" Type="Java.Lang.Object" />
        <Parameter Name="handler" Type="Java.Nio.Channels.ICompletionHandler" />
      </Parameters>
      <Docs>
        <param name="&lt;A&gt;&lt;A&gt;">The type of the attachment</param>
        <param name="srcs">The buffers from which bytes are to be retrieved</param>
        <param name="offset">The offset within the buffer array of the first buffer from which
                     bytes are to be retrieved; must be non-negative and no larger
                     than <c>srcs.length</c></param>
        <param name="length">The maximum number of buffers to be accessed; must be non-negative
                     and no larger than <c>srcs.length - offset</c></param>
        <param name="timeout">The maximum time for the I/O operation to complete</param>
        <param name="unit">The time unit of the <c>timeout</c> argument</param>
        <param name="attachment">The object to attach to the I/O operation; can be <c>null</c></param>
        <param name="handler">The handler for consuming the result</param>
        <summary>Writes a sequence of bytes to this channel from a subsequence of the given
            buffers.</summary>
        <remarks>
          <para>Writes a sequence of bytes to this channel from a subsequence of the given
            buffers. This operation, sometimes called a &lt;em&gt;gathering write&lt;/em&gt;, is
            often useful when implementing network protocols that group data into
            segments consisting of one or more fixed-length headers followed by a
            variable-length body. The <c>handler</c> parameter is a completion
            handler that is invoked when the write operation completes (or fails).
            The result passed to the completion handler is the number of bytes written.</para>
          <para>This method initiates a write of up to <i>r</i> bytes to this channel,
            where <i>r</i> is the total number of bytes remaining in the specified
            subsequence of the given buffer array, that is,
            
            &lt;blockquote&gt;</para>
          <code lang="text/java">srcs[offset].remaining()
                + srcs[offset+1].remaining()
                + ... + srcs[offset+length-1].remaining()</code>
          <para>&lt;/blockquote&gt;
            
            at the moment that the write is attempted.</para>
          <para>Suppose that a byte sequence of length <i>n</i> is written, where
            <c>0</c>&amp;nbsp;<c>&lt;</c>&amp;nbsp;<i>n</i>&amp;nbsp;<c>&lt;=</c>&amp;nbsp;<i>r</i>.
            Up to the first <c>srcs[offset].remaining()</c> bytes of this sequence
            are written from buffer <c>srcs[offset]</c>, up to the next
            <c>srcs[offset+1].remaining()</c> bytes are written from buffer
            <c>srcs[offset+1]</c>, and so forth, until the entire byte sequence is
            written.  As many bytes as possible are written from each buffer, hence
            the final position of each updated buffer, except the last updated
            buffer, is guaranteed to be equal to that buffer's limit. The underlying
            operating system may impose a limit on the number of buffers that may be
            used in an I/O operation. Where the number of buffers (with bytes
            remaining), exceeds this limit, then the I/O operation is performed with
            the maximum number of buffers allowed by the operating system.</para>
          <para>If a timeout is specified and the timeout elapses before the operation
            completes then it completes with the exception <c>InterruptedByTimeoutException</c>. Where a timeout occurs, and the
            implementation cannot guarantee that bytes have not been written, or will
            not be written to the channel from the given buffers, then further attempts
            to write to the channel will cause an unspecific runtime exception to be
            thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousSocketChannel#write(java.nio.ByteBuffer[],%20int,%20int,%20long,%20java.util.concurrent.TimeUnit,%20A,%20java.nio.channels.CompletionHandler%3Cjava.lang.Long,%20?%20super%20A%3E)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousSocketChannel.write(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Long, ? super A&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
