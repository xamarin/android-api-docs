<Type Name="IInterruptibleChannel" FullName="Java.Nio.Channels.IInterruptibleChannel">
  <TypeSignature Language="VB.NET" Value="Public Interface IInterruptibleChannel&#xA;Implements IChannel, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInterruptibleChannel : IDisposable, Java::Interop::IJavaPeerable, Java::Nio::Channels::IChannel" />
  <TypeSignature Language="C#" Value="public interface IInterruptibleChannel : IDisposable, Java.Interop.IJavaPeerable, Java.Nio.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInterruptibleChannel implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class Java.Nio.Channels.IChannel, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.IInterruptibleChannel" />
  <TypeSignature Language="F#" Value="type IInterruptibleChannel = interface&#xA;    interface IChannel&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/InterruptibleChannel", "", "Java.Nio.Channels.IInterruptibleChannelInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/InterruptibleChannel", "", "Java.Nio.Channels.IInterruptibleChannelInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A channel that can be asynchronously closed and interrupted.</summary>
    <remarks>
      <para>A channel that can be asynchronously closed and interrupted.</para>
      <para>A channel that implements this interface is <i>asynchronously
            closeable:</i> If a thread is blocked in an I/O operation on an
            interruptible channel then another thread may invoke the channel's <c>#close close</c> method.  This will cause the blocked thread to receive an
            <c>AsynchronousCloseException</c>.</para>
      <para>A channel that implements this interface is also <i>interruptible:</i>
            If a thread is blocked in an I/O operation on an interruptible channel then
            another thread may invoke the blocked thread's <c>Thread#interrupt()
            interrupt</c> method.  This will cause the channel to be closed, the blocked
            thread to receive a <c>ClosedByInterruptException</c>, and the blocked
            thread's interrupt status to be set.</para>
      <para>If a thread's interrupt status is already set and it invokes a blocking
            I/O operation upon a channel then the channel will be closed and the thread
            will immediately receive a <c>ClosedByInterruptException</c>; its interrupt
            status will remain set.</para>
      <para>A channel supports asynchronous closing and interruption if, and only
            if, it implements this interface.  This can be tested at runtime, if
            necessary, via the <c>instanceof</c> operator.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/InterruptibleChannel" title="Reference documentation">Java documentation for <code>java.nio.channels.InterruptibleChannel</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.IInterruptibleChannel.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iInterruptibleChannel.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.Channels.IChannel.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler:Java.Nio.Channels.IInterruptibleChannelInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler:Java.Nio.Channels.IInterruptibleChannelInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this channel.</summary>
        <remarks>
          <para>Closes this channel.</para>
          <para>Any thread currently blocked in an I/O operation upon this channel
            will receive an <c>AsynchronousCloseException</c>.</para>
          <para>This method otherwise behaves exactly as specified by the <c>Channel#close Channel</c> interface.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/InterruptibleChannel#close()" title="Reference documentation">Java documentation for <code>java.nio.channels.InterruptibleChannel.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while closing the channel.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
