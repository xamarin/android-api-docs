<Type Name="SelectableChannel" FullName="Java.Nio.Channels.SelectableChannel">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SelectableChannel&#xA;Inherits AbstractInterruptibleChannel&#xA;Implements IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SelectableChannel abstract : Java::Nio::Channels::Spi::AbstractInterruptibleChannel, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public abstract class SelectableChannel : Java.Nio.Channels.Spi.AbstractInterruptibleChannel, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SelectableChannel extends Java.Nio.Channels.Spi.AbstractInterruptibleChannel implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class Java.Nio.Channels.IChannel, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.SelectableChannel" />
  <TypeSignature Language="F#" Value="type SelectableChannel = class&#xA;    inherit AbstractInterruptibleChannel&#xA;    interface IChannel&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Nio.Channels.Spi.AbstractInterruptibleChannel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/SelectableChannel", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/SelectableChannel", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A channel that can be multiplexed via a <c>Selector</c>.</summary>
    <remarks>
      <para>A channel that can be multiplexed via a <c>Selector</c>.</para>
      <para>In order to be used with a selector, an instance of this class must
            first be <i>registered</i> via the <c>#register(Selector,int,Object)
            register</c> method.  This method returns a new <c>SelectionKey</c> object
            that represents the channel's registration with the selector.</para>
      <para>Once registered with a selector, a channel remains registered until it
            is <i>deregistered</i>.  This involves deallocating whatever resources were
            allocated to the channel by the selector.</para>
      <para>A channel cannot be deregistered directly; instead, the key representing
            its registration must be <i>cancelled</i>.  Cancelling a key requests that
            the channel be deregistered during the selector's next selection operation.
            A key may be cancelled explicitly by invoking its <c>SelectionKey#cancel() cancel</c> method.  All of a channel's keys are cancelled
            implicitly when the channel is closed, whether by invoking its <c>Channel#close close</c> method or by interrupting a thread blocked in an I/O
            operation upon the channel.</para>
      <para>If the selector itself is closed then the channel will be deregistered,
            and the key representing its registration will be invalidated, without
            further delay.</para>
      <para>A channel may be registered at most once with any particular selector.</para>
      <para>Whether or not a channel is registered with one or more selectors may be
            determined by invoking the <c>#isRegistered isRegistered</c> method.</para>
      <para>Selectable channels are safe for use by multiple concurrent
            threads.</para>
      <para>"bm"&gt;&lt;h2&gt;Blocking mode&lt;/h2&gt;
            
            A selectable channel is either in <i>blocking</i> mode or in
            <i>non-blocking</i> mode.  In blocking mode, every I/O operation invoked
            upon the channel will block until it completes.  In non-blocking mode an I/O
            operation will never block and may transfer fewer bytes than were requested
            or possibly no bytes at all.  The blocking mode of a selectable channel may
            be determined by invoking its <c>#isBlocking isBlocking</c> method.</para>
      <para>Newly-created selectable channels are always in blocking mode.
            Non-blocking mode is most useful in conjunction with selector-based
            multiplexing.  A channel must be placed into non-blocking mode before being
            registered with a selector, and may not be returned to blocking mode until
            it has been deregistered.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SelectableChannel();" />
      <MemberSignature Language="C#" Value="protected SelectableChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of this class.</summary>
        <remarks>
          <para>Initializes a new instance of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel#SelectableChannel()" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel.SelectableChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SelectableChannel(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected SelectableChannel (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.SelectableChannel : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Channels.SelectableChannel" Usage="new Java.Nio.Channels.SelectableChannel (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockingLock">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BlockingLock () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Lang::Object ^ BlockingLock();" />
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object? BlockingLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object BlockingLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.BlockingLock" />
      <MemberSignature Language="F#" Value="abstract member BlockingLock : unit -&gt; Java.Lang.Object" Usage="selectableChannel.BlockingLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("blockingLock", "()Ljava/lang/Object;", "GetBlockingLockHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("blockingLock", "()Ljava/lang/Object;", "GetBlockingLockHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the object upon which the <c>#configureBlocking
            configureBlocking</c> and <c>#register register</c> methods synchronize.</summary>
        <returns>The blocking-mode lock object</returns>
        <remarks>
          <para>Retrieves the object upon which the <c>#configureBlocking
            configureBlocking</c> and <c>#register register</c> methods synchronize.
            This is often useful in the implementation of adaptors that require a
            specific blocking mode to be maintained for a short period of time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel#blockingLock()" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel.blockingLock()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ConfigureBlocking">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ConfigureBlocking (block As Boolean) As SelectableChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::SelectableChannel ^ ConfigureBlocking(bool block);" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.SelectableChannel? ConfigureBlocking (bool block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.SelectableChannel ConfigureBlocking(bool block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.ConfigureBlocking(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ConfigureBlocking : bool -&gt; Java.Nio.Channels.SelectableChannel" Usage="selectableChannel.ConfigureBlocking block" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("configureBlocking", "(Z)Ljava/nio/channels/SelectableChannel;", "GetConfigureBlocking_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("configureBlocking", "(Z)Ljava/nio/channels/SelectableChannel;", "GetConfigureBlocking_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectableChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="block">If <c>true</c> then this channel will be placed in
                           blocking mode; if <c>false</c> then it will be placed
                           non-blocking mode</param>
        <summary>Adjusts this channel's blocking mode.</summary>
        <returns>This selectable channel</returns>
        <remarks>
          <para>Adjusts this channel's blocking mode.</para>
          <para>If this channel is registered with one or more selectors then an
            attempt to place it into blocking mode will cause an <c>IllegalBlockingModeException</c> to be thrown.</para>
          <para>This method may be invoked at any time.  The new blocking mode will
            only affect I/O operations that are initiated after this method returns.
            For some implementations this may require blocking until all pending I/O
            operations are complete.</para>
          <para>If this method is invoked while another invocation of this method or
            of the <c>#register(Selector, int) register</c> method is in progress
            then it will first block until the other operation is complete.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel#configureBlocking(boolean)" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel.configureBlocking(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if this channel is closed.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if <c>block</c> is <c>true</c> and this channel has been
             registered with at least one selector.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBlocking">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsBlocking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsBlocking { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsBlocking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlocking" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.SelectableChannel.IsBlocking" />
      <MemberSignature Language="F#" Value="member this.IsBlocking : bool" Usage="Java.Nio.Channels.SelectableChannel.IsBlocking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBlocking", "()Z", "GetIsBlockingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBlocking", "()Z", "GetIsBlockingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this channel is in blocking mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsRegistered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsRegistered { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRegistered" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.SelectableChannel.IsRegistered" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : bool" Usage="Java.Nio.Channels.SelectableChannel.IsRegistered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRegistered", "()Z", "GetIsRegisteredHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRegistered", "()Z", "GetIsRegisteredHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this channel is registered with at least one selector.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.SelectableChannel.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Channels.SelectableChannel.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyFor">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function KeyFor (sel As Selector) As SelectionKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::SelectionKey ^ KeyFor(Java::Nio::Channels::Selector ^ sel);" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.SelectionKey? KeyFor (Java.Nio.Channels.Selector? sel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.SelectionKey KeyFor(class Java.Nio.Channels.Selector sel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.KeyFor(Java.Nio.Channels.Selector)" />
      <MemberSignature Language="F#" Value="abstract member KeyFor : Java.Nio.Channels.Selector -&gt; Java.Nio.Channels.SelectionKey" Usage="selectableChannel.KeyFor sel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("keyFor", "(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;", "GetKeyFor_Ljava_nio_channels_Selector_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("keyFor", "(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;", "GetKeyFor_Ljava_nio_channels_Selector_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sel" Type="Java.Nio.Channels.Selector" />
      </Parameters>
      <Docs>
        <param name="sel">The selector</param>
        <summary>Retrieves the key representing the channel's registration with the given
            selector.</summary>
        <returns>The key returned when this channel was last registered with the
                     given selector, or <c>null</c> if this channel is not
                     currently registered with that selector</returns>
        <remarks>
          <para>Retrieves the key representing the channel's registration with the given
            selector.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel#keyFor(java.nio.channels.Selector)" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel.keyFor(java.nio.channels.Selector)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Provider () As SelectorProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::Spi::SelectorProvider ^ Provider();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.Spi.SelectorProvider? Provider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.Spi.SelectorProvider Provider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.Provider" />
      <MemberSignature Language="F#" Value="abstract member Provider : unit -&gt; Java.Nio.Channels.Spi.SelectorProvider" Usage="selectableChannel.Provider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/SelectorProvider;", "GetProviderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/SelectorProvider;", "GetProviderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Spi.SelectorProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the provider that created this channel.</summary>
        <returns>The provider that created this channel</returns>
        <remarks>
          <para>Returns the provider that created this channel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel#provider()" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel.provider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="VB.NET" Value="Public Function Register (sel As Selector, ops As Operations) As SelectionKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Channels::SelectionKey ^ Register(Java::Nio::Channels::Selector ^ sel, Java::Nio::Channels::Operations ops);" />
      <MemberSignature Language="C#" Value="public Java.Nio.Channels.SelectionKey? Register (Java.Nio.Channels.Selector? sel, Java.Nio.Channels.Operations ops);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Channels.SelectionKey Register(class Java.Nio.Channels.Selector sel, valuetype Java.Nio.Channels.Operations ops) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.Register(Java.Nio.Channels.Selector,Java.Nio.Channels.Operations)" />
      <MemberSignature Language="F#" Value="member this.Register : Java.Nio.Channels.Selector * Java.Nio.Channels.Operations -&gt; Java.Nio.Channels.SelectionKey" Usage="selectableChannel.Register (sel, ops)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("register", "(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("register", "(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sel" Type="Java.Nio.Channels.Selector" />
        <Parameter Name="ops" Type="Java.Nio.Channels.Operations">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sel">The selector with which this channel is to be registered</param>
        <param name="ops">The interest set for the resulting key</param>
        <summary>Registers this channel with the given selector, returning a selection
            key.</summary>
        <returns>A key representing the registration of this channel with
                     the given selector</returns>
        <remarks>
          <para>Registers this channel with the given selector, returning a selection
            key.</para>
          <para>An invocation of this convenience method of the form
            
            &lt;blockquote&gt;<c>sc.register(sel, ops)</c>&lt;/blockquote&gt;
            
            behaves in exactly the same way as the invocation
            
            &lt;blockquote&gt;<c>sc.</c><c>#register(java.nio.channels.Selector,int,java.lang.Object)
            register(sel, ops, null)</c>&lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel#register(java.nio.channels.Selector,%20int)" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel.register(java.nio.channels.Selector, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if the channel is closed.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if the channel is in blocking mode.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalSelectorException">if this channel does not have the same provider as the given
             selector.</exception>
        <exception cref="T:Java.Nio.Channels.CancelledKeyException">if this channel is registered but its key has been canceled.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the operation given is not supported by this channel.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Register (sel As Selector, ops As Operations, att As Object) As SelectionKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::SelectionKey ^ Register(Java::Nio::Channels::Selector ^ sel, Java::Nio::Channels::Operations ops, Java::Lang::Object ^ att);" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.SelectionKey? Register (Java.Nio.Channels.Selector? sel, Java.Nio.Channels.Operations ops, Java.Lang.Object? att);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.SelectionKey Register(class Java.Nio.Channels.Selector sel, valuetype Java.Nio.Channels.Operations ops, class Java.Lang.Object att) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.Register(Java.Nio.Channels.Selector,Java.Nio.Channels.Operations,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Register : Java.Nio.Channels.Selector * Java.Nio.Channels.Operations * Java.Lang.Object -&gt; Java.Nio.Channels.SelectionKey" Usage="selectableChannel.Register (sel, ops, att)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("register", "(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;", "GetRegister_Ljava_nio_channels_Selector_ILjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("register", "(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;", "GetRegister_Ljava_nio_channels_Selector_ILjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sel" Type="Java.Nio.Channels.Selector" />
        <Parameter Name="ops" Type="Java.Nio.Channels.Operations">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="att" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="sel">The selector with which this channel is to be registered</param>
        <param name="ops">The interest set for the resulting key</param>
        <param name="att">The attachment for the resulting key; may be <c>null</c></param>
        <summary>Registers this channel with the given selector, returning a selection
            key.</summary>
        <returns>A key representing the registration of this channel with
                     the given selector</returns>
        <remarks>
          <para>Registers this channel with the given selector, returning a selection
            key.</para>
          <para>If this channel is currently registered with the given selector then
            the selection key representing that registration is returned.  The key's
            interest set will have been changed to <c>ops</c>, as if by invoking
            the <c>SelectionKey#interestOps(int) interestOps(int)</c> method.  If
            the <c>att</c> argument is not <c>null</c> then the key's attachment
            will have been set to that value.  A <c>CancelledKeyException</c> will
            be thrown if the key has already been cancelled.</para>
          <para>Otherwise this channel has not yet been registered with the given
            selector, so it is registered and the resulting new key is returned.
            The key's initial interest set will be <c>ops</c> and its attachment
            will be <c>att</c>.</para>
          <para>This method may be invoked at any time.  If this method is invoked
            while a selection operation is in progress then it has no effect upon
            that operation; the new registration or change to the key's interest set
            will be seen by the next selection operation.  If this method is invoked
            while an invocation of <c>#configureBlocking(boolean) configureBlocking</c>
            is in progress then it will block until the channel's blocking mode has
            been adjusted.</para>
          <para>If this channel is closed while this operation is in progress then
            the key returned by this method will have been cancelled and will
            therefore be invalid.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel#register(java.nio.channels.Selector,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel.register(java.nio.channels.Selector, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if this channel is closed.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>ops</c> is not supported by this channel.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if this channel is in blocking mode.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalSelectorException">if this channel does not have the same provider as the given
             selector.</exception>
        <exception cref="T:Java.Nio.Channels.CancelledKeyException">if this channel is registered but its key has been canceled.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.SelectableChannel.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Channels.SelectableChannel.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.SelectableChannel.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Channels.SelectableChannel.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidOps">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ValidOps () As Operations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Channels::Operations ValidOps();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.Operations ValidOps ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Java.Nio.Channels.Operations ValidOps() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.SelectableChannel.ValidOps" />
      <MemberSignature Language="F#" Value="abstract member ValidOps : unit -&gt; Java.Nio.Channels.Operations" Usage="selectableChannel.ValidOps " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("validOps", "()I", "GetValidOpsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("validOps", "()I", "GetValidOpsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Operations</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an operation set
            identifying this channel's supported operations.</summary>
        <returns>The valid-operation set</returns>
        <remarks>
          <para>Returns an operation set
            identifying this channel's supported operations.  The bits that are set
            in this integer value denote exactly the operations that are valid for
            this channel.  This method always returns the same value for a given
            concrete channel class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/SelectableChannel#validOps()" title="Reference documentation">Java documentation for <code>java.nio.channels.SelectableChannel.validOps()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
