<Type Name="AsynchronousChannelGroup" FullName="Java.Nio.Channels.AsynchronousChannelGroup">
  <TypeSignature Language="C#" Value="public abstract class AsynchronousChannelGroup : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsynchronousChannelGroup extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.AsynchronousChannelGroup" />
  <TypeSignature Language="F#" Value="type AsynchronousChannelGroup = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/AsynchronousChannelGroup", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/AsynchronousChannelGroup", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A grouping of asynchronous channels for the purpose of resource sharing.</summary>
    <remarks>
      <para>A grouping of asynchronous channels for the purpose of resource sharing.</para>
      <para>An asynchronous channel group encapsulates the mechanics required to
            handle the completion of I/O operations initiated by <c>AsynchronousChannel
            asynchronous channels</c> that are bound to the group. A group has an associated
            thread pool to which tasks are submitted to handle I/O events and dispatch to
            <c>CompletionHandler completion-handlers</c> that consume the result of
            asynchronous operations performed on channels in the group. In addition to
            handling I/O events, the pooled threads may also execute other tasks required
            to support the execution of asynchronous I/O operations.</para>
      <para>An asynchronous channel group is created by invoking the <c>#withFixedThreadPool withFixedThreadPool</c> or <c>#withCachedThreadPool
            withCachedThreadPool</c> methods defined here. Channels are bound to a group by
            specifying the group when constructing the channel. The associated thread
            pool is &lt;em&gt;owned&lt;/em&gt; by the group; termination of the group results in the
            shutdown of the associated thread pool.</para>
      <para>In addition to groups created explicitly, the Java virtual machine
            maintains a system-wide &lt;em&gt;default group&lt;/em&gt; that is constructed
            automatically. Asynchronous channels that do not specify a group at
            construction time are bound to the default group. The default group has an
            associated thread pool that creates new threads as needed. The default group
            may be configured by means of system properties defined in the table below.
            Where the <c>java.util.concurrent.ThreadFactory ThreadFactory</c> for the
            default group is not configured then the pooled threads of the default group
            are <c>Thread#isDaemon daemon</c> threads.
            
            &lt;table class="striped"&gt;
            &lt;caption style="display:none:"&gt;System properties&lt;/caption&gt;
              &lt;thead&gt;
              &lt;tr&gt;
                &lt;th scope="col"&gt;System property&lt;/th&gt;
                &lt;th scope="col"&gt;Description&lt;/th&gt;
              &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody&gt;
              &lt;tr&gt;
                &lt;th scope="row"&gt; <c>java.nio.channels.DefaultThreadPool.threadFactory</c>&lt;/th&gt;
                &lt;td&gt; The value of this property is taken to be the fully-qualified name
                of a concrete <c>java.util.concurrent.ThreadFactory ThreadFactory</c>
                class. The class is loaded using the system class loader and instantiated.
                The factory's <c>java.util.concurrent.ThreadFactory#newThread
                newThread</c> method is invoked to create each thread for the default
                group's thread pool. If the process to load and instantiate the value
                of the property fails then an unspecified error is thrown during the
                construction of the default group. &lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;th scope="row"&gt; <c>java.nio.channels.DefaultThreadPool.initialSize</c>&lt;/th&gt;
                &lt;td&gt; The value of the <c>initialSize</c> parameter for the default
                group (see <c>#withCachedThreadPool withCachedThreadPool</c>).
                The value of the property is taken to be the <c>String</c>
                representation of an <c>Integer</c> that is the initial size parameter.
                If the value cannot be parsed as an <c>Integer</c> it causes an
                unspecified error to be thrown during the construction of the default
                group. &lt;/td&gt;
              &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
            
            "threading"&gt;&lt;h2&gt;Threading&lt;/h2&gt;</para>
      <para>The completion handler for an I/O operation initiated on a channel bound
            to a group is guaranteed to be invoked by one of the pooled threads in the
            group. This ensures that the completion handler is run by a thread with the
            expected &lt;em&gt;identity&lt;/em&gt;.</para>
      <para>Where an I/O operation completes immediately, and the initiating thread
            is one of the pooled threads in the group then the completion handler may
            be invoked directly by the initiating thread. To avoid stack overflow, an
            implementation may impose a limit as to the number of activations on the
            thread stack. Some I/O operations may prohibit invoking the completion
            handler directly by the initiating thread (see <c>AsynchronousServerSocketChannel#accept(Object,CompletionHandler) accept</c>).
            
            "shutdown"&gt;&lt;h2&gt;Shutdown and Termination&lt;/h2&gt;</para>
      <para>The <c>#shutdown() shutdown</c> method is used to initiate an &lt;em&gt;orderly
            shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown;
            further attempts to construct a channel that binds to the group will throw
            <c>ShutdownChannelGroupException</c>. Whether or not a group is shutdown can
            be tested using the <c>#isShutdown() isShutdown</c> method. Once shutdown,
            the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to
            the group are closed, all actively executing completion handlers have run to
            completion, and resources used by the group are released. No attempt is made
            to stop or interrupt threads that are executing completion handlers. The
            <c>#isTerminated() isTerminated</c> method is used to test if the group has
            terminated, and the <c>#awaitTermination awaitTermination</c> method can be
            used to block until the group has terminated.</para>
      <para>The <c>#shutdownNow() shutdownNow</c> method can be used to initiate a
            &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed
            by an orderly shutdown, the <c>shutdownNow</c> method closes all open channels
            in the group as if by invoking the <c>AsynchronousChannel#close close</c>
            method.</para>
      <para>Added in 1.7.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsynchronousChannelGroup (Java.Nio.Channels.Spi.AsynchronousChannelProvider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Channels.Spi.AsynchronousChannelProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.#ctor(Java.Nio.Channels.Spi.AsynchronousChannelProvider)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.AsynchronousChannelGroup : Java.Nio.Channels.Spi.AsynchronousChannelProvider -&gt; Java.Nio.Channels.AsynchronousChannelGroup" Usage="new Java.Nio.Channels.AsynchronousChannelGroup provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/nio/channels/spi/AsynchronousChannelProvider;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/nio/channels/spi/AsynchronousChannelProvider;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="provider" Type="Java.Nio.Channels.Spi.AsynchronousChannelProvider" />
      </Parameters>
      <Docs>
        <param name="provider">The asynchronous channel provider for this group</param>
        <summary>Initialize a new instance of this class.</summary>
        <remarks>
          <para>Initialize a new instance of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup#AsynchronousChannelGroup(java.nio.channels.spi.AsynchronousChannelProvider)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup.AsynchronousChannelGroup(java.nio.channels.spi.AsynchronousChannelProvider)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsynchronousChannelGroup (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.AsynchronousChannelGroup : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Channels.AsynchronousChannelGroup" Usage="new Java.Nio.Channels.AsynchronousChannelGroup (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AwaitTermination">
      <MemberSignature Language="C#" Value="public abstract bool AwaitTermination (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AwaitTermination(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.AwaitTermination(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member AwaitTermination : int64 * Java.Util.Concurrent.TimeUnit -&gt; bool" Usage="asynchronousChannelGroup.AwaitTermination (timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("awaitTermination", "(JLjava/util/concurrent/TimeUnit;)Z", "GetAwaitTermination_JLjava_util_concurrent_TimeUnit_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("awaitTermination", "(JLjava/util/concurrent/TimeUnit;)Z", "GetAwaitTermination_JLjava_util_concurrent_TimeUnit_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">The maximum time to wait, or zero or less to not wait</param>
        <param name="unit">The time unit of the timeout argument</param>
        <summary>Awaits termination of the group.</summary>
        <returns>
          <c>true</c> if the group has terminated; <c>false</c> if the
                     timeout elapsed before termination</returns>
        <remarks>
          <para>Awaits termination of the group.</para>
          <para>This method blocks until the group has terminated, or the timeout
            occurs, or the current thread is interrupted, whichever happens first.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup#awaitTermination(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup.awaitTermination(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShutdown">
      <MemberSignature Language="C#" Value="public abstract bool IsShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShutdown" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousChannelGroup.IsShutdown" />
      <MemberSignature Language="F#" Value="member this.IsShutdown : bool" Usage="Java.Nio.Channels.AsynchronousChannelGroup.IsShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isShutdown", "()Z", "GetIsShutdownHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isShutdown", "()Z", "GetIsShutdownHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTerminated">
      <MemberSignature Language="C#" Value="public abstract bool IsTerminated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTerminated" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousChannelGroup.IsTerminated" />
      <MemberSignature Language="F#" Value="member this.IsTerminated : bool" Usage="Java.Nio.Channels.AsynchronousChannelGroup.IsTerminated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isTerminated", "()Z", "GetIsTerminatedHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isTerminated", "()Z", "GetIsTerminatedHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousChannelGroup.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Channels.AsynchronousChannelGroup.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Nio.Channels.Spi.AsynchronousChannelProvider? Provider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Channels.Spi.AsynchronousChannelProvider Provider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.Provider" />
      <MemberSignature Language="F#" Value="member this.Provider : unit -&gt; Java.Nio.Channels.Spi.AsynchronousChannelProvider" Usage="asynchronousChannelGroup.Provider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/AsynchronousChannelProvider;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/AsynchronousChannelProvider;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Spi.AsynchronousChannelProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the provider that created this channel group.</summary>
        <returns>The provider that created this channel group</returns>
        <remarks>
          <para>Returns the provider that created this channel group.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup#provider()" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup.provider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public abstract void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.Shutdown" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="asynchronousChannelGroup.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shutdown", "()V", "GetShutdownHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shutdown", "()V", "GetShutdownHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initiates an orderly shutdown of the group.</summary>
        <remarks>
          <para>Initiates an orderly shutdown of the group.</para>
          <para>This method marks the group as shutdown. Further attempts to construct
            channel that binds to this group will throw <c>ShutdownChannelGroupException</c>.
            The group terminates when all asynchronous channels in the group are
            closed, all actively executing completion handlers have run to completion,
            and all resources have been released. This method has no effect if the
            group is already shutdown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup#shutdown()" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup.shutdown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownNow">
      <MemberSignature Language="C#" Value="public abstract void ShutdownNow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownNow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.ShutdownNow" />
      <MemberSignature Language="F#" Value="abstract member ShutdownNow : unit -&gt; unit" Usage="asynchronousChannelGroup.ShutdownNow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shutdownNow", "()V", "GetShutdownNowHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shutdownNow", "()V", "GetShutdownNowHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Shuts down the group and closes all open channels in the group.</summary>
        <remarks>
          <para>Shuts down the group and closes all open channels in the group.</para>
          <para>In addition to the actions performed by the <c>#shutdown() shutdown</c>
            method, this method invokes the <c>AsynchronousChannel#close close</c>
            method on all open channels in the group. This method does not attempt to
            stop or interrupt threads that are executing completion handlers. The
            group terminates when all actively executing completion handlers have run
            to completion and all resources have been released. This method may be
            invoked at any time. If some other thread has already invoked it, then
            another invocation will block until the first invocation is complete,
            after which it will return without effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup#shutdownNow()" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup.shutdownNow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousChannelGroup.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Channels.AsynchronousChannelGroup.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.AsynchronousChannelGroup.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Channels.AsynchronousChannelGroup.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCachedThreadPool">
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.AsynchronousChannelGroup? WithCachedThreadPool (Java.Util.Concurrent.IExecutorService? executor, int initialSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.AsynchronousChannelGroup WithCachedThreadPool(class Java.Util.Concurrent.IExecutorService executor, int32 initialSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.WithCachedThreadPool(Java.Util.Concurrent.IExecutorService,System.Int32)" />
      <MemberSignature Language="F#" Value="static member WithCachedThreadPool : Java.Util.Concurrent.IExecutorService * int -&gt; Java.Nio.Channels.AsynchronousChannelGroup" Usage="Java.Nio.Channels.AsynchronousChannelGroup.WithCachedThreadPool (executor, initialSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("withCachedThreadPool", "(Ljava/util/concurrent/ExecutorService;I)Ljava/nio/channels/AsynchronousChannelGroup;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("withCachedThreadPool", "(Ljava/util/concurrent/ExecutorService;I)Ljava/nio/channels/AsynchronousChannelGroup;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousChannelGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutorService" />
        <Parameter Name="initialSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="executor">The thread pool for the resulting group</param>
        <param name="initialSize">A value <c>&gt;=0</c> or a negative value for implementation
                     specific default</param>
        <summary>Creates an asynchronous channel group with a given thread pool that
            creates new threads as needed.</summary>
        <returns>A new asynchronous channel group</returns>
        <remarks>
          <para>Creates an asynchronous channel group with a given thread pool that
            creates new threads as needed.</para>
          <para>The <c>executor</c> parameter is an <c>ExecutorService</c> that
            creates new threads as needed to execute tasks that are submitted to
            handle I/O events and dispatch completion results for operations initiated
            on asynchronous channels in the group. It may reuse previously constructed
            threads when they are available.</para>
          <para>The <c>initialSize</c> parameter may be used by the implementation
            as a &lt;em&gt;hint&lt;/em&gt; as to the initial number of tasks it may submit. For
            example, it may be used to indicate the initial number of threads that
            wait on I/O events.</para>
          <para>The executor is intended to be used exclusively by the resulting
            asynchronous channel group. Termination of the group results in the
            orderly  <c>ExecutorService#shutdown shutdown</c> of the executor
            service. Shutting down the executor service by other means results in
            unspecified behavior.</para>
          <para>The group is created by invoking the <c>AsynchronousChannelProvider#openAsynchronousChannelGroup(ExecutorService,int)
            openAsynchronousChannelGroup(ExecutorService,int)</c> method of the system-wide
            default <c>AsynchronousChannelProvider</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup#withCachedThreadPool(java.util.concurrent.ExecutorService,%20int)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup.withCachedThreadPool(java.util.concurrent.ExecutorService, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithFixedThreadPool">
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.AsynchronousChannelGroup? WithFixedThreadPool (int nThreads, Java.Util.Concurrent.IThreadFactory? threadFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.AsynchronousChannelGroup WithFixedThreadPool(int32 nThreads, class Java.Util.Concurrent.IThreadFactory threadFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.WithFixedThreadPool(System.Int32,Java.Util.Concurrent.IThreadFactory)" />
      <MemberSignature Language="F#" Value="static member WithFixedThreadPool : int * Java.Util.Concurrent.IThreadFactory -&gt; Java.Nio.Channels.AsynchronousChannelGroup" Usage="Java.Nio.Channels.AsynchronousChannelGroup.WithFixedThreadPool (nThreads, threadFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("withFixedThreadPool", "(ILjava/util/concurrent/ThreadFactory;)Ljava/nio/channels/AsynchronousChannelGroup;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("withFixedThreadPool", "(ILjava/util/concurrent/ThreadFactory;)Ljava/nio/channels/AsynchronousChannelGroup;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousChannelGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nThreads" Type="System.Int32" />
        <Parameter Name="threadFactory" Type="Java.Util.Concurrent.IThreadFactory" />
      </Parameters>
      <Docs>
        <param name="nThreads">The number of threads in the pool</param>
        <param name="threadFactory">The factory to use when creating new threads</param>
        <summary>Creates an asynchronous channel group with a fixed thread pool.</summary>
        <returns>A new asynchronous channel group</returns>
        <remarks>
          <para>Creates an asynchronous channel group with a fixed thread pool.</para>
          <para>The resulting asynchronous channel group reuses a fixed number of
            threads. At any point, at most <c>nThreads</c> threads will be active
            processing tasks that are submitted to handle I/O events and dispatch
            completion results for operations initiated on asynchronous channels in
            the group.</para>
          <para>The group is created by invoking the <c>AsynchronousChannelProvider#openAsynchronousChannelGroup(int,ThreadFactory)
            openAsynchronousChannelGroup(int,ThreadFactory)</c> method of the system-wide
            default <c>AsynchronousChannelProvider</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup#withFixedThreadPool(int,%20java.util.concurrent.ThreadFactory)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup.withFixedThreadPool(int, java.util.concurrent.ThreadFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithThreadPool">
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.AsynchronousChannelGroup? WithThreadPool (Java.Util.Concurrent.IExecutorService? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.AsynchronousChannelGroup WithThreadPool(class Java.Util.Concurrent.IExecutorService executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.AsynchronousChannelGroup.WithThreadPool(Java.Util.Concurrent.IExecutorService)" />
      <MemberSignature Language="F#" Value="static member WithThreadPool : Java.Util.Concurrent.IExecutorService -&gt; Java.Nio.Channels.AsynchronousChannelGroup" Usage="Java.Nio.Channels.AsynchronousChannelGroup.WithThreadPool executor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("withThreadPool", "(Ljava/util/concurrent/ExecutorService;)Ljava/nio/channels/AsynchronousChannelGroup;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("withThreadPool", "(Ljava/util/concurrent/ExecutorService;)Ljava/nio/channels/AsynchronousChannelGroup;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousChannelGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutorService" />
      </Parameters>
      <Docs>
        <param name="executor">The thread pool for the resulting group</param>
        <summary>Creates an asynchronous channel group with a given thread pool.</summary>
        <returns>A new asynchronous channel group</returns>
        <remarks>
          <para>Creates an asynchronous channel group with a given thread pool.</para>
          <para>The <c>executor</c> parameter is an <c>ExecutorService</c> that
            executes tasks submitted to dispatch completion results for operations
            initiated on asynchronous channels in the group.</para>
          <para>Care should be taken when configuring the executor service. It
            should support &lt;em&gt;direct handoff&lt;/em&gt; or &lt;em&gt;unbounded queuing&lt;/em&gt; of
            submitted tasks, and the thread that invokes the <c>ExecutorService#execute execute</c> method should never invoke the task
            directly. An implementation may mandate additional constraints.</para>
          <para>The executor is intended to be used exclusively by the resulting
            asynchronous channel group. Termination of the group results in the
            orderly  <c>ExecutorService#shutdown shutdown</c> of the executor
            service. Shutting down the executor service by other means results in
            unspecified behavior.</para>
          <para>The group is created by invoking the <c>AsynchronousChannelProvider#openAsynchronousChannelGroup(ExecutorService,int)
            openAsynchronousChannelGroup(ExecutorService,int)</c> method of the system-wide
            default <c>AsynchronousChannelProvider</c> object with an <c>initialSize</c> of <c>0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/AsynchronousChannelGroup#withThreadPool(java.util.concurrent.ExecutorService)" title="Reference documentation">Java documentation for <code>java.nio.channels.AsynchronousChannelGroup.withThreadPool(java.util.concurrent.ExecutorService)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
