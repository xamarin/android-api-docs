<Type Name="Channels" FullName="Java.Nio.Channels.Channels">
  <TypeSignature Language="C#" Value="public sealed class Channels : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Channels extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.Channels" />
  <TypeSignature Language="F#" Value="type Channels = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/channels/Channels", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Utility methods for channels and streams.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/Channels" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Channels.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Channels.Channels.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInputStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream NewInputStream (Java.Nio.Channels.IAsynchronousByteChannel ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewInputStream(class Java.Nio.Channels.IAsynchronousByteChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewInputStream(Java.Nio.Channels.IAsynchronousByteChannel)" />
      <MemberSignature Language="F#" Value="static member NewInputStream : Java.Nio.Channels.IAsynchronousByteChannel -&gt; System.IO.Stream" Usage="Java.Nio.Channels.Channels.NewInputStream ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInputStream", "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/InputStream;", "", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IAsynchronousByteChannel" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <summary>Constructs a stream that reads bytes from the given channel.</summary>
        <returns>A new input stream</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInputStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream NewInputStream (Java.Nio.Channels.IReadableByteChannel ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewInputStream(class Java.Nio.Channels.IReadableByteChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewInputStream(Java.Nio.Channels.IReadableByteChannel)" />
      <MemberSignature Language="F#" Value="static member NewInputStream : Java.Nio.Channels.IReadableByteChannel -&gt; System.IO.Stream" Usage="Java.Nio.Channels.Channels.NewInputStream ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInputStream", "(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IReadableByteChannel" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <summary>Constructs a stream that reads bytes from the given channel.</summary>
        <returns>A new input stream</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewOutputStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream NewOutputStream (Java.Nio.Channels.IAsynchronousByteChannel ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewOutputStream(class Java.Nio.Channels.IAsynchronousByteChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewOutputStream(Java.Nio.Channels.IAsynchronousByteChannel)" />
      <MemberSignature Language="F#" Value="static member NewOutputStream : Java.Nio.Channels.IAsynchronousByteChannel -&gt; System.IO.Stream" Usage="Java.Nio.Channels.Channels.NewOutputStream ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newOutputStream", "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/OutputStream;", "", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IAsynchronousByteChannel" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <summary>Constructs a stream that writes bytes to the given channel.</summary>
        <returns>A new output stream</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewOutputStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream NewOutputStream (Java.Nio.Channels.IWritableByteChannel ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewOutputStream(class Java.Nio.Channels.IWritableByteChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewOutputStream(Java.Nio.Channels.IWritableByteChannel)" />
      <MemberSignature Language="F#" Value="static member NewOutputStream : Java.Nio.Channels.IWritableByteChannel -&gt; System.IO.Stream" Usage="Java.Nio.Channels.Channels.NewOutputStream ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newOutputStream", "(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IWritableByteChannel" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <summary>Constructs a stream that writes bytes to the given channel.</summary>
        <returns>A new output stream</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewReadableChannel">
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.IReadableByteChannel NewReadableChannel (System.IO.Stream in);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.IReadableByteChannel NewReadableChannel(class System.IO.Stream in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewReadableChannel(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member NewReadableChannel : System.IO.Stream -&gt; Java.Nio.Channels.IReadableByteChannel" Usage="Java.Nio.Channels.Channels.NewReadableChannel in" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newChannel", "(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.IReadableByteChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="in">The stream from which bytes are to be read</param>
        <summary>Constructs a channel that reads bytes from the given stream.</summary>
        <returns>A new readable byte channel</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewReader">
      <MemberSignature Language="C#" Value="public static Java.IO.Reader NewReader (Java.Nio.Channels.IReadableByteChannel ch, string csName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Reader NewReader(class Java.Nio.Channels.IReadableByteChannel ch, string csName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewReader(Java.Nio.Channels.IReadableByteChannel,System.String)" />
      <MemberSignature Language="F#" Value="static member NewReader : Java.Nio.Channels.IReadableByteChannel * string -&gt; Java.IO.Reader" Usage="Java.Nio.Channels.Channels.NewReader (ch, csName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IReadableByteChannel" />
        <Parameter Name="csName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <param name="csName">The name of the charset to be used</param>
        <summary>Constructs a reader that decodes bytes from the given channel according
            to the named charset.</summary>
        <returns>A new reader</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.UnsupportedCharsetException">if the given charset name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewReader">
      <MemberSignature Language="C#" Value="public static Java.IO.Reader NewReader (Java.Nio.Channels.IReadableByteChannel ch, Java.Nio.Charset.CharsetDecoder dec, int minBufferCap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Reader NewReader(class Java.Nio.Channels.IReadableByteChannel ch, class Java.Nio.Charset.CharsetDecoder dec, int32 minBufferCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewReader(Java.Nio.Channels.IReadableByteChannel,Java.Nio.Charset.CharsetDecoder,System.Int32)" />
      <MemberSignature Language="F#" Value="static member NewReader : Java.Nio.Channels.IReadableByteChannel * Java.Nio.Charset.CharsetDecoder * int -&gt; Java.IO.Reader" Usage="Java.Nio.Channels.Channels.NewReader (ch, dec, minBufferCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IReadableByteChannel" />
        <Parameter Name="dec" Type="Java.Nio.Charset.CharsetDecoder" />
        <Parameter Name="minBufferCap" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <param name="dec">To be added.</param>
        <param name="minBufferCap">To be added.</param>
        <summary>Constructs a reader that decodes bytes from the given channel according
            to the named charset.</summary>
        <returns>A new reader</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewWritableChannel">
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.IWritableByteChannel NewWritableChannel (System.IO.Stream out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.IWritableByteChannel NewWritableChannel(class System.IO.Stream out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewWritableChannel(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member NewWritableChannel : System.IO.Stream -&gt; Java.Nio.Channels.IWritableByteChannel" Usage="Java.Nio.Channels.Channels.NewWritableChannel out" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newChannel", "(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.IWritableByteChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="out">To be added.</param>
        <summary>Constructs a channel that reads bytes from the given stream.</summary>
        <returns>A new readable byte channel</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewWriter">
      <MemberSignature Language="C#" Value="public static Java.IO.Writer NewWriter (Java.Nio.Channels.IWritableByteChannel ch, string csName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Writer NewWriter(class Java.Nio.Channels.IWritableByteChannel ch, string csName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewWriter(Java.Nio.Channels.IWritableByteChannel,System.String)" />
      <MemberSignature Language="F#" Value="static member NewWriter : Java.Nio.Channels.IWritableByteChannel * string -&gt; Java.IO.Writer" Usage="Java.Nio.Channels.Channels.NewWriter (ch, csName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Writer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IWritableByteChannel" />
        <Parameter Name="csName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <param name="csName">The name of the charset to be used</param>
        <summary>Constructs a writer that encodes characters according to the named
            charset and writes the resulting bytes to the given channel.</summary>
        <returns>A new writer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.UnsupportedCharsetException">if the given charset name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewWriter">
      <MemberSignature Language="C#" Value="public static Java.IO.Writer NewWriter (Java.Nio.Channels.IWritableByteChannel ch, Java.Nio.Charset.CharsetEncoder enc, int minBufferCap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Writer NewWriter(class Java.Nio.Channels.IWritableByteChannel ch, class Java.Nio.Charset.CharsetEncoder enc, int32 minBufferCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewWriter(Java.Nio.Channels.IWritableByteChannel,Java.Nio.Charset.CharsetEncoder,System.Int32)" />
      <MemberSignature Language="F#" Value="static member NewWriter : Java.Nio.Channels.IWritableByteChannel * Java.Nio.Charset.CharsetEncoder * int -&gt; Java.IO.Writer" Usage="Java.Nio.Channels.Channels.NewWriter (ch, enc, minBufferCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Writer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IWritableByteChannel" />
        <Parameter Name="enc" Type="Java.Nio.Charset.CharsetEncoder" />
        <Parameter Name="minBufferCap" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <param name="enc">To be added.</param>
        <param name="minBufferCap">To be added.</param>
        <summary>Constructs a writer that encodes characters according to the named
            charset and writes the resulting bytes to the given channel.</summary>
        <returns>A new writer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Channels.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Channels.Channels.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Channels.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Channels.Channels.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
