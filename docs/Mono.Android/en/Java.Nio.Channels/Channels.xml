<Type Name="Channels" FullName="Java.Nio.Channels.Channels">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Channels&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Channels sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class Channels : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Channels extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.Channels" />
  <TypeSignature Language="F#" Value="type Channels = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/Channels", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/Channels", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Utility methods for channels and streams.</summary>
    <remarks>
      <para>Utility methods for channels and streams.</para>
      <para>This class defines static methods that support the interoperation of the
            stream classes of the <c>java.io</c> package with the channel classes
            of this package.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/Channels" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Channels.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Channels.Channels.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInputStream">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInputStream (ch As IAsynchronousByteChannel) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ NewInputStream(Java::Nio::Channels::IAsynchronousByteChannel ^ ch);" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream? NewInputStream (Java.Nio.Channels.IAsynchronousByteChannel? ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewInputStream(class Java.Nio.Channels.IAsynchronousByteChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewInputStream(Java.Nio.Channels.IAsynchronousByteChannel)" />
      <MemberSignature Language="F#" Value="static member NewInputStream : Java.Nio.Channels.IAsynchronousByteChannel -&gt; System.IO.Stream" Usage="Java.Nio.Channels.Channels.NewInputStream ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInputStream", "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/InputStream;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInputStream", "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/InputStream;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IAsynchronousByteChannel" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <summary>Constructs a stream that reads bytes from the given channel.</summary>
        <returns>A new input stream</returns>
        <remarks>
          <para>Constructs a stream that reads bytes from the given channel.</para>
          <para>The stream will not be buffered, and it will not support the <c>InputStream#mark mark</c> or <c>InputStream#reset reset</c> methods.  The
            stream will be safe for access by multiple concurrent threads.  Closing
            the stream will in turn cause the channel to be closed.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newInputStream(java.nio.channels.AsynchronousByteChannel)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newInputStream(java.nio.channels.AsynchronousByteChannel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInputStream">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInputStream (ch As IReadableByteChannel) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ NewInputStream(Java::Nio::Channels::IReadableByteChannel ^ ch);" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream? NewInputStream (Java.Nio.Channels.IReadableByteChannel? ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewInputStream(class Java.Nio.Channels.IReadableByteChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewInputStream(Java.Nio.Channels.IReadableByteChannel)" />
      <MemberSignature Language="F#" Value="static member NewInputStream : Java.Nio.Channels.IReadableByteChannel -&gt; System.IO.Stream" Usage="Java.Nio.Channels.Channels.NewInputStream ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInputStream", "(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInputStream", "(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IReadableByteChannel" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <summary>Constructs a stream that reads bytes from the given channel.</summary>
        <returns>A new input stream</returns>
        <remarks>
          <para>Constructs a stream that reads bytes from the given channel.</para>
          <para>The <c>read</c> methods of the resulting stream will throw an
            <c>IllegalBlockingModeException</c> if invoked while the underlying
            channel is in non-blocking mode.  The stream will not be buffered, and
            it will not support the <c>InputStream#mark mark</c> or <c>InputStream#reset reset</c> methods.  The stream will be safe for access by
            multiple concurrent threads.  Closing the stream will in turn cause the
            channel to be closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newInputStream(java.nio.channels.ReadableByteChannel)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newInputStream(java.nio.channels.ReadableByteChannel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewOutputStream">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewOutputStream (ch As IAsynchronousByteChannel) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ NewOutputStream(Java::Nio::Channels::IAsynchronousByteChannel ^ ch);" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream? NewOutputStream (Java.Nio.Channels.IAsynchronousByteChannel? ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewOutputStream(class Java.Nio.Channels.IAsynchronousByteChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewOutputStream(Java.Nio.Channels.IAsynchronousByteChannel)" />
      <MemberSignature Language="F#" Value="static member NewOutputStream : Java.Nio.Channels.IAsynchronousByteChannel -&gt; System.IO.Stream" Usage="Java.Nio.Channels.Channels.NewOutputStream ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newOutputStream", "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/OutputStream;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newOutputStream", "(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/OutputStream;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IAsynchronousByteChannel" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <summary>Constructs a stream that writes bytes to the given channel.</summary>
        <returns>A new output stream</returns>
        <remarks>
          <para>Constructs a stream that writes bytes to the given channel.</para>
          <para>The stream will not be buffered. The stream will be safe for access
            by multiple concurrent threads.  Closing the stream will in turn cause
            the channel to be closed.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newOutputStream(java.nio.channels.AsynchronousByteChannel)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newOutputStream(java.nio.channels.AsynchronousByteChannel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewOutputStream">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewOutputStream (ch As IWritableByteChannel) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ NewOutputStream(Java::Nio::Channels::IWritableByteChannel ^ ch);" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream? NewOutputStream (Java.Nio.Channels.IWritableByteChannel? ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewOutputStream(class Java.Nio.Channels.IWritableByteChannel ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewOutputStream(Java.Nio.Channels.IWritableByteChannel)" />
      <MemberSignature Language="F#" Value="static member NewOutputStream : Java.Nio.Channels.IWritableByteChannel -&gt; System.IO.Stream" Usage="Java.Nio.Channels.Channels.NewOutputStream ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newOutputStream", "(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newOutputStream", "(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IWritableByteChannel" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <summary>Constructs a stream that writes bytes to the given channel.</summary>
        <returns>A new output stream</returns>
        <remarks>
          <para>Constructs a stream that writes bytes to the given channel.</para>
          <para>The <c>write</c> methods of the resulting stream will throw an
            <c>IllegalBlockingModeException</c> if invoked while the underlying
            channel is in non-blocking mode.  The stream will not be buffered.  The
            stream will be safe for access by multiple concurrent threads.  Closing
            the stream will in turn cause the channel to be closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newOutputStream(java.nio.channels.WritableByteChannel)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newOutputStream(java.nio.channels.WritableByteChannel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewReadableChannel">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewReadableChannel (in As Stream) As IReadableByteChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::Channels::IReadableByteChannel ^ NewReadableChannel(System::IO::Stream ^ in);" />
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.IReadableByteChannel? NewReadableChannel (System.IO.Stream? in);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.IReadableByteChannel NewReadableChannel(class System.IO.Stream in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewReadableChannel(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member NewReadableChannel : System.IO.Stream -&gt; Java.Nio.Channels.IReadableByteChannel" Usage="Java.Nio.Channels.Channels.NewReadableChannel in" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newChannel", "(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newChannel", "(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.IReadableByteChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="in">The stream from which bytes are to be read</param>
        <summary>Constructs a channel that reads bytes from the given stream.</summary>
        <returns>A new readable byte channel</returns>
        <remarks>
          <para>Constructs a channel that reads bytes from the given stream.</para>
          <para>The resulting channel will not be buffered; it will simply redirect
            its I/O operations to the given stream.  Closing the channel will in
            turn cause the stream to be closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newChannel(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newChannel(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewReader">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewReader (ch As IReadableByteChannel, charset As Charset) As Reader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::IO::Reader ^ NewReader(Java::Nio::Channels::IReadableByteChannel ^ ch, Java::Nio::Charset::Charset ^ charset);" />
      <MemberSignature Language="C#" Value="public static Java.IO.Reader? NewReader (Java.Nio.Channels.IReadableByteChannel? ch, Java.Nio.Charset.Charset? charset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Reader NewReader(class Java.Nio.Channels.IReadableByteChannel ch, class Java.Nio.Charset.Charset charset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewReader(Java.Nio.Channels.IReadableByteChannel,Java.Nio.Charset.Charset)" />
      <MemberSignature Language="F#" Value="static member NewReader : Java.Nio.Channels.IReadableByteChannel * Java.Nio.Charset.Charset -&gt; Java.IO.Reader" Usage="Java.Nio.Channels.Channels.NewReader (ch, charset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/Charset;)Ljava/io/Reader;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/Charset;)Ljava/io/Reader;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IReadableByteChannel" />
        <Parameter Name="charset" Type="Java.Nio.Charset.Charset" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <param name="charset">The charset to be used</param>
        <summary>Constructs a reader that decodes bytes from the given channel according
            to the given charset.</summary>
        <returns>A new reader</returns>
        <remarks>
          <para>Constructs a reader that decodes bytes from the given channel according
            to the given charset.</para>
          <para>An invocation of this method of the form</para>
          <code lang="text/java">{@code
                Channels.newReader(ch, charset)
            } </code>
          <para>behaves in exactly the same way as the expression</para>
          <code lang="text/java">{@code
                Channels.newReader(ch, Charset.forName(csName).newDecoder(), -1)
            } </code>
          <para>The reader's default action for malformed-input and unmappable-character
            errors is to java.nio.charset.CodingErrorAction#REPORT report
            them. When more control over the error handling is required, the constructor
            that takes a java.nio.charset.CharsetDecoder should be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newReader(java.nio.channels.ReadableByteChannel,%20java.nio.charset.Charset)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.Charset)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewReader">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewReader (ch As IReadableByteChannel, csName As String) As Reader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::IO::Reader ^ NewReader(Java::Nio::Channels::IReadableByteChannel ^ ch, System::String ^ csName);" />
      <MemberSignature Language="C#" Value="public static Java.IO.Reader? NewReader (Java.Nio.Channels.IReadableByteChannel? ch, string? csName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Reader NewReader(class Java.Nio.Channels.IReadableByteChannel ch, string csName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewReader(Java.Nio.Channels.IReadableByteChannel,System.String)" />
      <MemberSignature Language="F#" Value="static member NewReader : Java.Nio.Channels.IReadableByteChannel * string -&gt; Java.IO.Reader" Usage="Java.Nio.Channels.Channels.NewReader (ch, csName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IReadableByteChannel" />
        <Parameter Name="csName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <param name="csName">The name of the charset to be used</param>
        <summary>Constructs a reader that decodes bytes from the given channel according
            to the named charset.</summary>
        <returns>A new reader</returns>
        <remarks>
          <para>Constructs a reader that decodes bytes from the given channel according
            to the named charset.</para>
          <para>An invocation of this method of the form</para>
          <code lang="text/java">{@code
                Channels.newReader(ch, csname)
            } </code>
          <para>behaves in exactly the same way as the expression</para>
          <code lang="text/java">{@code
                Channels.newReader(ch, Charset.forName(csName))
            } </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newReader(java.nio.channels.ReadableByteChannel,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newReader(java.nio.channels.ReadableByteChannel, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.UnsupportedCharsetException">if the given charset name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewReader">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewReader (ch As IReadableByteChannel, dec As CharsetDecoder, minBufferCap As Integer) As Reader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::IO::Reader ^ NewReader(Java::Nio::Channels::IReadableByteChannel ^ ch, Java::Nio::Charset::CharsetDecoder ^ dec, int minBufferCap);" />
      <MemberSignature Language="C#" Value="public static Java.IO.Reader? NewReader (Java.Nio.Channels.IReadableByteChannel? ch, Java.Nio.Charset.CharsetDecoder? dec, int minBufferCap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Reader NewReader(class Java.Nio.Channels.IReadableByteChannel ch, class Java.Nio.Charset.CharsetDecoder dec, int32 minBufferCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewReader(Java.Nio.Channels.IReadableByteChannel,Java.Nio.Charset.CharsetDecoder,System.Int32)" />
      <MemberSignature Language="F#" Value="static member NewReader : Java.Nio.Channels.IReadableByteChannel * Java.Nio.Charset.CharsetDecoder * int -&gt; Java.IO.Reader" Usage="Java.Nio.Channels.Channels.NewReader (ch, dec, minBufferCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IReadableByteChannel" />
        <Parameter Name="dec" Type="Java.Nio.Charset.CharsetDecoder" />
        <Parameter Name="minBufferCap" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The channel from which bytes will be read</param>
        <param name="dec">The charset decoder to be used</param>
        <param name="minBufferCap">The minimum capacity of the internal byte buffer,
                    or <c>-1</c> if an implementation-dependent
                    default capacity is to be used</param>
        <summary>Constructs a reader that decodes bytes from the given channel using the
            given decoder.</summary>
        <returns>A new reader</returns>
        <remarks>
          <para>Constructs a reader that decodes bytes from the given channel using the
            given decoder.</para>
          <para>The resulting stream will contain an internal input buffer of at
            least <c>minBufferCap</c> bytes.  The stream's <c>read</c> methods
            will, as needed, fill the buffer by reading bytes from the underlying
            channel; if the channel is in non-blocking mode when bytes are to be
            read then an <c>IllegalBlockingModeException</c> will be thrown.  The
            resulting stream will not otherwise be buffered, and it will not support
            the <c>Reader#mark mark</c> or <c>Reader#reset reset</c> methods.
            Closing the stream will in turn cause the channel to be closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newReader(java.nio.channels.ReadableByteChannel,%20java.nio.charset.CharsetDecoder,%20int)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewWritableChannel">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewWritableChannel (out As Stream) As IWritableByteChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::Channels::IWritableByteChannel ^ NewWritableChannel(System::IO::Stream ^ out);" />
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.IWritableByteChannel? NewWritableChannel (System.IO.Stream? out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.IWritableByteChannel NewWritableChannel(class System.IO.Stream out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewWritableChannel(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member NewWritableChannel : System.IO.Stream -&gt; Java.Nio.Channels.IWritableByteChannel" Usage="Java.Nio.Channels.Channels.NewWritableChannel out" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newChannel", "(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newChannel", "(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.IWritableByteChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="out">The stream to which bytes are to be written</param>
        <summary>Constructs a channel that writes bytes to the given stream.</summary>
        <returns>A new writable byte channel</returns>
        <remarks>
          <para>Constructs a channel that writes bytes to the given stream.</para>
          <para>The resulting channel will not be buffered; it will simply redirect
            its I/O operations to the given stream.  Closing the channel will in
            turn cause the stream to be closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newChannel(java.io.OutputStream)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newChannel(java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewWriter">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewWriter (ch As IWritableByteChannel, charset As Charset) As Writer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::IO::Writer ^ NewWriter(Java::Nio::Channels::IWritableByteChannel ^ ch, Java::Nio::Charset::Charset ^ charset);" />
      <MemberSignature Language="C#" Value="public static Java.IO.Writer? NewWriter (Java.Nio.Channels.IWritableByteChannel? ch, Java.Nio.Charset.Charset? charset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Writer NewWriter(class Java.Nio.Channels.IWritableByteChannel ch, class Java.Nio.Charset.Charset charset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewWriter(Java.Nio.Channels.IWritableByteChannel,Java.Nio.Charset.Charset)" />
      <MemberSignature Language="F#" Value="static member NewWriter : Java.Nio.Channels.IWritableByteChannel * Java.Nio.Charset.Charset -&gt; Java.IO.Writer" Usage="Java.Nio.Channels.Channels.NewWriter (ch, charset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/Charset;)Ljava/io/Writer;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/Charset;)Ljava/io/Writer;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Writer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IWritableByteChannel" />
        <Parameter Name="charset" Type="Java.Nio.Charset.Charset" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <param name="charset">The charset to be used</param>
        <summary>Constructs a writer that encodes characters according to the given
            charset and writes the resulting bytes to the given channel.</summary>
        <returns>A new writer</returns>
        <remarks>
          <para>Constructs a writer that encodes characters according to the given
            charset and writes the resulting bytes to the given channel.</para>
          <para>An invocation of this method of the form</para>
          <code lang="text/java">{@code
                Channels.newWriter(ch, charset)
            } </code>
          <para>behaves in exactly the same way as the expression</para>
          <code lang="text/java">{@code
                Channels.newWriter(ch, Charset.forName(csName).newEncoder(), -1)
            } </code>
          <para>The writer's default action for malformed-input and unmappable-character
            errors is to java.nio.charset.CodingErrorAction#REPORT report
            them. When more control over the error handling is required, the constructor
            that takes a java.nio.charset.CharsetEncoder should be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newWriter(java.nio.channels.WritableByteChannel,%20java.nio.charset.Charset)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.Charset)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWriter">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewWriter (ch As IWritableByteChannel, csName As String) As Writer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::IO::Writer ^ NewWriter(Java::Nio::Channels::IWritableByteChannel ^ ch, System::String ^ csName);" />
      <MemberSignature Language="C#" Value="public static Java.IO.Writer? NewWriter (Java.Nio.Channels.IWritableByteChannel? ch, string? csName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Writer NewWriter(class Java.Nio.Channels.IWritableByteChannel ch, string csName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewWriter(Java.Nio.Channels.IWritableByteChannel,System.String)" />
      <MemberSignature Language="F#" Value="static member NewWriter : Java.Nio.Channels.IWritableByteChannel * string -&gt; Java.IO.Writer" Usage="Java.Nio.Channels.Channels.NewWriter (ch, csName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Writer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IWritableByteChannel" />
        <Parameter Name="csName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <param name="csName">The name of the charset to be used</param>
        <summary>Constructs a writer that encodes characters according to the named
            charset and writes the resulting bytes to the given channel.</summary>
        <returns>A new writer</returns>
        <remarks>
          <para>Constructs a writer that encodes characters according to the named
            charset and writes the resulting bytes to the given channel.</para>
          <para>An invocation of this method of the form</para>
          <code lang="text/java">{@code
                Channels.newWriter(ch, csname)
            } </code>
          <para>behaves in exactly the same way as the expression</para>
          <code lang="text/java">{@code
                Channels.newWriter(ch, Charset.forName(csName))
            } </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newWriter(java.nio.channels.WritableByteChannel,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newWriter(java.nio.channels.WritableByteChannel, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.UnsupportedCharsetException">if the given charset name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewWriter">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewWriter (ch As IWritableByteChannel, enc As CharsetEncoder, minBufferCap As Integer) As Writer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::IO::Writer ^ NewWriter(Java::Nio::Channels::IWritableByteChannel ^ ch, Java::Nio::Charset::CharsetEncoder ^ enc, int minBufferCap);" />
      <MemberSignature Language="C#" Value="public static Java.IO.Writer? NewWriter (Java.Nio.Channels.IWritableByteChannel? ch, Java.Nio.Charset.CharsetEncoder? enc, int minBufferCap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Writer NewWriter(class Java.Nio.Channels.IWritableByteChannel ch, class Java.Nio.Charset.CharsetEncoder enc, int32 minBufferCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Channels.NewWriter(Java.Nio.Channels.IWritableByteChannel,Java.Nio.Charset.CharsetEncoder,System.Int32)" />
      <MemberSignature Language="F#" Value="static member NewWriter : Java.Nio.Channels.IWritableByteChannel * Java.Nio.Charset.CharsetEncoder * int -&gt; Java.IO.Writer" Usage="Java.Nio.Channels.Channels.NewWriter (ch, enc, minBufferCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Writer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="Java.Nio.Channels.IWritableByteChannel" />
        <Parameter Name="enc" Type="Java.Nio.Charset.CharsetEncoder" />
        <Parameter Name="minBufferCap" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The channel to which bytes will be written</param>
        <param name="enc">The charset encoder to be used</param>
        <param name="minBufferCap">The minimum capacity of the internal byte buffer,
                    or <c>-1</c> if an implementation-dependent
                    default capacity is to be used</param>
        <summary>Constructs a writer that encodes characters using the given encoder and
            writes the resulting bytes to the given channel.</summary>
        <returns>A new writer</returns>
        <remarks>
          <para>Constructs a writer that encodes characters using the given encoder and
            writes the resulting bytes to the given channel.</para>
          <para>The resulting stream will contain an internal output buffer of at
            least <c>minBufferCap</c> bytes.  The stream's <c>write</c> methods
            will, as needed, flush the buffer by writing bytes to the underlying
            channel; if the channel is in non-blocking mode when bytes are to be
            written then an <c>IllegalBlockingModeException</c> will be thrown.
            The resulting stream will not otherwise be buffered.  Closing the stream
            will in turn cause the channel to be closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/Channels#newWriter(java.nio.channels.WritableByteChannel,%20java.nio.charset.CharsetEncoder,%20int)" title="Reference documentation">Java documentation for <code>java.nio.channels.Channels.newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Channels.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Channels.Channels.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Channels.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Channels.Channels.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
