<Type Name="IWritableByteChannel" FullName="Java.Nio.Channels.IWritableByteChannel">
  <TypeSignature Language="VB.NET" Value="Public Interface IWritableByteChannel&#xA;Implements IChannel, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWritableByteChannel : IDisposable, Java::Interop::IJavaPeerable, Java::Nio::Channels::IChannel" />
  <TypeSignature Language="C#" Value="public interface IWritableByteChannel : IDisposable, Java.Interop.IJavaPeerable, Java.Nio.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IWritableByteChannel implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class Java.Nio.Channels.IChannel, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.IWritableByteChannel" />
  <TypeSignature Language="F#" Value="type IWritableByteChannel = interface&#xA;    interface IChannel&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/WritableByteChannel", "", "Java.Nio.Channels.IWritableByteChannelInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/WritableByteChannel", "", "Java.Nio.Channels.IWritableByteChannelInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A channel that can write bytes.</summary>
    <remarks>
      <para>A channel that can write bytes.</para>
      <para>Only one write operation upon a writable channel may be in progress at
            any given time.  If one thread initiates a write operation upon a channel
            then any other thread that attempts to initiate another write operation will
            block until the first operation is complete.  Whether or not other kinds of
            I/O operations may proceed concurrently with a write operation depends upon
            the type of the channel.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/WritableByteChannel" title="Reference documentation">Java documentation for <code>java.nio.channels.WritableByteChannel</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Function Write (src As ByteBuffer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Write(Java::Nio::ByteBuffer ^ src);" />
      <MemberSignature Language="C#" Value="public int Write (Java.Nio.ByteBuffer? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(class Java.Nio.ByteBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.IWritableByteChannel.Write(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Write : Java.Nio.ByteBuffer -&gt; int" Usage="iWritableByteChannel.Write src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;)I", "GetWrite_Ljava_nio_ByteBuffer_Handler:Java.Nio.Channels.IWritableByteChannelInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;)I", "GetWrite_Ljava_nio_ByteBuffer_Handler:Java.Nio.Channels.IWritableByteChannelInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="src">The buffer from which bytes are to be retrieved</param>
        <summary>Writes a sequence of bytes to this channel from the given buffer.</summary>
        <returns>The number of bytes written, possibly zero</returns>
        <remarks>
          <para>Writes a sequence of bytes to this channel from the given buffer.</para>
          <para>An attempt is made to write up to <i>r</i> bytes to the channel,
            where <i>r</i> is the number of bytes remaining in the buffer, that is,
            <c>src.remaining()</c>, at the moment this method is invoked.</para>
          <para>Suppose that a byte sequence of length <i>n</i> is written, where
            <c>0</c>&amp;nbsp;<c>&lt;=</c>&amp;nbsp;<i>n</i>&amp;nbsp;<c>&lt;=</c>&amp;nbsp;<i>r</i>.
            This byte sequence will be transferred from the buffer starting at index
            <i>p</i>, where <i>p</i> is the buffer's position at the moment this
            method is invoked; the index of the last byte written will be
            <i>p</i>&amp;nbsp;<c>+</c>&amp;nbsp;<i>n</i>&amp;nbsp;<c>-</c>&amp;nbsp;<c>1</c>.
            Upon return the buffer's position will be equal to
            <i>p</i>&amp;nbsp;<c>+</c>&amp;nbsp;<i>n</i>; its limit will not have changed.</para>
          <para>Unless otherwise specified, a write operation will return only after
            writing all of the <i>r</i> requested bytes.  Some types of channels,
            depending upon their state, may write only some of the bytes or possibly
            none at all.  A socket channel in non-blocking mode, for example, cannot
            write any more bytes than are free in the socket's output buffer.</para>
          <para>This method may be invoked at any time.  If another thread has
            already initiated a write operation upon this channel, however, then an
            invocation of this method will block until the first operation is
            complete.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/WritableByteChannel#write(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.nio.channels.WritableByteChannel.write(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.NonWritableChannelException">if the channel was not opened for writing.</exception>
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if the channel was already closed.</exception>
        <exception cref="T:Java.Nio.Channels.AsynchronousCloseException">if another thread closes the channel during the write.</exception>
        <exception cref="T:Java.Nio.Channels.ClosedByInterruptException">if another thread interrupt the calling thread during the
             write.</exception>
        <exception cref="T:Java.IO.IOException">another IO exception occurs, details are in the message.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
