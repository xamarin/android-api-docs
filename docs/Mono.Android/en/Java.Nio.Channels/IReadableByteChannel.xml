<Type Name="IReadableByteChannel" FullName="Java.Nio.Channels.IReadableByteChannel">
  <TypeSignature Language="C#" Value="public interface IReadableByteChannel : IDisposable, Java.Interop.IJavaPeerable, Java.Nio.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReadableByteChannel implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class Java.Nio.Channels.IChannel, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.IReadableByteChannel" />
  <TypeSignature Language="F#" Value="type IReadableByteChannel = interface&#xA;    interface IChannel&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/ReadableByteChannel", "", "Java.Nio.Channels.IReadableByteChannelInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/ReadableByteChannel", "", "Java.Nio.Channels.IReadableByteChannelInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A channel that can read bytes.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/ReadableByteChannel" title="Reference documentation">Java documentation for <code>java.nio.channels.ReadableByteChannel</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (Java.Nio.ByteBuffer? dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(class Java.Nio.ByteBuffer dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.IReadableByteChannel.Read(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.ByteBuffer -&gt; int" Usage="iReadableByteChannel.Read dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;)I", "GetRead_Ljava_nio_ByteBuffer_Handler:Java.Nio.Channels.IReadableByteChannelInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;)I", "GetRead_Ljava_nio_ByteBuffer_Handler:Java.Nio.Channels.IReadableByteChannelInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="dst">The buffer into which bytes are to be transferred</param>
        <summary>Reads a sequence of bytes from this channel into the given buffer.</summary>
        <returns>The number of bytes read, possibly zero, or <c>-1</c> if the
                     channel has reached end-of-stream</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/ReadableByteChannel#read(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.nio.channels.ReadableByteChannel.read(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.AsynchronousCloseException">if another thread closes the channel during the read.</exception>
        <exception cref="T:Java.Nio.Channels.ClosedByInterruptException">if another thread interrupts the calling thread while the
             operation is in progress. The interrupt state of the calling
             thread is set and the channel is closed.</exception>
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if the channel is closed.</exception>
        <exception cref="T:Java.IO.IOException">another I/O error occurs, details are in the message.</exception>
        <exception cref="T:Java.Nio.Channels.NonReadableChannelException">if the channel was not opened for reading.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
