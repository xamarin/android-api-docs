<Type Name="FileLock" FullName="Java.Nio.Channels.FileLock">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileLock&#xA;Inherits Object&#xA;Implements IAutoCloseable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLock abstract : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IAutoCloseable" />
  <TypeSignature Language="C#" Value="public abstract class FileLock : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAutoCloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileLock extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IAutoCloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.FileLock" />
  <TypeSignature Language="F#" Value="type FileLock = class&#xA;    inherit Object&#xA;    interface IAutoCloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAutoCloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/channels/FileLock", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/channels/FileLock", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A token representing a lock on a region of a file.</summary>
    <remarks>
      <para>A token representing a lock on a region of a file.</para>
      <para>A file-lock object is created each time a lock is acquired on a file via
            one of the <c>FileChannel#lock(long,long,boolean) lock</c> or <c>FileChannel#tryLock(long,long,boolean) tryLock</c> methods of the
            <c>FileChannel</c> class, or the <c>AsynchronousFileChannel#lock(long,long,boolean,Object,CompletionHandler) lock</c>
            or <c>AsynchronousFileChannel#tryLock(long,long,boolean) tryLock</c>
            methods of the <c>AsynchronousFileChannel</c> class.</para>
      <para>A file-lock object is initially valid.  It remains valid until the lock
            is released by invoking the <c>#release release</c> method, by closing the
            channel that was used to acquire it, or by the termination of the Java
            virtual machine, whichever comes first.  The validity of a lock may be
            tested by invoking its <c>#isValid isValid</c> method.</para>
      <para>A file lock is either <i>exclusive</i> or <i>shared</i>.  A shared lock
            prevents other concurrently-running programs from acquiring an overlapping
            exclusive lock, but does allow them to acquire overlapping shared locks.  An
            exclusive lock prevents other programs from acquiring an overlapping lock of
            either type.  Once it is released, a lock has no further effect on the locks
            that may be acquired by other programs.</para>
      <para>Whether a lock is exclusive or shared may be determined by invoking its
            <c>#isShared isShared</c> method.  Some platforms do not support shared
            locks, in which case a request for a shared lock is automatically converted
            into a request for an exclusive lock.</para>
      <para>The locks held on a particular file by a single Java virtual machine do
            not overlap.  The <c>#overlaps overlaps</c> method may be used to test
            whether a candidate lock range overlaps an existing lock.</para>
      <para>A file-lock object records the file channel upon whose file the lock is
            held, the type and validity of the lock, and the position and size of the
            locked region.  Only the validity of a lock is subject to change over time;
            all other aspects of a lock's state are immutable.</para>
      <para>File locks are held on behalf of the entire Java virtual machine.
            They are not suitable for controlling access to a file by multiple
            threads within the same virtual machine.</para>
      <para>File-lock objects are safe for use by multiple concurrent threads.
            
            
            "pdep"&gt;&lt;h2&gt; Platform dependencies &lt;/h2&gt;</para>
      <para>This file-locking API is intended to map directly to the native locking
            facility of the underlying operating system.  Thus the locks held on a file
            should be visible to all programs that have access to the file, regardless
            of the language in which those programs are written.</para>
      <para>Whether or not a lock actually prevents another program from accessing
            the content of the locked region is system-dependent and therefore
            unspecified.  The native file-locking facilities of some systems are merely
            <i>advisory</i>, meaning that programs must cooperatively observe a known
            locking protocol in order to guarantee data integrity.  On other systems
            native file locks are <i>mandatory</i>, meaning that if one program locks a
            region of a file then other programs are actually prevented from accessing
            that region in a way that would violate the lock.  On yet other systems,
            whether native file locks are advisory or mandatory is configurable on a
            per-file basis.  To ensure consistent and correct behavior across platforms,
            it is strongly recommended that the locks provided by this API be used as if
            they were advisory locks.</para>
      <para>On some systems, acquiring a mandatory lock on a region of a file
            prevents that region from being <c>java.nio.channels.FileChannel#map
            &lt;i&gt;mapped into memory&lt;/i&gt;</c>, and vice versa.  Programs that combine
            locking and mapping should be prepared for this combination to fail.</para>
      <para>On some systems, closing a channel releases all locks held by the Java
            virtual machine on the underlying file regardless of whether the locks were
            acquired via that channel or via another channel open on the same file.  It
            is strongly recommended that, within a program, a unique channel be used to
            acquire all locks on any given file.</para>
      <para>Some network filesystems permit file locking to be used with
            memory-mapped files only when the locked regions are page-aligned and a
            whole multiple of the underlying hardware's page size.  Some network
            filesystems do not implement file locks on regions that extend past a
            certain position, often 2&lt;sup&gt;30&lt;/sup&gt; or 2&lt;sup&gt;31&lt;/sup&gt;.  In general, great
            care should be taken when locking files that reside on network filesystems.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/channels/FileLock" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileLock(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected FileLock (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.FileLock : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Channels.FileLock" Usage="new Java.Nio.Channels.FileLock (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (channel As AsynchronousFileChannel, position As Long, size As Long, shared As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileLock(Java::Nio::Channels::AsynchronousFileChannel ^ channel, long position, long size, bool shared);" />
      <MemberSignature Language="C#" Value="protected FileLock (Java.Nio.Channels.AsynchronousFileChannel? channel, long position, long size, bool shared);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Channels.AsynchronousFileChannel channel, int64 position, int64 size, bool shared) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.#ctor(Java.Nio.Channels.AsynchronousFileChannel,System.Int64,System.Int64,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.FileLock : Java.Nio.Channels.AsynchronousFileChannel * int64 * int64 * bool -&gt; Java.Nio.Channels.FileLock" Usage="new Java.Nio.Channels.FileLock (channel, position, size, shared)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/nio/channels/AsynchronousFileChannel;JJZ)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/nio/channels/AsynchronousFileChannel;JJZ)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="channel" Type="Java.Nio.Channels.AsynchronousFileChannel" />
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="shared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="channel">The channel upon whose file this lock is held</param>
        <param name="position">The position within the file at which the locked region starts;
                    must be non-negative</param>
        <param name="size">The size of the locked region; must be non-negative, and the sum
                    <c>position</c>&amp;nbsp;+&amp;nbsp;<c>size</c> must be non-negative</param>
        <param name="shared">
          <c>true</c> if this lock is shared,
                    <c>false</c> if it is exclusive</param>
        <summary>Initializes a new instance of this class.</summary>
        <remarks>
          <para>Initializes a new instance of this class.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#FileLock(java.nio.channels.AsynchronousFileChannel,%20long,%20long,%20boolean)" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.FileLock(java.nio.channels.AsynchronousFileChannel, long, long, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (channel As FileChannel, position As Long, size As Long, shared As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileLock(Java::Nio::Channels::FileChannel ^ channel, long position, long size, bool shared);" />
      <MemberSignature Language="C#" Value="protected FileLock (Java.Nio.Channels.FileChannel? channel, long position, long size, bool shared);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Channels.FileChannel channel, int64 position, int64 size, bool shared) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.#ctor(Java.Nio.Channels.FileChannel,System.Int64,System.Int64,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.FileLock : Java.Nio.Channels.FileChannel * int64 * int64 * bool -&gt; Java.Nio.Channels.FileLock" Usage="new Java.Nio.Channels.FileLock (channel, position, size, shared)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/nio/channels/FileChannel;JJZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/nio/channels/FileChannel;JJZ)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="channel" Type="Java.Nio.Channels.FileChannel" />
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="shared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="channel">The file channel upon whose file this lock is held</param>
        <param name="position">The position within the file at which the locked region starts;
                    must be non-negative</param>
        <param name="size">The size of the locked region; must be non-negative, and the sum
                    <c>position</c>&amp;nbsp;+&amp;nbsp;<c>size</c> must be non-negative</param>
        <param name="shared">
          <c>true</c> if this lock is shared,
                    <c>false</c> if it is exclusive</param>
        <summary>Initializes a new instance of this class.</summary>
        <remarks>
          <para>Initializes a new instance of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#FileLock(java.nio.channels.FileChannel,%20long,%20long,%20boolean)" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.FileLock(java.nio.channels.FileChannel, long, long, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AcquiredBy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcquiredBy () As IChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Channels::IChannel ^ AcquiredBy();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.IChannel? AcquiredBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.IChannel AcquiredBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.AcquiredBy" />
      <MemberSignature Language="F#" Value="abstract member AcquiredBy : unit -&gt; Java.Nio.Channels.IChannel&#xA;override this.AcquiredBy : unit -&gt; Java.Nio.Channels.IChannel" Usage="fileLock.AcquiredBy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acquiredBy", "()Ljava/nio/channels/Channel;", "GetAcquiredByHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acquiredBy", "()Ljava/nio/channels/Channel;", "GetAcquiredByHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.IChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the channel upon whose file this lock was acquired.</summary>
        <returns>The channel upon whose file this lock was acquired.</returns>
        <remarks>
          <para>Returns the channel upon whose file this lock was acquired.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#acquiredBy()" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.acquiredBy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="VB.NET" Value="Public Function Channel () As FileChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Channels::FileChannel ^ Channel();" />
      <MemberSignature Language="C#" Value="public Java.Nio.Channels.FileChannel? Channel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Channels.FileChannel Channel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.Channel" />
      <MemberSignature Language="F#" Value="member this.Channel : unit -&gt; Java.Nio.Channels.FileChannel" Usage="fileLock.Channel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("channel", "()Ljava/nio/channels/FileChannel;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("channel", "()Ljava/nio/channels/FileChannel;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.FileChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the file channel upon whose file this lock was acquired.</summary>
        <returns>The file channel, or <c>null</c> if the file lock was not
                     acquired by a file channel.</returns>
        <remarks>
          <para>Returns the file channel upon whose file this lock was acquired.</para>
          <para>This method has been superseded by the <c>#acquiredBy acquiredBy</c>
            method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#channel()" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.channel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="fileLock.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAutoCloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method invokes the <c>#release</c> method.</summary>
        <remarks>
          <para>This method invokes the <c>#release</c> method. It was added
            to the class so that it could be used in conjunction with the
            automatic resource management block construct.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#close()" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.FileLock.IsShared" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="Java.Nio.Channels.FileLock.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isShared", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isShared", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether this lock is shared.</summary>
        <value>
          <c>true</c> if lock is shared,
                    <c>false</c> if it is exclusive</value>
        <remarks>
          <para>Tells whether this lock is shared.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#isShared()" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.isShared()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsValid { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.FileLock.IsValid" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="Java.Nio.Channels.FileLock.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isValid", "()Z", "GetIsValidHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isValid", "()Z", "GetIsValidHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this lock is a valid file lock.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.FileLock.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Channels.FileLock.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlaps">
      <MemberSignature Language="VB.NET" Value="Public Function Overlaps (position As Long, size As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Overlaps(long position, long size);" />
      <MemberSignature Language="C#" Value="public bool Overlaps (long position, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Overlaps(int64 position, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.Overlaps(System.Int64,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.Overlaps : int64 * int64 -&gt; bool" Usage="fileLock.Overlaps (position, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("overlaps", "(JJ)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("overlaps", "(JJ)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="position">The starting position of the lock range</param>
        <param name="size">The size of the lock range</param>
        <summary>Tells whether or not this lock overlaps the given lock range.</summary>
        <returns>
          <c>true</c> if, and only if, this lock and the given lock
                     range overlap by at least one byte</returns>
        <remarks>
          <para>Tells whether or not this lock overlaps the given lock range.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#overlaps(long,%20long)" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.overlaps(long, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="VB.NET" Value="Public Function Position () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Position();" />
      <MemberSignature Language="C#" Value="public long Position ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Position() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.Position" />
      <MemberSignature Language="F#" Value="member this.Position : unit -&gt; int64" Usage="fileLock.Position " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("position", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("position", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the position within the file of the first byte of the locked
            region.</summary>
        <returns>The position</returns>
        <remarks>
          <para>Returns the position within the file of the first byte of the locked
            region.</para>
          <para>A locked region need not be contained within, or even overlap, the
            actual underlying file, so the value returned by this method may exceed
            the file's current size.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#position()" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.position()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Release ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Release();" />
      <MemberSignature Language="C#" Value="public abstract void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit" Usage="fileLock.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases this lock.</summary>
        <remarks>
          <para>Releases this lock.</para>
          <para>If this lock object is valid then invoking this method releases the
            lock and renders the object invalid.  If this lock object is invalid
            then invoking this method has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#release()" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if the channel is already closed when an attempt to release
             the lock is made.</exception>
        <exception cref="T:Java.IO.IOException">if another I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="VB.NET" Value="Public Function Size () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Size();" />
      <MemberSignature Language="C#" Value="public long Size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.Size" />
      <MemberSignature Language="F#" Value="member this.Size : unit -&gt; int64" Usage="fileLock.Size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("size", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("size", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the size of the locked region in bytes.</summary>
        <returns>The size of the locked region</returns>
        <remarks>
          <para>Returns the size of the locked region in bytes.</para>
          <para>A locked region need not be contained within, or even overlap, the
            actual underlying file, so the value returned by this method may exceed
            the file's current size.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#size()" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.size()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.FileLock.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Channels.FileLock.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.FileLock.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Channels.FileLock.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C#" Value="public override sealed string? ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.FileLock.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fileLock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string describing the range, type, and validity of this lock.</summary>
        <returns>A descriptive string</returns>
        <remarks>
          <para>Returns a string describing the range, type, and validity of this lock.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/channels/FileLock#toString()" title="Reference documentation">Java documentation for <code>java.nio.channels.FileLock.toString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
