<Type Name="Cipher" FullName="Javax.Crypto.Cipher">
  <TypeSignature Language="C#" Value="public class Cipher : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cipher extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Crypto.Cipher" />
  <TypeSignature Language="F#" Value="type Cipher = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/crypto/Cipher", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/crypto/Cipher", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides the functionality of a cryptographic cipher for
            encryption and decryption.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/crypto/Cipher" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Cipher (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.Cipher : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Crypto.Cipher" Usage="new Javax.Crypto.Cipher (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Cipher (Javax.Crypto.CipherSpi? cipherSpi, Java.Security.Provider? provider, string? transformation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Javax.Crypto.CipherSpi cipherSpi, class Java.Security.Provider provider, string transformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.#ctor(Javax.Crypto.CipherSpi,Java.Security.Provider,System.String)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.Cipher : Javax.Crypto.CipherSpi * Java.Security.Provider * string -&gt; Javax.Crypto.Cipher" Usage="new Javax.Crypto.Cipher (cipherSpi, provider, transformation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cipherSpi" Type="Javax.Crypto.CipherSpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cipherSpi">the delegate</param>
        <param name="provider">the provider</param>
        <param name="transformation">the transformation</param>
        <summary>Creates a Cipher object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#Cipher(javax.crypto.CipherSpi,%20java.security.Provider,%20java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.Cipher(javax.crypto.CipherSpi, java.security.Provider, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if either cipherSpi is <c>null</c> or provider is <c>null</c> and <c>cipherSpi</c> is a <c>NullCipherSpi</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string? Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.Cipher.Algorithm" />
      <MemberSignature Language="F#" Value="member this.Algorithm : string" Usage="Javax.Crypto.Cipher.Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the algorithm name of this &lt;code&gt;Cipher&lt;/code&gt; object.</summary>
        <value>the algorithm name of this &lt;code&gt;Cipher&lt;/code&gt; object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getAlgorithm()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getAlgorithm()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.Cipher.BlockSize" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int" Usage="Javax.Crypto.Cipher.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBlockSize", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBlockSize", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the block size (in bytes).</summary>
        <value>the block size (in bytes), or 0 if the underlying algorithm is
            not a block cipher</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getBlockSize()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getBlockSize()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecryptMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode DecryptMode = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode DecryptMode = (2)" />
      <MemberSignature Language="DocId" Value="F:Javax.Crypto.Cipher.DecryptMode" />
      <MemberSignature Language="F#" Value="val mutable DecryptMode : Javax.Crypto.CipherMode" Usage="Javax.Crypto.Cipher.DecryptMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DECRYPT_MODE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DECRYPT_MODE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant used to initialize cipher to decryption mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#DECRYPT_MODE" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.DECRYPT_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[]? DoFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.DoFinal" />
      <MemberSignature Language="F#" Value="member this.DoFinal : unit -&gt; byte[]" Usage="cipher.DoFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doFinal", "()[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doFinal", "()[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finishes a multiple-part encryption or decryption operation, depending
            on how this cipher was initialized.</summary>
        <returns>the new buffer with the result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#doFinal()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.doFinal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[]? DoFinal (byte[]? input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.DoFinal(System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.DoFinal : byte[] -&gt; byte[]" Usage="cipher.DoFinal input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doFinal", "([B)[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doFinal", "([B)[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <summary>Finishes a multiple-part encryption or decryption operation, depending
            on how this cipher was initialized.</summary>
        <returns>the new buffer with the result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#doFinal()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.doFinal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (Java.Nio.ByteBuffer? input, Java.Nio.ByteBuffer? output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.DoFinal(Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="member this.DoFinal : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int" Usage="cipher.DoFinal (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doFinal", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doFinal", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="output">the output buffer.</param>
        <summary>Finishes a multiple-part encryption or decryption operation, depending
            on how this cipher was initialized.</summary>
        <returns>the new buffer with the result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#doFinal()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.doFinal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the same
             object.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[]? output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.DoFinal(System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DoFinal : byte[] * int -&gt; int" Usage="cipher.DoFinal (output, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doFinal", "([BI)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doFinal", "([BI)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">the output buffer.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Finishes a multiple-part encryption or decryption operation, depending
            on how this cipher was initialized.</summary>
        <returns>the new buffer with the result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#doFinal()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.doFinal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[]? DoFinal (byte[]? input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.DoFinal(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DoFinal : byte[] * int * int -&gt; byte[]" Usage="cipher.DoFinal (input, inputOffset, inputLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doFinal", "([BII)[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doFinal", "([BII)[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input</param>
        <summary>Finishes a multiple-part encryption or decryption operation, depending
            on how this cipher was initialized.</summary>
        <returns>the new buffer with the result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#doFinal()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.doFinal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[]? input, int inputOffset, int inputLen, byte[]? output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.DoFinal : byte[] * int * int * byte[] -&gt; int" Usage="cipher.DoFinal (input, inputOffset, inputLen, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doFinal", "([BII[B)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doFinal", "([BII[B)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <param name="output">the output buffer for the transformed bytes.</param>
        <summary>Finishes a multiple-part encryption or decryption operation, depending
            on how this cipher was initialized.</summary>
        <returns>the new buffer with the result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#doFinal()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.doFinal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[]? input, int inputOffset, int inputLen, byte[]? output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DoFinal : byte[] * int * int * byte[] * int -&gt; int" Usage="cipher.DoFinal (input, inputOffset, inputLen, output, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doFinal", "([BII[BI)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doFinal", "([BII[BI)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <param name="output">the output buffer for the transformed bytes.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Finishes a multiple-part encryption or decryption operation, depending
            on how this cipher was initialized.</summary>
        <returns>the new buffer with the result</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#doFinal()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.doFinal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode EncryptMode = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode EncryptMode = (1)" />
      <MemberSignature Language="DocId" Value="F:Javax.Crypto.Cipher.EncryptMode" />
      <MemberSignature Language="F#" Value="val mutable EncryptMode : Javax.Crypto.CipherMode" Usage="Javax.Crypto.Cipher.EncryptMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCRYPT_MODE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCRYPT_MODE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant used to initialize cipher to encryption mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#ENCRYPT_MODE" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.ENCRYPT_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExemptionMechanism">
      <MemberSignature Language="C#" Value="public Javax.Crypto.ExemptionMechanism? ExemptionMechanism { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Crypto.ExemptionMechanism ExemptionMechanism" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.Cipher.ExemptionMechanism" />
      <MemberSignature Language="F#" Value="member this.ExemptionMechanism : Javax.Crypto.ExemptionMechanism" Usage="Javax.Crypto.Cipher.ExemptionMechanism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getExemptionMechanism", "()Ljavax/crypto/ExemptionMechanism;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getExemptionMechanism", "()Ljavax/crypto/ExemptionMechanism;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ExemptionMechanism</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the exemption mechanism object used with this cipher.</summary>
        <value>the exemption mechanism object used with this cipher, or
            null if this cipher does not use any exemption mechanism.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getExemptionMechanism()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getExemptionMechanism()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher? GetInstance (string? transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.GetInstance(System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; Javax.Crypto.Cipher" Usage="Javax.Crypto.Cipher.GetInstance transformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/crypto/Cipher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/crypto/Cipher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the name of the transformation, e.g.,
            <i>DES/CBC/PKCS5Padding</i>.
            See the Cipher section in the &lt;a href=
              "https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#Cipher"&gt;
            Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
            for information about standard transformation names.</param>
        <summary>Returns a &lt;code&gt;Cipher&lt;/code&gt; object that implements the specified
            transformation.</summary>
        <returns>a cipher that implements the requested transformation.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no installed provider can provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if no installed provider can provide the padding scheme in
             the <format type="text/html"><i>transformation</i></format>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher? GetInstance (string? transformation, Java.Security.Provider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation, class Java.Security.Provider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.GetInstance(System.String,Java.Security.Provider)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Java.Security.Provider -&gt; Javax.Crypto.Cipher" Usage="Javax.Crypto.Cipher.GetInstance (transformation, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="provider">the provider to ask for the transformation.</param>
        <param name="transformation">the name of the transformation, e.g.,
            <i>DES/CBC/PKCS5Padding</i>.
            See the Cipher section in the &lt;a href=
              "https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#Cipher"&gt;
            Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
            for information about standard transformation names.</param>
        <summary>Returns a &lt;code&gt;Cipher&lt;/code&gt; object that implements the specified
            transformation.</summary>
        <returns>a cipher that implements the requested transformation.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider can not provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the requested padding scheme in the <format type="text/html"><i>transformation</i></format>
             is not available.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provider is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher? GetInstance (string? transformation, string? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation, string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.GetInstance(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * string -&gt; Javax.Crypto.Cipher" Usage="Javax.Crypto.Cipher.GetInstance (transformation, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the name of the provider to ask for the transformation.</param>
        <param name="transformation">the name of the transformation, e.g.,
            <i>DES/CBC/PKCS5Padding</i>.
            See the Cipher section in the &lt;a href=
              "https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#Cipher"&gt;
            Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
            for information about standard transformation names.</param>
        <summary>Returns a &lt;code&gt;Cipher&lt;/code&gt; object that implements the specified
            transformation.</summary>
        <returns>a cipher that implements the requested transformation.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider can not provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if no provider with the specified name can be found.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the requested padding scheme in the <format type="text/html"><i>transformation</i></format>
             is not available.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified provider is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIV">
      <MemberSignature Language="C#" Value="public byte[]? GetIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.GetIV" />
      <MemberSignature Language="F#" Value="member this.GetIV : unit -&gt; byte[]" Usage="cipher.GetIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getIV", "()[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getIV", "()[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the initialization vector (IV) in a new buffer.</summary>
        <returns>the initialization vector in a new buffer, or null if the
            underlying algorithm does not use an IV, or if the IV has not yet
            been set.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getIV()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getIV()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxAllowedKeyLength">
      <MemberSignature Language="C#" Value="public static int GetMaxAllowedKeyLength (string? transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxAllowedKeyLength(string transformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.GetMaxAllowedKeyLength(System.String)" />
      <MemberSignature Language="F#" Value="static member GetMaxAllowedKeyLength : string -&gt; int" Usage="Javax.Crypto.Cipher.GetMaxAllowedKeyLength transformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMaxAllowedKeyLength", "(Ljava/lang/String;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMaxAllowedKeyLength", "(Ljava/lang/String;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the cipher transformation.</param>
        <summary>Returns the maximum key length for the specified transformation
            according to the installed JCE jurisdiction policy files.</summary>
        <returns>the maximum key length in bits or Integer.MAX_VALUE.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getMaxAllowedKeyLength(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getMaxAllowedKeyLength(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider for the specified <c>transformation</c> can
             be found.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>transformation</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxAllowedParameterSpec">
      <MemberSignature Language="C#" Value="public static Java.Security.Spec.IAlgorithmParameterSpec? GetMaxAllowedParameterSpec (string? transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Spec.IAlgorithmParameterSpec GetMaxAllowedParameterSpec(string transformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.GetMaxAllowedParameterSpec(System.String)" />
      <MemberSignature Language="F#" Value="static member GetMaxAllowedParameterSpec : string -&gt; Java.Security.Spec.IAlgorithmParameterSpec" Usage="Javax.Crypto.Cipher.GetMaxAllowedParameterSpec transformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMaxAllowedParameterSpec", "(Ljava/lang/String;)Ljava/security/spec/AlgorithmParameterSpec;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMaxAllowedParameterSpec", "(Ljava/lang/String;)Ljava/security/spec/AlgorithmParameterSpec;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Spec.IAlgorithmParameterSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the cipher transformation.</param>
        <summary>Returns an AlgorithmParameterSpec object which contains
            the maximum cipher parameter value according to the
            jurisdiction policy file.</summary>
        <returns>an AlgorithmParameterSpec which holds the maximum
            value or null.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getMaxAllowedParameterSpec(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getMaxAllowedParameterSpec(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider for the specified <c>transformation</c> can
             be found.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>transformation</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSize">
      <MemberSignature Language="C#" Value="public int GetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOutputSize(int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.GetOutputSize(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetOutputSize : int -&gt; int" Usage="cipher.GetOutputSize inputLen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputSize", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputSize", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the input length (in bytes)</param>
        <summary>Returns the length in bytes that an output buffer would need to be in
            order to hold the result of the next &lt;code&gt;update&lt;/code&gt; or
            &lt;code&gt;doFinal&lt;/code&gt; operation, given the input length
            &lt;code&gt;inputLen&lt;/code&gt; (in bytes).</summary>
        <returns>the required output buffer size (in bytes)</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getOutputSize(int)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getOutputSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.Cert.Certificate? certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.Cert.Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Init(Javax.Crypto.CipherMode,Java.Security.Cert.Certificate)" />
      <MemberSignature Language="F#" Value="member this.Init : Javax.Crypto.CipherMode * Java.Security.Cert.Certificate -&gt; unit" Usage="cipher.Init (opmode, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(ILjava/security/cert/Certificate;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(ILjava/security/cert/Certificate;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="certificate" Type="Java.Security.Cert.Certificate" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="certificate">the certificate.</param>
        <summary>Initializes this cipher instance with the public key from the specified
 certificate.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the public key in the certificate can not be used to
             initialize this cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Init(Javax.Crypto.CipherMode,Java.Security.IKey)" />
      <MemberSignature Language="F#" Value="member this.Init : Javax.Crypto.CipherMode * Java.Security.IKey -&gt; unit" Usage="cipher.Init (opmode, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(ILjava/security/Key;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(ILjava/security/Key;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <summary>Initializes this cipher instance with the specified key.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.Cert.Certificate? certificate, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.Cert.Certificate certificate, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Init(Javax.Crypto.CipherMode,Java.Security.Cert.Certificate,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="member this.Init : Javax.Crypto.CipherMode * Java.Security.Cert.Certificate * Java.Security.SecureRandom -&gt; unit" Usage="cipher.Init (opmode, certificate, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(ILjava/security/cert/Certificate;Ljava/security/SecureRandom;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(ILjava/security/cert/Certificate;Ljava/security/SecureRandom;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="certificate" Type="Java.Security.Cert.Certificate" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="certificate">the certificate.</param>
        <param name="random">the source of randomness to be used.</param>
        <summary>Initializes this cipher instance with the public key from the specified
 certificate and a source of randomness.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the public key in the certificate can not be used to
             initialize this cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey? key, Java.Security.AlgorithmParameters? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Init(Javax.Crypto.CipherMode,Java.Security.IKey,Java.Security.AlgorithmParameters)" />
      <MemberSignature Language="F#" Value="member this.Init : Javax.Crypto.CipherMode * Java.Security.IKey * Java.Security.AlgorithmParameters -&gt; unit" Usage="cipher.Init (opmode, key, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <summary>Initializes this cipher instance with the specified key and algorithm
 parameters.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey? key, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Init(Javax.Crypto.CipherMode,Java.Security.IKey,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="member this.Init : Javax.Crypto.CipherMode * Java.Security.IKey * Java.Security.SecureRandom -&gt; unit" Usage="cipher.Init (opmode, key, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/SecureRandom;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/SecureRandom;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key and a source of
 randomness.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified opmode is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey? key, Java.Security.Spec.IAlgorithmParameterSpec? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Init(Javax.Crypto.CipherMode,Java.Security.IKey,Java.Security.Spec.IAlgorithmParameterSpec)" />
      <MemberSignature Language="F#" Value="member this.Init : Javax.Crypto.CipherMode * Java.Security.IKey * Java.Security.Spec.IAlgorithmParameterSpec -&gt; unit" Usage="cipher.Init (opmode, key, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <summary>Initializes this cipher instance with the specified key and algorithm
 parameters.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey? key, Java.Security.AlgorithmParameters? params, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Init(Javax.Crypto.CipherMode,Java.Security.IKey,Java.Security.AlgorithmParameters,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="member this.Init : Javax.Crypto.CipherMode * Java.Security.IKey * Java.Security.AlgorithmParameters * Java.Security.SecureRandom -&gt; unit" Usage="cipher.Init (opmode, key, params, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are inappropriate for this
             cipher.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified <c>opmode</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey? key, Java.Security.Spec.IAlgorithmParameterSpec? params, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Init(Javax.Crypto.CipherMode,Java.Security.IKey,Java.Security.Spec.IAlgorithmParameterSpec,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="member this.Init : Javax.Crypto.CipherMode * Java.Security.IKey * Java.Security.Spec.IAlgorithmParameterSpec * Java.Security.SecureRandom -&gt; unit" Usage="cipher.Init (opmode, key, params, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified <c>opmode</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.Cipher.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Crypto.Cipher.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Java.Security.AlgorithmParameters? Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.AlgorithmParameters Parameters" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.Cipher.Parameters" />
      <MemberSignature Language="F#" Value="member this.Parameters : Java.Security.AlgorithmParameters" Usage="Javax.Crypto.Cipher.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParameters", "()Ljava/security/AlgorithmParameters;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParameters", "()Ljava/security/AlgorithmParameters;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.AlgorithmParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parameters used with this cipher.</summary>
        <value>the parameters used with this cipher, or null if this cipher
            does not use any parameters.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getParameters()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getParameters()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType PrivateKey = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType PrivateKey = (2)" />
      <MemberSignature Language="DocId" Value="F:Javax.Crypto.Cipher.PrivateKey" />
      <MemberSignature Language="F#" Value="val mutable PrivateKey : Javax.Crypto.KeyType" Usage="Javax.Crypto.Cipher.PrivateKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_KEY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_KEY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant used to indicate the to-be-unwrapped key is a "private key".</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#PRIVATE_KEY" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.PRIVATE_KEY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider? Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.Cipher.Provider" />
      <MemberSignature Language="F#" Value="member this.Provider : Java.Security.Provider" Usage="Javax.Crypto.Cipher.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this &lt;code&gt;Cipher&lt;/code&gt; object.</summary>
        <value>the provider of this &lt;code&gt;Cipher&lt;/code&gt; object</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#getProvider()" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.getProvider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType PublicKey = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType PublicKey = (1)" />
      <MemberSignature Language="DocId" Value="F:Javax.Crypto.Cipher.PublicKey" />
      <MemberSignature Language="F#" Value="val mutable PublicKey : Javax.Crypto.KeyType" Usage="Javax.Crypto.Cipher.PublicKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PUBLIC_KEY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PUBLIC_KEY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant used to indicate the to-be-unwrapped key is a "public key".</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#PUBLIC_KEY" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.PUBLIC_KEY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SecretKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType SecretKey = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType SecretKey = (3)" />
      <MemberSignature Language="DocId" Value="F:Javax.Crypto.Cipher.SecretKey" />
      <MemberSignature Language="F#" Value="val mutable SecretKey : Javax.Crypto.KeyType" Usage="Javax.Crypto.Cipher.SecretKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SECRET_KEY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SECRET_KEY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Constant used to indicate the to-be-unwrapped key is a "secret key".</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#SECRET_KEY" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.SECRET_KEY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.Cipher.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Crypto.Cipher.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.Cipher.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Crypto.Cipher.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public Java.Security.IKey? Unwrap (byte[]? wrappedKey, string? wrappedKeyAlgorithm, Javax.Crypto.KeyType wrappedKeyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.IKey Unwrap(unsigned int8[] wrappedKey, string wrappedKeyAlgorithm, valuetype Javax.Crypto.KeyType wrappedKeyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Unwrap(System.Byte[],System.String,Javax.Crypto.KeyType)" />
      <MemberSignature Language="F#" Value="member this.Unwrap : byte[] * string * Javax.Crypto.KeyType -&gt; Java.Security.IKey" Usage="cipher.Unwrap (wrappedKey, wrappedKeyAlgorithm, wrappedKeyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unwrap", "([BLjava/lang/String;I)Ljava/security/Key;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unwrap", "([BLjava/lang/String;I)Ljava/security/Key;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrappedKey" Type="System.Byte[]" />
        <Parameter Name="wrappedKeyAlgorithm" Type="System.String" />
        <Parameter Name="wrappedKeyType" Type="Javax.Crypto.KeyType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="wrappedKey">the key to be unwrapped.</param>
        <param name="wrappedKeyAlgorithm">the algorithm associated with the wrapped
            key.</param>
        <param name="wrappedKeyType">the type of the wrapped key. This must be one of
            &lt;code&gt;SECRET_KEY&lt;/code&gt;, &lt;code&gt;PRIVATE_KEY&lt;/code&gt;, or
            &lt;code&gt;PUBLIC_KEY&lt;/code&gt;.</param>
        <summary>Unwrap a previously wrapped key.</summary>
        <returns>the unwrapped key.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#unwrap(byte[],%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.unwrap(byte[], java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the <c>wrappedKey</c> can not be unwrapped to a key of
             type <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider can be found that can create a key of type
             <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for unwrapping.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UnwrapMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode UnwrapMode = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode UnwrapMode = (4)" />
      <MemberSignature Language="DocId" Value="F:Javax.Crypto.Cipher.UnwrapMode" />
      <MemberSignature Language="F#" Value="val mutable UnwrapMode : Javax.Crypto.CipherMode" Usage="Javax.Crypto.Cipher.UnwrapMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("UNWRAP_MODE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("UNWRAP_MODE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Constant used to initialize cipher to key-unwrapping mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#UNWRAP_MODE" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.UNWRAP_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public byte[]? Update (byte[]? input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Update(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Update(System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.Update : byte[] -&gt; byte[]" Usage="cipher.Update input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "([B)[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "([B)[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input ByteBuffer</param>
        <param name="output">the output ByteByffer</param>
        <summary>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</summary>
        <returns>the number of bytes stored in &lt;code&gt;output&lt;/code&gt;</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#update(java.nio.ByteBuffer,%20java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.update(java.nio.ByteBuffer, java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (Java.Nio.ByteBuffer? input, Java.Nio.ByteBuffer? output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Update(Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="member this.Update : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int" Usage="cipher.Update (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input ByteBuffer</param>
        <param name="output">the output ByteByffer</param>
        <summary>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</summary>
        <returns>the number of bytes stored in &lt;code&gt;output&lt;/code&gt;</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#update(java.nio.ByteBuffer,%20java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.update(java.nio.ByteBuffer, java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the identical
             object.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public byte[]? Update (byte[]? input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Update(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Update(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Update : byte[] * int * int -&gt; byte[]" Usage="cipher.Update (input, inputOffset, inputLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "([BII)[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "([BII)[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="input">the input ByteBuffer</param>
        <param name="output">the output ByteByffer</param>
        <summary>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</summary>
        <returns>the number of bytes stored in &lt;code&gt;output&lt;/code&gt;</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#update(java.nio.ByteBuffer,%20java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.update(java.nio.ByteBuffer, java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>input</c> is <c>null</c>, or if <c>inputOffset</c> and
             <c>inputLen</c> do not specify a valid chunk in the input
             buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (byte[]? input, int inputOffset, int inputLen, byte[]? output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Update(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.Update : byte[] * int * int * byte[] -&gt; int" Usage="cipher.Update (input, inputOffset, inputLen, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "([BII[B)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "([BII[B)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="input">the input ByteBuffer</param>
        <param name="output">the output ByteByffer</param>
        <summary>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</summary>
        <returns>the number of bytes stored in &lt;code&gt;output&lt;/code&gt;</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#update(java.nio.ByteBuffer,%20java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.update(java.nio.ByteBuffer, java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>, the output is <c>null</c>, or
             if <c>inputOffset</c> and <c>inputLen</c> do not specify a
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (byte[]? input, int inputOffset, int inputLen, byte[]? output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Update(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Update : byte[] * int * int * byte[] * int -&gt; int" Usage="cipher.Update (input, inputOffset, inputLen, output, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "([BII[BI)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "([BII[BI)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <param name="input">the input ByteBuffer</param>
        <param name="output">the output ByteByffer</param>
        <summary>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</summary>
        <returns>the number of bytes stored in &lt;code&gt;output&lt;/code&gt;</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#update(java.nio.ByteBuffer,%20java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.update(java.nio.ByteBuffer, java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>, the output is <c>null</c>, or
             if <c>inputOffset</c> and <c>inputLen</c> do not specify a
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (Java.Nio.ByteBuffer? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(class Java.Nio.ByteBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.UpdateAAD(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="member this.UpdateAAD : Java.Nio.ByteBuffer -&gt; unit" Usage="cipher.UpdateAAD src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateAAD", "(Ljava/nio/ByteBuffer;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateAAD", "(Ljava/nio/ByteBuffer;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="src">the buffer containing the AAD</param>
        <summary>Continues a multi-part update of the Additional Authentication
            Data (AAD).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#updateAAD(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.updateAAD(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 19" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the cipher does not support AEAD</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (byte[]? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(unsigned int8[] src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.UpdateAAD(System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.UpdateAAD : byte[] -&gt; unit" Usage="cipher.UpdateAAD src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateAAD", "([B)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateAAD", "([B)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="src">the buffer containing the AAD</param>
        <summary>Continues a multi-part update of the Additional Authentication
            Data (AAD).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#updateAAD(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.updateAAD(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>input</c> is <c>null</c></exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the cipher does not support AEAD</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (byte[]? src, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(unsigned int8[] src, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.UpdateAAD(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.UpdateAAD : byte[] * int * int -&gt; unit" Usage="cipher.UpdateAAD (src, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateAAD", "([BII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateAAD", "([BII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <param name="len">To be added.</param>
        <param name="src">the buffer containing the AAD</param>
        <summary>Continues a multi-part update of the Additional Authentication
            Data (AAD).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#updateAAD(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.updateAAD(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>input</c> is <c>null</c>, or if <c>inputOffset</c> and
             <c>inputLen</c> do not specify a valid chunk in the input
             buffer.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the cipher does not support AEAD</exception>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public byte[]? Wrap (Java.Security.IKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Wrap(class Java.Security.IKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.Cipher.Wrap(Java.Security.IKey)" />
      <MemberSignature Language="F#" Value="member this.Wrap : Java.Security.IKey -&gt; byte[]" Usage="cipher.Wrap key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "(Ljava/security/Key;)[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "(Ljava/security/Key;)[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to be wrapped.</param>
        <summary>Wrap a key.</summary>
        <returns>the wrapped key.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#wrap(java.security.Key)" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.wrap(java.security.Key)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if this cipher instance can not wrap this key.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for wrapping.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode WrapMode = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode WrapMode = (3)" />
      <MemberSignature Language="DocId" Value="F:Javax.Crypto.Cipher.WrapMode" />
      <MemberSignature Language="F#" Value="val mutable WrapMode : Javax.Crypto.CipherMode" Usage="Javax.Crypto.Cipher.WrapMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WRAP_MODE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WRAP_MODE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Constant used to initialize cipher to key-wrapping mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/Cipher#WRAP_MODE" title="Reference documentation">Java documentation for <code>javax.crypto.Cipher.WRAP_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
