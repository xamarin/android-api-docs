<Type Name="CipherSpi" FullName="Javax.Crypto.CipherSpi">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CipherSpi&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherSpi abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class CipherSpi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CipherSpi extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Crypto.CipherSpi" />
  <TypeSignature Language="F#" Value="type CipherSpi = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/crypto/CipherSpi", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/crypto/CipherSpi", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class defines the <i>Service Provider Interface</i> (&lt;b&gt;SPI&lt;/b&gt;)
            for the <c>Cipher</c> class.</summary>
    <remarks>
      <para>This class defines the <i>Service Provider Interface</i> (&lt;b&gt;SPI&lt;/b&gt;)
            for the <c>Cipher</c> class.
            All the abstract methods in this class must be implemented by each
            cryptographic service provider who wishes to supply the implementation
            of a particular cipher algorithm.</para>
      <para>In order to create an instance of <c>Cipher</c>, which
            encapsulates an instance of this <c>CipherSpi</c> class, an
            application calls one of the
            <c>Cipher#getInstance(java.lang.String) getInstance</c>
            factory methods of the
            <c>Cipher Cipher</c> engine class and specifies the requested
            <i>transformation</i>.
            Optionally, the application may also specify the name of a provider.</para>
      <para>A <i>transformation</i> is a string that describes the operation (or
            set of operations) to be performed on the given input, to produce some
            output. A transformation always includes the name of a cryptographic
            algorithm (e.g., <i>DES</i>), and may be followed by a feedback mode and
            padding scheme.</para>
      <para>A transformation is of the form:
            
            &lt;ul&gt;
            &lt;li&gt;"<i>algorithm/mode/padding</i>" or
            
            &lt;li&gt;"<i>algorithm</i>"
            &lt;/ul&gt;</para>
      <para>(in the latter case,
            provider-specific default values for the mode and padding scheme are used).
            For example, the following is a valid transformation:</para>
      <code lang="text/java">{@code
                Cipher c = Cipher.getInstance("DES/CBC/PKCS5Padding");
            }</code>
      <para>A provider may supply a separate class for each combination
            of <i>algorithm/mode/padding</i>, or may decide to provide more generic
            classes representing sub-transformations corresponding to
            <i>algorithm</i> or <i>algorithm/mode</i> or <i>algorithm//padding</i>
            (note the double slashes),
            in which case the requested mode and/or padding are set automatically by
            the <c>getInstance</c> methods of <c>Cipher</c>, which invoke
            the <c>#engineSetMode(java.lang.String) engineSetMode</c> and
            <c>#engineSetPadding(java.lang.String) engineSetPadding</c>
            methods of the provider's subclass of <c>CipherSpi</c>.</para>
      <para>A <c>Cipher</c> property in a provider master class may have one of
            the following formats:
            
            &lt;ul&gt;
            
            &lt;li&gt;</para>
      <code lang="text/java">// provider's subclass of "CipherSpi" implements "algName" with
                // pluggable mode and padding
                &lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;algName&lt;/i&gt;
            </code>
      <para>&lt;li&gt;</para>
      <code lang="text/java">// provider's subclass of "CipherSpi" implements "algName" in the
                // specified "mode", with pluggable padding
                &lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;algName/mode&lt;/i&gt;
            </code>
      <para>&lt;li&gt;</para>
      <code lang="text/java">// provider's subclass of "CipherSpi" implements "algName" with the
                // specified "padding", with pluggable mode
                &lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;algName//padding&lt;/i&gt;
            </code>
      <para>&lt;li&gt;</para>
      <code lang="text/java">// provider's subclass of "CipherSpi" implements "algName" with the
                // specified "mode" and "padding"
                &lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;algName/mode/padding&lt;/i&gt;
            </code>
      <para>&lt;/ul&gt;</para>
      <para>For example, a provider may supply a subclass of <c>CipherSpi</c>
            that implements <i>DES/ECB/PKCS5Padding</i>, one that implements
            <i>DES/CBC/PKCS5Padding</i>, one that implements
            <i>DES/CFB/PKCS5Padding</i>, and yet another one that implements
            <i>DES/OFB/PKCS5Padding</i>. That provider would have the following
            <c>Cipher</c> properties in its master class:
            
            &lt;ul&gt;
            
            &lt;li&gt;</para>
      <code lang="text/java">&lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;DES/ECB/PKCS5Padding&lt;/i&gt;
            </code>
      <para>&lt;li&gt;</para>
      <code lang="text/java">&lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;DES/CBC/PKCS5Padding&lt;/i&gt;
            </code>
      <para>&lt;li&gt;</para>
      <code lang="text/java">&lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;DES/CFB/PKCS5Padding&lt;/i&gt;
            </code>
      <para>&lt;li&gt;</para>
      <code lang="text/java">&lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;DES/OFB/PKCS5Padding&lt;/i&gt;
            </code>
      <para>&lt;/ul&gt;</para>
      <para>Another provider may implement a class for each of the above modes
            (i.e., one class for <i>ECB</i>, one for <i>CBC</i>, one for <i>CFB</i>,
            and one for <i>OFB</i>), one class for <i>PKCS5Padding</i>,
            and a generic <i>DES</i> class that subclasses from <c>CipherSpi</c>.
            That provider would have the following
            <c>Cipher</c> properties in its master class:
            
            &lt;ul&gt;
            
            &lt;li&gt;</para>
      <code lang="text/java">&lt;code&gt;Cipher.&lt;/code&gt;&lt;i&gt;DES&lt;/i&gt;
            </code>
      <para>&lt;/ul&gt;</para>
      <para>The <c>getInstance</c> factory method of the <c>Cipher</c>
            engine class follows these rules in order to instantiate a provider's
            implementation of <c>CipherSpi</c> for a
            transformation of the form "<i>algorithm</i>":
            
            &lt;ol&gt;
            &lt;li&gt;
            Check if the provider has registered a subclass of <c>CipherSpi</c>
            for the specified "<i>algorithm</i>".</para>
      <para>If the answer is YES, instantiate this
            class, for whose mode and padding scheme default values (as supplied by
            the provider) are used.</para>
      <para>If the answer is NO, throw a <c>NoSuchAlgorithmException</c>
            exception.
            &lt;/ol&gt;</para>
      <para>The <c>getInstance</c> factory method of the <c>Cipher</c>
            engine class follows these rules in order to instantiate a provider's
            implementation of <c>CipherSpi</c> for a
            transformation of the form "<i>algorithm/mode/padding</i>":
            
            &lt;ol&gt;
            &lt;li&gt;
            Check if the provider has registered a subclass of <c>CipherSpi</c>
            for the specified "<i>algorithm/mode/padding</i>" transformation.</para>
      <para>If the answer is YES, instantiate it.</para>
      <para>If the answer is NO, go to the next step.
            &lt;li&gt;
            Check if the provider has registered a subclass of <c>CipherSpi</c>
            for the sub-transformation "<i>algorithm/mode</i>".</para>
      <para>If the answer is YES, instantiate it, and call
            <c>engineSetPadding(&lt;i&gt;padding&lt;/i&gt;)</c> on the new instance.</para>
      <para>If the answer is NO, go to the next step.
            &lt;li&gt;
            Check if the provider has registered a subclass of <c>CipherSpi</c>
            for the sub-transformation "<i>algorithm//padding</i>" (note the double
            slashes).</para>
      <para>If the answer is YES, instantiate it, and call
            <c>engineSetMode(&lt;i&gt;mode&lt;/i&gt;)</c> on the new instance.</para>
      <para>If the answer is NO, go to the next step.
            &lt;li&gt;
            Check if the provider has registered a subclass of <c>CipherSpi</c>
            for the sub-transformation "<i>algorithm</i>".</para>
      <para>If the answer is YES, instantiate it, and call
            <c>engineSetMode(&lt;i&gt;mode&lt;/i&gt;)</c> and
            <c>engineSetPadding(&lt;i&gt;padding&lt;/i&gt;)</c> on the new instance.</para>
      <para>If the answer is NO, throw a <c>NoSuchAlgorithmException</c>
            exception.
            &lt;/ol&gt;</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/crypto/CipherSpi" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherSpi();" />
      <MemberSignature Language="C#" Value="public CipherSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>CipherSpi</c> instance.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CipherSpi(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected CipherSpi (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.CipherSpi : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Crypto.CipherSpi" Usage="new Javax.Crypto.CipherSpi (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EngineDoFinal (input As ByteBuffer, output As ByteBuffer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int EngineDoFinal(Java::Nio::ByteBuffer ^ input, Java::Nio::ByteBuffer ^ output);" />
      <MemberSignature Language="C#" Value="protected virtual int EngineDoFinal (Java.Nio.ByteBuffer? input, Java.Nio.ByteBuffer? output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineDoFinal(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineDoFinal(Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member EngineDoFinal : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int&#xA;override this.EngineDoFinal : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int" Usage="cipherSpi.EngineDoFinal (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineDoFinal", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "GetEngineDoFinal_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineDoFinal", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "GetEngineDoFinal_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input ByteBuffer</param>
        <param name="output">the output ByteByffer</param>
        <summary>Encrypts or decrypts data in a single-part operation,
            or finishes a multiple-part operation.</summary>
        <returns>the number of bytes stored in <c>output</c></returns>
        <remarks>
          <para>Encrypts or decrypts data in a single-part operation,
            or finishes a multiple-part operation.
            The data is encrypted or decrypted, depending on how this cipher was
            initialized.</para>
          <para>All <c>input.remaining()</c> bytes starting at
            <c>input.position()</c> are processed.
            If an AEAD mode such as GCM/CCM is being used, the authentication
            tag is appended in the case of encryption, or verified in the
            case of decryption.
            The result is stored in the output buffer.
            Upon return, the input buffer's position will be equal
            to its limit; its limit will not have changed. The output buffer's
            position will have advanced by n, where n is the value returned
            by this method; the output buffer's limit will not have changed.</para>
          <para>If <c>output.remaining()</c> bytes are insufficient to
            hold the result, a <c>ShortBufferException</c> is thrown.</para>
          <para>Upon finishing, this method resets this cipher object to the state
            it was in when previously initialized via a call to
            <c>engineInit</c>.
            That is, the object is reset and available to encrypt or decrypt
            (depending on the operation mode that was specified in the call to
            <c>engineInit</c>) more data.</para>
          <para>Note: if any exception is thrown, this cipher object may need to
            be reset before it can be used again.</para>
          <para>Subclasses should consider overriding this method if they can
            process ByteBuffers more efficiently than byte arrays.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineDoFinal(java.nio.ByteBuffer,%20java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineDoFinal(java.nio.ByteBuffer, java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the same
             object.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EngineDoFinal (input As Byte(), inputOffset As Integer, inputLen As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EngineDoFinal(cli::array &lt;System::Byte&gt; ^ input, int inputOffset, int inputLen);" />
      <MemberSignature Language="C#" Value="protected abstract byte[]? EngineDoFinal (byte[]? input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineDoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineDoFinal(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineDoFinal : byte[] * int * int -&gt; byte[]" Usage="cipherSpi.EngineDoFinal (input, inputOffset, inputLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineDoFinal", "([BII)[B", "GetEngineDoFinal_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineDoFinal", "([BII)[B", "GetEngineDoFinal_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer</param>
        <param name="inputOffset">the offset in <c>input</c> where the input
            starts</param>
        <param name="inputLen">the input length</param>
        <summary>Encrypts or decrypts data in a single-part operation,
            or finishes a multiple-part operation.</summary>
        <returns>the new buffer with the result</returns>
        <remarks>
          <para>Encrypts or decrypts data in a single-part operation,
            or finishes a multiple-part operation.
            The data is encrypted or decrypted, depending on how this cipher was
            initialized.</para>
          <para>The first <c>inputLen</c> bytes in the <c>input</c>
            buffer, starting at <c>inputOffset</c> inclusive, and any input
            bytes that may have been buffered during a previous <c>update</c>
            operation, are processed, with padding (if requested) being applied.
            If an AEAD mode such as GCM/CCM is being used, the authentication
            tag is appended in the case of encryption, or verified in the
            case of decryption.
            The result is stored in a new buffer.</para>
          <para>Upon finishing, this method resets this cipher object to the state
            it was in when previously initialized via a call to
            <c>engineInit</c>.
            That is, the object is reset and available to encrypt or decrypt
            (depending on the operation mode that was specified in the call to
            <c>engineInit</c>) more data.</para>
          <para>Note: if any exception is thrown, this cipher object may need to
            be reset before it can be used again.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineDoFinal(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineDoFinal(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EngineDoFinal (input As Byte(), inputOffset As Integer, inputLen As Integer, output As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract int EngineDoFinal(cli::array &lt;System::Byte&gt; ^ input, int inputOffset, int inputLen, cli::array &lt;System::Byte&gt; ^ output, int outputOffset);" />
      <MemberSignature Language="C#" Value="protected abstract int EngineDoFinal (byte[]? input, int inputOffset, int inputLen, byte[]? output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineDoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineDoFinal(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineDoFinal : byte[] * int * int * byte[] * int -&gt; int" Usage="cipherSpi.EngineDoFinal (input, inputOffset, inputLen, output, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineDoFinal", "([BII[BI)I", "GetEngineDoFinal_arrayBIIarrayBIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineDoFinal", "([BII[BI)I", "GetEngineDoFinal_arrayBIIarrayBIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer</param>
        <param name="inputOffset">the offset in <c>input</c> where the input
            starts</param>
        <param name="inputLen">the input length</param>
        <param name="output">the buffer for the result</param>
        <param name="outputOffset">the offset in <c>output</c> where the result
            is stored</param>
        <summary>Encrypts or decrypts data in a single-part operation,
            or finishes a multiple-part operation.</summary>
        <returns>the number of bytes stored in <c>output</c></returns>
        <remarks>
          <para>Encrypts or decrypts data in a single-part operation,
            or finishes a multiple-part operation.
            The data is encrypted or decrypted, depending on how this cipher was
            initialized.</para>
          <para>The first <c>inputLen</c> bytes in the <c>input</c>
            buffer, starting at <c>inputOffset</c> inclusive, and any input
            bytes that may have been buffered during a previous <c>update</c>
            operation, are processed, with padding (if requested) being applied.
            If an AEAD mode such as GCM/CCM is being used, the authentication
            tag is appended in the case of encryption, or verified in the
            case of decryption.
            The result is stored in the <c>output</c> buffer, starting at
            <c>outputOffset</c> inclusive.</para>
          <para>If the <c>output</c> buffer is too small to hold the result,
            a <c>ShortBufferException</c> is thrown.</para>
          <para>Upon finishing, this method resets this cipher object to the state
            it was in when previously initialized via a call to
            <c>engineInit</c>.
            That is, the object is reset and available to encrypt or decrypt
            (depending on the operation mode that was specified in the call to
            <c>engineInit</c>) more data.</para>
          <para>Note: if any exception is thrown, this cipher object may need to
            be reset before it can be used again.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineDoFinal(byte[],%20int,%20int,%20byte[],%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineDoFinal(byte[], int, int, byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetBlockSize">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EngineGetBlockSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract int EngineGetBlockSize();" />
      <MemberSignature Language="C#" Value="protected abstract int EngineGetBlockSize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetBlockSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetBlockSize" />
      <MemberSignature Language="F#" Value="abstract member EngineGetBlockSize : unit -&gt; int" Usage="cipherSpi.EngineGetBlockSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGetBlockSize", "()I", "GetEngineGetBlockSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGetBlockSize", "()I", "GetEngineGetBlockSizeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the block size (in bytes).</summary>
        <returns>the block size (in bytes), or 0 if the underlying algorithm is
            not a block cipher</returns>
        <remarks>
          <para>Returns the block size (in bytes).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineGetBlockSize()" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineGetBlockSize()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetIV">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EngineGetIV () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EngineGetIV();" />
      <MemberSignature Language="C#" Value="protected abstract byte[]? EngineGetIV ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineGetIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetIV" />
      <MemberSignature Language="F#" Value="abstract member EngineGetIV : unit -&gt; byte[]" Usage="cipherSpi.EngineGetIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGetIV", "()[B", "GetEngineGetIVHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGetIV", "()[B", "GetEngineGetIVHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the initialization vector (IV) in a new buffer.</summary>
        <returns>the initialization vector in a new buffer, or null if the
            underlying algorithm does not use an IV, or if the IV has not yet
            been set.</returns>
        <remarks>
          <para>Returns the initialization vector (IV) in a new buffer.</para>
          <para>This is useful in the context of password-based encryption or
            decryption, where the IV is derived from a user-provided passphrase.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineGetIV()" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineGetIV()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetKeySize">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EngineGetKeySize (key As IKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int EngineGetKeySize(Java::Security::IKey ^ key);" />
      <MemberSignature Language="C#" Value="protected virtual int EngineGetKeySize (Java.Security.IKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetKeySize(class Java.Security.IKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetKeySize(Java.Security.IKey)" />
      <MemberSignature Language="F#" Value="abstract member EngineGetKeySize : Java.Security.IKey -&gt; int&#xA;override this.EngineGetKeySize : Java.Security.IKey -&gt; int" Usage="cipherSpi.EngineGetKeySize key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGetKeySize", "(Ljava/security/Key;)I", "GetEngineGetKeySize_Ljava_security_Key_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGetKeySize", "(Ljava/security/Key;)I", "GetEngineGetKeySize_Ljava_security_Key_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key object.</param>
        <summary>Returns the key size of the given key object in bits.</summary>
        <returns>the key size of the given key object.</returns>
        <remarks>
          <para>Returns the key size of the given key object in bits.</para>
          <para>This concrete method has been added to this previously-defined
            abstract class. It throws an <c>UnsupportedOperationException</c>
            if it is not overridden by the provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineGetKeySize(java.security.Key)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineGetKeySize(java.security.Key)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the size of the key cannot be determined by this
             implementation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetOutputSize">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EngineGetOutputSize (inputLen As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract int EngineGetOutputSize(int inputLen);" />
      <MemberSignature Language="C#" Value="protected abstract int EngineGetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetOutputSize(int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetOutputSize(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineGetOutputSize : int -&gt; int" Usage="cipherSpi.EngineGetOutputSize inputLen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGetOutputSize", "(I)I", "GetEngineGetOutputSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGetOutputSize", "(I)I", "GetEngineGetOutputSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the input length (in bytes)</param>
        <summary>Returns the length in bytes that an output buffer would
            need to be in order to hold the result of the next <c>update</c>
            or <c>doFinal</c> operation, given the input length
            <c>inputLen</c> (in bytes).</summary>
        <returns>the required output buffer size (in bytes)</returns>
        <remarks>
          <para>Returns the length in bytes that an output buffer would
            need to be in order to hold the result of the next <c>update</c>
            or <c>doFinal</c> operation, given the input length
            <c>inputLen</c> (in bytes).</para>
          <para>This call takes into account any unprocessed (buffered) data from a
            previous <c>update</c> call, padding, and AEAD tagging.</para>
          <para>The actual output length of the next <c>update</c> or
            <c>doFinal</c> call may be smaller than the length returned by
            this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineGetOutputSize(int)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineGetOutputSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetParameters">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EngineGetParameters () As AlgorithmParameters" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Java::Security::AlgorithmParameters ^ EngineGetParameters();" />
      <MemberSignature Language="C#" Value="protected abstract Java.Security.AlgorithmParameters? EngineGetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.AlgorithmParameters EngineGetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetParameters" />
      <MemberSignature Language="F#" Value="abstract member EngineGetParameters : unit -&gt; Java.Security.AlgorithmParameters" Usage="cipherSpi.EngineGetParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGetParameters", "()Ljava/security/AlgorithmParameters;", "GetEngineGetParametersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGetParameters", "()Ljava/security/AlgorithmParameters;", "GetEngineGetParametersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.AlgorithmParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the parameters used with this cipher.</summary>
        <returns>the parameters used with this cipher, or null if this cipher
            does not use any parameters.</returns>
        <remarks>
          <para>Returns the parameters used with this cipher.</para>
          <para>The returned parameters may be the same that were used to initialize
            this cipher, or may contain a combination of default and random
            parameter values used by the underlying cipher implementation if this
            cipher requires algorithm parameters but was not initialized with any.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineGetParameters()" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineGetParameters()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EngineInit (opmode As Integer, key As IKey, random As SecureRandom)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EngineInit(int opmode, Java::Security::IKey ^ key, Java::Security::SecureRandom ^ random);" />
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey? key, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineInit(System.Int32,Java.Security.IKey,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : int * Java.Security.IKey * Java.Security.SecureRandom -&gt; unit" Usage="cipherSpi.EngineInit (opmode, key, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_SecureRandom_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_SecureRandom_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation mode of this cipher (this is one of
            the following:
            <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>,
            <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>)</param>
        <param name="key">the encryption key</param>
        <param name="random">the source of randomness</param>
        <summary>Initializes this cipher with a key and a source
            of randomness.</summary>
        <remarks>
          <para>Initializes this cipher with a key and a source
            of randomness.</para>
          <para>The cipher is initialized for one of the following four operations:
            encryption, decryption, key wrapping or key unwrapping, depending on
            the value of <c>opmode</c>.</para>
          <para>If this cipher requires any algorithm parameters that cannot be
            derived from the given <c>key</c>, the underlying cipher
            implementation is supposed to generate the required parameters itself
            (using provider-specific default or random values) if it is being
            initialized for encryption or key wrapping, and raise an
            <c>InvalidKeyException</c> if it is being
            initialized for decryption or key unwrapping.
            The generated parameters can be retrieved using
            <c>#engineGetParameters() engineGetParameters</c> or
            <c>#engineGetIV() engineGetIV</c> (if the parameter is an IV).</para>
          <para>If this cipher requires algorithm parameters that cannot be
            derived from the input parameters, and there are no reasonable
            provider-specific default values, initialization will
            necessarily fail.</para>
          <para>If this cipher (including its underlying feedback or padding scheme)
            requires any random bytes (e.g., for parameter generation), it will get
            them from <c>random</c>.</para>
          <para>Note that when a Cipher object is initialized, it loses all
            previously-acquired state. In other words, initializing a Cipher is
            equivalent to creating a new instance of that Cipher and initializing
            it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineInit(int,%20java.security.Key,%20java.security.SecureRandom)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineInit(int, java.security.Key, java.security.SecureRandom)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EngineInit (opmode As Integer, key As IKey, params As AlgorithmParameters, random As SecureRandom)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EngineInit(int opmode, Java::Security::IKey ^ key, Java::Security::AlgorithmParameters ^ params, Java::Security::SecureRandom ^ random);" />
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey? key, Java.Security.AlgorithmParameters? params, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineInit(System.Int32,Java.Security.IKey,Java.Security.AlgorithmParameters,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : int * Java.Security.IKey * Java.Security.AlgorithmParameters * Java.Security.SecureRandom -&gt; unit" Usage="cipherSpi.EngineInit (opmode, key, params, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_AlgorithmParameters_Ljava_security_SecureRandom_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_AlgorithmParameters_Ljava_security_SecureRandom_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation mode of this cipher (this is one of
            the following:
            <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>,
            <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>)</param>
        <param name="key">the encryption key</param>
        <param name="params">the algorithm parameters</param>
        <param name="random">the source of randomness</param>
        <summary>Initializes this cipher with a key, a set of
            algorithm parameters, and a source of randomness.</summary>
        <remarks>
          <para>Initializes this cipher with a key, a set of
            algorithm parameters, and a source of randomness.</para>
          <para>The cipher is initialized for one of the following four operations:
            encryption, decryption, key wrapping or key unwrapping, depending on
            the value of <c>opmode</c>.</para>
          <para>If this cipher requires any algorithm parameters and
            <c>params</c> is null, the underlying cipher implementation is
            supposed to generate the required parameters itself (using
            provider-specific default or random values) if it is being
            initialized for encryption or key wrapping, and raise an
            <c>InvalidAlgorithmParameterException</c> if it is being
            initialized for decryption or key unwrapping.
            The generated parameters can be retrieved using
            <c>#engineGetParameters() engineGetParameters</c> or
            <c>#engineGetIV() engineGetIV</c> (if the parameter is an IV).</para>
          <para>If this cipher requires algorithm parameters that cannot be
            derived from the input parameters, and there are no reasonable
            provider-specific default values, initialization will
            necessarily fail.</para>
          <para>If this cipher (including its underlying feedback or padding scheme)
            requires any random bytes (e.g., for parameter generation), it will get
            them from <c>random</c>.</para>
          <para>Note that when a Cipher object is initialized, it loses all
            previously-acquired state. In other words, initializing a Cipher is
            equivalent to creating a new instance of that Cipher and initializing
            it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineInit(int,%20java.security.Key,%20java.security.AlgorithmParameters,%20java.security.SecureRandom)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EngineInit (opmode As Integer, key As IKey, params As IAlgorithmParameterSpec, random As SecureRandom)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EngineInit(int opmode, Java::Security::IKey ^ key, Java::Security::Spec::IAlgorithmParameterSpec ^ params, Java::Security::SecureRandom ^ random);" />
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey? key, Java.Security.Spec.IAlgorithmParameterSpec? params, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineInit(System.Int32,Java.Security.IKey,Java.Security.Spec.IAlgorithmParameterSpec,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : int * Java.Security.IKey * Java.Security.Spec.IAlgorithmParameterSpec * Java.Security.SecureRandom -&gt; unit" Usage="cipherSpi.EngineInit (opmode, key, params, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Ljava_security_SecureRandom_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Ljava_security_SecureRandom_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation mode of this cipher (this is one of
            the following:
            <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>,
            <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>)</param>
        <param name="key">the encryption key</param>
        <param name="params">the algorithm parameters</param>
        <param name="random">the source of randomness</param>
        <summary>Initializes this cipher with a key, a set of
            algorithm parameters, and a source of randomness.</summary>
        <remarks>
          <para>Initializes this cipher with a key, a set of
            algorithm parameters, and a source of randomness.</para>
          <para>The cipher is initialized for one of the following four operations:
            encryption, decryption, key wrapping or key unwrapping, depending on
            the value of <c>opmode</c>.</para>
          <para>If this cipher requires any algorithm parameters and
            <c>params</c> is null, the underlying cipher implementation is
            supposed to generate the required parameters itself (using
            provider-specific default or random values) if it is being
            initialized for encryption or key wrapping, and raise an
            <c>InvalidAlgorithmParameterException</c> if it is being
            initialized for decryption or key unwrapping.
            The generated parameters can be retrieved using
            <c>#engineGetParameters() engineGetParameters</c> or
            <c>#engineGetIV() engineGetIV</c> (if the parameter is an IV).</para>
          <para>If this cipher requires algorithm parameters that cannot be
            derived from the input parameters, and there are no reasonable
            provider-specific default values, initialization will
            necessarily fail.</para>
          <para>If this cipher (including its underlying feedback or padding scheme)
            requires any random bytes (e.g., for parameter generation), it will get
            them from <c>random</c>.</para>
          <para>Note that when a Cipher object is initialized, it loses all
            previously-acquired state. In other words, initializing a Cipher is
            equivalent to creating a new instance of that Cipher and initializing
            it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineInit(int,%20java.security.Key,%20java.security.spec.AlgorithmParameterSpec,%20java.security.SecureRandom)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineSetMode">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EngineSetMode (mode As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EngineSetMode(System::String ^ mode);" />
      <MemberSignature Language="C#" Value="protected abstract void EngineSetMode (string? mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineSetMode(string mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineSetMode(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EngineSetMode : string -&gt; unit" Usage="cipherSpi.EngineSetMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineSetMode", "(Ljava/lang/String;)V", "GetEngineSetMode_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineSetMode", "(Ljava/lang/String;)V", "GetEngineSetMode_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mode">the cipher mode</param>
        <summary>Sets the mode of this cipher.</summary>
        <remarks>
          <para>Sets the mode of this cipher.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineSetMode(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineSetMode(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified cipher mode is not supported by this
             provider.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineSetPadding">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EngineSetPadding (padding As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EngineSetPadding(System::String ^ padding);" />
      <MemberSignature Language="C#" Value="protected abstract void EngineSetPadding (string? padding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineSetPadding(string padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineSetPadding(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EngineSetPadding : string -&gt; unit" Usage="cipherSpi.EngineSetPadding padding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineSetPadding", "(Ljava/lang/String;)V", "GetEngineSetPadding_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineSetPadding", "(Ljava/lang/String;)V", "GetEngineSetPadding_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="padding">the padding mechanism</param>
        <summary>Sets the padding mechanism of this cipher.</summary>
        <remarks>
          <para>Sets the padding mechanism of this cipher.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineSetPadding(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineSetPadding(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the specified padding method is not supported by this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUnwrap">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EngineUnwrap (wrappedKey As Byte(), wrappedKeyAlgorithm As String, wrappedKeyType As Integer) As IKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Security::IKey ^ EngineUnwrap(cli::array &lt;System::Byte&gt; ^ wrappedKey, System::String ^ wrappedKeyAlgorithm, int wrappedKeyType);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Security.IKey? EngineUnwrap (byte[]? wrappedKey, string? wrappedKeyAlgorithm, int wrappedKeyType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.IKey EngineUnwrap(unsigned int8[] wrappedKey, string wrappedKeyAlgorithm, int32 wrappedKeyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUnwrap(System.Byte[],System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineUnwrap : byte[] * string * int -&gt; Java.Security.IKey&#xA;override this.EngineUnwrap : byte[] * string * int -&gt; Java.Security.IKey" Usage="cipherSpi.EngineUnwrap (wrappedKey, wrappedKeyAlgorithm, wrappedKeyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineUnwrap", "([BLjava/lang/String;I)Ljava/security/Key;", "GetEngineUnwrap_arrayBLjava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineUnwrap", "([BLjava/lang/String;I)Ljava/security/Key;", "GetEngineUnwrap_arrayBLjava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrappedKey" Type="System.Byte[]" />
        <Parameter Name="wrappedKeyAlgorithm" Type="System.String" />
        <Parameter Name="wrappedKeyType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="wrappedKey">the key to be unwrapped.</param>
        <param name="wrappedKeyAlgorithm">the algorithm associated with the wrapped
            key.</param>
        <param name="wrappedKeyType">the type of the wrapped key. This is one of
            <c>SECRET_KEY</c>, <c>PRIVATE_KEY</c>, or
            <c>PUBLIC_KEY</c>.</param>
        <summary>Unwrap a previously wrapped key.</summary>
        <returns>the unwrapped key.</returns>
        <remarks>
          <para>Unwrap a previously wrapped key.</para>
          <para>This concrete method has been added to this previously-defined
            abstract class. (For backwards compatibility, it cannot be abstract.)
            It may be overridden by a provider to unwrap a previously wrapped key.
            Such an override is expected to throw an InvalidKeyException if
            the given wrapped key cannot be unwrapped.
            If this method is not overridden, it always throws an
            UnsupportedOperationException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineUnwrap(byte[],%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineUnwrap(byte[], java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the <c>wrappedKey</c> cannot be unwrapped to a key of
             type <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider can be found that can create a key of type
             <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EngineUpdate (input As ByteBuffer, output As ByteBuffer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int EngineUpdate(Java::Nio::ByteBuffer ^ input, Java::Nio::ByteBuffer ^ output);" />
      <MemberSignature Language="C#" Value="protected virtual int EngineUpdate (Java.Nio.ByteBuffer? input, Java.Nio.ByteBuffer? output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineUpdate(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdate(Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdate : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int&#xA;override this.EngineUpdate : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int" Usage="cipherSpi.EngineUpdate (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineUpdate", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "GetEngineUpdate_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineUpdate", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "GetEngineUpdate_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input ByteBuffer</param>
        <param name="output">the output ByteByffer</param>
        <summary>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</summary>
        <returns>the number of bytes stored in <c>output</c></returns>
        <remarks>
          <para>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</para>
          <para>All <c>input.remaining()</c> bytes starting at
            <c>input.position()</c> are processed. The result is stored
            in the output buffer.
            Upon return, the input buffer's position will be equal
            to its limit; its limit will not have changed. The output buffer's
            position will have advanced by n, where n is the value returned
            by this method; the output buffer's limit will not have changed.</para>
          <para>If <c>output.remaining()</c> bytes are insufficient to
            hold the result, a <c>ShortBufferException</c> is thrown.</para>
          <para>Subclasses should consider overriding this method if they can
            process ByteBuffers more efficiently than byte arrays.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineUpdate(java.nio.ByteBuffer,%20java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineUpdate(java.nio.ByteBuffer, java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EngineUpdate (input As Byte(), inputOffset As Integer, inputLen As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EngineUpdate(cli::array &lt;System::Byte&gt; ^ input, int inputOffset, int inputLen);" />
      <MemberSignature Language="C#" Value="protected abstract byte[]? EngineUpdate (byte[]? input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineUpdate(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdate(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdate : byte[] * int * int -&gt; byte[]" Usage="cipherSpi.EngineUpdate (input, inputOffset, inputLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineUpdate", "([BII)[B", "GetEngineUpdate_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineUpdate", "([BII)[B", "GetEngineUpdate_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer</param>
        <param name="inputOffset">the offset in <c>input</c> where the input
            starts</param>
        <param name="inputLen">the input length</param>
        <summary>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</summary>
        <returns>the new buffer with the result, or null if the underlying
            cipher is a block cipher and the input data is too short to result in a
            new block.</returns>
        <remarks>
          <para>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</para>
          <para>The first <c>inputLen</c> bytes in the <c>input</c>
            buffer, starting at <c>inputOffset</c> inclusive, are processed,
            and the result is stored in a new buffer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineUpdate(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineUpdate(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is null, or if <c>inputOffset</c> and <c>inputLen</c> do not specify a valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EngineUpdate (input As Byte(), inputOffset As Integer, inputLen As Integer, output As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract int EngineUpdate(cli::array &lt;System::Byte&gt; ^ input, int inputOffset, int inputLen, cli::array &lt;System::Byte&gt; ^ output, int outputOffset);" />
      <MemberSignature Language="C#" Value="protected abstract int EngineUpdate (byte[]? input, int inputOffset, int inputLen, byte[]? output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineUpdate(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdate(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdate : byte[] * int * int * byte[] * int -&gt; int" Usage="cipherSpi.EngineUpdate (input, inputOffset, inputLen, output, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineUpdate", "([BII[BI)I", "GetEngineUpdate_arrayBIIarrayBIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineUpdate", "([BII[BI)I", "GetEngineUpdate_arrayBIIarrayBIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer</param>
        <param name="inputOffset">the offset in <c>input</c> where the input
            starts</param>
        <param name="inputLen">the input length</param>
        <param name="output">the buffer for the result</param>
        <param name="outputOffset">the offset in <c>output</c> where the result
            is stored</param>
        <summary>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</summary>
        <returns>the number of bytes stored in <c>output</c></returns>
        <remarks>
          <para>Continues a multiple-part encryption or decryption operation
            (depending on how this cipher was initialized), processing another data
            part.</para>
          <para>The first <c>inputLen</c> bytes in the <c>input</c>
            buffer, starting at <c>inputOffset</c> inclusive, are processed,
            and the result is stored in the <c>output</c> buffer, starting at
            <c>outputOffset</c> inclusive.</para>
          <para>If the <c>output</c> buffer is too small to hold the result,
            a <c>ShortBufferException</c> is thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineUpdate(byte[],%20int,%20int,%20byte[],%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineUpdate(byte[], int, int, byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdateAAD">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EngineUpdateAAD (src As ByteBuffer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EngineUpdateAAD(Java::Nio::ByteBuffer ^ src);" />
      <MemberSignature Language="C#" Value="protected virtual void EngineUpdateAAD (Java.Nio.ByteBuffer? src);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineUpdateAAD(class Java.Nio.ByteBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdateAAD(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdateAAD : Java.Nio.ByteBuffer -&gt; unit&#xA;override this.EngineUpdateAAD : Java.Nio.ByteBuffer -&gt; unit" Usage="cipherSpi.EngineUpdateAAD src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineUpdateAAD", "(Ljava/nio/ByteBuffer;)V", "GetEngineUpdateAAD_Ljava_nio_ByteBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineUpdateAAD", "(Ljava/nio/ByteBuffer;)V", "GetEngineUpdateAAD_Ljava_nio_ByteBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="src">the buffer containing the AAD</param>
        <summary>Continues a multi-part update of the Additional Authentication
            Data (AAD).</summary>
        <remarks>
          <para>Continues a multi-part update of the Additional Authentication
            Data (AAD).</para>
          <para>Calls to this method provide AAD to the cipher when operating in
            modes such as AEAD (GCM/CCM).  If this cipher is operating in
            either GCM or CCM mode, all AAD must be supplied before beginning
            operations on the ciphertext (via the <c>update</c> and <c>doFinal</c> methods).</para>
          <para>All <c>src.remaining()</c> bytes starting at
            <c>src.position()</c> are processed.
            Upon return, the input buffer's position will be equal
            to its limit; its limit will not have changed.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineUpdateAAD(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineUpdateAAD(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdateAAD">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EngineUpdateAAD (src As Byte(), offset As Integer, len As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EngineUpdateAAD(cli::array &lt;System::Byte&gt; ^ src, int offset, int len);" />
      <MemberSignature Language="C#" Value="protected virtual void EngineUpdateAAD (byte[]? src, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineUpdateAAD(unsigned int8[] src, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdateAAD(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdateAAD : byte[] * int * int -&gt; unit&#xA;override this.EngineUpdateAAD : byte[] * int * int -&gt; unit" Usage="cipherSpi.EngineUpdateAAD (src, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineUpdateAAD", "([BII)V", "GetEngineUpdateAAD_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineUpdateAAD", "([BII)V", "GetEngineUpdateAAD_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">the buffer containing the AAD</param>
        <param name="offset">the offset in <c>src</c> where the AAD input starts</param>
        <param name="len">the number of AAD bytes</param>
        <summary>Continues a multi-part update of the Additional Authentication
            Data (AAD), using a subset of the provided buffer.</summary>
        <remarks>
          <para>Continues a multi-part update of the Additional Authentication
            Data (AAD), using a subset of the provided buffer.</para>
          <para>Calls to this method provide AAD to the cipher when operating in
            modes such as AEAD (GCM/CCM).  If this cipher is operating in
            either GCM or CCM mode, all AAD must be supplied before beginning
            operations on the ciphertext (via the <c>update</c> and <c>doFinal</c> methods).</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineUpdateAAD(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineUpdateAAD(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>input</c> is <c>null</c>, or if <c>inputOffset</c> and
             <c>inputLen</c> do not specify a valid chunk in the input
             buffer.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the cipher does not support AEAD</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineWrap">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EngineWrap (key As IKey) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ EngineWrap(Java::Security::IKey ^ key);" />
      <MemberSignature Language="C#" Value="protected virtual byte[]? EngineWrap (Java.Security.IKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineWrap(class Java.Security.IKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineWrap(Java.Security.IKey)" />
      <MemberSignature Language="F#" Value="abstract member EngineWrap : Java.Security.IKey -&gt; byte[]&#xA;override this.EngineWrap : Java.Security.IKey -&gt; byte[]" Usage="cipherSpi.EngineWrap key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineWrap", "(Ljava/security/Key;)[B", "GetEngineWrap_Ljava_security_Key_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineWrap", "(Ljava/security/Key;)[B", "GetEngineWrap_Ljava_security_Key_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to be wrapped.</param>
        <summary>Wrap a key.</summary>
        <returns>the wrapped key.</returns>
        <remarks>
          <para>Wrap a key.</para>
          <para>This concrete method has been added to this previously-defined
            abstract class. (For backwards compatibility, it cannot be abstract.)
            It may be overridden by a provider to wrap a key.
            Such an override is expected to throw an IllegalBlockSizeException or
            InvalidKeyException (under the specified circumstances),
            if the given key cannot be wrapped.
            If this method is not overridden, it always throws an
            UnsupportedOperationException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/CipherSpi#engineWrap(java.security.Key)" title="Reference documentation">Java documentation for <code>javax.crypto.CipherSpi.engineWrap(java.security.Key)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if this cipher instance cannot wrap this key.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.CipherSpi.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Crypto.CipherSpi.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.CipherSpi.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Crypto.CipherSpi.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.CipherSpi.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Crypto.CipherSpi.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
