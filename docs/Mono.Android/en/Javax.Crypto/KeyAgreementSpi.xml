<Type Name="KeyAgreementSpi" FullName="Javax.Crypto.KeyAgreementSpi">
  <TypeSignature Language="C#" Value="public abstract class KeyAgreementSpi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit KeyAgreementSpi extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Crypto.KeyAgreementSpi" />
  <TypeSignature Language="F#" Value="type KeyAgreementSpi = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/crypto/KeyAgreementSpi", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/crypto/KeyAgreementSpi", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class defines the <i>Service Provider Interface</i> (&lt;b&gt;SPI&lt;/b&gt;)
            for the <c>KeyAgreement</c> class.</summary>
    <remarks>
      <para>This class defines the <i>Service Provider Interface</i> (&lt;b&gt;SPI&lt;/b&gt;)
            for the <c>KeyAgreement</c> class.
            All the abstract methods in this class must be implemented by each
            cryptographic service provider who wishes to supply the implementation
            of a particular key agreement algorithm.</para>
      <para>The keys involved in establishing a shared secret are created by one
            of the
            key generators (<c>KeyPairGenerator</c> or
            <c>KeyGenerator</c>), a <c>KeyFactory</c>, or as a result from
            an intermediate phase of the key agreement protocol
            (<c>#engineDoPhase(java.security.Key, boolean) engineDoPhase</c>).</para>
      <para>For each of the correspondents in the key exchange,
            <c>engineDoPhase</c>
            needs to be called. For example, if the key exchange is with one other
            party, <c>engineDoPhase</c> needs to be called once, with the
            <c>lastPhase</c> flag set to <c>true</c>.
            If the key exchange is
            with two other parties, <c>engineDoPhase</c> needs to be called twice,
            the first time setting the <c>lastPhase</c> flag to
            <c>false</c>, and the second time setting it to <c>true</c>.
            There may be any number of parties involved in a key exchange.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/crypto/KeyAgreementSpi" title="Reference documentation">Java documentation for <code>javax.crypto.KeyAgreementSpi</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyAgreementSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>KeyAgreementSpi</c> instance.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyAgreementSpi (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.KeyAgreementSpi : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Crypto.KeyAgreementSpi" Usage="new Javax.Crypto.KeyAgreementSpi (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineDoPhase">
      <MemberSignature Language="C#" Value="protected abstract Java.Security.IKey? EngineDoPhase (Java.Security.IKey? key, bool lastPhase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.IKey EngineDoPhase(class Java.Security.IKey key, bool lastPhase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineDoPhase(Java.Security.IKey,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EngineDoPhase : Java.Security.IKey * bool -&gt; Java.Security.IKey" Usage="keyAgreementSpi.EngineDoPhase (key, lastPhase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineDoPhase", "(Ljava/security/Key;Z)Ljava/security/Key;", "GetEngineDoPhase_Ljava_security_Key_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineDoPhase", "(Ljava/security/Key;Z)Ljava/security/Key;", "GetEngineDoPhase_Ljava_security_Key_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="lastPhase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">the key for this phase. For example, in the case of
            Diffie-Hellman between 2 parties, this would be the other party's
            Diffie-Hellman public key.</param>
        <param name="lastPhase">flag which indicates whether or not this is the last
            phase of this key agreement.</param>
        <summary>Executes the next phase of this key agreement with the given
            key that was received from one of the other parties involved in this key
            agreement.</summary>
        <returns>the (intermediate) key resulting from this phase, or null if
            this phase does not yield a key</returns>
        <remarks>
          <para>Executes the next phase of this key agreement with the given
            key that was received from one of the other parties involved in this key
            agreement.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/KeyAgreementSpi#engineDoPhase(java.security.Key,%20boolean)" title="Reference documentation">Java documentation for <code>javax.crypto.KeyAgreementSpi.engineDoPhase(java.security.Key, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used in this key agreement or
             this phase,</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this instance has not been initialized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGenerateSecret">
      <MemberSignature Language="C#" Value="protected abstract byte[]? EngineGenerateSecret ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineGenerateSecret() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineGenerateSecret" />
      <MemberSignature Language="F#" Value="abstract member EngineGenerateSecret : unit -&gt; byte[]" Usage="keyAgreementSpi.EngineGenerateSecret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGenerateSecret", "()[B", "GetEngineGenerateSecretHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGenerateSecret", "()[B", "GetEngineGenerateSecretHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates the shared secret and returns it in a new buffer.</summary>
        <returns>the new buffer with the shared secret</returns>
        <remarks>
          <para>Generates the shared secret and returns it in a new buffer.</para>
          <para>This method resets this <c>KeyAgreementSpi</c> object,
            so that it
            can be reused for further key agreements. Unless this key agreement is
            reinitialized with one of the <c>engineInit</c> methods, the same
            private information and algorithm parameters will be used for
            subsequent key agreements.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/KeyAgreementSpi#engineGenerateSecret()" title="Reference documentation">Java documentation for <code>javax.crypto.KeyAgreementSpi.engineGenerateSecret()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGenerateSecret">
      <MemberSignature Language="C#" Value="protected abstract Javax.Crypto.ISecretKey? EngineGenerateSecret (string? algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Javax.Crypto.ISecretKey EngineGenerateSecret(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineGenerateSecret(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EngineGenerateSecret : string -&gt; Javax.Crypto.ISecretKey" Usage="keyAgreementSpi.EngineGenerateSecret algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGenerateSecret", "(Ljava/lang/String;)Ljavax/crypto/SecretKey;", "GetEngineGenerateSecret_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGenerateSecret", "(Ljava/lang/String;)Ljavax/crypto/SecretKey;", "GetEngineGenerateSecret_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ISecretKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the requested secret key algorithm</param>
        <summary>Creates the shared secret and returns it as a secret key object
            of the requested algorithm type.</summary>
        <returns>the shared secret key</returns>
        <remarks>
          <para>Creates the shared secret and returns it as a secret key object
            of the requested algorithm type.</para>
          <para>This method resets this <c>KeyAgreementSpi</c> object,
            so that it
            can be reused for further key agreements. Unless this key agreement is
            reinitialized with one of the <c>engineInit</c> methods, the same
            private information and algorithm parameters will be used for
            subsequent key agreements.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/KeyAgreementSpi#engineGenerateSecret(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.KeyAgreementSpi.engineGenerateSecret(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm for the secret key does not
             exists.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if a <c>SecretKey</c> with the specified algorithm cannot be
             created using the generated shared secret.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGenerateSecret">
      <MemberSignature Language="C#" Value="protected abstract int EngineGenerateSecret (byte[]? sharedSecret, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGenerateSecret(unsigned int8[] sharedSecret, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineGenerateSecret(System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineGenerateSecret : byte[] * int -&gt; int" Usage="keyAgreementSpi.EngineGenerateSecret (sharedSecret, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGenerateSecret", "([BI)I", "GetEngineGenerateSecret_arrayBIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGenerateSecret", "([BI)I", "GetEngineGenerateSecret_arrayBIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharedSecret" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sharedSecret">the buffer for the shared secret</param>
        <param name="offset">the offset in <c>sharedSecret</c> where the
            shared secret will be stored</param>
        <summary>Generates the shared secret, and places it into the buffer
            <c>sharedSecret</c>, beginning at <c>offset</c> inclusive.</summary>
        <returns>the number of bytes placed into <c>sharedSecret</c></returns>
        <remarks>
          <para>Generates the shared secret, and places it into the buffer
            <c>sharedSecret</c>, beginning at <c>offset</c> inclusive.</para>
          <para>If the <c>sharedSecret</c> buffer is too small to hold the
            result, a <c>ShortBufferException</c> is thrown.
            In this case, this call should be repeated with a larger output buffer.</para>
          <para>This method resets this <c>KeyAgreementSpi</c> object,
            so that it
            can be reused for further key agreements. Unless this key agreement is
            reinitialized with one of the <c>engineInit</c> methods, the same
            private information and algorithm parameters will be used for
            subsequent key agreements.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/KeyAgreementSpi#engineGenerateSecret(byte[],%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.KeyAgreementSpi.engineGenerateSecret(byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.</exception>
        <exception cref="T:Javax.Crypto.ShortBufferException">if the specified buffer is too small for the shared secret.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey? key, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineInit(Java.Security.IKey,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : Java.Security.IKey * Java.Security.SecureRandom -&gt; unit" Usage="keyAgreementSpi.EngineInit (key, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/SecureRandom;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_SecureRandom_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/SecureRandom;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_SecureRandom_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="key">the party's private information. For example, in the case
            of the Diffie-Hellman key agreement, this would be the party's own
            Diffie-Hellman private key.</param>
        <param name="random">the source of randomness</param>
        <summary>Initializes this key agreement with the given key and source of
            randomness.</summary>
        <remarks>
          <para>Initializes this key agreement with the given key and source of
            randomness. The given key is required to contain all the algorithm
            parameters required for this key agreement.</para>
          <para>If the key agreement algorithm requires random bytes, it gets them
            from the given source of randomness, <c>random</c>.
            However, if the underlying
            algorithm implementation does not require any random bytes,
            <c>random</c> is ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/KeyAgreementSpi#engineInit(java.security.Key,%20java.security.SecureRandom)" title="Reference documentation">Java documentation for <code>javax.crypto.KeyAgreementSpi.engineInit(java.security.Key, java.security.SecureRandom)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this key
             agreement.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey? key, Java.Security.Spec.IAlgorithmParameterSpec? params, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineInit(Java.Security.IKey,Java.Security.Spec.IAlgorithmParameterSpec,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : Java.Security.IKey * Java.Security.Spec.IAlgorithmParameterSpec * Java.Security.SecureRandom -&gt; unit" Usage="keyAgreementSpi.EngineInit (key, params, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Ljava_security_SecureRandom_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Ljava_security_SecureRandom_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="key">the party's private information. For example, in the case
            of the Diffie-Hellman key agreement, this would be the party's own
            Diffie-Hellman private key.</param>
        <param name="params">the key agreement parameters</param>
        <param name="random">the source of randomness</param>
        <summary>Initializes this key agreement with the given key, set of
            algorithm parameters, and source of randomness.</summary>
        <remarks>
          <para>Initializes this key agreement with the given key, set of
            algorithm parameters, and source of randomness.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/KeyAgreementSpi#engineInit(java.security.Key,%20java.security.spec.AlgorithmParameterSpec,%20java.security.SecureRandom)" title="Reference documentation">Java documentation for <code>javax.crypto.KeyAgreementSpi.engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this key
             agreement.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are invalid for this key
             agreement algorithm.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.KeyAgreementSpi.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Crypto.KeyAgreementSpi.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.KeyAgreementSpi.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Crypto.KeyAgreementSpi.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.KeyAgreementSpi.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Crypto.KeyAgreementSpi.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
