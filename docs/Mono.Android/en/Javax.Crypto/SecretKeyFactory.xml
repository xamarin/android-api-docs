<Type Name="SecretKeyFactory" FullName="Javax.Crypto.SecretKeyFactory">
  <TypeSignature Language="VB.NET" Value="Public Class SecretKeyFactory&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecretKeyFactory : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class SecretKeyFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecretKeyFactory extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Crypto.SecretKeyFactory" />
  <TypeSignature Language="F#" Value="type SecretKeyFactory = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/crypto/SecretKeyFactory", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/crypto/SecretKeyFactory", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class represents a factory for secret keys.</summary>
    <remarks>
      <para>This class represents a factory for secret keys.</para>
      <para>Key factories are used to convert <i>keys</i> (opaque
            cryptographic keys of type <c>Key</c>) into <i>key specifications</i>
            (transparent representations of the underlying key material), and vice
            versa.
            Secret key factories operate only on secret (symmetric) keys.</para>
      <para>Key factories are bi-directional, i.e., they allow to build an opaque
            key object from a given key specification (key material), or to retrieve
            the underlying key material of a key object in a suitable format.</para>
      <para>Application developers should refer to their provider's documentation
            to find out which key specifications are supported by the
            <c>#generateSecret(java.security.spec.KeySpec) generateSecret</c> and
            <c>#getKeySpec(javax.crypto.SecretKey, java.lang.Class) getKeySpec</c>
            methods.
            For example, the DES secret-key factory supplied by the "SunJCE" provider
            supports <c>DESKeySpec</c> as a transparent representation of DES
            keys, and that provider's secret-key factory for Triple DES keys supports
            <c>DESedeKeySpec</c> as a transparent representation of Triple DES
            keys.</para>
      <para>Android provides the following <c>SecretKeyFactory</c> algorithms:
            &lt;table&gt;
              &lt;thead&gt;
                &lt;tr&gt;
                  &lt;th&gt;Algorithm&lt;/th&gt;
                  &lt;th&gt;Supported API Levels&lt;/th&gt;
                &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody&gt;
                &lt;tr&gt;
                  &lt;td&gt;AES&lt;/td&gt;
                  &lt;td&gt;23+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;DES&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;DESede&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;HmacSHA1&lt;/td&gt;
                  &lt;td&gt;23+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;HmacSHA224&lt;/td&gt;
                  &lt;td&gt;23+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;HmacSHA256&lt;/td&gt;
                  &lt;td&gt;23+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;HmacSHA384&lt;/td&gt;
                  &lt;td&gt;23+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;HmacSHA512&lt;/td&gt;
                  &lt;td&gt;23+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA1&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA1AndAES_128&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA1AndAES_256&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA224AndAES_128&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA224AndAES_256&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA256AndAES_128&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA256AndAES_256&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA384AndAES_128&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA384AndAES_256&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA512AndAES_128&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithHmacSHA512AndAES_256&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithMD5AND128BITAES-CBC-OPENSSL&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithMD5AND192BITAES-CBC-OPENSSL&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithMD5AND256BITAES-CBC-OPENSSL&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithMD5ANDDES&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithMD5ANDRC2&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHA1ANDDES&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHA1ANDRC2&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHA256AND128BITAES-CBC-BC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHA256AND192BITAES-CBC-BC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHA256AND256BITAES-CBC-BC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND128BITAES-CBC-BC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND128BITRC2-CBC&lt;/td&gt;
                  &lt;td&gt;10+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND128BITRC4&lt;/td&gt;
                  &lt;td&gt;10+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND192BITAES-CBC-BC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND2-KEYTRIPLEDES-CBC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND256BITAES-CBC-BC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND3-KEYTRIPLEDES-CBC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND40BITRC2-CBC&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAAND40BITRC4&lt;/td&gt;
                  &lt;td&gt;10+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBEwithSHAANDTWOFISH-CBC&lt;/td&gt;
                  &lt;td&gt;10+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBKDF2withHmacSHA1&lt;/td&gt;
                  &lt;td&gt;10+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBKDF2withHmacSHA1And8BIT&lt;/td&gt;
                  &lt;td&gt;19+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBKDF2withHmacSHA224&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBKDF2withHmacSHA256&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBKDF2withHmacSHA384&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;PBKDF2withHmacSHA512&lt;/td&gt;
                  &lt;td&gt;26+&lt;/td&gt;
                &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
            
            These algorithms are described in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#SecretKeyFactory">
            SecretKeyFactory section</see> of the
            Java Cryptography Architecture Standard Algorithm Name Documentation.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecretKeyFactory(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected SecretKeyFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.SecretKeyFactory.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.SecretKeyFactory : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Crypto.SecretKeyFactory" Usage="new Javax.Crypto.SecretKeyFactory (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (keyFacSpi As SecretKeyFactorySpi, provider As Provider, algorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecretKeyFactory(Javax::Crypto::SecretKeyFactorySpi ^ keyFacSpi, Java::Security::Provider ^ provider, System::String ^ algorithm);" />
      <MemberSignature Language="C#" Value="protected SecretKeyFactory (Javax.Crypto.SecretKeyFactorySpi? keyFacSpi, Java.Security.Provider? provider, string? algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Javax.Crypto.SecretKeyFactorySpi keyFacSpi, class Java.Security.Provider provider, string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.SecretKeyFactory.#ctor(Javax.Crypto.SecretKeyFactorySpi,Java.Security.Provider,System.String)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.SecretKeyFactory : Javax.Crypto.SecretKeyFactorySpi * Java.Security.Provider * string -&gt; Javax.Crypto.SecretKeyFactory" Usage="new Javax.Crypto.SecretKeyFactory (keyFacSpi, provider, algorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljavax/crypto/SecretKeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljavax/crypto/SecretKeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyFacSpi" Type="Javax.Crypto.SecretKeyFactorySpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyFacSpi">the delegate</param>
        <param name="provider">the provider</param>
        <param name="algorithm">the secret-key algorithm</param>
        <summary>Creates a SecretKeyFactory object.</summary>
        <remarks>
          <para>Creates a SecretKeyFactory object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#SecretKeyFactory(javax.crypto.SecretKeyFactorySpi,%20java.security.Provider,%20java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.SecretKeyFactory(javax.crypto.SecretKeyFactorySpi, java.security.Provider, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Algorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Algorithm { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.SecretKeyFactory.Algorithm" />
      <MemberSignature Language="F#" Value="member this.Algorithm : string" Usage="Javax.Crypto.SecretKeyFactory.Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the algorithm name of this <c>SecretKeyFactory</c> object.</summary>
        <value>the algorithm name of this <c>SecretKeyFactory</c>
            object.</value>
        <remarks>
          <para>Returns the algorithm name of this <c>SecretKeyFactory</c> object.</para>
          <para>This is the same name that was specified in one of the
            <c>getInstance</c> calls that created this
            <c>SecretKeyFactory</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#getAlgorithm()" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.getAlgorithm()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSecret">
      <MemberSignature Language="VB.NET" Value="Public Function GenerateSecret (keySpec As IKeySpec) As ISecretKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Javax::Crypto::ISecretKey ^ GenerateSecret(Java::Security::Spec::IKeySpec ^ keySpec);" />
      <MemberSignature Language="C#" Value="public Javax.Crypto.ISecretKey? GenerateSecret (Java.Security.Spec.IKeySpec? keySpec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Javax.Crypto.ISecretKey GenerateSecret(class Java.Security.Spec.IKeySpec keySpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.SecretKeyFactory.GenerateSecret(Java.Security.Spec.IKeySpec)" />
      <MemberSignature Language="F#" Value="member this.GenerateSecret : Java.Security.Spec.IKeySpec -&gt; Javax.Crypto.ISecretKey" Usage="secretKeyFactory.GenerateSecret keySpec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateSecret", "(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateSecret", "(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ISecretKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keySpec" Type="Java.Security.Spec.IKeySpec" />
      </Parameters>
      <Docs>
        <param name="keySpec">the specification (key material) of the secret key</param>
        <summary>Generates a <c>SecretKey</c> object from the provided key
            specification (key material).</summary>
        <returns>the secret key</returns>
        <remarks>
          <para>Generates a <c>SecretKey</c> object from the provided key
            specification (key material).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#generateSecret(java.security.spec.KeySpec)" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.generateSecret(java.security.spec.KeySpec)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Spec.InvalidKeySpecException">if the specified key specification cannot be used to generate
             a secret key.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (algorithm As String) As SecretKeyFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Javax::Crypto::SecretKeyFactory ^ GetInstance(System::String ^ algorithm);" />
      <MemberSignature Language="C#" Value="public static Javax.Crypto.SecretKeyFactory? GetInstance (string? algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.SecretKeyFactory GetInstance(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.SecretKeyFactory.GetInstance(System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; Javax.Crypto.SecretKeyFactory" Usage="Javax.Crypto.SecretKeyFactory.GetInstance algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.SecretKeyFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the standard name of the requested secret-key
            algorithm.
            See the SecretKeyFactory section in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#SecretKeyFactory">
            Java Cryptography Architecture Standard Algorithm Name Documentation</see>
            for information about standard algorithm names.</param>
        <summary>Returns a <c>SecretKeyFactory</c> object that converts
            secret keys of the specified algorithm.</summary>
        <returns>the new <c>SecretKeyFactory</c> object.</returns>
        <remarks>
          <para>Returns a <c>SecretKeyFactory</c> object that converts
            secret keys of the specified algorithm.</para>
          <para>This method traverses the list of registered security Providers,
            starting with the most preferred Provider.
            A new SecretKeyFactory object encapsulating the
            SecretKeyFactorySpi implementation from the first
            Provider that supports the specified algorithm is returned.</para>
          <para>Note that the list of registered providers may be retrieved via
            the <c>Security#getProviders() Security.getProviders()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#getInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.getInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no installed provider can provide the requested algorithm.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the specified algorithm is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (algorithm As String, provider As Provider) As SecretKeyFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Javax::Crypto::SecretKeyFactory ^ GetInstance(System::String ^ algorithm, Java::Security::Provider ^ provider);" />
      <MemberSignature Language="C#" Value="public static Javax.Crypto.SecretKeyFactory? GetInstance (string? algorithm, Java.Security.Provider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.SecretKeyFactory GetInstance(string algorithm, class Java.Security.Provider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.SecretKeyFactory.GetInstance(System.String,Java.Security.Provider)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Java.Security.Provider -&gt; Javax.Crypto.SecretKeyFactory" Usage="Javax.Crypto.SecretKeyFactory.GetInstance (algorithm, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/SecretKeyFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/SecretKeyFactory;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.SecretKeyFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="algorithm">the standard name of the requested secret-key
            algorithm.
            See the SecretKeyFactory section in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#SecretKeyFactory">
            Java Cryptography Architecture Standard Algorithm Name Documentation</see>
            for information about standard algorithm names.</param>
        <param name="provider">the provider.</param>
        <summary>Returns a <c>SecretKeyFactory</c> object that converts
            secret keys of the specified algorithm.</summary>
        <returns>the new <c>SecretKeyFactory</c> object.</returns>
        <remarks>
          <para>Returns a <c>SecretKeyFactory</c> object that converts
            secret keys of the specified algorithm.</para>
          <para>A new SecretKeyFactory object encapsulating the
            SecretKeyFactorySpi implementation from the specified Provider
            object is returned.  Note that the specified Provider object
            does not have to be registered in the provider list.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#getInstance(java.lang.String,%20java.security.Provider)" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.getInstance(java.lang.String, java.security.Provider)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider cannot provider the requested
             algorithm.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified provider is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">is the specified algorithm name is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (algorithm As String, provider As String) As SecretKeyFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Javax::Crypto::SecretKeyFactory ^ GetInstance(System::String ^ algorithm, System::String ^ provider);" />
      <MemberSignature Language="C#" Value="public static Javax.Crypto.SecretKeyFactory? GetInstance (string? algorithm, string? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.SecretKeyFactory GetInstance(string algorithm, string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.SecretKeyFactory.GetInstance(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * string -&gt; Javax.Crypto.SecretKeyFactory" Usage="Javax.Crypto.SecretKeyFactory.GetInstance (algorithm, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.SecretKeyFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the standard name of the requested secret-key
            algorithm.
            See the SecretKeyFactory section in the <see href="https://developer.android.com//../technotes/guides/security/StandardNames.html#SecretKeyFactory">
            Java Cryptography Architecture Standard Algorithm Name Documentation</see>
            for information about standard algorithm names.</param>
        <param name="provider">the name of the provider.</param>
        <summary>Returns a <c>SecretKeyFactory</c> object that converts
            secret keys of the specified algorithm.</summary>
        <returns>the new <c>SecretKeyFactory</c> object.</returns>
        <remarks>
          <para>Returns a <c>SecretKeyFactory</c> object that converts
            secret keys of the specified algorithm.</para>
          <para>A new SecretKeyFactory object encapsulating the
            SecretKeyFactorySpi implementation from the specified provider
            is returned.  The specified provider must be registered
            in the security provider list.</para>
          <para>Note that the list of registered providers may be retrieved via
            the <c>Security#getProviders() Security.getProviders()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#getInstance(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.getInstance(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider cannot provide the requested
             algorithm.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider does not exist.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified provider name is <c>null</c> or empty.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeySpec">
      <MemberSignature Language="VB.NET" Value="Public Function GetKeySpec (key As ISecretKey, keySpec As Class) As IKeySpec" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Security::Spec::IKeySpec ^ GetKeySpec(Javax::Crypto::ISecretKey ^ key, Java::Lang::Class ^ keySpec);" />
      <MemberSignature Language="C#" Value="public Java.Security.Spec.IKeySpec? GetKeySpec (Javax.Crypto.ISecretKey? key, Java.Lang.Class? keySpec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.Spec.IKeySpec GetKeySpec(class Javax.Crypto.ISecretKey key, class Java.Lang.Class keySpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.SecretKeyFactory.GetKeySpec(Javax.Crypto.ISecretKey,Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="member this.GetKeySpec : Javax.Crypto.ISecretKey * Java.Lang.Class -&gt; Java.Security.Spec.IKeySpec" Usage="secretKeyFactory.GetKeySpec (key, keySpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getKeySpec", "(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getKeySpec", "(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Spec.IKeySpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Javax.Crypto.ISecretKey" />
        <Parameter Name="keySpec" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="key">the key</param>
        <param name="keySpec">the requested format in which the key material shall be
            returned</param>
        <summary>Returns a specification (key material) of the given key object
            in the requested format.</summary>
        <returns>the underlying key specification (key material) in the
            requested format</returns>
        <remarks>
          <para>Returns a specification (key material) of the given key object
            in the requested format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#getKeySpec(javax.crypto.SecretKey,%20java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.getKeySpec(javax.crypto.SecretKey, java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Spec.InvalidKeySpecException">if the specified secret key cannot be transformed into the
             requested key specification.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.SecretKeyFactory.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Crypto.SecretKeyFactory.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As Provider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Java::Security::Provider ^ Provider { Java::Security::Provider ^ get(); };" />
      <MemberSignature Language="C#" Value="public Java.Security.Provider? Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.SecretKeyFactory.Provider" />
      <MemberSignature Language="F#" Value="member this.Provider : Java.Security.Provider" Usage="Javax.Crypto.SecretKeyFactory.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this <c>SecretKeyFactory</c> object.</summary>
        <value>the provider of this <c>SecretKeyFactory</c> object</value>
        <remarks>
          <para>Returns the provider of this <c>SecretKeyFactory</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#getProvider()" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.getProvider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.SecretKeyFactory.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Crypto.SecretKeyFactory.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.SecretKeyFactory.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Crypto.SecretKeyFactory.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateKey">
      <MemberSignature Language="VB.NET" Value="Public Function TranslateKey (key As ISecretKey) As ISecretKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Javax::Crypto::ISecretKey ^ TranslateKey(Javax::Crypto::ISecretKey ^ key);" />
      <MemberSignature Language="C#" Value="public Javax.Crypto.ISecretKey? TranslateKey (Javax.Crypto.ISecretKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Javax.Crypto.ISecretKey TranslateKey(class Javax.Crypto.ISecretKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.SecretKeyFactory.TranslateKey(Javax.Crypto.ISecretKey)" />
      <MemberSignature Language="F#" Value="member this.TranslateKey : Javax.Crypto.ISecretKey -&gt; Javax.Crypto.ISecretKey" Usage="secretKeyFactory.TranslateKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translateKey", "(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translateKey", "(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ISecretKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Javax.Crypto.ISecretKey" />
      </Parameters>
      <Docs>
        <param name="key">the key whose provider is unknown or untrusted</param>
        <summary>Translates a key object, whose provider may be unknown or potentially
            untrusted, into a corresponding key object of this secret-key factory.</summary>
        <returns>the translated key</returns>
        <remarks>
          <para>Translates a key object, whose provider may be unknown or potentially
            untrusted, into a corresponding key object of this secret-key factory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/SecretKeyFactory#translateKey(javax.crypto.SecretKey)" title="Reference documentation">Java documentation for <code>javax.crypto.SecretKeyFactory.translateKey(javax.crypto.SecretKey)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be translated using this key
             factory.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
