<Type Name="ExemptionMechanismSpi" FullName="Javax.Crypto.ExemptionMechanismSpi">
  <TypeSignature Language="C#" Value="public abstract class ExemptionMechanismSpi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExemptionMechanismSpi extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Crypto.ExemptionMechanismSpi" />
  <TypeSignature Language="F#" Value="type ExemptionMechanismSpi = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/crypto/ExemptionMechanismSpi", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/crypto/ExemptionMechanismSpi", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class defines the <i>Service Provider Interface</i> (&lt;b&gt;SPI&lt;/b&gt;)
            for the &lt;code&gt;ExemptionMechanism&lt;/code&gt; class.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi" title="Reference documentation">Java documentation for <code>javax.crypto.ExemptionMechanismSpi</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExemptionMechanismSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.ExemptionMechanismSpi.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>ExemptionMechanismSpi</c> instance.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExemptionMechanismSpi (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.ExemptionMechanismSpi.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.ExemptionMechanismSpi : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Crypto.ExemptionMechanismSpi" Usage="new Javax.Crypto.ExemptionMechanismSpi (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineGenExemptionBlob">
      <MemberSignature Language="C#" Value="protected abstract byte[]? EngineGenExemptionBlob ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineGenExemptionBlob() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.ExemptionMechanismSpi.EngineGenExemptionBlob" />
      <MemberSignature Language="F#" Value="abstract member EngineGenExemptionBlob : unit -&gt; byte[]" Usage="exemptionMechanismSpi.EngineGenExemptionBlob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGenExemptionBlob", "()[B", "GetEngineGenExemptionBlobHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGenExemptionBlob", "()[B", "GetEngineGenExemptionBlobHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates the exemption mechanism key blob.</summary>
        <returns>the new buffer with the result key blob.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi#engineGenExemptionBlob()" title="Reference documentation">Java documentation for <code>javax.crypto.ExemptionMechanismSpi.engineGenExemptionBlob()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during generation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGenExemptionBlob">
      <MemberSignature Language="C#" Value="protected abstract int EngineGenExemptionBlob (byte[]? output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGenExemptionBlob(unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.ExemptionMechanismSpi.EngineGenExemptionBlob(System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineGenExemptionBlob : byte[] * int -&gt; int" Usage="exemptionMechanismSpi.EngineGenExemptionBlob (output, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGenExemptionBlob", "([BI)I", "GetEngineGenExemptionBlob_arrayBIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGenExemptionBlob", "([BI)I", "GetEngineGenExemptionBlob_arrayBIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">the buffer for the result</param>
        <param name="outputOffset">the offset in &lt;code&gt;output&lt;/code&gt; where the result
            is stored</param>
        <summary>Generates the exemption mechanism key blob, and stores the result in
            the &lt;code&gt;output&lt;/code&gt; buffer, starting at &lt;code&gt;outputOffset&lt;/code&gt;
            inclusive.</summary>
        <returns>the number of bytes stored in &lt;code&gt;output&lt;/code&gt;</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi#engineGenExemptionBlob(byte[],%20int)" title="Reference documentation">Java documentation for <code>javax.crypto.ExemptionMechanismSpi.engineGenExemptionBlob(byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the provided buffer is too small for the result key blob.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during generation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetOutputSize">
      <MemberSignature Language="C#" Value="protected abstract int EngineGetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetOutputSize(int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.ExemptionMechanismSpi.EngineGetOutputSize(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineGetOutputSize : int -&gt; int" Usage="exemptionMechanismSpi.EngineGetOutputSize inputLen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineGetOutputSize", "(I)I", "GetEngineGetOutputSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineGetOutputSize", "(I)I", "GetEngineGetOutputSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the input length (in bytes)</param>
        <summary>Returns the length in bytes that an output buffer would need to be in
            order to hold the result of the next
            <c>#engineGenExemptionBlob(byte[], int) engineGenExemptionBlob</c>
            operation, given the input length &lt;code&gt;inputLen&lt;/code&gt; (in bytes).</summary>
        <returns>the required output buffer size (in bytes)</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi#engineGetOutputSize(int)" title="Reference documentation">Java documentation for <code>javax.crypto.ExemptionMechanismSpi.engineGetOutputSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.ExemptionMechanismSpi.EngineInit(Java.Security.IKey)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : Java.Security.IKey -&gt; unit" Usage="exemptionMechanismSpi.EngineInit key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineInit", "(Ljava/security/Key;)V", "GetEngineInit_Ljava_security_Key_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineInit", "(Ljava/security/Key;)V", "GetEngineInit_Ljava_security_Key_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key for this exemption mechanism</param>
        <summary>Initializes this exemption mechanism with a key.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi#engineInit(java.security.Key)" title="Reference documentation">Java documentation for <code>javax.crypto.ExemptionMechanismSpi.engineInit(java.security.Key)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey? key, Java.Security.AlgorithmParameters? params);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key, class Java.Security.AlgorithmParameters params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.ExemptionMechanismSpi.EngineInit(Java.Security.IKey,Java.Security.AlgorithmParameters)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : Java.Security.IKey * Java.Security.AlgorithmParameters -&gt; unit" Usage="exemptionMechanismSpi.EngineInit (key, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_AlgorithmParameters_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_AlgorithmParameters_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
      </Parameters>
      <Docs>
        <param name="key">the key for this exemption mechanism</param>
        <param name="params">the algorithm parameters</param>
        <summary>Initializes this exemption mechanism with a key and a set of algorithm
            parameters.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi#engineInit(java.security.Key,%20java.security.AlgorithmParameters)" title="Reference documentation">Java documentation for <code>javax.crypto.ExemptionMechanismSpi.engineInit(java.security.Key, java.security.AlgorithmParameters)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the parameters cannot be used to initialize this
             mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey? key, Java.Security.Spec.IAlgorithmParameterSpec? params);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.ExemptionMechanismSpi.EngineInit(Java.Security.IKey,Java.Security.Spec.IAlgorithmParameterSpec)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : Java.Security.IKey * Java.Security.Spec.IAlgorithmParameterSpec -&gt; unit" Usage="exemptionMechanismSpi.EngineInit (key, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="key">the key for this exemption mechanism</param>
        <param name="params">the algorithm parameters</param>
        <summary>Initializes this exemption mechanism with a key and a set of algorithm
            parameters.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi#engineInit(java.security.Key,%20java.security.spec.AlgorithmParameterSpec)" title="Reference documentation">Java documentation for <code>javax.crypto.ExemptionMechanismSpi.engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">the the parameters cannot be used to initialize this
             mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.ExemptionMechanismSpi.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Crypto.ExemptionMechanismSpi.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.ExemptionMechanismSpi.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Crypto.ExemptionMechanismSpi.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.ExemptionMechanismSpi.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Crypto.ExemptionMechanismSpi.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
