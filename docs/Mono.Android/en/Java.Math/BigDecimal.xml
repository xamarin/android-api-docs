<Type Name="BigDecimal" FullName="Java.Math.BigDecimal">
  <TypeSignature Language="VB.NET" Value="Public Class BigDecimal&#xA;Inherits Number&#xA;Implements IComparable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BigDecimal : Java::Lang::Number, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IComparable" />
  <TypeSignature Language="C#" Value="public class BigDecimal : Java.Lang.Number, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BigDecimal extends Java.Lang.Number implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Lang.IComparable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Math.BigDecimal" />
  <TypeSignature Language="F#" Value="type BigDecimal = class&#xA;    inherit Number&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Number</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/math/BigDecimal", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/math/BigDecimal", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Immutable, arbitrary-precision signed decimal numbers.</summary>
    <remarks>
      <para>Immutable, arbitrary-precision signed decimal numbers.  A <c>BigDecimal</c> consists of an arbitrary precision integer
            <i>#unscaledValue() unscaled value</i> and a 32-bit
            integer <i>#scale() scale</i>.  If zero or positive,
            the scale is the number of digits to the right of the decimal
            point.  If negative, the unscaled value of the number is multiplied
            by ten to the power of the negation of the scale.  The value of the
            number represented by the <c>BigDecimal</c> is therefore
            <c>(unscaledValue &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)</c>.</para>
      <para>The <c>BigDecimal</c> class provides operations for
            arithmetic, scale manipulation, rounding, comparison, hashing, and
            format conversion.  The <c>#toString</c> method provides a
            canonical representation of a <c>BigDecimal</c>.</para>
      <para>The <c>BigDecimal</c> class gives its user complete control
            over rounding behavior.  If no rounding mode is specified and the
            exact result cannot be represented, an <c>ArithmeticException</c>
            is thrown; otherwise, calculations can be carried out to a chosen
            precision and rounding mode by supplying an appropriate <c>MathContext</c> object to the operation.  In either case, eight
            &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding.
            Using the integer fields in this class (such as <c>#ROUND_HALF_UP</c>) to represent rounding mode is deprecated; the
            enumeration values of the <c>RoundingMode</c><c>enum</c>, (such
            as <c>RoundingMode#HALF_UP</c>) should be used instead.</para>
      <para>When a <c>MathContext</c> object is supplied with a precision
            setting of 0 (for example, <c>MathContext#UNLIMITED</c>),
            arithmetic operations are exact, as are the arithmetic methods
            which take no <c>MathContext</c> object. As a corollary of
            computing the exact result, the rounding mode setting of a <c>MathContext</c> object with a precision setting of 0 is not used and
            thus irrelevant.  In the case of divide, the exact quotient could
            have an infinitely long decimal expansion; for example, 1 divided
            by 3.  If the quotient has a nonterminating decimal expansion and
            the operation is specified to return an exact result, an <c>ArithmeticException</c> is thrown.  Otherwise, the exact result of the
            division is returned, as done for other operations.</para>
      <para>When the precision setting is not 0, the rules of <c>BigDecimal</c> arithmetic are broadly compatible with selected modes
            of operation of the arithmetic defined in ANSI X3.274-1996 and ANSI
            X3.274-1996/AM 1-2000 (section 7.4).  Unlike those standards,
            <c>BigDecimal</c> includes many rounding modes.  Any conflicts
            between these ANSI standards and the <c>BigDecimal</c>
            specification are resolved in favor of <c>BigDecimal</c>.</para>
      <para>Since the same numerical value can have different
            representations (with different scales), the rules of arithmetic
            and rounding must specify both the numerical result and the scale
            used in the result's representation.
            
            The different representations of the same numerical value are
            called members of the same <i>cohort</i>. The #compareTo(BigDecimal) natural order of <c>BigDecimal</c>
            considers members of the same cohort to be equal to each other. In
            contrast, the <c>#equals(Object) equals</c> method requires both the
            numerical value and representation to be the same for equality to
            hold. The results of methods like <c>#scale()</c> and <c>#unscaledValue()</c> will differ for numerically equal values with
            different representations.</para>
      <para>In general the rounding modes and precision setting determine
            how operations return results with a limited number of digits when
            the exact result has more digits (perhaps infinitely many in the
            case of division and square root) than the number of digits returned.
            
            First, the total number of digits to return is specified by the
            <c>MathContext</c>'s <c>precision</c> setting; this determines
            the result's <i>precision</i>.  The digit count starts from the
            leftmost nonzero digit of the exact result.  The rounding mode
            determines how any discarded trailing digits affect the returned
            result.</para>
      <para>For all arithmetic operators, the operation is carried out as
            though an exact intermediate result were first calculated and then
            rounded to the number of digits specified by the precision setting
            (if necessary), using the selected rounding mode.  If the exact
            result is not returned, some digit positions of the exact result
            are discarded.  When rounding increases the magnitude of the
            returned result, it is possible for a new digit position to be
            created by a carry propagating to a leading "9" digit.
            For example, rounding the value 999.9 to three digits rounding up
            would be numerically equal to one thousand, represented as
            100&amp;times;10&lt;sup&gt;1&lt;/sup&gt;.  In such cases, the new "1" is
            the leading digit position of the returned result.</para>
      <para>For methods and constructors with a <c>MathContext</c>
            parameter, if the result is inexact but the rounding mode is <c>RoundingMode#UNNECESSARY UNNECESSARY</c>, an <c>ArithmeticException</c> will be thrown.</para>
      <para>Besides a logical exact result, each arithmetic operation has a
            preferred scale for representing a result.  The preferred
            scale for each operation is listed in the table below.
            
            &lt;table class="striped" style="text-align:left"&gt;
            &lt;caption&gt;Preferred Scales for Results of Arithmetic Operations
            &lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;&lt;th scope="col"&gt;Operation&lt;/th&gt;&lt;th scope="col"&gt;Preferred Scale of Result&lt;/th&gt;&lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Add&lt;/th&gt;&lt;td&gt;max(addend.scale(), augend.scale())&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Subtract&lt;/th&gt;&lt;td&gt;max(minuend.scale(), subtrahend.scale())&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Multiply&lt;/th&gt;&lt;td&gt;multiplier.scale() + multiplicand.scale()&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Divide&lt;/th&gt;&lt;td&gt;dividend.scale() - divisor.scale()&lt;/td&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Square root&lt;/th&gt;&lt;td&gt;radicand.scale()/2&lt;/td&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;
            
            These scales are the ones used by the methods which return exact
            arithmetic results; except that an exact divide may have to use a
            larger scale since the exact result may have more digits.  For
            example, <c>1/32</c> is <c>0.03125</c>.</para>
      <para>Before rounding, the scale of the logical exact intermediate
            result is the preferred scale for that operation.  If the exact
            numerical result cannot be represented in <c>precision</c>
            digits, rounding selects the set of digits to return and the scale
            of the result is reduced from the scale of the intermediate result
            to the least scale which can represent the <c>precision</c>
            digits actually returned.  If the exact result can be represented
            with at most <c>precision</c> digits, the representation
            of the result with the scale closest to the preferred scale is
            returned.  In particular, an exactly representable quotient may be
            represented in fewer than <c>precision</c> digits by removing
            trailing zeros and decreasing the scale.  For example, rounding to
            three digits using the RoundingMode#FLOOR floor
            rounding mode, &lt;br&gt;
            
            <c>19/100 = 0.19   // integer=19,  scale=2</c>&lt;br&gt;
            
            but&lt;br&gt;
            
            <c>21/110 = 0.190  // integer=190, scale=3</c>&lt;br&gt;</para>
      <para>Note that for add, subtract, and multiply, the reduction in
            scale will equal the number of digit positions of the exact result
            which are discarded. If the rounding causes a carry propagation to
            create a new high-order digit position, an additional digit of the
            result is discarded than when no new digit position is created.</para>
      <para>Other methods may have slightly different rounding semantics.
            For example, the result of the <c>pow</c> method using the
            #pow(int, MathContext) specified algorithm can
            occasionally differ from the rounded mathematical result by more
            than one unit in the last place, one <i>#ulp() ulp</i>.</para>
      <para>Two types of operations are provided for manipulating the scale
            of a <c>BigDecimal</c>: scaling/rounding operations and decimal
            point motion operations.  Scaling/rounding operations (<c>#setScale setScale</c> and <c>#round round</c>) return a
            <c>BigDecimal</c> whose value is approximately (or exactly) equal
            to that of the operand, but whose scale or precision is the
            specified value; that is, they increase or decrease the precision
            of the stored number with minimal effect on its value.  Decimal
            point motion operations (<c>#movePointLeft movePointLeft</c> and
            <c>#movePointRight movePointRight</c>) return a
            <c>BigDecimal</c> created from the operand by moving the decimal
            point a specified distance in the specified direction.</para>
      <para>As a 32-bit integer, the set of values for the scale is large,
            but bounded. If the scale of a result would exceed the range of a
            32-bit integer, either by overflow or underflow, the operation may
            throw an <c>ArithmeticException</c>.</para>
      <para>For the sake of brevity and clarity, pseudo-code is used
            throughout the descriptions of <c>BigDecimal</c> methods.  The
            pseudo-code expression <c>(i + j)</c> is shorthand for "a
            <c>BigDecimal</c> whose value is that of the <c>BigDecimal</c><c>i</c> added to that of the <c>BigDecimal</c><c>j</c>." The pseudo-code expression <c>(i == j)</c> is
            shorthand for "<c>true</c> if and only if the
            <c>BigDecimal</c><c>i</c> represents the same value as the
            <c>BigDecimal</c><c>j</c>." Other pseudo-code expressions
            are interpreted similarly.  Square brackets are used to represent
            the particular <c>BigInteger</c> and scale pair defining a
            <c>BigDecimal</c> value; for example [19, 2] is the
            <c>BigDecimal</c> numerically equal to 0.19 having a scale of 2.</para>
      <para>All methods and constructors for this class throw
            <c>NullPointerException</c> when passed a <c>null</c> object
            reference for any input parameter.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/math/BigDecimal" title="Reference documentation">Java documentation for <code>java.math.BigDecimal</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As BigInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(Java::Math::BigInteger ^ val);" />
      <MemberSignature Language="C#" Value="public BigDecimal (Java.Math.BigInteger? val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Math.BigInteger val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(Java.Math.BigInteger)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : Java.Math.BigInteger -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal val" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>BigInteger</c> value to be converted to
                       <c>BigDecimal</c>.</param>
        <summary>Translates a <c>BigInteger</c> into a <c>BigDecimal</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(java.math.BigInteger)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(java.math.BigInteger)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (in As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(cli::array &lt;char&gt; ^ in);" />
      <MemberSignature Language="C#" Value="public BigDecimal (char[]? in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Char[])" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : char[] -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal in" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([C)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([C)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="in">
          <c>char</c> array that is the source of characters.</param>
        <summary>Translates a character array representation of a
            <c>BigDecimal</c> into a <c>BigDecimal</c>, accepting the
            same sequence of characters as the <c>#BigDecimal(String)</c>
            constructor.</summary>
        <remarks>
          <para>Translates a character array representation of a
            <c>BigDecimal</c> into a <c>BigDecimal</c>, accepting the
            same sequence of characters as the <c>#BigDecimal(String)</c>
            constructor.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(.*char[])" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(.*char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>in</c> does not contain a valid string representation
             of a big decimal.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(double val);" />
      <MemberSignature Language="C#" Value="public BigDecimal (double val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Double)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : double -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal val" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(D)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(D)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>double</c> value to be converted to
                   <c>BigDecimal</c>.</param>
        <summary>Translates a <c>double</c> into a <c>BigDecimal</c> which
            is the exact decimal representation of the <c>double</c>'s
            binary floating-point value.</summary>
        <remarks>
          <para>Translates a <c>double</c> into a <c>BigDecimal</c> which
            is the exact decimal representation of the <c>double</c>'s
            binary floating-point value.  The scale of the returned
            <c>BigDecimal</c> is the smallest value such that
            <c>(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)</c> is an integer.</para>
          <para>&lt;b&gt;Notes:&lt;/b&gt;
            &lt;ol&gt;
            &lt;li&gt;
            The results of this constructor can be somewhat unpredictable.
            One might assume that writing <c>new BigDecimal(0.1)</c> in
            Java creates a <c>BigDecimal</c> which is exactly equal to
            0.1 (an unscaled value of 1, with a scale of 1), but it is
            actually equal to
            0.1000000000000000055511151231257827021181583404541015625.
            This is because 0.1 cannot be represented exactly as a
            <c>double</c> (or, for that matter, as a binary fraction of
            any finite length).  Thus, the value that is being passed
            &lt;em&gt;in&lt;/em&gt; to the constructor is not exactly equal to 0.1,
            appearances notwithstanding.
            
            &lt;li&gt;
            The <c>String</c> constructor, on the other hand, is
            perfectly predictable: writing <c>new BigDecimal("0.1")</c>
            creates a <c>BigDecimal</c> which is &lt;em&gt;exactly&lt;/em&gt; equal to
            0.1, as one would expect.  Therefore, it is generally
            recommended that the #BigDecimal(String)
            String constructor be used in preference to this one.
            
            &lt;li&gt;
            When a <c>double</c> must be used as a source for a
            <c>BigDecimal</c>, note that this constructor provides an
            exact conversion; it does not give the same result as
            converting the <c>double</c> to a <c>String</c> using the
            <c>Double#toString(double)</c> method and then using the
            <c>#BigDecimal(String)</c> constructor.  To get that result,
            use the <c>static</c><c>#valueOf(double)</c> method.
            &lt;/ol&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(.*double)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(.*double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> is infinity or not a number.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(int val);" />
      <MemberSignature Language="C#" Value="public BigDecimal (int val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : int -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal val" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>int</c> value to be converted to
                       <c>BigDecimal</c>.</param>
        <summary>Translates an <c>int</c> into a <c>BigDecimal</c>.</summary>
        <remarks>
          <para>Translates an <c>int</c> into a <c>BigDecimal</c>.  The
            scale of the <c>BigDecimal</c> is zero.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(.*int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(.*int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(long val);" />
      <MemberSignature Language="C#" Value="public BigDecimal (long val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Int64)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : int64 -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal val" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>long</c> value to be converted to <c>BigDecimal</c>.</param>
        <summary>Translates a <c>long</c> into a <c>BigDecimal</c>.</summary>
        <remarks>
          <para>Translates a <c>long</c> into a <c>BigDecimal</c>.  The
            scale of the <c>BigDecimal</c> is zero.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(.*long)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(.*long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(System::String ^ val);" />
      <MemberSignature Language="C#" Value="public BigDecimal (string? val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : string -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal val" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">String representation of <c>BigDecimal</c>.</param>
        <summary>Translates the string representation of a <c>BigDecimal</c>
            into a <c>BigDecimal</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(java.lang.String)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> does not contain a valid string representation
             of a big decimal.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As BigInteger, mc As MathContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(Java::Math::BigInteger ^ val, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public BigDecimal (Java.Math.BigInteger? val, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Math.BigInteger val, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(Java.Math.BigInteger,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : Java.Math.BigInteger * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (val, mc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;Ljava/math/MathContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;Ljava/math/MathContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>BigInteger</c> value to be converted to
                       <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Translates a <c>BigInteger</c> into a <c>BigDecimal</c>
            rounding according to the context settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(java.math.BigInteger,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(java.math.BigInteger, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (unscaledVal As BigInteger, scale As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(Java::Math::BigInteger ^ unscaledVal, int scale);" />
      <MemberSignature Language="C#" Value="public BigDecimal (Java.Math.BigInteger? unscaledVal, int scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Math.BigInteger unscaledVal, int32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(Java.Math.BigInteger,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : Java.Math.BigInteger * int -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (unscaledVal, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="unscaledVal" Type="Java.Math.BigInteger" />
        <Parameter Name="scale" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unscaledVal">unscaled value of the <c>BigDecimal</c>.</param>
        <param name="scale">scale of the <c>BigDecimal</c>.</param>
        <summary>Translates a <c>BigInteger</c> unscaled value and an
            <c>int</c> scale into a <c>BigDecimal</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(java.math.BigInteger,%20int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(java.math.BigInteger, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>unscaledVal == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (in As Char(), mc As MathContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(cli::array &lt;char&gt; ^ in, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public BigDecimal (char[]? in, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] in, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Char[],Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : char[] * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (in, mc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([CLjava/math/MathContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([CLjava/math/MathContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.Char[]" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="in">
          <c>char</c> array that is the source of characters.</param>
        <param name="mc">the context to use.</param>
        <summary>Translates a character array representation of a
            <c>BigDecimal</c> into a <c>BigDecimal</c>, accepting the
            same sequence of characters as the <c>#BigDecimal(String)</c>
            constructor and with rounding according to the context
            settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(char[],%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(char[], java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>in</c> does not contain a valid string representation
             of a big decimal.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As Double, mc As MathContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(double val, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public BigDecimal (double val, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 val, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Double,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : double * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (val, mc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(DLjava/math/MathContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(DLjava/math/MathContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Double" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>double</c> value to be converted to
                    <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Translates a <c>double</c> into a <c>BigDecimal</c>, with
            rounding according to the context settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(double,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(double, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> is infinity or not a number.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As Integer, mc As MathContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(int val, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public BigDecimal (int val, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 val, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Int32,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : int * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (val, mc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(ILjava/math/MathContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(ILjava/math/MathContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Int32" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>int</c> value to be converted to <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Translates an <c>int</c> into a <c>BigDecimal</c>, with
            rounding according to the context settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(int,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(int, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>c.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As Long, mc As MathContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(long val, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public BigDecimal (long val, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 val, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Int64,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : int64 * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (val, mc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(JLjava/math/MathContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(JLjava/math/MathContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Int64" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>long</c> value to be converted to <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Translates a <c>long</c> into a <c>BigDecimal</c>, with
            rounding according to the context settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(long,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(long, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BigDecimal(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected BigDecimal (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (val As String, mc As MathContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(System::String ^ val, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public BigDecimal (string? val, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string val, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.String,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : string * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (val, mc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/math/MathContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/math/MathContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.String" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">string representation of a <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Translates the string representation of a <c>BigDecimal</c>
            into a <c>BigDecimal</c>, accepting the same strings as the
            <c>#BigDecimal(String)</c> constructor, with rounding
            according to the context settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(java.lang.String,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(java.lang.String, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> does not contain a valid string representation
             of a big decimal.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (unscaledVal As BigInteger, scale As Integer, mc As MathContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(Java::Math::BigInteger ^ unscaledVal, int scale, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public BigDecimal (Java.Math.BigInteger? unscaledVal, int scale, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Math.BigInteger unscaledVal, int32 scale, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(Java.Math.BigInteger,System.Int32,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : Java.Math.BigInteger * int * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (unscaledVal, scale, mc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;ILjava/math/MathContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;ILjava/math/MathContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="unscaledVal" Type="Java.Math.BigInteger" />
        <Parameter Name="scale" Type="System.Int32" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="unscaledVal">unscaled value of the <c>BigDecimal</c>.</param>
        <param name="scale">scale of the <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Translates a <c>BigInteger</c> unscaled value and an
            <c>int</c> scale into a <c>BigDecimal</c>, with rounding
            according to the context settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(java.math.BigInteger,%20int,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(java.math.BigInteger, int, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>unscaledVal == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (in As Char(), offset As Integer, len As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(cli::array &lt;char&gt; ^ in, int offset, int len);" />
      <MemberSignature Language="C#" Value="public BigDecimal (char[]? in, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] in, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : char[] * int * int -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (in, offset, len)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([CII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([CII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="in">
          <c>char</c> array that is the source of characters.</param>
        <param name="offset">first character in the array to inspect.</param>
        <param name="len">number of characters to consider.</param>
        <summary>Translates a character array representation of a
            <c>BigDecimal</c> into a <c>BigDecimal</c>, accepting the
            same sequence of characters as the <c>#BigDecimal(String)</c>
            constructor, while allowing a sub-array to be specified.</summary>
        <remarks>
          <para>Translates a character array representation of a
            <c>BigDecimal</c> into a <c>BigDecimal</c>, accepting the
            same sequence of characters as the <c>#BigDecimal(String)</c>
            constructor, while allowing a sub-array to be specified.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(.*char[],%20.*int,%20.*int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(.*char[], .*int, .*int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>offset = in.length</c>, or if <c>in</c> does not
             contain a valid string representation of a big decimal.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (in As Char(), offset As Integer, len As Integer, mc As MathContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigDecimal(cli::array &lt;char&gt; ^ in, int offset, int len, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public BigDecimal (char[]? in, int offset, int len, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] in, int32 offset, int32 len, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.#ctor(System.Char[],System.Int32,System.Int32,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="new Java.Math.BigDecimal : char[] * int * int * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="new Java.Math.BigDecimal (in, offset, len, mc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([CIILjava/math/MathContext;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([CIILjava/math/MathContext;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="in">
          <c>char</c> array that is the source of characters.</param>
        <param name="offset">first character in the array to inspect.</param>
        <param name="len">number of characters to consider.</param>
        <param name="mc">the context to use.</param>
        <summary>Translates a character array representation of a
            <c>BigDecimal</c> into a <c>BigDecimal</c>, accepting the
            same sequence of characters as the <c>#BigDecimal(String)</c>
            constructor, while allowing a sub-array to be specified and
            with rounding according to the context settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#BigDecimal(char[],%20int,%20int,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.BigDecimal(char[], int, int, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>offset = in.length</c>, or if <c>in</c> does not
             contain a valid string representation of a big decimal.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Abs () As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Abs();" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Abs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Abs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Abs" />
      <MemberSignature Language="F#" Value="abstract member Abs : unit -&gt; Java.Math.BigDecimal&#xA;override this.Abs : unit -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Abs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("abs", "()Ljava/math/BigDecimal;", "GetAbsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("abs", "()Ljava/math/BigDecimal;", "GetAbsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>BigDecimal</c> whose value is the absolute value
            of this <c>BigDecimal</c>, and whose scale is
            <c>this.scale()</c>.</summary>
        <returns>
          <c>abs(this)</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#abs()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.abs()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Abs (mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Abs(Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Abs (Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Abs(class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Abs(Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Abs : Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Abs : Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Abs mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("abs", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetAbs_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("abs", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetAbs_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is the absolute value
            of this <c>BigDecimal</c>, with rounding according to the
            context settings.</summary>
        <returns>
          <c>abs(this)</c>, rounded as necessary.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#abs(java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.abs(java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (augend As BigDecimal) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Add(Java::Math::BigDecimal ^ augend);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Add (Java.Math.BigDecimal? augend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Add(class Java.Math.BigDecimal augend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Add(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member Add : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal&#xA;override this.Add : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Add augend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("add", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetAdd_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("add", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetAdd_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="augend" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="augend">value to be added to this <c>BigDecimal</c>.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this +
            augend)</c>, and whose scale is <c>max(this.scale(),
            augend.scale())</c>.</summary>
        <returns>
          <c>this + augend</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#add(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.add(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>augend == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (augend As BigDecimal, mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Add(Java::Math::BigDecimal ^ augend, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Add (Java.Math.BigDecimal? augend, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Add(class Java.Math.BigDecimal augend, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Add(Java.Math.BigDecimal,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Add : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Add : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Add (augend, mc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("add", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetAdd_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("add", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetAdd_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="augend" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="augend">value to be added to this <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this + augend)</c>,
            with rounding according to the context settings.</summary>
        <returns>
          <c>this + augend</c>, rounded as necessary.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#add(java.math.BigDecimal,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.add(java.math.BigDecimal, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>augend == null</c> or <c>mc == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ByteValueExact">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ByteValueExact () As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::SByte ByteValueExact();" />
      <MemberSignature Language="C#" Value="public virtual sbyte ByteValueExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ByteValueExact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ByteValueExact" />
      <MemberSignature Language="F#" Value="abstract member ByteValueExact : unit -&gt; sbyte&#xA;override this.ByteValueExact : unit -&gt; sbyte" Usage="bigDecimal.ByteValueExact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("byteValueExact", "()B", "GetByteValueExactHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("byteValueExact", "()B", "GetByteValueExactHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to a <c>byte</c>, checking
            for lost information.</summary>
        <returns>this <c>BigDecimal</c> converted to a <c>byte</c>.</returns>
        <remarks>
          <para>Converts this <c>BigDecimal</c> to a <c>byte</c>, checking
            for lost information.  If this <c>BigDecimal</c> has a
            nonzero fractional part or is out of the possible range for a
            <c>byte</c> result then an <c>ArithmeticException</c> is
            thrown.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#byteValueExact()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.byteValueExact()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary or the number doesn't fit in a byte.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompareTo (val As BigDecimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Java::Math::BigDecimal ^ val);" />
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.Math.BigDecimal? val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.Math.BigDecimal val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.CompareTo(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Java.Math.BigDecimal -&gt; int&#xA;override this.CompareTo : Java.Math.BigDecimal -&gt; int" Usage="bigDecimal.CompareTo val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/math/BigDecimal;)I", "GetCompareTo_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/math/BigDecimal;)I", "GetCompareTo_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>BigDecimal</c> to which this <c>BigDecimal</c> is
                    to be compared.</param>
        <summary>Compares this <c>BigDecimal</c> with the specified
            <c>BigDecimal</c>.</summary>
        <returns>-1, 0, or 1 as this <c>BigDecimal</c> is numerically
                     less than, equal to, or greater than <c>val</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#compareTo(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.compareTo(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>val == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Divide (divisor As BigDecimal) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Divide(Java::Math::BigDecimal ^ divisor);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Divide (Java.Math.BigDecimal? divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Divide(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member Divide : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal&#xA;override this.Divide : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Divide divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this /
            divisor)</c>, and whose preferred scale is <c>(this.scale() -
            divisor.scale())</c>; if the exact quotient cannot be
            represented (because it has a non-terminating decimal
            expansion) an <c>ArithmeticException</c> is thrown.</summary>
        <returns>
          <c>this / divisor</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divide(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divide(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if the result cannot be represented exactly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Divide (divisor As BigDecimal, mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Divide(Java::Math::BigDecimal ^ divisor, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Divide (Java.Math.BigDecimal? divisor, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Divide(Java.Math.BigDecimal,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Divide : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Divide : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Divide (divisor, mc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this /
            divisor)</c>, with rounding according to the context settings.</summary>
        <returns>
          <c>this / divisor</c>, rounded as necessary.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divide(java.math.BigDecimal,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divide(java.math.BigDecimal, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c> or <c>mc == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.getRoundingMode() == UNNECESSARY</c> and rounding
             is necessary according <c>mc.getPrecision()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Divide (divisor As BigDecimal, roundingMode As RoundingMode) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Divide(Java::Math::BigDecimal ^ divisor, Java::Math::RoundingMode ^ roundingMode);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Divide (Java.Math.BigDecimal? divisor, Java.Math.RoundingMode? roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, class Java.Math.RoundingMode roundingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Divide(Java.Math.BigDecimal,Java.Math.RoundingMode)" />
      <MemberSignature Language="F#" Value="abstract member Divide : Java.Math.BigDecimal * Java.Math.RoundingMode -&gt; Java.Math.BigDecimal&#xA;override this.Divide : Java.Math.BigDecimal * Java.Math.RoundingMode -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Divide (divisor, roundingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;Ljava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Ljava_math_RoundingMode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;Ljava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Ljava_math_RoundingMode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundingMode" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <param name="roundingMode">rounding mode to apply.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this /
            divisor)</c>, and whose scale is <c>this.scale()</c>.</summary>
        <returns>
          <c>this / divisor</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divide(java.math.BigDecimal,%20java.math.RoundingMode)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divide(java.math.BigDecimal, java.math.RoundingMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c> or <c>roundingMode == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == RoundingMode.UNNECESSARY</c> and
             rounding is necessary according to the scale of this.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Divide (divisor As BigDecimal, roundingMode As RoundOptions) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Divide(Java::Math::BigDecimal ^ divisor, Java::Math::RoundOptions roundingMode);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Divide (Java.Math.BigDecimal? divisor, Java.Math.RoundOptions roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, valuetype Java.Math.RoundOptions roundingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Divide(Java.Math.BigDecimal,Java.Math.RoundOptions)" />
      <MemberSignature Language="F#" Value="abstract member Divide : Java.Math.BigDecimal * Java.Math.RoundOptions -&gt; Java.Math.BigDecimal&#xA;override this.Divide : Java.Math.BigDecimal * Java.Math.RoundOptions -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Divide (divisor, roundingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundOptions" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <param name="roundingMode">rounding mode to apply.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this /
            divisor)</c>, and whose scale is <c>this.scale()</c>.</summary>
        <returns>
          <c>this / divisor</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divide(java.math.BigDecimal,%20int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divide(java.math.BigDecimal, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>roundingMode</c> is not a valid rounding mode.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == ROUND_UNNECESSARY</c> and rounding is
             necessary according to the scale of this.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Divide (divisor As BigDecimal, scale As Integer, roundingMode As RoundingMode) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Divide(Java::Math::BigDecimal ^ divisor, int scale, Java::Math::RoundingMode ^ roundingMode);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Divide (Java.Math.BigDecimal? divisor, int scale, Java.Math.RoundingMode? roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, int32 scale, class Java.Math.RoundingMode roundingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Divide(Java.Math.BigDecimal,System.Int32,Java.Math.RoundingMode)" />
      <MemberSignature Language="F#" Value="abstract member Divide : Java.Math.BigDecimal * int * Java.Math.RoundingMode -&gt; Java.Math.BigDecimal&#xA;override this.Divide : Java.Math.BigDecimal * int * Java.Math.RoundingMode -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Divide (divisor, scale, roundingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_ILjava_math_RoundingMode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_ILjava_math_RoundingMode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="scale" Type="System.Int32" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundingMode" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <param name="scale">scale of the <c>BigDecimal</c> quotient to be returned.</param>
        <param name="roundingMode">rounding mode to apply.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this /
            divisor)</c>, and whose scale is as specified.</summary>
        <returns>
          <c>this / divisor</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divide(java.math.BigDecimal,%20int,%20java.math.RoundingMode)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divide(java.math.BigDecimal, int, java.math.RoundingMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c> or <c>roundingMode == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == RoundingMode.UNNECESSAR</c>Y and
             rounding is necessary according to the given scale and given
             precision.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Divide (divisor As BigDecimal, scale As Integer, roundingMode As RoundOptions) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Divide(Java::Math::BigDecimal ^ divisor, int scale, Java::Math::RoundOptions roundingMode);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Divide (Java.Math.BigDecimal? divisor, int scale, Java.Math.RoundOptions roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, int32 scale, valuetype Java.Math.RoundOptions roundingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Divide(Java.Math.BigDecimal,System.Int32,Java.Math.RoundOptions)" />
      <MemberSignature Language="F#" Value="abstract member Divide : Java.Math.BigDecimal * int * Java.Math.RoundOptions -&gt; Java.Math.BigDecimal&#xA;override this.Divide : Java.Math.BigDecimal * int * Java.Math.RoundOptions -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Divide (divisor, scale, roundingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_IIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="scale" Type="System.Int32" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundOptions" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <param name="scale">scale of the <c>BigDecimal</c> quotient to be returned.</param>
        <param name="roundingMode">rounding mode to apply.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this /
            divisor)</c>, and whose scale is as specified.</summary>
        <returns>
          <c>this / divisor</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divide(java.math.BigDecimal,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divide(java.math.BigDecimal, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>roundingMode</c> is not a valid rounding mode.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == ROUND_UNNECESSARY</c> and rounding is
             necessary according to the given scale.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DivideAndRemainder">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DivideAndRemainder (divisor As BigDecimal) As BigDecimal()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Java::Math::BigDecimal ^&gt; ^ DivideAndRemainder(Java::Math::BigDecimal ^ divisor);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal[]? DivideAndRemainder (Java.Math.BigDecimal? divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal[] DivideAndRemainder(class Java.Math.BigDecimal divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.DivideAndRemainder(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member DivideAndRemainder : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal[]&#xA;override this.DivideAndRemainder : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal[]" Usage="bigDecimal.DivideAndRemainder divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divideAndRemainder", "(Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;", "GetDivideAndRemainder_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divideAndRemainder", "(Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;", "GetDivideAndRemainder_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided,
                    and the remainder computed.</param>
        <summary>Returns a two-element <c>BigDecimal</c> array containing the
            result of <c>divideToIntegralValue</c> followed by the result of
            <c>remainder</c> on the two operands.</summary>
        <returns>a two element <c>BigDecimal</c> array: the quotient
                    (the result of <c>divideToIntegralValue</c>) is the initial element
                    and the remainder is the final element.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divideAndRemainder(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divideAndRemainder(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <altmember cref="M:Java.Math.BigDecimal.DivideToIntegralValue(Java.Math.BigDecimal)" />
        <altmember cref="M:Java.Math.BigDecimal.Remainder(Java.Math.BigDecimal)" />
      </Docs>
    </Member>
    <Member MemberName="DivideAndRemainder">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DivideAndRemainder (divisor As BigDecimal, mc As MathContext) As BigDecimal()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Java::Math::BigDecimal ^&gt; ^ DivideAndRemainder(Java::Math::BigDecimal ^ divisor, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal[]? DivideAndRemainder (Java.Math.BigDecimal? divisor, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal[] DivideAndRemainder(class Java.Math.BigDecimal divisor, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.DivideAndRemainder(Java.Math.BigDecimal,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member DivideAndRemainder : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal[]&#xA;override this.DivideAndRemainder : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal[]" Usage="bigDecimal.DivideAndRemainder (divisor, mc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divideAndRemainder", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;", "GetDivideAndRemainder_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divideAndRemainder", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;", "GetDivideAndRemainder_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided,
                    and the remainder computed.</param>
        <param name="mc">the context to use.</param>
        <summary>Returns a two-element <c>BigDecimal</c> array containing the
            result of <c>divideToIntegralValue</c> followed by the result of
            <c>remainder</c> on the two operands calculated with rounding
            according to the context settings.</summary>
        <returns>a two element <c>BigDecimal</c> array: the quotient
                    (the result of <c>divideToIntegralValue</c>) is the
                    initial element and the remainder is the final element.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divideAndRemainder(java.math.BigDecimal,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divideAndRemainder(java.math.BigDecimal, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <altmember cref="M:Java.Math.BigDecimal.DivideToIntegralValue(Java.Math.BigDecimal)" />
        <altmember cref="M:Java.Math.BigDecimal.Remainder(Java.Math.BigDecimal)" />
      </Docs>
    </Member>
    <Member MemberName="DivideToIntegralValue">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DivideToIntegralValue (divisor As BigDecimal) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ DivideToIntegralValue(Java::Math::BigDecimal ^ divisor);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? DivideToIntegralValue (Java.Math.BigDecimal? divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal DivideToIntegralValue(class Java.Math.BigDecimal divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.DivideToIntegralValue(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member DivideToIntegralValue : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal&#xA;override this.DivideToIntegralValue : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal" Usage="bigDecimal.DivideToIntegralValue divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divideToIntegralValue", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetDivideToIntegralValue_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divideToIntegralValue", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetDivideToIntegralValue_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is the integer part
            of the quotient <c>(this / divisor)</c> rounded down.</summary>
        <returns>The integer part of <c>this / divisor</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divideToIntegralValue(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divideToIntegralValue(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DivideToIntegralValue">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DivideToIntegralValue (divisor As BigDecimal, mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ DivideToIntegralValue(Java::Math::BigDecimal ^ divisor, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? DivideToIntegralValue (Java.Math.BigDecimal? divisor, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal DivideToIntegralValue(class Java.Math.BigDecimal divisor, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.DivideToIntegralValue(Java.Math.BigDecimal,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member DivideToIntegralValue : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.DivideToIntegralValue : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.DivideToIntegralValue (divisor, mc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("divideToIntegralValue", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetDivideToIntegralValue_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("divideToIntegralValue", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetDivideToIntegralValue_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is the integer part
            of <c>(this / divisor)</c>.</summary>
        <returns>The integer part of <c>this / divisor</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#divideToIntegralValue(java.math.BigDecimal,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.divideToIntegralValue(java.math.BigDecimal, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c> or <c>mc == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.getPrecision() &gt; 0</c> and the result requires more
             digits to be represented.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DoubleValue () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double DoubleValue();" />
      <MemberSignature Language="C#" Value="public override double DoubleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 DoubleValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.DoubleValue" />
      <MemberSignature Language="F#" Value="override this.DoubleValue : unit -&gt; double" Usage="bigDecimal.DoubleValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doubleValue", "()D", "GetDoubleValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doubleValue", "()D", "GetDoubleValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to a <c>double</c>.</summary>
        <returns>this <c>BigDecimal</c> converted to a <c>double</c>.</returns>
        <remarks>
          <para>Converts this <c>BigDecimal</c> to a <c>double</c>.
            This conversion is similar to the
            <i>narrowing primitive conversion</i> from <c>double</c> to
            <c>float</c> as defined in
            &lt;cite&gt;The Java Language Specification&lt;/cite&gt;:
            if this <c>BigDecimal</c> has too great a
            magnitude represent as a <c>double</c>, it will be
            converted to <c>Double#NEGATIVE_INFINITY</c> or <c>Double#POSITIVE_INFINITY</c> as appropriate.  Note that even when
            the return value is finite, this conversion can lose
            information about the precision of the <c>BigDecimal</c>
            value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#doubleValue()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.doubleValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FloatValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FloatValue () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float FloatValue();" />
      <MemberSignature Language="C#" Value="public override float FloatValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 FloatValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.FloatValue" />
      <MemberSignature Language="F#" Value="override this.FloatValue : unit -&gt; single" Usage="bigDecimal.FloatValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("floatValue", "()F", "GetFloatValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("floatValue", "()F", "GetFloatValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to a <c>float</c>.</summary>
        <returns>this <c>BigDecimal</c> converted to a <c>float</c>.</returns>
        <remarks>
          <para>Converts this <c>BigDecimal</c> to a <c>float</c>.
            This conversion is similar to the
            <i>narrowing primitive conversion</i> from <c>double</c> to
            <c>float</c> as defined in
            &lt;cite&gt;The Java Language Specification&lt;/cite&gt;:
            if this <c>BigDecimal</c> has too great a
            magnitude to represent as a <c>float</c>, it will be
            converted to <c>Float#NEGATIVE_INFINITY</c> or <c>Float#POSITIVE_INFINITY</c> as appropriate.  Note that even when
            the return value is finite, this conversion can lose
            information about the precision of the <c>BigDecimal</c>
            value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#floatValue()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.floatValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IntValue () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IntValue();" />
      <MemberSignature Language="C#" Value="public override int IntValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IntValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.IntValue" />
      <MemberSignature Language="F#" Value="override this.IntValue : unit -&gt; int" Usage="bigDecimal.IntValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("intValue", "()I", "GetIntValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("intValue", "()I", "GetIntValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to an <c>int</c>.</summary>
        <returns>this <c>BigDecimal</c> converted to an <c>int</c>.</returns>
        <remarks>
          <para>Converts this <c>BigDecimal</c> to an <c>int</c>.
            This conversion is analogous to the
            <i>narrowing primitive conversion</i> from <c>double</c> to
            <c>short</c> as defined in
            &lt;cite&gt;The Java Language Specification&lt;/cite&gt;:
            any fractional part of this
            <c>BigDecimal</c> will be discarded, and if the resulting
            "<c>BigInteger</c>" is too big to fit in an
            <c>int</c>, only the low-order 32 bits are returned.
            Note that this conversion can lose information about the
            overall magnitude and precision of this <c>BigDecimal</c>
            value as well as return a result with the opposite sign.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#intValue()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.intValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntValueExact">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IntValueExact () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IntValueExact();" />
      <MemberSignature Language="C#" Value="public virtual int IntValueExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IntValueExact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.IntValueExact" />
      <MemberSignature Language="F#" Value="abstract member IntValueExact : unit -&gt; int&#xA;override this.IntValueExact : unit -&gt; int" Usage="bigDecimal.IntValueExact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("intValueExact", "()I", "GetIntValueExactHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("intValueExact", "()I", "GetIntValueExactHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to an <c>int</c>, checking
            for lost information.</summary>
        <returns>this <c>BigDecimal</c> converted to an <c>int</c>.</returns>
        <remarks>
          <para>Converts this <c>BigDecimal</c> to an <c>int</c>, checking
            for lost information.  If this <c>BigDecimal</c> has a
            nonzero fractional part or is out of the possible range for an
            <c>int</c> result then an <c>ArithmeticException</c> is
            thrown.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#intValueExact()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.intValueExact()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary or the number doesn't fit in an int.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="VB.NET" Value="Function CompareTo (o As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Java.Lang.IComparable.CompareTo(Java::Lang::Object ^ o) = Java::Lang::IComparable::CompareTo;" />
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="bigDecimal.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Math.BigDecimal.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Math.BigDecimal.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LongValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LongValue () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long LongValue();" />
      <MemberSignature Language="C#" Value="public override long LongValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 LongValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.LongValue" />
      <MemberSignature Language="F#" Value="override this.LongValue : unit -&gt; int64" Usage="bigDecimal.LongValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("longValue", "()J", "GetLongValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("longValue", "()J", "GetLongValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to a <c>long</c>.</summary>
        <returns>this <c>BigDecimal</c> converted to a <c>long</c>.</returns>
        <remarks>
          <para>Converts this <c>BigDecimal</c> to a <c>long</c>.
            This conversion is analogous to the
            <i>narrowing primitive conversion</i> from <c>double</c> to
            <c>short</c> as defined in
            &lt;cite&gt;The Java Language Specification&lt;/cite&gt;:
            any fractional part of this
            <c>BigDecimal</c> will be discarded, and if the resulting
            "<c>BigInteger</c>" is too big to fit in a
            <c>long</c>, only the low-order 64 bits are returned.
            Note that this conversion can lose information about the
            overall magnitude and precision of this <c>BigDecimal</c> value as well
            as return a result with the opposite sign.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#longValue()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.longValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LongValueExact">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LongValueExact () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long LongValueExact();" />
      <MemberSignature Language="C#" Value="public virtual long LongValueExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 LongValueExact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.LongValueExact" />
      <MemberSignature Language="F#" Value="abstract member LongValueExact : unit -&gt; int64&#xA;override this.LongValueExact : unit -&gt; int64" Usage="bigDecimal.LongValueExact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("longValueExact", "()J", "GetLongValueExactHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("longValueExact", "()J", "GetLongValueExactHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to a <c>long</c>, checking
            for lost information.</summary>
        <returns>this <c>BigDecimal</c> converted to a <c>long</c>.</returns>
        <remarks>
          <para>Converts this <c>BigDecimal</c> to a <c>long</c>, checking
            for lost information.  If this <c>BigDecimal</c> has a
            nonzero fractional part or is out of the possible range for a
            <c>long</c> result then an <c>ArithmeticException</c> is
            thrown.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#longValueExact()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.longValueExact()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary or the number doesn't fit in a long.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Max (val As BigDecimal) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Max(Java::Math::BigDecimal ^ val);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Max (Java.Math.BigDecimal? val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Max(class Java.Math.BigDecimal val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Max(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member Max : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal&#xA;override this.Max : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Max val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("max", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMax_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("max", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMax_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="val">value with which the maximum is to be computed.</param>
        <summary>Returns the maximum of this <c>BigDecimal</c> and <c>val</c>.</summary>
        <returns>the <c>BigDecimal</c> whose value is the greater of this
                    <c>BigDecimal</c> and <c>val</c>.  If they are equal,
                    as defined by the <c>#compareTo(BigDecimal) compareTo</c>
                    method, <c>this</c> is returned.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#max(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.max(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>val == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Min (val As BigDecimal) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Min(Java::Math::BigDecimal ^ val);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Min (Java.Math.BigDecimal? val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Min(class Java.Math.BigDecimal val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Min(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member Min : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal&#xA;override this.Min : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Min val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("min", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMin_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("min", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMin_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="val">value with which the minimum is to be computed.</param>
        <summary>Returns the minimum of this <c>BigDecimal</c> and
            <c>val</c>.</summary>
        <returns>the <c>BigDecimal</c> whose value is the lesser of this
                    <c>BigDecimal</c> and <c>val</c>.  If they are equal,
                    as defined by the <c>#compareTo(BigDecimal) compareTo</c>
                    method, <c>this</c> is returned.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#min(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.min(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>val == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MovePointLeft">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MovePointLeft (n As Integer) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ MovePointLeft(int n);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? MovePointLeft (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal MovePointLeft(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.MovePointLeft(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member MovePointLeft : int -&gt; Java.Math.BigDecimal&#xA;override this.MovePointLeft : int -&gt; Java.Math.BigDecimal" Usage="bigDecimal.MovePointLeft n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("movePointLeft", "(I)Ljava/math/BigDecimal;", "GetMovePointLeft_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("movePointLeft", "(I)Ljava/math/BigDecimal;", "GetMovePointLeft_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">number of places to move the decimal point to the left.</param>
        <summary>Returns a <c>BigDecimal</c> which is equivalent to this one
            with the decimal point moved <c>n</c> places to the left.</summary>
        <returns>a <c>BigDecimal</c> which is equivalent to this one with the
                    decimal point moved <c>n</c> places to the left.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#movePointLeft(int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.movePointLeft(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MovePointRight">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MovePointRight (n As Integer) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ MovePointRight(int n);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? MovePointRight (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal MovePointRight(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.MovePointRight(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member MovePointRight : int -&gt; Java.Math.BigDecimal&#xA;override this.MovePointRight : int -&gt; Java.Math.BigDecimal" Usage="bigDecimal.MovePointRight n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("movePointRight", "(I)Ljava/math/BigDecimal;", "GetMovePointRight_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("movePointRight", "(I)Ljava/math/BigDecimal;", "GetMovePointRight_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">number of places to move the decimal point to the right.</param>
        <summary>Returns a <c>BigDecimal</c> which is equivalent to this one
            with the decimal point moved <c>n</c> places to the right.</summary>
        <returns>a <c>BigDecimal</c> which is equivalent to this one
                    with the decimal point moved <c>n</c> places to the right.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#movePointRight(int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.movePointRight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Multiply (multiplicand As BigDecimal) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Multiply(Java::Math::BigDecimal ^ multiplicand);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Multiply (Java.Math.BigDecimal? multiplicand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Multiply(class Java.Math.BigDecimal multiplicand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Multiply(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member Multiply : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal&#xA;override this.Multiply : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Multiply multiplicand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("multiply", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMultiply_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("multiply", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMultiply_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiplicand" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="multiplicand">value to be multiplied by this <c>BigDecimal</c>.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this &amp;times;
            multiplicand)</c>, and whose scale is <c>(this.scale() +
            multiplicand.scale())</c>.</summary>
        <returns>
          <c>this * multiplicand</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#multiply(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.multiply(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>multiplicand == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Multiply (multiplicand As BigDecimal, mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Multiply(Java::Math::BigDecimal ^ multiplicand, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Multiply (Java.Math.BigDecimal? multiplicand, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Multiply(class Java.Math.BigDecimal multiplicand, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Multiply(Java.Math.BigDecimal,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Multiply : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Multiply : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Multiply (multiplicand, mc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("multiply", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetMultiply_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("multiply", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetMultiply_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiplicand" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="multiplicand">value to be multiplied by this <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this &amp;times;
            multiplicand)</c>, with rounding according to the context settings.</summary>
        <returns>
          <c>this * multiplicand</c>, rounded as necessary.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#multiply(java.math.BigDecimal,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>multiplicand == null</c> or <c>mc == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Negate () As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Negate();" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Negate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Negate" />
      <MemberSignature Language="F#" Value="abstract member Negate : unit -&gt; Java.Math.BigDecimal&#xA;override this.Negate : unit -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Negate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("negate", "()Ljava/math/BigDecimal;", "GetNegateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("negate", "()Ljava/math/BigDecimal;", "GetNegateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(-this)</c>,
            and whose scale is <c>this.scale()</c>.</summary>
        <returns>
          <c>-this</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#negate()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.negate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Negate (mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Negate(Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Negate (Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Negate(class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Negate(Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Negate : Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Negate : Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Negate mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("negate", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetNegate_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("negate", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetNegate_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(-this)</c>,
            with rounding according to the context settings.</summary>
        <returns>
          <c>-this</c>, rounded as necessary.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#negate(java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.negate(java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Math::BigDecimal ^ One { Java::Math::BigDecimal ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal? One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigDecimal One" />
      <MemberSignature Language="DocId" Value="P:Java.Math.BigDecimal.One" />
      <MemberSignature Language="F#" Value="member this.One : Java.Math.BigDecimal" Usage="Java.Math.BigDecimal.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ONE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The value 1, with a scale of 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ONE" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Plus () As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Plus();" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Plus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Plus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Plus" />
      <MemberSignature Language="F#" Value="abstract member Plus : unit -&gt; Java.Math.BigDecimal&#xA;override this.Plus : unit -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Plus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("plus", "()Ljava/math/BigDecimal;", "GetPlusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("plus", "()Ljava/math/BigDecimal;", "GetPlusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(+this)</c>, and whose
            scale is <c>this.scale()</c>.</summary>
        <returns>
          <c>this</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#plus()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.plus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Plus (mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Plus(Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Plus (Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Plus(class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Plus(Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Plus : Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Plus : Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Plus mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("plus", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetPlus_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("plus", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetPlus_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(+this)</c>,
            with rounding according to the context settings.</summary>
        <returns>
          <c>this</c>, rounded as necessary.  A zero result will
                    have a scale of 0.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#plus(java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.plus(java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Pow (n As Integer) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Pow(int n);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Pow (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Pow(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Pow(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Pow : int -&gt; Java.Math.BigDecimal&#xA;override this.Pow : int -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Pow n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pow", "(I)Ljava/math/BigDecimal;", "GetPow_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pow", "(I)Ljava/math/BigDecimal;", "GetPow_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">power to raise this <c>BigDecimal</c> to.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is
            <c>(this&lt;sup&gt;n&lt;/sup&gt;)</c>, The power is computed exactly, to
            unlimited precision.</summary>
        <returns>
          <c>this&lt;sup&gt;n&lt;/sup&gt;</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#pow(int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.pow(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>n </c> or <c>n &gt; 999999999</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Pow (n As Integer, mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Pow(int n, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Pow (int n, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Pow(int32 n, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Pow(System.Int32,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Pow : int * Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Pow : int * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Pow (n, mc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pow", "(ILjava/math/MathContext;)Ljava/math/BigDecimal;", "GetPow_ILjava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pow", "(ILjava/math/MathContext;)Ljava/math/BigDecimal;", "GetPow_ILjava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="n">power to raise this <c>BigDecimal</c> to.</param>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is
            <c>(this&lt;sup&gt;n&lt;/sup&gt;)</c>.</summary>
        <returns>
          <c>this&lt;sup&gt;n&lt;/sup&gt;</c> using the ANSI standard X3.274-1996
                    algorithm</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#pow(int,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.pow(int, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>n </c> or <c>n &gt; 999999999</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Precision () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Precision();" />
      <MemberSignature Language="C#" Value="public virtual int Precision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Precision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Precision" />
      <MemberSignature Language="F#" Value="abstract member Precision : unit -&gt; int&#xA;override this.Precision : unit -&gt; int" Usage="bigDecimal.Precision " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("precision", "()I", "GetPrecisionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("precision", "()I", "GetPrecisionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <i>precision</i> of this <c>BigDecimal</c>.</summary>
        <returns>the precision of this <c>BigDecimal</c>.</returns>
        <remarks>
          <para>Returns the <i>precision</i> of this <c>BigDecimal</c>.  (The
            precision is the number of digits in the unscaled value.)</para>
          <para>The precision of a zero value is 1.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#precision()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.precision()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Remainder (divisor As BigDecimal) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Remainder(Java::Math::BigDecimal ^ divisor);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Remainder (Java.Math.BigDecimal? divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Remainder(class Java.Math.BigDecimal divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Remainder(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member Remainder : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal&#xA;override this.Remainder : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Remainder divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remainder", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetRemainder_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remainder", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetRemainder_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this % divisor)</c>.</summary>
        <returns>
          <c>this % divisor</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#remainder(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.remainder(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Remainder (divisor As BigDecimal, mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Remainder(Java::Math::BigDecimal ^ divisor, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Remainder (Java.Math.BigDecimal? divisor, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Remainder(class Java.Math.BigDecimal divisor, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Remainder(Java.Math.BigDecimal,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Remainder : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Remainder : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Remainder (divisor, mc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remainder", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetRemainder_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remainder", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetRemainder_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which this <c>BigDecimal</c> is to be divided.</param>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this %
            divisor)</c>, with rounding according to the context settings.</summary>
        <returns>
          <c>this % divisor</c>, rounded as necessary.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#remainder(java.math.BigDecimal,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.remainder(java.math.BigDecimal, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.getPrecision() &gt; 0</c> and the result of <c>this.divideToIntegralValue(divisor, mc)</c> requires more digits
             to be represented.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Round (mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Round(Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Round (Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Round(class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Round(Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Round : Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Round : Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Round mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("round", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetRound_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("round", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetRound_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> rounded according to the
            <c>MathContext</c> settings.</summary>
        <returns>a <c>BigDecimal</c> rounded according to the
                    <c>MathContext</c> settings.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#round(java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.round(java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and this cannot be represented within the given
             precision.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RoundCeiling">
      <MemberSignature Language="VB.NET" Value="Public Const RoundCeiling As RoundOptions  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Java::Math::RoundOptions RoundCeiling = 2;" />
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundCeiling = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundCeiling = (2)" />
      <MemberSignature Language="DocId" Value="F:Java.Math.BigDecimal.RoundCeiling" />
      <MemberSignature Language="F#" Value="val mutable RoundCeiling : Java.Math.RoundOptions" Usage="Java.Math.BigDecimal.RoundCeiling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ROUND_CEILING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ROUND_CEILING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Rounding mode to round towards positive infinity.</summary>
        <remarks>
          <para>Rounding mode to round towards positive infinity.  If the
            <c>BigDecimal</c> is positive, behaves as for
            <c>ROUND_UP</c>; if negative, behaves as for
            <c>ROUND_DOWN</c>.  Note that this rounding mode never
            decreases the calculated value.</para>
          <para>This member is deprecated. Use <c>RoundingMode#CEILING</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ROUND_CEILING" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ROUND_CEILING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Ceiling" />
      </Docs>
    </Member>
    <Member MemberName="RoundDown">
      <MemberSignature Language="VB.NET" Value="Public Const RoundDown As RoundOptions  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Java::Math::RoundOptions RoundDown = 1;" />
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundDown = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundDown = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Math.BigDecimal.RoundDown" />
      <MemberSignature Language="F#" Value="val mutable RoundDown : Java.Math.RoundOptions" Usage="Java.Math.BigDecimal.RoundDown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ROUND_DOWN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ROUND_DOWN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Rounding mode to round towards zero.</summary>
        <remarks>
          <para>Rounding mode to round towards zero.  Never increments the digit
            prior to a discarded fraction (i.e., truncates).  Note that this
            rounding mode never increases the magnitude of the calculated value.</para>
          <para>This member is deprecated. Use <c>RoundingMode#DOWN</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ROUND_DOWN" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ROUND_DOWN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Down" />
      </Docs>
    </Member>
    <Member MemberName="RoundFloor">
      <MemberSignature Language="VB.NET" Value="Public Const RoundFloor As RoundOptions  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Java::Math::RoundOptions RoundFloor = 3;" />
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundFloor = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundFloor = (3)" />
      <MemberSignature Language="DocId" Value="F:Java.Math.BigDecimal.RoundFloor" />
      <MemberSignature Language="F#" Value="val mutable RoundFloor : Java.Math.RoundOptions" Usage="Java.Math.BigDecimal.RoundFloor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ROUND_FLOOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ROUND_FLOOR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Rounding mode to round towards negative infinity.</summary>
        <remarks>
          <para>Rounding mode to round towards negative infinity.  If the
            <c>BigDecimal</c> is positive, behave as for
            <c>ROUND_DOWN</c>; if negative, behave as for
            <c>ROUND_UP</c>.  Note that this rounding mode never
            increases the calculated value.</para>
          <para>This member is deprecated. Use <c>RoundingMode#FLOOR</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ROUND_FLOOR" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ROUND_FLOOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Floor" />
      </Docs>
    </Member>
    <Member MemberName="RoundHalfDown">
      <MemberSignature Language="VB.NET" Value="Public Const RoundHalfDown As RoundOptions  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Java::Math::RoundOptions RoundHalfDown = 5;" />
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundHalfDown = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundHalfDown = (5)" />
      <MemberSignature Language="DocId" Value="F:Java.Math.BigDecimal.RoundHalfDown" />
      <MemberSignature Language="F#" Value="val mutable RoundHalfDown : Java.Math.RoundOptions" Usage="Java.Math.BigDecimal.RoundHalfDown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ROUND_HALF_DOWN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ROUND_HALF_DOWN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Rounding mode to round towards "nearest neighbor"
            unless both neighbors are equidistant, in which case round
            down.</summary>
        <remarks>
          <para>Rounding mode to round towards "nearest neighbor"
            unless both neighbors are equidistant, in which case round
            down.  Behaves as for <c>ROUND_UP</c> if the discarded
            fraction is &gt; 0.5; otherwise, behaves as for
            <c>ROUND_DOWN</c>.</para>
          <para>This member is deprecated. Use <c>RoundingMode#HALF_DOWN</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ROUND_HALF_DOWN" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ROUND_HALF_DOWN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.HalfDown" />
      </Docs>
    </Member>
    <Member MemberName="RoundHalfEven">
      <MemberSignature Language="VB.NET" Value="Public Const RoundHalfEven As RoundOptions  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Java::Math::RoundOptions RoundHalfEven = 6;" />
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundHalfEven = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundHalfEven = (6)" />
      <MemberSignature Language="DocId" Value="F:Java.Math.BigDecimal.RoundHalfEven" />
      <MemberSignature Language="F#" Value="val mutable RoundHalfEven : Java.Math.RoundOptions" Usage="Java.Math.BigDecimal.RoundHalfEven" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ROUND_HALF_EVEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ROUND_HALF_EVEN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Rounding mode to round towards the "nearest neighbor"
            unless both neighbors are equidistant, in which case, round
            towards the even neighbor.</summary>
        <remarks>
          <para>Rounding mode to round towards the "nearest neighbor"
            unless both neighbors are equidistant, in which case, round
            towards the even neighbor.  Behaves as for
            <c>ROUND_HALF_UP</c> if the digit to the left of the
            discarded fraction is odd; behaves as for
            <c>ROUND_HALF_DOWN</c> if it's even.  Note that this is the
            rounding mode that minimizes cumulative error when applied
            repeatedly over a sequence of calculations.</para>
          <para>This member is deprecated. Use <c>RoundingMode#HALF_EVEN</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ROUND_HALF_EVEN" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ROUND_HALF_EVEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.HalfEven" />
      </Docs>
    </Member>
    <Member MemberName="RoundHalfUp">
      <MemberSignature Language="VB.NET" Value="Public Const RoundHalfUp As RoundOptions  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Java::Math::RoundOptions RoundHalfUp = 4;" />
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundHalfUp = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundHalfUp = (4)" />
      <MemberSignature Language="DocId" Value="F:Java.Math.BigDecimal.RoundHalfUp" />
      <MemberSignature Language="F#" Value="val mutable RoundHalfUp : Java.Math.RoundOptions" Usage="Java.Math.BigDecimal.RoundHalfUp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ROUND_HALF_UP")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ROUND_HALF_UP")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Rounding mode to round towards "nearest neighbor"
            unless both neighbors are equidistant, in which case round up.</summary>
        <remarks>
          <para>Rounding mode to round towards "nearest neighbor"
            unless both neighbors are equidistant, in which case round up.
            Behaves as for <c>ROUND_UP</c> if the discarded fraction is
            &amp;ge; 0.5; otherwise, behaves as for <c>ROUND_DOWN</c>.  Note
            that this is the rounding mode that most of us were taught in
            grade school.</para>
          <para>This member is deprecated. Use <c>RoundingMode#HALF_UP</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ROUND_HALF_UP" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ROUND_HALF_UP</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.HalfUp" />
      </Docs>
    </Member>
    <Member MemberName="RoundUnnecessary">
      <MemberSignature Language="VB.NET" Value="Public Const RoundUnnecessary As RoundOptions  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Java::Math::RoundOptions RoundUnnecessary = 7;" />
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundUnnecessary = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundUnnecessary = (7)" />
      <MemberSignature Language="DocId" Value="F:Java.Math.BigDecimal.RoundUnnecessary" />
      <MemberSignature Language="F#" Value="val mutable RoundUnnecessary : Java.Math.RoundOptions" Usage="Java.Math.BigDecimal.RoundUnnecessary" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ROUND_UNNECESSARY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ROUND_UNNECESSARY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Rounding mode to assert that the requested operation has an exact
            result, hence no rounding is necessary.</summary>
        <remarks>
          <para>Rounding mode to assert that the requested operation has an exact
            result, hence no rounding is necessary.  If this rounding mode is
            specified on an operation that yields an inexact result, an
            <c>ArithmeticException</c> is thrown.</para>
          <para>This member is deprecated. Use <c>RoundingMode#UNNECESSARY</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ROUND_UNNECESSARY" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ROUND_UNNECESSARY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Unnecessary" />
      </Docs>
    </Member>
    <Member MemberName="RoundUp">
      <MemberSignature Language="VB.NET" Value="Public Const RoundUp As RoundOptions  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Java::Math::RoundOptions RoundUp = 0;" />
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundUp = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundUp = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Math.BigDecimal.RoundUp" />
      <MemberSignature Language="F#" Value="val mutable RoundUp : Java.Math.RoundOptions" Usage="Java.Math.BigDecimal.RoundUp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ROUND_UP")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ROUND_UP")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Rounding mode to round away from zero.</summary>
        <remarks>
          <para>Rounding mode to round away from zero.  Always increments the
            digit prior to a nonzero discarded fraction.  Note that this rounding
            mode never decreases the magnitude of the calculated value.</para>
          <para>This member is deprecated. Use <c>RoundingMode#UP</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ROUND_UP" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ROUND_UP</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Up" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Scale () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Scale();" />
      <MemberSignature Language="C#" Value="public virtual int Scale ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Scale() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Scale" />
      <MemberSignature Language="F#" Value="abstract member Scale : unit -&gt; int&#xA;override this.Scale : unit -&gt; int" Usage="bigDecimal.Scale " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scale", "()I", "GetScaleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scale", "()I", "GetScaleHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <i>scale</i> of this <c>BigDecimal</c>.</summary>
        <returns>the scale of this <c>BigDecimal</c>.</returns>
        <remarks>
          <para>Returns the <i>scale</i> of this <c>BigDecimal</c>.  If zero
            or positive, the scale is the number of digits to the right of
            the decimal point.  If negative, the unscaled value of the
            number is multiplied by ten to the power of the negation of the
            scale.  For example, a scale of <c>-3</c> means the unscaled
            value is multiplied by 1000.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#scale()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.scale()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScaleByPowerOfTen">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ScaleByPowerOfTen (n As Integer) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ ScaleByPowerOfTen(int n);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? ScaleByPowerOfTen (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal ScaleByPowerOfTen(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ScaleByPowerOfTen(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ScaleByPowerOfTen : int -&gt; Java.Math.BigDecimal&#xA;override this.ScaleByPowerOfTen : int -&gt; Java.Math.BigDecimal" Usage="bigDecimal.ScaleByPowerOfTen n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scaleByPowerOfTen", "(I)Ljava/math/BigDecimal;", "GetScaleByPowerOfTen_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scaleByPowerOfTen", "(I)Ljava/math/BigDecimal;", "GetScaleByPowerOfTen_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">the exponent power of ten to scale by</param>
        <summary>Returns a BigDecimal whose numerical value is equal to
            (<c>this</c> * 10&lt;sup&gt;n&lt;/sup&gt;).</summary>
        <returns>a BigDecimal whose numerical value is equal to
            (<c>this</c> * 10&lt;sup&gt;n&lt;/sup&gt;)</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#scaleByPowerOfTen(int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.scaleByPowerOfTen(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetScale (newScale As Integer) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ SetScale(int newScale);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? SetScale (int newScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal SetScale(int32 newScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.SetScale(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetScale : int -&gt; Java.Math.BigDecimal&#xA;override this.SetScale : int -&gt; Java.Math.BigDecimal" Usage="bigDecimal.SetScale newScale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setScale", "(I)Ljava/math/BigDecimal;", "GetSetScale_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setScale", "(I)Ljava/math/BigDecimal;", "GetSetScale_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newScale" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newScale">scale of the <c>BigDecimal</c> value to be returned.</param>
        <summary>Returns a <c>BigDecimal</c> whose scale is the specified
            value, and whose value is numerically equal to this
            <c>BigDecimal</c>'s.</summary>
        <returns>a <c>BigDecimal</c> whose scale is the specified value, and
                    whose unscaled value is determined by multiplying or dividing
                    this <c>BigDecimal</c>'s unscaled value by the appropriate
                    power of ten to maintain its overall value.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#setScale(int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.setScale(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding would be necessary.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetScale (newScale As Integer, roundingMode As RoundingMode) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ SetScale(int newScale, Java::Math::RoundingMode ^ roundingMode);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? SetScale (int newScale, Java.Math.RoundingMode? roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal SetScale(int32 newScale, class Java.Math.RoundingMode roundingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.SetScale(System.Int32,Java.Math.RoundingMode)" />
      <MemberSignature Language="F#" Value="abstract member SetScale : int * Java.Math.RoundingMode -&gt; Java.Math.BigDecimal&#xA;override this.SetScale : int * Java.Math.RoundingMode -&gt; Java.Math.BigDecimal" Usage="bigDecimal.SetScale (newScale, roundingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setScale", "(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetSetScale_ILjava_math_RoundingMode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setScale", "(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetSetScale_ILjava_math_RoundingMode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newScale" Type="System.Int32" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundingMode" />
      </Parameters>
      <Docs>
        <param name="newScale">scale of the <c>BigDecimal</c> value to be returned.</param>
        <param name="roundingMode">The rounding mode to apply.</param>
        <summary>Returns a <c>BigDecimal</c> whose scale is the specified
            value, and whose unscaled value is determined by multiplying or
            dividing this <c>BigDecimal</c>'s unscaled value by the
            appropriate power of ten to maintain its overall value.</summary>
        <returns>a <c>BigDecimal</c> whose scale is the specified value,
                    and whose unscaled value is determined by multiplying or
                    dividing this <c>BigDecimal</c>'s unscaled value by the
                    appropriate power of ten to maintain its overall value.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#setScale(int,%20java.math.RoundingMode)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.setScale(int, java.math.RoundingMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>roundingMode == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == ROUND_UNNECESSARY</c> and rounding is
             necessary according to the given scale.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetScale (newScale As Integer, roundingMode As RoundOptions) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ SetScale(int newScale, Java::Math::RoundOptions roundingMode);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? SetScale (int newScale, Java.Math.RoundOptions roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal SetScale(int32 newScale, valuetype Java.Math.RoundOptions roundingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.SetScale(System.Int32,Java.Math.RoundOptions)" />
      <MemberSignature Language="F#" Value="abstract member SetScale : int * Java.Math.RoundOptions -&gt; Java.Math.BigDecimal&#xA;override this.SetScale : int * Java.Math.RoundOptions -&gt; Java.Math.BigDecimal" Usage="bigDecimal.SetScale (newScale, roundingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setScale", "(II)Ljava/math/BigDecimal;", "GetSetScale_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setScale", "(II)Ljava/math/BigDecimal;", "GetSetScale_IIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newScale" Type="System.Int32" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundOptions" />
      </Parameters>
      <Docs>
        <param name="newScale">scale of the <c>BigDecimal</c> value to be returned.</param>
        <param name="roundingMode">The rounding mode to apply.</param>
        <summary>Returns a <c>BigDecimal</c> whose scale is the specified
            value, and whose unscaled value is determined by multiplying or
            dividing this <c>BigDecimal</c>'s unscaled value by the
            appropriate power of ten to maintain its overall value.</summary>
        <returns>a <c>BigDecimal</c> whose scale is the specified value,
                    and whose unscaled value is determined by multiplying or
                    dividing this <c>BigDecimal</c>'s unscaled value by the
                    appropriate power of ten to maintain its overall value.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#setScale(int,%20int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.setScale(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>roundingMode</c> is not a valid rounding mode.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == ROUND_UNNECESSARY</c> and rounding is
             necessary according to the given scale.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortValueExact">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShortValueExact () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual short ShortValueExact();" />
      <MemberSignature Language="C#" Value="public virtual short ShortValueExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ShortValueExact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ShortValueExact" />
      <MemberSignature Language="F#" Value="abstract member ShortValueExact : unit -&gt; int16&#xA;override this.ShortValueExact : unit -&gt; int16" Usage="bigDecimal.ShortValueExact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shortValueExact", "()S", "GetShortValueExactHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shortValueExact", "()S", "GetShortValueExactHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to a <c>short</c>, checking
            for lost information.</summary>
        <returns>this <c>BigDecimal</c> converted to a <c>short</c>.</returns>
        <remarks>
          <para>Converts this <c>BigDecimal</c> to a <c>short</c>, checking
            for lost information.  If this <c>BigDecimal</c> has a
            nonzero fractional part or is out of the possible range for a
            <c>short</c> result then an <c>ArithmeticException</c> is
            thrown.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#shortValueExact()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.shortValueExact()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary of the number doesn't fit in a short.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Signum">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Signum () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Signum();" />
      <MemberSignature Language="C#" Value="public virtual int Signum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Signum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Signum" />
      <MemberSignature Language="F#" Value="abstract member Signum : unit -&gt; int&#xA;override this.Signum : unit -&gt; int" Usage="bigDecimal.Signum " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("signum", "()I", "GetSignumHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("signum", "()I", "GetSignumHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the signum function of this <c>BigDecimal</c>.</summary>
        <returns>-1, 0, or 1 as the value of this <c>BigDecimal</c>
                    is negative, zero, or positive.</returns>
        <remarks>
          <para>Returns the signum function of this <c>BigDecimal</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#signum()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.signum()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sqrt (mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Sqrt(Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Sqrt (Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Sqrt(class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Sqrt(Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Sqrt : Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Sqrt : Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Sqrt mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sqrt", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetSqrt_Ljava_math_MathContext_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sqrt", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetSqrt_Ljava_math_MathContext_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">the context to use.</param>
        <summary>Returns an approximation to the square root of <c>this</c>
            with rounding according to the context settings.</summary>
        <returns>the square root of <c>this</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#sqrt(java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.sqrt(java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StripTrailingZeros">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StripTrailingZeros () As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ StripTrailingZeros();" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? StripTrailingZeros ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal StripTrailingZeros() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.StripTrailingZeros" />
      <MemberSignature Language="F#" Value="abstract member StripTrailingZeros : unit -&gt; Java.Math.BigDecimal&#xA;override this.StripTrailingZeros : unit -&gt; Java.Math.BigDecimal" Usage="bigDecimal.StripTrailingZeros " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stripTrailingZeros", "()Ljava/math/BigDecimal;", "GetStripTrailingZerosHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stripTrailingZeros", "()Ljava/math/BigDecimal;", "GetStripTrailingZerosHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>BigDecimal</c> which is numerically equal to
            this one but with any trailing zeros removed from the
            representation.</summary>
        <returns>a numerically equal <c>BigDecimal</c> with any
            trailing zeros removed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#stripTrailingZeros()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.stripTrailingZeros()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Subtract (subtrahend As BigDecimal) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Subtract(Java::Math::BigDecimal ^ subtrahend);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Subtract (Java.Math.BigDecimal? subtrahend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Subtract(class Java.Math.BigDecimal subtrahend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Subtract(Java.Math.BigDecimal)" />
      <MemberSignature Language="F#" Value="abstract member Subtract : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal&#xA;override this.Subtract : Java.Math.BigDecimal -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Subtract subtrahend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("subtract", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetSubtract_Ljava_math_BigDecimal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("subtract", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetSubtract_Ljava_math_BigDecimal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subtrahend" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="subtrahend">value to be subtracted from this <c>BigDecimal</c>.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this -
            subtrahend)</c>, and whose scale is <c>max(this.scale(),
            subtrahend.scale())</c>.</summary>
        <returns>
          <c>this - subtrahend</c>
        </returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#subtract(java.math.BigDecimal)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.subtract(java.math.BigDecimal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>subtrahend == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Subtract (subtrahend As BigDecimal, mc As MathContext) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Subtract(Java::Math::BigDecimal ^ subtrahend, Java::Math::MathContext ^ mc);" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Subtract (Java.Math.BigDecimal? subtrahend, Java.Math.MathContext? mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Subtract(class Java.Math.BigDecimal subtrahend, class Java.Math.MathContext mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Subtract(Java.Math.BigDecimal,Java.Math.MathContext)" />
      <MemberSignature Language="F#" Value="abstract member Subtract : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal&#xA;override this.Subtract : Java.Math.BigDecimal * Java.Math.MathContext -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Subtract (subtrahend, mc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("subtract", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetSubtract_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("subtract", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetSubtract_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subtrahend" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="subtrahend">value to be subtracted from this <c>BigDecimal</c>.</param>
        <param name="mc">the context to use.</param>
        <summary>Returns a <c>BigDecimal</c> whose value is <c>(this - subtrahend)</c>,
            with rounding according to the context settings.</summary>
        <returns>
          <c>this - subtrahend</c>, rounded as necessary.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#subtract(java.math.BigDecimal,%20java.math.MathContext)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.subtract(java.math.BigDecimal, java.math.MathContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>subtrahend == null</c> or <c>mc == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Ten">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ten As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Math::BigDecimal ^ Ten { Java::Math::BigDecimal ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal? Ten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigDecimal Ten" />
      <MemberSignature Language="DocId" Value="P:Java.Math.BigDecimal.Ten" />
      <MemberSignature Language="F#" Value="member this.Ten : Java.Math.BigDecimal" Usage="Java.Math.BigDecimal.Ten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The value 10, with a scale of 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#TEN" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.TEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Math.BigDecimal.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Math.BigDecimal.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Math.BigDecimal.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Math.BigDecimal.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBigInteger">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToBigInteger () As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigInteger ^ ToBigInteger();" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger? ToBigInteger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ToBigInteger() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ToBigInteger" />
      <MemberSignature Language="F#" Value="abstract member ToBigInteger : unit -&gt; Java.Math.BigInteger&#xA;override this.ToBigInteger : unit -&gt; Java.Math.BigInteger" Usage="bigDecimal.ToBigInteger " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toBigInteger", "()Ljava/math/BigInteger;", "GetToBigIntegerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toBigInteger", "()Ljava/math/BigInteger;", "GetToBigIntegerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to a <c>BigInteger</c>.</summary>
        <returns>this <c>BigDecimal</c> converted to a <c>BigInteger</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#toBigInteger()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.toBigInteger()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToBigIntegerExact">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToBigIntegerExact () As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigInteger ^ ToBigIntegerExact();" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger? ToBigIntegerExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ToBigIntegerExact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ToBigIntegerExact" />
      <MemberSignature Language="F#" Value="abstract member ToBigIntegerExact : unit -&gt; Java.Math.BigInteger&#xA;override this.ToBigIntegerExact : unit -&gt; Java.Math.BigInteger" Usage="bigDecimal.ToBigIntegerExact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toBigIntegerExact", "()Ljava/math/BigInteger;", "GetToBigIntegerExactHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toBigIntegerExact", "()Ljava/math/BigInteger;", "GetToBigIntegerExactHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this <c>BigDecimal</c> to a <c>BigInteger</c>,
            checking for lost information.</summary>
        <returns>this <c>BigDecimal</c> converted to a <c>BigInteger</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#toBigIntegerExact()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.toBigIntegerExact()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ToEngineeringString">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToEngineeringString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToEngineeringString();" />
      <MemberSignature Language="C#" Value="public virtual string? ToEngineeringString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToEngineeringString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ToEngineeringString" />
      <MemberSignature Language="F#" Value="abstract member ToEngineeringString : unit -&gt; string&#xA;override this.ToEngineeringString : unit -&gt; string" Usage="bigDecimal.ToEngineeringString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toEngineeringString", "()Ljava/lang/String;", "GetToEngineeringStringHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toEngineeringString", "()Ljava/lang/String;", "GetToEngineeringStringHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of this <c>BigDecimal</c>,
            using engineering notation if an exponent is needed.</summary>
        <returns>string representation of this <c>BigDecimal</c>, using
                    engineering notation if an exponent is needed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#toEngineeringString()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.toEngineeringString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToPlainString">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToPlainString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToPlainString();" />
      <MemberSignature Language="C#" Value="public virtual string? ToPlainString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToPlainString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ToPlainString" />
      <MemberSignature Language="F#" Value="abstract member ToPlainString : unit -&gt; string&#xA;override this.ToPlainString : unit -&gt; string" Usage="bigDecimal.ToPlainString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toPlainString", "()Ljava/lang/String;", "GetToPlainStringHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toPlainString", "()Ljava/lang/String;", "GetToPlainStringHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of this <c>BigDecimal</c>
            without an exponent field.</summary>
        <returns>a string representation of this <c>BigDecimal</c>
            without an exponent field.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#toPlainString()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.toPlainString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ulp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Ulp () As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigDecimal ^ Ulp();" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal? Ulp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Ulp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.Ulp" />
      <MemberSignature Language="F#" Value="abstract member Ulp : unit -&gt; Java.Math.BigDecimal&#xA;override this.Ulp : unit -&gt; Java.Math.BigDecimal" Usage="bigDecimal.Ulp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ulp", "()Ljava/math/BigDecimal;", "GetUlpHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ulp", "()Ljava/math/BigDecimal;", "GetUlpHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the size of an ulp, a unit in the last place, of this
            <c>BigDecimal</c>.</summary>
        <returns>the size of an ulp of <c>this</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ulp()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ulp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscaledValue">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnscaledValue () As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Math::BigInteger ^ UnscaledValue();" />
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger? UnscaledValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger UnscaledValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.UnscaledValue" />
      <MemberSignature Language="F#" Value="abstract member UnscaledValue : unit -&gt; Java.Math.BigInteger&#xA;override this.UnscaledValue : unit -&gt; Java.Math.BigInteger" Usage="bigDecimal.UnscaledValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unscaledValue", "()Ljava/math/BigInteger;", "GetUnscaledValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unscaledValue", "()Ljava/math/BigInteger;", "GetUnscaledValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>BigInteger</c> whose value is the <i>unscaled
            value</i> of this <c>BigDecimal</c>.</summary>
        <returns>the unscaled value of this <c>BigDecimal</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#unscaledValue()" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.unscaledValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueOf (val As Double) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Math::BigDecimal ^ ValueOf(double val);" />
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal? ValueOf (double val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Math.BigDecimal ValueOf(float64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ValueOf(System.Double)" />
      <MemberSignature Language="F#" Value="static member ValueOf : double -&gt; Java.Math.BigDecimal" Usage="Java.Math.BigDecimal.ValueOf val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(D)Ljava/math/BigDecimal;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(D)Ljava/math/BigDecimal;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val">
          <c>double</c> to convert to a <c>BigDecimal</c>.</param>
        <summary>Translates a <c>double</c> into a <c>BigDecimal</c>, using
            the <c>double</c>'s canonical string representation provided
            by the <c>Double#toString(double)</c> method.</summary>
        <returns>a <c>BigDecimal</c> whose value is equal to or approximately
                    equal to the value of <c>val</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#valueOf(double)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.valueOf(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> is infinite or <c>val</c> is not a number
</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueOf (val As Long) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Math::BigDecimal ^ ValueOf(long val);" />
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal? ValueOf (long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Math.BigDecimal ValueOf(int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ValueOf(System.Int64)" />
      <MemberSignature Language="F#" Value="static member ValueOf : int64 -&gt; Java.Math.BigDecimal" Usage="Java.Math.BigDecimal.ValueOf val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(J)Ljava/math/BigDecimal;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(J)Ljava/math/BigDecimal;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val">value of the <c>BigDecimal</c>.</param>
        <summary>Translates a <c>long</c> value into a <c>BigDecimal</c>
            with a scale of zero.</summary>
        <returns>a <c>BigDecimal</c> whose value is <c>val</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#valueOf(long)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.valueOf(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueOf (unscaledVal As Long, scale As Integer) As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Math::BigDecimal ^ ValueOf(long unscaledVal, int scale);" />
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal? ValueOf (long unscaledVal, int scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Math.BigDecimal ValueOf(int64 unscaledVal, int32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Math.BigDecimal.ValueOf(System.Int64,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ValueOf : int64 * int -&gt; Java.Math.BigDecimal" Usage="Java.Math.BigDecimal.ValueOf (unscaledVal, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(JI)Ljava/math/BigDecimal;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(JI)Ljava/math/BigDecimal;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unscaledVal" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unscaledVal">unscaled value of the <c>BigDecimal</c>.</param>
        <param name="scale">scale of the <c>BigDecimal</c>.</param>
        <summary>Translates a <c>long</c> unscaled value and an
            <c>int</c> scale into a <c>BigDecimal</c>.</summary>
        <returns>a <c>BigDecimal</c> whose value is
                    <c>(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#valueOf(long,%20int)" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.valueOf(long, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As BigDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Math::BigDecimal ^ Zero { Java::Math::BigDecimal ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal? Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigDecimal Zero" />
      <MemberSignature Language="DocId" Value="P:Java.Math.BigDecimal.Zero" />
      <MemberSignature Language="F#" Value="member this.Zero : Java.Math.BigDecimal" Usage="Java.Math.BigDecimal.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ZERO")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ZERO")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The value 0, with a scale of 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/math/BigDecimal#ZERO" title="Reference documentation">Java documentation for <code>java.math.BigDecimal.ZERO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
