<Type Name="DreamService" FullName="Android.Service.Dreams.DreamService">
  <TypeSignature Language="C#" Value="public class DreamService : Android.App.Service, Android.Views.Window.ICallback, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DreamService extends Android.App.Service implements class Android.Runtime.IJavaObject, class Android.Views.Window/ICallback, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Service.Dreams.DreamService" />
  <TypeSignature Language="F#" Value="type DreamService = class&#xA;    inherit Service&#xA;    interface Window.ICallback&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Service</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.Window+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/service/dreams/DreamService", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/service/dreams/DreamService", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="17">
    <summary>Extend this class to implement a custom dream (available to the user as a "Daydream").</summary>
    <remarks>
      <para>Extend this class to implement a custom dream (available to the user as a "Daydream").</para>
      <para>Dreams are interactive screensavers launched when a charging device is idle, or docked in a
            desk dock. Dreams provide another modality for apps to express themselves, tailored for
            an exhibition/lean-back experience.</para>
      <para>The <c>DreamService</c> lifecycle is as follows:</para>
      <para>&lt;ol&gt;
              &lt;li&gt;<c>#onAttachedToWindow</c></para>
      <para>Use this for initial setup, such as calling <c>#setContentView setContentView()</c>.&lt;/li&gt;
              &lt;li&gt;<c>#onDreamingStarted</c></para>
      <para>Your dream has started, so you should begin animations or other behaviors here.&lt;/li&gt;
              &lt;li&gt;<c>#onDreamingStopped</c></para>
      <para>Use this to stop the things you started in <c>#onDreamingStarted</c>.&lt;/li&gt;
              &lt;li&gt;<c>#onDetachedFromWindow</c></para>
      <para>Use this to dismantle resources (for example, detach from handlers
                   and listeners).&lt;/li&gt;
            &lt;/ol&gt;</para>
      <para>In addition, onCreate and onDestroy (from the Service interface) will also be called, but
            initialization and teardown should be done by overriding the hooks above.</para>
      <para>To be available to the system, your <c>DreamService</c> should be declared in the
            manifest as follows:</para>
      <code lang="text/java">&amp;lt;service
                android:name=".MyDream"
                android:exported="true"
                android:icon="@drawable/my_icon"
                android:label="@string/my_dream_label" &gt;
            
                &amp;lt;intent-filter&gt;
                    &amp;lt;action android:name="android.service.dreams.DreamService" /&gt;
                    &amp;lt;category android:name="android.intent.category.DEFAULT" /&gt;
                &amp;lt;/intent-filter&gt;
            
                &amp;lt;!-- Point to additional information for this dream (optional) --&gt;
                &amp;lt;meta-data
                    android:name="android.service.dream"
                    android:resource="@xml/my_dream" /&gt;
            &amp;lt;/service&gt;
            </code>
      <para>If specified with the <c>&lt;meta-data&gt;</c> element,
            additional information for the dream is defined using the
            <c>android.R.styleable#Dream &amp;lt;dream&amp;gt;</c> element in a separate XML file.
            Currently, the only additional
            information you can provide is for a settings activity that allows the user to configure
            the dream behavior. For example:</para>
      <para>&lt;p class="code-caption"&gt;res/xml/my_dream.xml&lt;/p&gt;</para>
      <code lang="text/java">&amp;lt;dream xmlns:android="http://schemas.android.com/apk/res/android"
                android:settingsActivity="com.example.app/.MyDreamSettingsActivity" /&gt;
            </code>
      <para>This makes a Settings button available alongside your dream's listing in the
            system settings, which when pressed opens the specified activity.</para>
      <para>To specify your dream layout, call <c>#setContentView</c>, typically during the
            <c>#onAttachedToWindow</c> callback. For example:</para>
      <code lang="text/java">public class MyDream extends DreamService {
            
                &amp;#64;Override
                public void onAttachedToWindow() {
                    super.onAttachedToWindow();
            
                    // Exit dream upon user touch
                    setInteractive(false);
                    // Hide system UI
                    setFullscreen(true);
                    // Set the dream layout
                    setContentView(R.layout.dream);
                }
            }
            </code>
      <para>When targeting api level 21 and above, you must declare the service in your manifest file
            with the <c>android.Manifest.permission#BIND_DREAM_SERVICE</c> permission. For example:</para>
      <code lang="text/java">&amp;lt;service
                android:name=".MyDream"
                android:exported="true"
                android:icon="@drawable/my_icon"
                android:label="@string/my_dream_label"
                android:permission="android.permission.BIND_DREAM_SERVICE"&gt;
              &amp;lt;intent-filter&gt;
                &amp;lt;action android:name=”android.service.dreams.DreamService” /&gt;
                &amp;lt;category android:name=”android.intent.category.DEFAULT” /&gt;
              &amp;lt;/intent-filter&gt;
            &amp;lt;/service&gt;
            </code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/service/dreams/DreamService" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 17" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DreamService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DreamService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Service.Dreams.DreamService : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Service.Dreams.DreamService" Usage="new Android.Service.Dreams.DreamService (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentView">
      <MemberSignature Language="C#" Value="public virtual void AddContentView (Android.Views.View? view, Android.Views.ViewGroup.LayoutParams? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddContentView(class Android.Views.View view, class Android.Views.ViewGroup/LayoutParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.AddContentView(Android.Views.View,Android.Views.ViewGroup.LayoutParams)" />
      <MemberSignature Language="F#" Value="abstract member AddContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit&#xA;override this.AddContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit" Usage="dreamService.AddContentView (view, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetAddContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetAddContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="params" Type="Android.Views.ViewGroup+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <param name="params">Layout parameters for the view.</param>
        <summary>Adds a view to the Dream's window, leaving other content views in place.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#addContentView(android.view.View,%20android.view.LayoutParams)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.addContentView(android.view.View, android.view.LayoutParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericMotionEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchGenericMotionEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchGenericMotionEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.DispatchGenericMotionEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchGenericMotionEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchGenericMotionEvent : Android.Views.MotionEvent -&gt; bool" Usage="dreamService.DispatchGenericMotionEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchGenericMotionEvent(Android.Views.MotionEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The generic motion event.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#dispatchGenericMotionEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.dispatchGenericMotionEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.DispatchKeyEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchKeyEvent : Android.Views.KeyEvent -&gt; bool&#xA;override this.DispatchKeyEvent : Android.Views.KeyEvent -&gt; bool" Usage="dreamService.DispatchKeyEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchKeyEvent(Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#dispatchKeyEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.dispatchKeyEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyShortcutEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyShortcutEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyShortcutEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.DispatchKeyShortcutEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchKeyShortcutEvent : Android.Views.KeyEvent -&gt; bool&#xA;override this.DispatchKeyShortcutEvent : Android.Views.KeyEvent -&gt; bool" Usage="dreamService.DispatchKeyShortcutEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchKeyShortcutEvent(Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key shortcut event.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#dispatchKeyShortcutEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.dispatchKeyShortcutEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DispatchPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchPopulateAccessibilityEvent (Android.Views.Accessibility.AccessibilityEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchPopulateAccessibilityEvent(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchPopulateAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; bool&#xA;override this.DispatchPopulateAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; bool" Usage="dreamService.DispatchPopulateAccessibilityEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DispatchTouchEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchTouchEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.DispatchTouchEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchTouchEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchTouchEvent : Android.Views.MotionEvent -&gt; bool" Usage="dreamService.DispatchTouchEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchTouchEvent(Android.Views.MotionEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTouchEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTouchEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The touch screen event.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#dispatchTouchEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.dispatchTouchEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DispatchTrackballEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchTrackballEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchTrackballEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.DispatchTrackballEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchTrackballEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchTrackballEvent : Android.Views.MotionEvent -&gt; bool" Usage="dreamService.DispatchTrackballEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchTrackballEvent(Android.Views.MotionEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The trackball event.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#dispatchTrackballEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.dispatchTrackballEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DreamMetaData">
      <MemberSignature Language="C#" Value="public const string DreamMetaData;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DreamMetaData" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Dreams.DreamService.DreamMetaData" />
      <MemberSignature Language="F#" Value="val mutable DreamMetaData : string" Usage="Android.Service.Dreams.DreamService.DreamMetaData" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.Views.Window.ICallback._members</InterfaceMember>
        <InterfaceMember>F:Android.Views.Window.ICallback.cb_onPointerCaptureChanged_Z</InterfaceMember>
        <InterfaceMember>F:Android.Views.Window.ICallback.cb_onProvideKeyboardShortcuts_Ljava_util_List_Landroid_view_Menu_I</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DREAM_META_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DREAM_META_DATA")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name under which a Dream publishes information about itself.</summary>
        <remarks>
          <para>Name under which a Dream publishes information about itself.
            This meta-data must reference an XML resource containing
            a <c>&amp;lt;{@link android.R.styleable#Dream dream}&amp;gt;</c>
            tag.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#DREAM_META_DATA" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.DREAM_META_DATA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? FindViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View FindViewById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.FindViewById(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FindViewById : int -&gt; Android.Views.View&#xA;override this.FindViewById : int -&gt; Android.Views.View" Usage="dreamService.FindViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "GetFindViewById_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "GetFindViewById_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">the ID to search for</param>
        <summary>Finds a view that was identified by the id attribute from the XML that
            was processed in <c>#onCreate</c>.</summary>
        <returns>The view if found or null otherwise.</returns>
        <remarks>
          <para>Finds a view that was identified by the id attribute from the XML that
            was processed in <c>#onCreate</c>.</para>
          <para>Note: Requires a window, do not call before <c>#onAttachedToWindow()</c></para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; In most cases -- depending on compiler support --
            the resulting view is automatically cast to the target class type. If
            the target class type is unconstrained, an explicit cast may be
            necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#findViewById(int)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.findViewById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="Finish">
      <MemberSignature Language="C#" Value="public void Finish ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Finish() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.Finish" />
      <MemberSignature Language="F#" Value="member this.Finish : unit -&gt; unit" Usage="dreamService.Finish " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finish", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finish", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops the dream and detaches from the window.</summary>
        <remarks>
          <para>Stops the dream and detaches from the window.</para>
          <para>When the dream ends, the system will be allowed to go to sleep fully unless there
            is a reason for it to be awake such as recent user activity or wake locks being held.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#finish()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.finish()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="Fullscreen">
      <MemberSignature Language="C#" Value="public virtual bool Fullscreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Fullscreen" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Dreams.DreamService.Fullscreen" />
      <MemberSignature Language="F#" Value="member this.Fullscreen : bool with get, set" Usage="Android.Service.Dreams.DreamService.Fullscreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFullscreen", "()Z", "GetIsFullscreenHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFullscreen", "()Z", "GetIsFullscreenHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFullscreen", "(Z)V", "GetSetFullscreen_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFullscreen", "(Z)V", "GetSetFullscreen_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="fullscreen">If true, the fullscreen flag will be set; else it
            will be cleared.</param>
        <summary>Returns whether this dream is in fullscreen mode. -or- Controls <c>android.view.WindowManager.LayoutParams#FLAG_FULLSCREEN</c>
            on the dream's window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this dream is in fullscreen mode. Defaults to false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#isFullscreen()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.isFullscreen()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Controls <c>android.view.WindowManager.LayoutParams#FLAG_FULLSCREEN</c>
            on the dream's window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#setFullscreen(boolean)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.setFullscreen(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Service.Dreams.DreamService.Fullscreen" />
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public virtual bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Dreams.DreamService.Interactive" />
      <MemberSignature Language="F#" Value="member this.Interactive : bool with get, set" Usage="Android.Service.Dreams.DreamService.Interactive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInteractive", "()Z", "GetIsInteractiveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInteractive", "()Z", "GetIsInteractiveHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setInteractive", "(Z)V", "GetSetInteractive_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setInteractive", "(Z)V", "GetSetInteractive_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="interactive">True if this dream will handle input events.</param>
        <summary>Returns whether this dream is interactive. -or- Marks this dream as interactive to receive input events.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this dream is interactive. Defaults to false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#isInteractive()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.isInteractive()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Marks this dream as interactive to receive input events.</para>
          <para>Non-interactive dreams (default) will dismiss on the first input event.</para>
          <para>Interactive dreams should call <c>#finish()</c> to dismiss themselves.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#setInteractive(boolean)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.setInteractive(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Service.Dreams.DreamService.Interactive" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Dreams.DreamService.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Service.Dreams.DreamService.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActionModeFinished">
      <MemberSignature Language="C#" Value="public virtual void OnActionModeFinished (Android.Views.ActionMode? mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionModeFinished(class Android.Views.ActionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnActionModeFinished(Android.Views.ActionMode)" />
      <MemberSignature Language="F#" Value="abstract member OnActionModeFinished : Android.Views.ActionMode -&gt; unit&#xA;override this.OnActionModeFinished : Android.Views.ActionMode -&gt; unit" Usage="dreamService.OnActionModeFinished mode" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnActionModeFinished(Android.Views.ActionMode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onActionModeFinished", "(Landroid/view/ActionMode;)V", "GetOnActionModeFinished_Landroid_view_ActionMode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onActionModeFinished", "(Landroid/view/ActionMode;)V", "GetOnActionModeFinished_Landroid_view_ActionMode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Views.ActionMode" />
      </Parameters>
      <Docs>
        <param name="mode">The mode that was just finished.
</param>
        <summary>To be added</summary>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onActionModeFinished(android.view.ActionMode)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onActionModeFinished(android.view.ActionMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnActionModeStarted">
      <MemberSignature Language="C#" Value="public virtual void OnActionModeStarted (Android.Views.ActionMode? mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionModeStarted(class Android.Views.ActionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnActionModeStarted(Android.Views.ActionMode)" />
      <MemberSignature Language="F#" Value="abstract member OnActionModeStarted : Android.Views.ActionMode -&gt; unit&#xA;override this.OnActionModeStarted : Android.Views.ActionMode -&gt; unit" Usage="dreamService.OnActionModeStarted mode" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnActionModeStarted(Android.Views.ActionMode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onActionModeStarted", "(Landroid/view/ActionMode;)V", "GetOnActionModeStarted_Landroid_view_ActionMode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onActionModeStarted", "(Landroid/view/ActionMode;)V", "GetOnActionModeStarted_Landroid_view_ActionMode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Views.ActionMode" />
      </Parameters>
      <Docs>
        <param name="mode">The new mode that has just been started.
</param>
        <summary>To be added</summary>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onActionModeStarted(android.view.ActionMode)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onActionModeStarted(android.view.ActionMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnAttachedToWindow">
      <MemberSignature Language="C#" Value="public virtual void OnAttachedToWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAttachedToWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnAttachedToWindow" />
      <MemberSignature Language="F#" Value="abstract member OnAttachedToWindow : unit -&gt; unit&#xA;override this.OnAttachedToWindow : unit -&gt; unit" Usage="dreamService.OnAttachedToWindow " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnAttachedToWindow</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onAttachedToWindow()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onAttachedToWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public override sealed Android.OS.IBinder? OnBind (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnBind(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="override this.OnBind : Android.Content.Intent -&gt; Android.OS.IBinder" Usage="dreamService.OnBind intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content Context BindService(Android Content Intent,Android Content IServiceConnection,Android Content IServiceConnection)';scope=Xamarin" title="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)">M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)</a></format>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onBind(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onBind(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnContentChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnContentChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnContentChanged" />
      <MemberSignature Language="F#" Value="abstract member OnContentChanged : unit -&gt; unit&#xA;override this.OnContentChanged : unit -&gt; unit" Usage="dreamService.OnContentChanged " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnContentChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onContentChanged", "()V", "GetOnContentChangedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onContentChanged", "()V", "GetOnContentChangedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onContentChanged()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onContentChanged()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnCreatePanelMenu">
      <MemberSignature Language="C#" Value="public virtual bool OnCreatePanelMenu (int featureId, Android.Views.IMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnCreatePanelMenu(int32 featureId, class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnCreatePanelMenu(System.Int32,Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnCreatePanelMenu : int * Android.Views.IMenu -&gt; bool&#xA;override this.OnCreatePanelMenu : int * Android.Views.IMenu -&gt; bool" Usage="dreamService.OnCreatePanelMenu (featureId, menu)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnCreatePanelMenu(System.Int32,Android.Views.IMenu)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreatePanelMenu", "(ILandroid/view/Menu;)Z", "GetOnCreatePanelMenu_ILandroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreatePanelMenu", "(ILandroid/view/Menu;)Z", "GetOnCreatePanelMenu_ILandroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel being created.</param>
        <param name="menu">The menu inside the panel.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onCreatePanelMenu(int,%20android.view.Menu)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onCreatePanelMenu(int, android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnCreatePanelView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? OnCreatePanelView (int featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreatePanelView(int32 featureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnCreatePanelView(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnCreatePanelView : int -&gt; Android.Views.View&#xA;override this.OnCreatePanelView : int -&gt; Android.Views.View" Usage="dreamService.OnCreatePanelView featureId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnCreatePanelView(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreatePanelView", "(I)Landroid/view/View;", "GetOnCreatePanelView_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreatePanelView", "(I)Landroid/view/View;", "GetOnCreatePanelView_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">Which panel is being created.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onCreatePanelView(int)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onCreatePanelView(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnDetachedFromWindow">
      <MemberSignature Language="C#" Value="public virtual void OnDetachedFromWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDetachedFromWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnDetachedFromWindow" />
      <MemberSignature Language="F#" Value="abstract member OnDetachedFromWindow : unit -&gt; unit&#xA;override this.OnDetachedFromWindow : unit -&gt; unit" Usage="dreamService.OnDetachedFromWindow " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnDetachedFromWindow</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onDetachedFromWindow()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onDetachedFromWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnDreamingStarted">
      <MemberSignature Language="C#" Value="public virtual void OnDreamingStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDreamingStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnDreamingStarted" />
      <MemberSignature Language="F#" Value="abstract member OnDreamingStarted : unit -&gt; unit&#xA;override this.OnDreamingStarted : unit -&gt; unit" Usage="dreamService.OnDreamingStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDreamingStarted", "()V", "GetOnDreamingStartedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDreamingStarted", "()V", "GetOnDreamingStartedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the dream's window has been created and is visible and animation may now begin.</summary>
        <remarks>
          <para>Called when the dream's window has been created and is visible and animation may now begin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onDreamingStarted()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onDreamingStarted()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnDreamingStopped">
      <MemberSignature Language="C#" Value="public virtual void OnDreamingStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDreamingStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnDreamingStopped" />
      <MemberSignature Language="F#" Value="abstract member OnDreamingStopped : unit -&gt; unit&#xA;override this.OnDreamingStopped : unit -&gt; unit" Usage="dreamService.OnDreamingStopped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDreamingStopped", "()V", "GetOnDreamingStoppedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDreamingStopped", "()V", "GetOnDreamingStoppedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when this Dream is stopped, either by external request or by calling finish(),
            before the window has been removed.</summary>
        <remarks>
          <para>Called when this Dream is stopped, either by external request or by calling finish(),
            before the window has been removed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onDreamingStopped()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onDreamingStopped()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemSelected">
      <MemberSignature Language="C#" Value="public virtual bool OnMenuItemSelected (int featureId, Android.Views.IMenuItem? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMenuItemSelected(int32 featureId, class Android.Views.IMenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnMenuItemSelected(System.Int32,Android.Views.IMenuItem)" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemSelected : int * Android.Views.IMenuItem -&gt; bool&#xA;override this.OnMenuItemSelected : int * Android.Views.IMenuItem -&gt; bool" Usage="dreamService.OnMenuItemSelected (featureId, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnMenuItemSelected(System.Int32,Android.Views.IMenuItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMenuItemSelected", "(ILandroid/view/MenuItem;)Z", "GetOnMenuItemSelected_ILandroid_view_MenuItem_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMenuItemSelected", "(ILandroid/view/MenuItem;)Z", "GetOnMenuItemSelected_ILandroid_view_MenuItem_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="item" Type="Android.Views.IMenuItem" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel that the menu is in.</param>
        <param name="item">The menu item that was selected.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onMenuItemSelected(int,%20android.view.MenuItem)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onMenuItemSelected(int, android.view.MenuItem)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuOpened">
      <MemberSignature Language="C#" Value="public virtual bool OnMenuOpened (int featureId, Android.Views.IMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMenuOpened(int32 featureId, class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnMenuOpened(System.Int32,Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnMenuOpened : int * Android.Views.IMenu -&gt; bool&#xA;override this.OnMenuOpened : int * Android.Views.IMenu -&gt; bool" Usage="dreamService.OnMenuOpened (featureId, menu)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnMenuOpened(System.Int32,Android.Views.IMenu)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMenuOpened", "(ILandroid/view/Menu;)Z", "GetOnMenuOpened_ILandroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMenuOpened", "(ILandroid/view/Menu;)Z", "GetOnMenuOpened_ILandroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel that the menu is in.</param>
        <param name="menu">The menu that is opened.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onMenuOpened(int,%20android.view.Menu)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onMenuOpened(int, android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnPanelClosed">
      <MemberSignature Language="C#" Value="public virtual void OnPanelClosed (int featureId, Android.Views.IMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPanelClosed(int32 featureId, class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnPanelClosed(System.Int32,Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnPanelClosed : int * Android.Views.IMenu -&gt; unit&#xA;override this.OnPanelClosed : int * Android.Views.IMenu -&gt; unit" Usage="dreamService.OnPanelClosed (featureId, menu)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnPanelClosed(System.Int32,Android.Views.IMenu)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPanelClosed", "(ILandroid/view/Menu;)V", "GetOnPanelClosed_ILandroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPanelClosed", "(ILandroid/view/Menu;)V", "GetOnPanelClosed_ILandroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel that is being displayed.</param>
        <param name="menu">If onCreatePanelView() returned null, this is the Menu
            being displayed in the panel.
</param>
        <summary>To be added</summary>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onPanelClosed(int,%20android.view.Menu)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onPanelClosed(int, android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnPreparePanel">
      <MemberSignature Language="C#" Value="public virtual bool OnPreparePanel (int featureId, Android.Views.View? view, Android.Views.IMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPreparePanel(int32 featureId, class Android.Views.View view, class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnPreparePanel(System.Int32,Android.Views.View,Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnPreparePanel : int * Android.Views.View * Android.Views.IMenu -&gt; bool&#xA;override this.OnPreparePanel : int * Android.Views.View * Android.Views.IMenu -&gt; bool" Usage="dreamService.OnPreparePanel (featureId, view, menu)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnPreparePanel(System.Int32,Android.Views.View,Android.Views.IMenu)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPreparePanel", "(ILandroid/view/View;Landroid/view/Menu;)Z", "GetOnPreparePanel_ILandroid_view_View_Landroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPreparePanel", "(ILandroid/view/View;Landroid/view/Menu;)Z", "GetOnPreparePanel_ILandroid_view_View_Landroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel that is being displayed.</param>
        <param name="view">The View that was returned by onCreatePanelView().</param>
        <param name="menu">If onCreatePanelView() returned null, this is the Menu
             being displayed in the panel.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onPreparePanel(int,%20android.view.View,%20android.view.Menu)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onPreparePanel(int, android.view.View, android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnSearchRequested">
      <MemberSignature Language="C#" Value="public virtual bool OnSearchRequested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnSearchRequested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnSearchRequested" />
      <MemberSignature Language="F#" Value="abstract member OnSearchRequested : unit -&gt; bool&#xA;override this.OnSearchRequested : unit -&gt; bool" Usage="dreamService.OnSearchRequested " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnSearchRequested</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSearchRequested", "()Z", "GetOnSearchRequestedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSearchRequested", "()Z", "GetOnSearchRequestedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onSearchRequested()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onSearchRequested()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnSearchRequested">
      <MemberSignature Language="C#" Value="public virtual bool OnSearchRequested (Android.Views.SearchEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnSearchRequested(class Android.Views.SearchEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnSearchRequested(Android.Views.SearchEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnSearchRequested : Android.Views.SearchEvent -&gt; bool&#xA;override this.OnSearchRequested : Android.Views.SearchEvent -&gt; bool" Usage="dreamService.OnSearchRequested e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnSearchRequested(Android.Views.SearchEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSearchRequested", "(Landroid/view/SearchEvent;)Z", "GetOnSearchRequested_Landroid_view_SearchEvent_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSearchRequested", "(Landroid/view/SearchEvent;)Z", "GetOnSearchRequested_Landroid_view_SearchEvent_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.SearchEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onSearchRequested(android.view.SearchEvent)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onSearchRequested(android.view.SearchEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWakeUp">
      <MemberSignature Language="C#" Value="public virtual void OnWakeUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWakeUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnWakeUp" />
      <MemberSignature Language="F#" Value="abstract member OnWakeUp : unit -&gt; unit&#xA;override this.OnWakeUp : unit -&gt; unit" Usage="dreamService.OnWakeUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWakeUp", "()V", "GetOnWakeUpHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWakeUp", "()V", "GetOnWakeUpHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the dream is being asked to stop itself and wake.</summary>
        <remarks>
          <para>Called when the dream is being asked to stop itself and wake.</para>
          <para>The default implementation simply calls <c>#finish</c> which ends the dream
            immediately. Subclasses may override this function to perform a smooth exit
            transition then call <c>#finish</c> afterwards.</para>
          <para>Note that the dream will only be given a short period of time (currently about
            five seconds) to wake up. If the dream does not finish itself in a timely manner
            then the system will forcibly finish it once the time allowance is up.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onWakeUp()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onWakeUp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindowAttributesChanged">
      <MemberSignature Language="C#" Value="public virtual void OnWindowAttributesChanged (Android.Views.WindowManagerLayoutParams? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowAttributesChanged(class Android.Views.WindowManagerLayoutParams attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnWindowAttributesChanged(Android.Views.WindowManagerLayoutParams)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowAttributesChanged : Android.Views.WindowManagerLayoutParams -&gt; unit&#xA;override this.OnWindowAttributesChanged : Android.Views.WindowManagerLayoutParams -&gt; unit" Usage="dreamService.OnWindowAttributesChanged attrs" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnWindowAttributesChanged(Android.Views.WindowManagerLayoutParams)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowAttributesChanged", "(Landroid/view/WindowManager$LayoutParams;)V", "GetOnWindowAttributesChanged_Landroid_view_WindowManager_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowAttributesChanged", "(Landroid/view/WindowManager$LayoutParams;)V", "GetOnWindowAttributesChanged_Landroid_view_WindowManager_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrs" Type="Android.Views.WindowManagerLayoutParams" />
      </Parameters>
      <Docs>
        <param name="attrs">To be added.</param>
        <summary>[TODO: @inheritDoc]</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onWindowAttributesChanged(android.view.LayoutParams)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onWindowAttributesChanged(android.view.LayoutParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowFocusChanged">
      <MemberSignature Language="C#" Value="public virtual void OnWindowFocusChanged (bool hasFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowFocusChanged(bool hasFocus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnWindowFocusChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowFocusChanged : bool -&gt; unit&#xA;override this.OnWindowFocusChanged : bool -&gt; unit" Usage="dreamService.OnWindowFocusChanged hasFocus" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnWindowFocusChanged(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowFocusChanged", "(Z)V", "GetOnWindowFocusChanged_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowFocusChanged", "(Z)V", "GetOnWindowFocusChanged_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasFocus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasFocus">Whether the window now has focus.
</param>
        <summary>To be added</summary>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onWindowFocusChanged(boolean)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onWindowFocusChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowStartingActionMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode? OnWindowStartingActionMode (Android.Views.ActionMode.ICallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode OnWindowStartingActionMode(class Android.Views.ActionMode/ICallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowStartingActionMode : Android.Views.ActionMode.ICallback -&gt; Android.Views.ActionMode&#xA;override this.OnWindowStartingActionMode : Android.Views.ActionMode.ICallback -&gt; Android.Views.ActionMode" Usage="dreamService.OnWindowStartingActionMode callback" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetOnWindowStartingActionMode_Landroid_view_ActionMode_Callback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetOnWindowStartingActionMode_Landroid_view_ActionMode_Callback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
      </Parameters>
      <Docs>
        <param name="callback">Callback to control the lifecycle of this action mode</param>
        <summary>[TODO: @inheritDoc]</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onWindowStartingActionMode(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onWindowStartingActionMode(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowStartingActionMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode? OnWindowStartingActionMode (Android.Views.ActionMode.ICallback? callback, Android.Views.ActionModeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode OnWindowStartingActionMode(class Android.Views.ActionMode/ICallback callback, valuetype Android.Views.ActionModeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback,Android.Views.ActionModeType)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowStartingActionMode : Android.Views.ActionMode.ICallback * Android.Views.ActionModeType -&gt; Android.Views.ActionMode&#xA;override this.OnWindowStartingActionMode : Android.Views.ActionMode.ICallback * Android.Views.ActionModeType -&gt; Android.Views.ActionMode" Usage="dreamService.OnWindowStartingActionMode (callback, type)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback,Android.Views.ActionModeType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "GetOnWindowStartingActionMode_Landroid_view_ActionMode_Callback_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "GetOnWindowStartingActionMode_Landroid_view_ActionMode_Callback_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
        <Parameter Name="type" Type="Android.Views.ActionModeType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="type">To be added.</param>
        <summary>[TODO: @inheritDoc]</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#onWindowStartingActionMode(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.onWindowStartingActionMode(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireViewById">
      <MemberSignature Language="C#" Value="public Java.Lang.Object RequireViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object RequireViewById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.RequireViewById(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RequireViewById : int -&gt; Java.Lang.Object" Usage="dreamService.RequireViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requireViewById", "(I)Landroid/view/View;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requireViewById", "(I)Landroid/view/View;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.view.View" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.view.View" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">the ID to search for</param>
        <summary>Finds a view that was identified by the id attribute from the XML that was processed in
            <c>#onCreate</c>, or throws an IllegalArgumentException if the ID is invalid or there is no
            matching view in the hierarchy.</summary>
        <returns>a view with given ID</returns>
        <remarks>
          <para>Finds a view that was identified by the id attribute from the XML that was processed in
            <c>#onCreate</c>, or throws an IllegalArgumentException if the ID is invalid or there is no
            matching view in the hierarchy.</para>
          <para>Note: Requires a window, do not call before <c>#onAttachedToWindow()</c></para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; In most cases -- depending on compiler support --
            the resulting view is automatically cast to the target class type. If
            the target class type is unconstrained, an explicit cast may be
            necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#requireViewById(int)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.requireViewById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBright">
      <MemberSignature Language="C#" Value="public virtual bool ScreenBright { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenBright" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Dreams.DreamService.ScreenBright" />
      <MemberSignature Language="F#" Value="member this.ScreenBright : bool with get, set" Usage="Android.Service.Dreams.DreamService.ScreenBright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isScreenBright", "()Z", "GetIsScreenBrightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isScreenBright", "()Z", "GetIsScreenBrightHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScreenBright", "(Z)V", "GetSetScreenBright_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScreenBright", "(Z)V", "GetSetScreenBright_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="screenBright">True to keep the screen bright while dreaming.</param>
        <summary>Returns whether this dream keeps the screen bright while dreaming. -or- Marks this dream as keeping the screen bright while dreaming.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this dream keeps the screen bright while dreaming.
            Defaults to false, allowing the screen to dim if necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#isScreenBright()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.isScreenBright()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Marks this dream as keeping the screen bright while dreaming.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#setScreenBright(boolean)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.setScreenBright(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Service.Dreams.DreamService.ScreenBright" />
      </Docs>
    </Member>
    <Member MemberName="ServiceInterface">
      <MemberSignature Language="C#" Value="public const string ServiceInterface;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceInterface" />
      <MemberSignature Language="DocId" Value="F:Android.Service.Dreams.DreamService.ServiceInterface" />
      <MemberSignature Language="F#" Value="val mutable ServiceInterface : string" Usage="Android.Service.Dreams.DreamService.ServiceInterface" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.Views.Window.ICallback._members</InterfaceMember>
        <InterfaceMember>F:Android.Views.Window.ICallback.cb_onPointerCaptureChanged_Z</InterfaceMember>
        <InterfaceMember>F:Android.Views.Window.ICallback.cb_onProvideKeyboardShortcuts_Ljava_util_List_Landroid_view_Menu_I</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SERVICE_INTERFACE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SERVICE_INTERFACE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Intent</c> that must be declared as handled by the service.</summary>
        <remarks>
          <para>The <c>Intent</c> that must be declared as handled by the service.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#SERVICE_INTERFACE" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.SERVICE_INTERFACE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public virtual void SetContentView (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.SetContentView(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : Android.Views.View -&gt; unit&#xA;override this.SetContentView : Android.Views.View -&gt; unit" Usage="dreamService.SetContentView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>Sets a view to be the content view for this Dream.</summary>
        <remarks>
          <para>Sets a view to be the content view for this Dream.
            Behaves similarly to <c>android.app.Activity#setContentView(android.view.View)</c> in an activity,
            including using <c>ViewGroup.LayoutParams#MATCH_PARENT</c> as the layout height and width of the view.</para>
          <para>Note: This requires a window, so you should usually call it during
            <c>#onAttachedToWindow()</c> and never earlier (you &lt;strong&gt;cannot&lt;/strong&gt; call it
            during <c>#onCreate</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#setContentView(android.view.View)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.setContentView(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Service.Dreams.DreamService.SetContentView(System.Int32)" />
        <altmember cref="M:Android.Service.Dreams.DreamService.SetContentView(Android.Views.View, .LayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public virtual void SetContentView (int layoutResID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(int32 layoutResID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.SetContentView(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : int -&gt; unit&#xA;override this.SetContentView : int -&gt; unit" Usage="dreamService.SetContentView layoutResID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(I)V", "GetSetContentView_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(I)V", "GetSetContentView_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutResID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="layoutResID">Resource ID to be inflated.</param>
        <summary>Inflates a layout resource and set it to be the content view for this Dream.</summary>
        <remarks>
          <para>Inflates a layout resource and set it to be the content view for this Dream.
            Behaves similarly to <c>android.app.Activity#setContentView(int)</c>.</para>
          <para>Note: Requires a window, do not call before <c>#onAttachedToWindow()</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#setContentView(int)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.setContentView(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Service.Dreams.DreamService.SetContentView(Android.Views.View)" />
        <altmember cref="M:Android.Service.Dreams.DreamService.SetContentView(Android.Views.View, .LayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public virtual void SetContentView (Android.Views.View? view, Android.Views.ViewGroup.LayoutParams? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(class Android.Views.View view, class Android.Views.ViewGroup/LayoutParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.SetContentView(Android.Views.View,Android.Views.ViewGroup.LayoutParams)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit&#xA;override this.SetContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit" Usage="dreamService.SetContentView (view, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetSetContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetSetContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="params" Type="Android.Views.ViewGroup+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <param name="params">Layout parameters for the view.</param>
        <summary>Inflates a layout resource and set it to be the content view for this Dream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#setContentView(int)" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.setContentView(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Service.Dreams.DreamService.SetContentView(Android.Views.View)" />
        <altmember cref="M:Android.Service.Dreams.DreamService.SetContentView(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Dreams.DreamService.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Service.Dreams.DreamService.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Dreams.DreamService.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Service.Dreams.DreamService.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WakeUp">
      <MemberSignature Language="C#" Value="public void WakeUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WakeUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Dreams.DreamService.WakeUp" />
      <MemberSignature Language="F#" Value="member this.WakeUp : unit -&gt; unit" Usage="dreamService.WakeUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wakeUp", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wakeUp", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wakes the dream up gently.</summary>
        <remarks>
          <para>Wakes the dream up gently.</para>
          <para>Calls <c>#onWakeUp</c> to give the dream a chance to perform an exit transition.
            When the transition is over, the dream should call <c>#finish</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#wakeUp()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.wakeUp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Window? Window { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Window Window" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Dreams.DreamService.Window" />
      <MemberSignature Language="F#" Value="member this.Window : Android.Views.Window" Usage="Android.Service.Dreams.DreamService.Window" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindow", "()Landroid/view/Window;", "GetGetWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindow", "()Landroid/view/Window;", "GetGetWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the current <c>android.view.Window</c> for the dream.</summary>
        <value>The current window, or null if the dream is not started.</value>
        <remarks>
          <para>Retrieves the current <c>android.view.Window</c> for the dream.
            Behaves similarly to <c>android.app.Activity#getWindow()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#getWindow()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.getWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="WindowManager">
      <MemberSignature Language="C#" Value="public virtual Android.Views.IWindowManager? WindowManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IWindowManager WindowManager" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Dreams.DreamService.WindowManager" />
      <MemberSignature Language="F#" Value="member this.WindowManager : Android.Views.IWindowManager" Usage="Android.Service.Dreams.DreamService.WindowManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowManager", "()Landroid/view/WindowManager;", "GetGetWindowManagerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowManager", "()Landroid/view/WindowManager;", "GetGetWindowManagerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IWindowManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the current <c>android.view.WindowManager</c> for the dream.</summary>
        <value>The current window manager, or null if the dream is not started.</value>
        <remarks>
          <para>Retrieves the current <c>android.view.WindowManager</c> for the dream.
            Behaves similarly to <c>android.app.Activity#getWindowManager()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/dreams/DreamService#getWindowManager()" title="Reference documentation">Java documentation for <code>android.service.dreams.DreamService.getWindowManager()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
  </Members>
</Type>
