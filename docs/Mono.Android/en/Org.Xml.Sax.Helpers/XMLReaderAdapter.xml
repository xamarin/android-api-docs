<Type Name="XMLReaderAdapter" FullName="Org.Xml.Sax.Helpers.XMLReaderAdapter">
  <TypeSignature Language="C#" Value="public class XMLReaderAdapter : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Org.Xml.Sax.IContentHandler, Org.Xml.Sax.IParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XMLReaderAdapter extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.Xml.Sax.IContentHandler, class Org.Xml.Sax.IParser, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.Helpers.XMLReaderAdapter" />
  <TypeSignature Language="F#" Value="type XMLReaderAdapter = class&#xA;    inherit Object&#xA;    interface IContentHandler&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IParser" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IContentHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IParser</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/helpers/XMLReaderAdapter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Adapt a SAX2 XMLReader as a SAX1 Parser.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/helpers/XMLReaderAdapter" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XMLReaderAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a new adapter.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">If the embedded driver
            cannot be instantiated or if the
            org.xml.sax.driver property is not specified.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XMLReaderAdapter (Org.Xml.Sax.IXMLReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Org.Xml.Sax.IXMLReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.#ctor(Org.Xml.Sax.IXMLReader)" />
      <MemberSignature Language="F#" Value="new Org.Xml.Sax.Helpers.XMLReaderAdapter : Org.Xml.Sax.IXMLReader -&gt; Org.Xml.Sax.Helpers.XMLReaderAdapter" Usage="new Org.Xml.Sax.Helpers.XMLReaderAdapter xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Lorg/xml/sax/XMLReader;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="Org.Xml.Sax.IXMLReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">To be added.</param>
        <summary>Create a new adapter.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">If the argument is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XMLReaderAdapter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Org.Xml.Sax.Helpers.XMLReaderAdapter : nativeint * Android.Runtime.JniHandleOwnership -&gt; Org.Xml.Sax.Helpers.XMLReaderAdapter" Usage="new Org.Xml.Sax.Helpers.XMLReaderAdapter (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public virtual void Characters (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Characters(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.Characters(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Characters : char[] * int * int -&gt; unit&#xA;override this.Characters : char[] * int * int -&gt; unit" Usage="xMLReaderAdapter.Characters (ch, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">An array of characters.</param>
        <param name="start">The starting position in the array.</param>
        <param name="length">The number of characters to use.</param>
        <summary>Adapt a SAX2 characters event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The client may raise a
            processing exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IContentHandler.Characters(System.Char[], System.Int32, System.Int32)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.Characters(System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="EndDocument">
      <MemberSignature Language="C#" Value="public virtual void EndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.EndDocument" />
      <MemberSignature Language="F#" Value="abstract member EndDocument : unit -&gt; unit&#xA;override this.EndDocument : unit -&gt; unit" Usage="xMLReaderAdapter.EndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>End document event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The client may raise a
            processing exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IContentHandler.EndDocument" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.EndDocument</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="EndElement">
      <MemberSignature Language="C#" Value="public virtual void EndElement (string uri, string localName, string qName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndElement(string uri, string localName, string qName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.EndElement(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EndElement : string * string * string -&gt; unit&#xA;override this.EndElement : string * string * string -&gt; unit" Usage="xMLReaderAdapter.EndElement (uri, localName, qName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="qName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The Namespace URI.</param>
        <param name="localName">The Namespace local name.</param>
        <param name="qName">The qualified (prefixed) name.</param>
        <summary>Adapt a SAX2 end element event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The client may raise a
            processing exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IContentHandler.EndElement(System.String, System.String, System.String)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.EndElement(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="EndPrefixMapping">
      <MemberSignature Language="C#" Value="public virtual void EndPrefixMapping (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndPrefixMapping(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.EndPrefixMapping(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EndPrefixMapping : string -&gt; unit&#xA;override this.EndPrefixMapping : string -&gt; unit" Usage="xMLReaderAdapter.EndPrefixMapping prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endPrefixMapping", "(Ljava/lang/String;)V", "GetEndPrefixMapping_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix being mapped.</param>
        <summary>Adapt a SAX2 end prefix mapping event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IContentHandler.EndPrefixMapping(System.String)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.EndPrefixMapping(System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="IgnorableWhitespace">
      <MemberSignature Language="C#" Value="public virtual void IgnorableWhitespace (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IgnorableWhitespace(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IgnorableWhitespace : char[] * int * int -&gt; unit&#xA;override this.IgnorableWhitespace : char[] * int * int -&gt; unit" Usage="xMLReaderAdapter.IgnorableWhitespace (ch, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">An array of characters.</param>
        <param name="start">The starting position in the array.</param>
        <param name="length">The number of characters to use.</param>
        <summary>Adapt a SAX2 ignorable whitespace event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The client may raise a
            processing exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IContentHandler.IgnorableWhitespace(System.Char[], System.Int32, System.Int32)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.Helpers.XMLReaderAdapter.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Org.Xml.Sax.Helpers.XMLReaderAdapter.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (Org.Xml.Sax.InputSource input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Org.Xml.Sax.InputSource input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.Parse(Org.Xml.Sax.InputSource)" />
      <MemberSignature Language="F#" Value="abstract member Parse : Org.Xml.Sax.InputSource -&gt; unit&#xA;override this.Parse : Org.Xml.Sax.InputSource -&gt; unit" Usage="xMLReaderAdapter.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;)V", "GetParse_Lorg_xml_sax_InputSource_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Org.Xml.Sax.InputSource" />
      </Parameters>
      <Docs>
        <param name="input">An input source for the document.</param>
        <summary>Parse the document.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If there is a problem reading
            the raw content of the document.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If there is a problem
            processing the document.</exception>
        <altmember cref="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.Parse(System.String)" />
        <altmember cref="M:Org.Xml.Sax.IParser.Parse(Org.Xml.Sax.InputSource)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IParser.Parse(Org.Xml.Sax.InputSource)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.Parse(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Parse : string -&gt; unit&#xA;override this.Parse : string -&gt; unit" Usage="xMLReaderAdapter.Parse systemId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/lang/String;)V", "GetParse_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="systemId">The absolute URL of the document.</param>
        <summary>Parse the document.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If there is a problem reading
            the raw content of the document.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If there is a problem
            processing the document.</exception>
        <altmember cref="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.Parse(Org.Xml.Sax.InputSource)" />
        <altmember cref="M:Org.Xml.Sax.IParser.Parse(System.String)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IParser.Parse(System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="ProcessingInstruction">
      <MemberSignature Language="C#" Value="public virtual void ProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.ProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ProcessingInstruction : string * string -&gt; unit&#xA;override this.ProcessingInstruction : string * string -&gt; unit" Usage="xMLReaderAdapter.ProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">The processing instruction target.</param>
        <param name="data">The remainder of the processing instruction</param>
        <summary>Adapt a SAX2 processing instruction event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The client may raise a
            processing exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IContentHandler.ProcessingInstruction(System.String, System.String)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.ProcessingInstruction(System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="SetDocumentHandler">
      <MemberSignature Language="C#" Value="public virtual void SetDocumentHandler (Org.Xml.Sax.IDocumentHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocumentHandler(class Org.Xml.Sax.IDocumentHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.SetDocumentHandler(Org.Xml.Sax.IDocumentHandler)" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentHandler : Org.Xml.Sax.IDocumentHandler -&gt; unit&#xA;override this.SetDocumentHandler : Org.Xml.Sax.IDocumentHandler -&gt; unit" Usage="xMLReaderAdapter.SetDocumentHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDocumentHandler", "(Lorg/xml/sax/DocumentHandler;)V", "GetSetDocumentHandler_Lorg_xml_sax_DocumentHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Org.Xml.Sax.IDocumentHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The new SAX1 document event handler.</param>
        <summary>Register the SAX1 document event handler.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IParser.SetDocumentHandler(Org.Xml.Sax.IDocumentHandler)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IParser.SetDocumentHandler(Org.Xml.Sax.IDocumentHandler)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="SetDocumentLocator">
      <MemberSignature Language="C#" Value="public virtual void SetDocumentLocator (Org.Xml.Sax.ILocator locator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocumentLocator(class Org.Xml.Sax.ILocator locator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.SetDocumentLocator(Org.Xml.Sax.ILocator)" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentLocator : Org.Xml.Sax.ILocator -&gt; unit&#xA;override this.SetDocumentLocator : Org.Xml.Sax.ILocator -&gt; unit" Usage="xMLReaderAdapter.SetDocumentLocator locator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locator" Type="Org.Xml.Sax.ILocator" />
      </Parameters>
      <Docs>
        <param name="locator">The document locator.</param>
        <summary>Set a document locator.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IContentHandler.SetDocumentLocator(Org.Xml.Sax.ILocator)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.SetDocumentLocator(Org.Xml.Sax.ILocator)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="SetDTDHandler">
      <MemberSignature Language="C#" Value="public virtual void SetDTDHandler (Org.Xml.Sax.IDTDHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDTDHandler(class Org.Xml.Sax.IDTDHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.SetDTDHandler(Org.Xml.Sax.IDTDHandler)" />
      <MemberSignature Language="F#" Value="abstract member SetDTDHandler : Org.Xml.Sax.IDTDHandler -&gt; unit&#xA;override this.SetDTDHandler : Org.Xml.Sax.IDTDHandler -&gt; unit" Usage="xMLReaderAdapter.SetDTDHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDTDHandler", "(Lorg/xml/sax/DTDHandler;)V", "GetSetDTDHandler_Lorg_xml_sax_DTDHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Org.Xml.Sax.IDTDHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The new DTD event handler.</param>
        <summary>Register the DTD event handler.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IParser.SetDTDHandler(Org.Xml.Sax.IDTDHandler)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IParser.SetDTDHandler(Org.Xml.Sax.IDTDHandler)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="SetEntityResolver">
      <MemberSignature Language="C#" Value="public virtual void SetEntityResolver (Org.Xml.Sax.IEntityResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEntityResolver(class Org.Xml.Sax.IEntityResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.SetEntityResolver(Org.Xml.Sax.IEntityResolver)" />
      <MemberSignature Language="F#" Value="abstract member SetEntityResolver : Org.Xml.Sax.IEntityResolver -&gt; unit&#xA;override this.SetEntityResolver : Org.Xml.Sax.IEntityResolver -&gt; unit" Usage="xMLReaderAdapter.SetEntityResolver resolver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEntityResolver", "(Lorg/xml/sax/EntityResolver;)V", "GetSetEntityResolver_Lorg_xml_sax_EntityResolver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Org.Xml.Sax.IEntityResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">The new resolver.</param>
        <summary>Register the entity resolver.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IParser.SetEntityResolver(Org.Xml.Sax.IEntityResolver)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IParser.SetEntityResolver(Org.Xml.Sax.IEntityResolver)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="SetErrorHandler">
      <MemberSignature Language="C#" Value="public virtual void SetErrorHandler (Org.Xml.Sax.IErrorHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetErrorHandler(class Org.Xml.Sax.IErrorHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.SetErrorHandler(Org.Xml.Sax.IErrorHandler)" />
      <MemberSignature Language="F#" Value="abstract member SetErrorHandler : Org.Xml.Sax.IErrorHandler -&gt; unit&#xA;override this.SetErrorHandler : Org.Xml.Sax.IErrorHandler -&gt; unit" Usage="xMLReaderAdapter.SetErrorHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Org.Xml.Sax.IErrorHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The new error event handler.</param>
        <summary>Register the error event handler.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IParser.SetErrorHandler(Org.Xml.Sax.IErrorHandler)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IParser.SetErrorHandler(Org.Xml.Sax.IErrorHandler)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="SetLocale">
      <MemberSignature Language="C#" Value="public virtual void SetLocale (Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocale(class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.SetLocale(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="abstract member SetLocale : Java.Util.Locale -&gt; unit&#xA;override this.SetLocale : Java.Util.Locale -&gt; unit" Usage="xMLReaderAdapter.SetLocale locale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLocale", "(Ljava/util/Locale;)V", "GetSetLocale_Ljava_util_Locale_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">the locale for error reporting.</param>
        <summary>Set the locale for error reporting.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Thrown unless overridden.
</exception>
        <altmember cref="M:Org.Xml.Sax.IParser.SetLocale(Java.Util.Locale)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IParser.SetLocale(Java.Util.Locale)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="SkippedEntity">
      <MemberSignature Language="C#" Value="public virtual void SkippedEntity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SkippedEntity(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.SkippedEntity(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SkippedEntity : string -&gt; unit&#xA;override this.SkippedEntity : string -&gt; unit" Usage="xMLReaderAdapter.SkippedEntity name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("skippedEntity", "(Ljava/lang/String;)V", "GetSkippedEntity_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the skipped entity.</param>
        <summary>Adapt a SAX2 skipped entity event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Throwable by subclasses.
</exception>
        <altmember cref="M:Org.Xml.Sax.IContentHandler.SkippedEntity(System.String)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.SkippedEntity(System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="StartDocument">
      <MemberSignature Language="C#" Value="public virtual void StartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.StartDocument" />
      <MemberSignature Language="F#" Value="abstract member StartDocument : unit -&gt; unit&#xA;override this.StartDocument : unit -&gt; unit" Usage="xMLReaderAdapter.StartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start document event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The client may raise a
            processing exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IContentHandler.StartDocument" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.StartDocument</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="StartElement">
      <MemberSignature Language="C#" Value="public virtual void StartElement (string uri, string localName, string qName, Org.Xml.Sax.IAttributes atts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartElement(string uri, string localName, string qName, class Org.Xml.Sax.IAttributes atts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.StartElement(System.String,System.String,System.String,Org.Xml.Sax.IAttributes)" />
      <MemberSignature Language="F#" Value="abstract member StartElement : string * string * string * Org.Xml.Sax.IAttributes -&gt; unit&#xA;override this.StartElement : string * string * string * Org.Xml.Sax.IAttributes -&gt; unit" Usage="xMLReaderAdapter.StartElement (uri, localName, qName, atts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startElement", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V", "GetStartElement_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Lorg_xml_sax_Attributes_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="qName" Type="System.String" />
        <Parameter Name="atts" Type="Org.Xml.Sax.IAttributes" />
      </Parameters>
      <Docs>
        <param name="uri">The Namespace URI.</param>
        <param name="localName">The Namespace local name.</param>
        <param name="qName">The qualified (prefixed) name.</param>
        <param name="atts">The SAX2 attributes.</param>
        <summary>Adapt a SAX2 start element event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The client may raise a
            processing exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IContentHandler.EndDocument" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,Org.Xml.Sax.IAttributes)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="StartPrefixMapping">
      <MemberSignature Language="C#" Value="public virtual void StartPrefixMapping (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartPrefixMapping(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Helpers.XMLReaderAdapter.StartPrefixMapping(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member StartPrefixMapping : string * string -&gt; unit&#xA;override this.StartPrefixMapping : string * string -&gt; unit" Usage="xMLReaderAdapter.StartPrefixMapping (prefix, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startPrefixMapping", "(Ljava/lang/String;Ljava/lang/String;)V", "GetStartPrefixMapping_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix being mapped.</param>
        <param name="uri">The Namespace URI being mapped to.</param>
        <summary>Adapt a SAX2 start prefix mapping event.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IContentHandler.StartPrefixMapping(System.String, System.String)" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IContentHandler.StartPrefixMapping(System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.Helpers.XMLReaderAdapter.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Org.Xml.Sax.Helpers.XMLReaderAdapter.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.Helpers.XMLReaderAdapter.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Org.Xml.Sax.Helpers.XMLReaderAdapter.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
