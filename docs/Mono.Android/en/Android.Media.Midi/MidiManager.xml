<Type Name="MidiManager" FullName="Android.Media.Midi.MidiManager">
  <TypeSignature Language="C#" Value="public sealed class MidiManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MidiManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.Midi.MidiManager" />
  <TypeSignature Language="F#" Value="type MidiManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/midi/MidiManager", ApiSince=23, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class is the public application interface to the MIDI service.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/midi/MidiManager" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDevices">
      <MemberSignature Language="C#" Value="public Android.Media.Midi.MidiDeviceInfo[] GetDevices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.Midi.MidiDeviceInfo[] GetDevices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Midi.MidiManager.GetDevices" />
      <MemberSignature Language="F#" Value="member this.GetDevices : unit -&gt; Android.Media.Midi.MidiDeviceInfo[]" Usage="midiManager.GetDevices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDevices", "()[Landroid/media/midi/MidiDeviceInfo;", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Midi.MidiDeviceInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the list of all connected MIDI devices.</summary>
        <returns>an array of all MIDI devices</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Midi.MidiManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.Midi.MidiManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenBluetoothDevice">
      <MemberSignature Language="C#" Value="public void OpenBluetoothDevice (Android.Bluetooth.BluetoothDevice bluetoothDevice, Android.Media.Midi.MidiManager.IOnDeviceOpenedListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenBluetoothDevice(class Android.Bluetooth.BluetoothDevice bluetoothDevice, class Android.Media.Midi.MidiManager/IOnDeviceOpenedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Midi.MidiManager.OpenBluetoothDevice(Android.Bluetooth.BluetoothDevice,Android.Media.Midi.MidiManager.IOnDeviceOpenedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.OpenBluetoothDevice : Android.Bluetooth.BluetoothDevice * Android.Media.Midi.MidiManager.IOnDeviceOpenedListener * Android.OS.Handler -&gt; unit" Usage="midiManager.OpenBluetoothDevice (bluetoothDevice, listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openBluetoothDevice", "(Landroid/bluetooth/BluetoothDevice;Landroid/media/midi/MidiManager$OnDeviceOpenedListener;Landroid/os/Handler;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bluetoothDevice" Type="Android.Bluetooth.BluetoothDevice" />
        <Parameter Name="listener" Type="Android.Media.Midi.MidiManager+IOnDeviceOpenedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="bluetoothDevice">a <c>android.bluetooth.BluetoothDevice</c> to open as a MIDI device</param>
        <param name="listener">a <c>MidiManager.OnDeviceOpenedListener</c> to be called to receive the
            result</param>
        <param name="handler">the <c>android.os.Handler Handler</c> that will be used for delivering
                           the result. If handler is null, then the thread used for the
                           listener is unspecified.</param>
        <summary>Opens a Bluetooth MIDI device for reading and writing.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDevice">
      <MemberSignature Language="C#" Value="public void OpenDevice (Android.Media.Midi.MidiDeviceInfo deviceInfo, Android.Media.Midi.MidiManager.IOnDeviceOpenedListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenDevice(class Android.Media.Midi.MidiDeviceInfo deviceInfo, class Android.Media.Midi.MidiManager/IOnDeviceOpenedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Midi.MidiManager.OpenDevice(Android.Media.Midi.MidiDeviceInfo,Android.Media.Midi.MidiManager.IOnDeviceOpenedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.OpenDevice : Android.Media.Midi.MidiDeviceInfo * Android.Media.Midi.MidiManager.IOnDeviceOpenedListener * Android.OS.Handler -&gt; unit" Usage="midiManager.OpenDevice (deviceInfo, listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openDevice", "(Landroid/media/midi/MidiDeviceInfo;Landroid/media/midi/MidiManager$OnDeviceOpenedListener;Landroid/os/Handler;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceInfo" Type="Android.Media.Midi.MidiDeviceInfo" />
        <Parameter Name="listener" Type="Android.Media.Midi.MidiManager+IOnDeviceOpenedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="deviceInfo">a <c>android.media.midi.MidiDeviceInfo</c> to open</param>
        <param name="listener">a <c>MidiManager.OnDeviceOpenedListener</c> to be called
                            to receive the result</param>
        <param name="handler">the <c>android.os.Handler Handler</c> that will be used for delivering
                           the result. If handler is null, then the thread used for the
                           listener is unspecified.</param>
        <summary>Opens a MIDI device for reading and writing.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDeviceCallback">
      <MemberSignature Language="C#" Value="public void RegisterDeviceCallback (Android.Media.Midi.MidiManager.DeviceCallback callback, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDeviceCallback(class Android.Media.Midi.MidiManager/DeviceCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Midi.MidiManager.RegisterDeviceCallback(Android.Media.Midi.MidiManager.DeviceCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.RegisterDeviceCallback : Android.Media.Midi.MidiManager.DeviceCallback * Android.OS.Handler -&gt; unit" Usage="midiManager.RegisterDeviceCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerDeviceCallback", "(Landroid/media/midi/MidiManager$DeviceCallback;Landroid/os/Handler;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.Midi.MidiManager+DeviceCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">a <c>DeviceCallback</c> for MIDI device notifications</param>
        <param name="handler">The <c>android.os.Handler Handler</c> that will be used for delivering the
                           device notifications. If handler is null, then the thread used for the
                           callback is unspecified.</param>
        <summary>Registers a callback to receive notifications when MIDI devices are added and removed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Midi.MidiManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.Midi.MidiManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Midi.MidiManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.Midi.MidiManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDeviceCallback">
      <MemberSignature Language="C#" Value="public void UnregisterDeviceCallback (Android.Media.Midi.MidiManager.DeviceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterDeviceCallback(class Android.Media.Midi.MidiManager/DeviceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Midi.MidiManager.UnregisterDeviceCallback(Android.Media.Midi.MidiManager.DeviceCallback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterDeviceCallback : Android.Media.Midi.MidiManager.DeviceCallback -&gt; unit" Usage="midiManager.UnregisterDeviceCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterDeviceCallback", "(Landroid/media/midi/MidiManager$DeviceCallback;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.Midi.MidiManager+DeviceCallback" />
      </Parameters>
      <Docs>
        <param name="callback">a <c>DeviceCallback</c> to unregister</param>
        <summary>Unregisters a <c>DeviceCallback</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
