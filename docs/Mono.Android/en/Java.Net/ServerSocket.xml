<Type Name="ServerSocket" FullName="Java.Net.ServerSocket">
  <TypeSignature Language="VB.NET" Value="Public Class ServerSocket&#xA;Inherits Object&#xA;Implements ICloseable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServerSocket : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Java::IO::ICloseable" />
  <TypeSignature Language="C#" Value="public class ServerSocket : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerSocket extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Net.ServerSocket" />
  <TypeSignature Language="F#" Value="type ServerSocket = class&#xA;    inherit Object&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/net/ServerSocket", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/net/ServerSocket", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class implements server sockets.</summary>
    <remarks>
      <para>This class implements server sockets. A server socket waits for
            requests to come in over the network. It performs some operation
            based on that request, and then possibly returns a result to the requester.</para>
      <para>The actual work of the server socket is performed by an instance
            of the <c>SocketImpl</c> class. An application can
            change the socket factory that creates the socket
            implementation to configure itself to create sockets
            appropriate to the local firewall.</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/net/ServerSocket" title="Reference documentation">Java documentation for <code>java.net.ServerSocket</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerSocket();" />
      <MemberSignature Language="C#" Value="public ServerSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates an unbound server socket.</summary>
        <remarks>
          <para>Creates an unbound server socket.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#ServerSocket()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.ServerSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerSocket(int port);" />
      <MemberSignature Language="C#" Value="public ServerSocket (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.ServerSocket : int -&gt; Java.Net.ServerSocket" Usage="new Java.Net.ServerSocket port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">the port number, or <c>0</c> to use a port
                              number that is automatically allocated.</param>
        <summary>Creates a server socket, bound to the specified port.</summary>
        <remarks>
          <para>Creates a server socket, bound to the specified port. A port number
            of <c>0</c> means that the port number is automatically
            allocated, typically from an ephemeral port range. This port
            number can then be retrieved by calling <c>#getLocalPort getLocalPort</c>.</para>
          <para>The maximum queue length for incoming connection indications (a
            request to connect) is set to <c>50</c>. If a connection
            indication arrives when the queue is full, the connection is refused.</para>
          <para>If the application has specified a server socket factory, that
            factory's <c>createSocketImpl</c> method is called to create
            the actual socket implementation. Otherwise a "plain" socket is created.</para>
          <para>If there is a security manager,
            its <c>checkListen</c> method is called
            with the <c>port</c> argument
            as its argument to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#ServerSocket(int)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.ServerSocket(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerSocket(int port, int backlog);" />
      <MemberSignature Language="C#" Value="public ServerSocket (int port, int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.ServerSocket : int * int -&gt; Java.Net.ServerSocket" Usage="new Java.Net.ServerSocket (port, backlog)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">the port number, or <c>0</c> to use a port
                                 number that is automatically allocated.</param>
        <param name="backlog">requested maximum length of the queue of incoming
                                 connections.</param>
        <summary>Creates a server socket and binds it to the specified local port
            number, with the specified backlog.</summary>
        <remarks>
          <para>Creates a server socket and binds it to the specified local port
            number, with the specified backlog.
            A port number of <c>0</c> means that the port number is
            automatically allocated, typically from an ephemeral port range.
            This port number can then be retrieved by calling
            <c>#getLocalPort getLocalPort</c>.</para>
          <para>The maximum queue length for incoming connection indications (a
            request to connect) is set to the <c>backlog</c> parameter. If
            a connection indication arrives when the queue is full, the
            connection is refused.</para>
          <para>If the application has specified a server socket factory, that
            factory's <c>createSocketImpl</c> method is called to create
            the actual socket implementation. Otherwise a "plain" socket is created.</para>
          <para>If there is a security manager,
            its <c>checkListen</c> method is called
            with the <c>port</c> argument
            as its argument to ensure the operation is allowed.
            This could result in a SecurityException.
            
            The <c>backlog</c> argument is the requested maximum number of
            pending connections on the socket. Its exact semantics are implementation
            specific. In particular, an implementation may impose a maximum length
            or may choose to ignore the parameter altogther. The value provided
            should be greater than <c>0</c>. If it is less than or equal to
            <c>0</c>, then an implementation specific default will be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#ServerSocket(int,%20int)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.ServerSocket(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServerSocket(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ServerSocket (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Net.ServerSocket : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Net.ServerSocket" Usage="new Java.Net.ServerSocket (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, backlog As Integer, bindAddr As InetAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerSocket(int port, int backlog, Java::Net::InetAddress ^ bindAddr);" />
      <MemberSignature Language="C#" Value="public ServerSocket (int port, int backlog, Java.Net.InetAddress? bindAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, int32 backlog, class Java.Net.InetAddress bindAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.#ctor(System.Int32,System.Int32,Java.Net.InetAddress)" />
      <MemberSignature Language="F#" Value="new Java.Net.ServerSocket : int * int * Java.Net.InetAddress -&gt; Java.Net.ServerSocket" Usage="new Java.Net.ServerSocket (port, backlog, bindAddr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IILjava/net/InetAddress;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IILjava/net/InetAddress;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="backlog" Type="System.Int32" />
        <Parameter Name="bindAddr" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="port">the port number, or <c>0</c> to use a port
                         number that is automatically allocated.</param>
        <param name="backlog">requested maximum length of the queue of incoming
                           connections.</param>
        <param name="bindAddr">the local InetAddress the server will bind to</param>
        <summary>Create a server with the specified port, listen backlog, and
            local IP address to bind to.</summary>
        <remarks>
          <para>Create a server with the specified port, listen backlog, and
            local IP address to bind to.  The <i>bindAddr</i> argument
            can be used on a multi-homed host for a ServerSocket that
            will only accept connect requests to one of its addresses.
            If <i>bindAddr</i> is null, it will default accepting
            connections on any/all local addresses.
            The port must be between 0 and 65535, inclusive.
            A port number of <c>0</c> means that the port number is
            automatically allocated, typically from an ephemeral port range.
            This port number can then be retrieved by calling
            <c>#getLocalPort getLocalPort</c>.</para>
          <para>If there is a security manager, this method
            calls its <c>checkListen</c> method
            with the <c>port</c> argument
            as its argument to ensure the operation is allowed.
            This could result in a SecurityException.
            
            The <c>backlog</c> argument is the requested maximum number of
            pending connections on the socket. Its exact semantics are implementation
            specific. In particular, an implementation may impose a maximum length
            or may choose to ignore the parameter altogther. The value provided
            should be greater than <c>0</c>. If it is less than or equal to
            <c>0</c>, then an implementation specific default will be used.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#ServerSocket(int,%20int,%20java.net.InetAddress)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.ServerSocket(int, int, java.net.InetAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Accept () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Net::Socket ^ Accept();" />
      <MemberSignature Language="C#" Value="public virtual Java.Net.Socket? Accept ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket Accept() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.Accept" />
      <MemberSignature Language="F#" Value="abstract member Accept : unit -&gt; Java.Net.Socket&#xA;override this.Accept : unit -&gt; Java.Net.Socket" Usage="serverSocket.Accept " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("accept", "()Ljava/net/Socket;", "GetAcceptHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("accept", "()Ljava/net/Socket;", "GetAcceptHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Listens for a connection to be made to this socket and accepts
            it.</summary>
        <returns>the new Socket</returns>
        <remarks>
          <para>Listens for a connection to be made to this socket and accepts
            it. The method blocks until a connection is made.</para>
          <para>A new Socket <c>s</c> is created and, if there
            is a security manager,
            the security manager's <c>checkAccept</c> method is called
            with <c>s.getInetAddress().getHostAddress()</c> and
            <c>s.getPort()</c>
            as its arguments to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#accept()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.accept()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while accepting a new connection.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptAsync">
      <MemberSignature Language="VB.NET" Value="Public Function AcceptAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Java::Net::Socket ^&gt; ^ AcceptAsync();" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Net.Socket?&gt; AcceptAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Net.Socket&gt; AcceptAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.AcceptAsync" />
      <MemberSignature Language="F#" Value="member this.AcceptAsync : unit -&gt; System.Threading.Tasks.Task&lt;Java.Net.Socket&gt;" Usage="serverSocket.AcceptAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Net.Socket&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Bind (endpoint As SocketAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Bind(Java::Net::SocketAddress ^ endpoint);" />
      <MemberSignature Language="C#" Value="public virtual void Bind (Java.Net.SocketAddress? endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bind(class Java.Net.SocketAddress endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.Bind(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Bind : Java.Net.SocketAddress -&gt; unit&#xA;override this.Bind : Java.Net.SocketAddress -&gt; unit" Usage="serverSocket.Bind endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="endpoint">The IP address and port number to bind to.</param>
        <summary>Binds the <c>ServerSocket</c> to a specific address
            (IP address and port number).</summary>
        <remarks>
          <para>Binds the <c>ServerSocket</c> to a specific address
            (IP address and port number).</para>
          <para>If the address is <c>null</c>, then the system will pick up
            an ephemeral port and a valid local address to bind the socket.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#bind(java.net.SocketAddress)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.bind(java.net.SocketAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the <c>SocketAddress</c> is not supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already bound or a problem occurs during
             binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Bind (endpoint As SocketAddress, backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Bind(Java::Net::SocketAddress ^ endpoint, int backlog);" />
      <MemberSignature Language="C#" Value="public virtual void Bind (Java.Net.SocketAddress? endpoint, int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bind(class Java.Net.SocketAddress endpoint, int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.Bind(Java.Net.SocketAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Bind : Java.Net.SocketAddress * int -&gt; unit&#xA;override this.Bind : Java.Net.SocketAddress * int -&gt; unit" Usage="serverSocket.Bind (endpoint, backlog)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;I)V", "GetBind_Ljava_net_SocketAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;I)V", "GetBind_Ljava_net_SocketAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">The IP address and port number to bind to.</param>
        <param name="backlog">requested maximum length of the queue of
                                     incoming connections.</param>
        <summary>Binds the <c>ServerSocket</c> to a specific address
            (IP address and port number).</summary>
        <remarks>
          <para>Binds the <c>ServerSocket</c> to a specific address
            (IP address and port number).</para>
          <para>If the address is <c>null</c>, then the system will pick up
            an ephemeral port and a valid local address to bind the socket.</para>
          <para>The <c>backlog</c> argument is the requested maximum number of
            pending connections on the socket. Its exact semantics are implementation
            specific. In particular, an implementation may impose a maximum length
            or may choose to ignore the parameter altogther. The value provided
            should be greater than <c>0</c>. If it is less than or equal to
            <c>0</c>, then an implementation specific default will be used.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#bind(java.net.SocketAddress,%20int)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.bind(java.net.SocketAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the <c>SocketAddress</c> is not
     supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already bound or a problem occurs
     during binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Channel As ServerSocketChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Nio::Channels::ServerSocketChannel ^ Channel { Java::Nio::Channels::ServerSocketChannel ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.ServerSocketChannel? Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.Channels.ServerSocketChannel Channel" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.Channel" />
      <MemberSignature Language="F#" Value="member this.Channel : Java.Nio.Channels.ServerSocketChannel" Usage="Java.Net.ServerSocket.Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/ServerSocketChannel;", "GetGetChannelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/ServerSocketChannel;", "GetGetChannelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.ServerSocketChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the unique <c>java.nio.channels.ServerSocketChannel</c> object
            associated with this socket, if any.</summary>
        <value>the server-socket channel associated with this socket,
                     or <c>null</c> if this socket was not created
                     for a channel</value>
        <remarks>
          <para>Returns the unique <c>java.nio.channels.ServerSocketChannel</c> object
            associated with this socket, if any.</para>
          <para>A server socket will have a channel if, and only if, the channel
            itself was created via the <c>java.nio.channels.ServerSocketChannel#open ServerSocketChannel.open</c>
            method.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#getChannel()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.getChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="serverSocket.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.ICloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this socket.</summary>
        <remarks>
          <para>Closes this socket.
            
            Any thread currently blocked in <c>#accept()</c> will throw
            a <c>SocketException</c>.</para>
          <para>If this socket has an associated channel then the channel is closed
            as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#close()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing this socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOption">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOption (name As ISocketOption) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::Object ^ GetOption(Java::Net::ISocketOption ^ name);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? GetOption (Java.Net.ISocketOption? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetOption(class Java.Net.ISocketOption name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.GetOption(Java.Net.ISocketOption)" />
      <MemberSignature Language="F#" Value="abstract member GetOption : Java.Net.ISocketOption -&gt; Java.Lang.Object&#xA;override this.GetOption : Java.Net.ISocketOption -&gt; Java.Lang.Object" Usage="serverSocket.GetOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOption", "(Ljava/net/SocketOption;)Ljava/lang/Object;", "GetGetOption_Ljava_net_SocketOption_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOption", "(Ljava/net/SocketOption;)Ljava/lang/Object;", "GetGetOption_Ljava_net_SocketOption_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Java.Net.ISocketOption" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">The type of the socket option value</param>
        <param name="name">The socket option</param>
        <summary>Returns the value of a socket option.</summary>
        <returns>The value of the socket option.</returns>
        <remarks>
          <para>Returns the value of a socket option.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#getOption(java.net.SocketOption%3CT%3E)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.getOption(java.net.SocketOption&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplAccept">
      <MemberSignature Language="VB.NET" Value="Protected Sub ImplAccept (s As Socket)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ImplAccept(Java::Net::Socket ^ s);" />
      <MemberSignature Language="C#" Value="protected void ImplAccept (Java.Net.Socket? s);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ImplAccept(class Java.Net.Socket s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.ImplAccept(Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="member this.ImplAccept : Java.Net.Socket -&gt; unit" Usage="serverSocket.ImplAccept s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("implAccept", "(Ljava/net/Socket;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("implAccept", "(Ljava/net/Socket;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="s">the Socket</param>
        <summary>Subclasses of ServerSocket use this method to override accept()
            to return their own subclass of socket.</summary>
        <remarks>
          <para>Subclasses of ServerSocket use this method to override accept()
            to return their own subclass of socket.  So a FooServerSocket
            will typically hand this method an <i>empty</i> FooSocket.  On
            return from implAccept the FooSocket will be connected to a client.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#implAccept(java.net.Socket)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.implAccept(java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the connection cannot be accepted.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplAcceptAsync">
      <MemberSignature Language="VB.NET" Value="Protected Function ImplAcceptAsync (s As Socket) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Threading::Tasks::Task ^ ImplAcceptAsync(Java::Net::Socket ^ s);" />
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task ImplAcceptAsync (Java.Net.Socket? s);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task ImplAcceptAsync(class Java.Net.Socket s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.ImplAcceptAsync(Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="member this.ImplAcceptAsync : Java.Net.Socket -&gt; System.Threading.Tasks.Task" Usage="serverSocket.ImplAcceptAsync s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Net.Socket">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InetAddress">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InetAddress As InetAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Net::InetAddress ^ InetAddress { Java::Net::InetAddress ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress? InetAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress InetAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.InetAddress" />
      <MemberSignature Language="F#" Value="member this.InetAddress : Java.Net.InetAddress" Usage="Java.Net.ServerSocket.InetAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local address of this server socket.</summary>
        <value>the address to which this socket is bound,
                     or the loopback address if denied by the security manager,
                     or <c>null</c> if the socket is unbound.</value>
        <remarks>
          <para>Returns the local address of this server socket.</para>
          <para>If the socket was bound prior to being <c>#close closed</c>,
            then this method will continue to return the local address
            after the socket is closed.</para>
          <para>If there is a security manager set, its <c>checkConnect</c> method is
            called with the local address and <c>-1</c> as its arguments to see
            if the operation is allowed. If the operation is not allowed,
            the <c>InetAddress#getLoopbackAddress loopback</c> address is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#getInetAddress()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.getInetAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsBound">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBound { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBound" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.IsBound" />
      <MemberSignature Language="F#" Value="member this.IsBound : bool" Usage="Java.Net.ServerSocket.IsBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the binding state of the ServerSocket.</summary>
        <value>true if the ServerSocket successfully bound to an address</value>
        <remarks>
          <para>Returns the binding state of the ServerSocket.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#isBound()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.isBound()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.IsClosed" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="Java.Net.ServerSocket.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the closed state of the ServerSocket.</summary>
        <value>true if the socket has been closed</value>
        <remarks>
          <para>Returns the closed state of the ServerSocket.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#isClosed()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.isClosed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Net.ServerSocket.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalPort">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalPort As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LocalPort { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int LocalPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalPort" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.LocalPort" />
      <MemberSignature Language="F#" Value="member this.LocalPort : int" Usage="Java.Net.ServerSocket.LocalPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the port number on which this socket is listening.</summary>
        <value>the port number to which this socket is listening or
                     -1 if the socket is not bound yet.</value>
        <remarks>
          <para>Returns the port number on which this socket is listening.</para>
          <para>If the socket was bound prior to being <c>#close closed</c>,
            then this method will continue to return the port number
            after the socket is closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#getLocalPort()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.getLocalPort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalSocketAddress">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalSocketAddress As SocketAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Net::SocketAddress ^ LocalSocketAddress { Java::Net::SocketAddress ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress? LocalSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress LocalSocketAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.LocalSocketAddress" />
      <MemberSignature Language="F#" Value="member this.LocalSocketAddress : Java.Net.SocketAddress" Usage="Java.Net.ServerSocket.LocalSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the address of the endpoint this socket is bound to.</summary>
        <value>a <c>SocketAddress</c> representing the local endpoint of
                    this socket, or a <c>SocketAddress</c> representing the
                    loopback address if denied by the security manager,
                    or <c>null</c> if the socket is not bound yet.</value>
        <remarks>
          <para>Returns the address of the endpoint this socket is bound to.</para>
          <para>If the socket was bound prior to being <c>#close closed</c>,
            then this method will continue to return the address of the endpoint
            after the socket is closed.</para>
          <para>If there is a security manager set, its <c>checkConnect</c> method is
            called with the local address and <c>-1</c> as its arguments to see
            if the operation is allowed. If the operation is not allowed,
            a <c>SocketAddress</c> representing the
            <c>InetAddress#getLoopbackAddress loopback</c> address and the local
            port to which the socket is bound is returned.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#getLocalSocketAddress()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.getLocalSocketAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.ReceiveBufferSize" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="Java.Net.ServerSocket.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="size">the size to which to set the receive buffer
            size. This value must be greater than 0.</param>
        <summary>Gets the value of the <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option
            for this <c>ServerSocket</c>, that is the proposed buffer size that
            will be used for Sockets accepted from this <c>ServerSocket</c>. -or- Sets a default proposed value for the
            <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option for sockets
            accepted from this <c>ServerSocket</c>.</summary>
        <value>the value of the <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c>
                    option for this <c>Socket</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the value of the <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option
            for this <c>ServerSocket</c>, that is the proposed buffer size that
            will be used for Sockets accepted from this <c>ServerSocket</c>.</para>
          <para>Note, the value actually set in the accepted socket is determined by
            calling <c>Socket#getReceiveBufferSize()</c>.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#getReceiveBufferSize()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.getReceiveBufferSize()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a default proposed value for the
            <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option for sockets
            accepted from this <c>ServerSocket</c>. The value actually set
            in the accepted socket must be determined by calling
            <c>Socket#getReceiveBufferSize()</c> after the socket
            is returned by <c>#accept()</c>.</para>
          <para>The value of <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> is used both to
            set the size of the internal socket receive buffer, and to set the size
            of the TCP receive window that is advertized to the remote peer.</para>
          <para>It is possible to change the value subsequently, by calling
            <c>Socket#setReceiveBufferSize(int)</c>. However, if the application
            wishes to allow a receive window larger than 64K bytes, as defined by RFC1323
            then the proposed value must be set in the ServerSocket &lt;B&gt;before&lt;/B&gt;
            it is bound to a local address. This implies, that the ServerSocket must be
            created with the no-argument constructor, then setReceiveBufferSize() must
            be called and lastly the ServerSocket is bound to an address by calling bind().</para>
          <para>Failure to do this will not cause an error, and the buffer size may be set to the
            requested value but the TCP receive window in sockets accepted from
            this ServerSocket will be no larger than 64K bytes.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#setReceiveBufferSize(int)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.setReceiveBufferSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="ReuseAddress">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReuseAddress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReuseAddress { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool ReuseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReuseAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.ReuseAddress" />
      <MemberSignature Language="F#" Value="member this.ReuseAddress : bool with get, set" Usage="Java.Net.ServerSocket.ReuseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">whether to enable or disable the socket option</param>
        <summary>Tests if <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is enabled. -or- Enable/disable the <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c>
            socket option.</summary>
        <value>a <c>boolean</c> indicating whether or not
                    <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tests if <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is enabled.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#getReuseAddress()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.getReuseAddress()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable the <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c>
            socket option.</para>
          <para>When a TCP connection is closed the connection may remain
            in a timeout state for a period of time after the connection
            is closed (typically known as the <c>TIME_WAIT</c> state
            or <c>2MSL</c> wait state).
            For applications using a well known socket address or port
            it may not be possible to bind a socket to the required
            <c>SocketAddress</c> if there is a connection in the
            timeout state involving the socket address or port.</para>
          <para>Enabling <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> prior to
            binding the socket using <c>#bind(SocketAddress)</c> allows the socket
            to be bound even though a previous connection is in a timeout state.</para>
          <para>When a <c>ServerSocket</c> is created the initial setting
            of <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is not defined.
            Applications can use <c>#getReuseAddress()</c> to determine the initial
            setting of <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c>.</para>
          <para>The behaviour when <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is
            enabled or disabled after a socket is bound (See <c>#isBound()</c>)
            is not defined.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#setReuseAddress(boolean)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.setReuseAddress(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while reading the option value.
</exception>
        <exception cref="T:Java.Net.SocketException">if an error occurs while setting the option value.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetOption (name As ISocketOption, value As Object) As ServerSocket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Net::ServerSocket ^ SetOption(Java::Net::ISocketOption ^ name, Java::Lang::Object ^ value);" />
      <MemberSignature Language="C#" Value="public virtual Java.Net.ServerSocket? SetOption (Java.Net.ISocketOption? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.ServerSocket SetOption(class Java.Net.ISocketOption name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.SetOption(Java.Net.ISocketOption,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetOption : Java.Net.ISocketOption * Java.Lang.Object -&gt; Java.Net.ServerSocket&#xA;override this.SetOption : Java.Net.ISocketOption * Java.Lang.Object -&gt; Java.Net.ServerSocket" Usage="serverSocket.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOption", "(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/net/ServerSocket;", "GetSetOption_Ljava_net_SocketOption_Ljava_lang_Object_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOption", "(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/net/ServerSocket;", "GetSetOption_Ljava_net_SocketOption_Ljava_lang_Object_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.ServerSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Java.Net.ISocketOption" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">The type of the socket option value</param>
        <param name="name">The socket option</param>
        <param name="value">The value of the socket option. A value of <c>null</c>
                         may be valid for some options.</param>
        <summary>Sets the value of a socket option.</summary>
        <returns>this ServerSocket</returns>
        <remarks>
          <para>Sets the value of a socket option.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#setOption(java.net.SocketOption%3CT%3E,%20T)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.setOption(java.net.SocketOption&lt;T&gt;, T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPerformancePreferences">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPerformancePreferences (connectionTime As Integer, latency As Integer, bandwidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPerformancePreferences(int connectionTime, int latency, int bandwidth);" />
      <MemberSignature Language="C#" Value="public virtual void SetPerformancePreferences (int connectionTime, int latency, int bandwidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPerformancePreferences(int32 connectionTime, int32 latency, int32 bandwidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.SetPerformancePreferences(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPerformancePreferences : int * int * int -&gt; unit&#xA;override this.SetPerformancePreferences : int * int * int -&gt; unit" Usage="serverSocket.SetPerformancePreferences (connectionTime, latency, bandwidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPerformancePreferences", "(III)V", "GetSetPerformancePreferences_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPerformancePreferences", "(III)V", "GetSetPerformancePreferences_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTime" Type="System.Int32" />
        <Parameter Name="latency" Type="System.Int32" />
        <Parameter Name="bandwidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="connectionTime">An <c>int</c> expressing the relative importance of a short
                    connection time</param>
        <param name="latency">An <c>int</c> expressing the relative importance of low
                    latency</param>
        <param name="bandwidth">An <c>int</c> expressing the relative importance of high
                    bandwidth</param>
        <summary>Sets performance preferences for this ServerSocket.</summary>
        <remarks>
          <para>Sets performance preferences for this ServerSocket.</para>
          <para>Sockets use the TCP/IP protocol by default.  Some implementations
            may offer alternative protocols which have different performance
            characteristics than TCP/IP.  This method allows the application to
            express its own preferences as to how these tradeoffs should be made
            when the implementation chooses from the available protocols.</para>
          <para>Performance preferences are described by three integers
            whose values indicate the relative importance of short connection time,
            low latency, and high bandwidth.  The absolute values of the integers
            are irrelevant; in order to choose a protocol the values are simply
            compared, with larger values indicating stronger preferences.  If the
            application prefers short connection time over both low latency and high
            bandwidth, for example, then it could invoke this method with the values
            <c>(1, 0, 0)</c>.  If the application prefers high bandwidth above low
            latency, and low latency above short connection time, then it could
            invoke this method with the values <c>(0, 1, 2)</c>.</para>
          <para>Invoking this method after this socket has been bound
            will have no effect. This implies that in order to use this capability
            requires the socket to be created with the no-argument constructor.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#setPerformancePreferences(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.setPerformancePreferences(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketFactory">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetSocketFactory (fac As ISocketImplFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetSocketFactory(Java::Net::ISocketImplFactory ^ fac);" />
      <MemberSignature Language="C#" Value="public static void SetSocketFactory (Java.Net.ISocketImplFactory? fac);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSocketFactory(class Java.Net.ISocketImplFactory fac) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.SetSocketFactory(Java.Net.ISocketImplFactory)" />
      <MemberSignature Language="F#" Value="static member SetSocketFactory : Java.Net.ISocketImplFactory -&gt; unit" Usage="Java.Net.ServerSocket.SetSocketFactory fac" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSocketFactory", "(Ljava/net/SocketImplFactory;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSocketFactory", "(Ljava/net/SocketImplFactory;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fac" Type="Java.Net.ISocketImplFactory" />
      </Parameters>
      <Docs>
        <param name="fac">the desired factory.</param>
        <summary>Sets the server socket implementation factory for the
            application.</summary>
        <remarks>
          <para>Sets the server socket implementation factory for the
            application. The factory can be specified only once.</para>
          <para>When an application creates a new server socket, the socket
            implementation factory's <c>createSocketImpl</c> method is
            called to create the actual socket implementation.</para>
          <para>Passing <c>null</c> to the method is a no-op unless the factory
            was already set.</para>
          <para>If there is a security manager, this method first calls
            the security manager's <c>checkSetFactory</c> method
            to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#setSocketFactory(java.net.SocketImplFactory)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.setSocketFactory(java.net.SocketImplFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the factory could not be set or is already set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SoTimeout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SoTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SoTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int SoTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoTimeout" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.SoTimeout" />
      <MemberSignature Language="F#" Value="member this.SoTimeout : int with get, set" Usage="Java.Net.ServerSocket.SoTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="timeout">the specified timeout, in milliseconds</param>
        <summary>Retrieve setting for <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c>. -or- Enable/disable <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c> with the
            specified timeout, in milliseconds.</summary>
        <value>the <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c> value</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieve setting for <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c>.
            0 returns implies that the option is disabled (i.e., timeout of infinity).</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#getSoTimeout()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.getSoTimeout()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c> with the
            specified timeout, in milliseconds.  With this option set to a non-zero
            timeout, a call to accept() for this ServerSocket
            will block for only this amount of time.  If the timeout expires,
            a &lt;B&gt;java.net.SocketTimeoutException&lt;/B&gt; is raised, though the
            ServerSocket is still valid.  The option &lt;B&gt;must&lt;/B&gt; be enabled
            prior to entering the blocking operation to have effect.  The
            timeout must be <c>&gt; 0</c>.
            A timeout of zero is interpreted as an infinite timeout.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#setSoTimeout(int)" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.setSoTimeout(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the option cannot be retrieved.
</exception>
        <exception cref="T:Java.Net.SocketException">if an error occurs while setting the option.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportedOptions">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SupportedOptions () As ICollection(Of ISocketOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;Java::Net::ISocketOption ^&gt; ^ SupportedOptions();" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;? SupportedOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class Java.Net.ISocketOption&gt; SupportedOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ServerSocket.SupportedOptions" />
      <MemberSignature Language="F#" Value="abstract member SupportedOptions : unit -&gt; System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;&#xA;override this.SupportedOptions : unit -&gt; System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;" Usage="serverSocket.SupportedOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("supportedOptions", "()Ljava/util/Set;", "GetSupportedOptionsHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("supportedOptions", "()Ljava/util/Set;", "GetSupportedOptionsHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set of the socket options supported by this server socket.</summary>
        <returns>A set of the socket options supported by this socket. This set
                    may be empty if the socket's SocketImpl cannot be created.</returns>
        <remarks>
          <para>Returns a set of the socket options supported by this server socket.</para>
          <para>This method will continue to return the set of options even after
            the socket has been closed.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/ServerSocket#supportedOptions()" title="Reference documentation">Java documentation for <code>java.net.ServerSocket.supportedOptions()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Net.ServerSocket.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Net.ServerSocket.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Net.ServerSocket.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
