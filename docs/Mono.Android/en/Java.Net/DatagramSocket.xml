<Type Name="DatagramSocket" FullName="Java.Net.DatagramSocket">
  <TypeSignature Language="C#" Value="public class DatagramSocket : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatagramSocket extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Net.DatagramSocket" />
  <TypeSignature Language="F#" Value="type DatagramSocket = class&#xA;    inherit Object&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/net/DatagramSocket", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/net/DatagramSocket", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class represents a socket for sending and receiving datagram packets.</summary>
    <remarks>
      <para>This class represents a socket for sending and receiving datagram packets.</para>
      <para>A datagram socket is the sending or receiving point for a packet
            delivery service. Each packet sent or received on a datagram socket
            is individually addressed and routed. Multiple packets sent from
            one machine to another may be routed differently, and may arrive in
            any order.</para>
      <para>Where possible, a newly constructed <c>DatagramSocket</c> has the
            <c>SocketOptions#SO_BROADCAST SO_BROADCAST</c> socket option enabled so as
            to allow the transmission of broadcast datagrams. In order to receive
            broadcast packets a DatagramSocket should be bound to the wildcard address.
            In some implementations, broadcast packets may also be received when
            a DatagramSocket is bound to a more specific address.</para>
      <para>Example:
            <c>DatagramSocket s = new DatagramSocket(null);
                         s.bind(new InetSocketAddress(8888));</c>
            Which is equivalent to:
            <c>DatagramSocket s = new DatagramSocket(8888);</c>
            Both cases will create a DatagramSocket able to receive broadcasts on
            UDP port 8888.</para>
      <para>Added in JDK1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/net/DatagramSocket" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatagramSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a datagram socket and binds it to any available port
            on the local host machine.</summary>
        <remarks>
          <para>Constructs a datagram socket and binds it to any available port
            on the local host machine.  The socket will be bound to the
            <c>InetAddress#isAnyLocalAddress wildcard</c> address,
            an IP address chosen by the kernel.</para>
          <para>If there is a security manager,
            its <c>checkListen</c> method is first called
            with 0 as its argument to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#DatagramSocket()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.DatagramSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while creating or binding the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DatagramSocket (Java.Net.DatagramSocketImpl? impl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Net.DatagramSocketImpl impl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.#ctor(Java.Net.DatagramSocketImpl)" />
      <MemberSignature Language="F#" Value="new Java.Net.DatagramSocket : Java.Net.DatagramSocketImpl -&gt; Java.Net.DatagramSocket" Usage="new Java.Net.DatagramSocket impl" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/net/DatagramSocketImpl;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/net/DatagramSocketImpl;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="impl" Type="Java.Net.DatagramSocketImpl" />
      </Parameters>
      <Docs>
        <param name="impl">an instance of a &lt;B&gt;DatagramSocketImpl&lt;/B&gt;
                   the subclass wishes to use on the DatagramSocket.</param>
        <summary>Creates an unbound datagram socket with the specified
            DatagramSocketImpl.</summary>
        <remarks>
          <para>Creates an unbound datagram socket with the specified
            DatagramSocketImpl.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#DatagramSocket(java.net.DatagramSocketImpl)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.DatagramSocket(java.net.DatagramSocketImpl)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatagramSocket (Java.Net.SocketAddress? bindaddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.SocketAddress bindaddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.#ctor(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="new Java.Net.DatagramSocket : Java.Net.SocketAddress -&gt; Java.Net.DatagramSocket" Usage="new Java.Net.DatagramSocket bindaddr" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/net/SocketAddress;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/net/SocketAddress;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bindaddr" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="bindaddr">local socket address to bind, or <c>null</c>
                            for an unbound socket.</param>
        <summary>Creates a datagram socket, bound to the specified local
            socket address.</summary>
        <remarks>
          <para>Creates a datagram socket, bound to the specified local
            socket address.</para>
          <para>If, if the address is <c>null</c>, creates an unbound socket.</para>
          <para>If there is a security manager,
            its <c>checkListen</c> method is first called
            with the port from the socket address
            as its argument to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#DatagramSocket(java.net.SocketAddress)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.DatagramSocket(java.net.SocketAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the SocketAddress is not supported</exception>
        <exception cref="T:Java.Net.SocketException">if a problem occurs creating or binding the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatagramSocket (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.DatagramSocket : int -&gt; Java.Net.DatagramSocket" Usage="new Java.Net.DatagramSocket port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">port to use.</param>
        <summary>Constructs a datagram socket and binds it to the specified port
            on the local host machine.</summary>
        <remarks>
          <para>Constructs a datagram socket and binds it to the specified port
            on the local host machine.  The socket will be bound to the
            <c>InetAddress#isAnyLocalAddress wildcard</c> address,
            an IP address chosen by the kernel.</para>
          <para>If there is a security manager,
            its <c>checkListen</c> method is first called
            with the <c>port</c> argument
            as its argument to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#DatagramSocket(int)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.DatagramSocket(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while creating or binding the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatagramSocket (int port, Java.Net.InetAddress? laddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, class Java.Net.InetAddress laddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.#ctor(System.Int32,Java.Net.InetAddress)" />
      <MemberSignature Language="F#" Value="new Java.Net.DatagramSocket : int * Java.Net.InetAddress -&gt; Java.Net.DatagramSocket" Usage="new Java.Net.DatagramSocket (port, laddr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(ILjava/net/InetAddress;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(ILjava/net/InetAddress;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="laddr" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="port">local port to use</param>
        <param name="laddr">local address to bind</param>
        <summary>Creates a datagram socket, bound to the specified local
            address.</summary>
        <remarks>
          <para>Creates a datagram socket, bound to the specified local
            address.  The local port must be between 0 and 65535 inclusive.
            If the IP address is 0.0.0.0, the socket will be bound to the
            <c>InetAddress#isAnyLocalAddress wildcard</c> address,
            an IP address chosen by the kernel.</para>
          <para>If there is a security manager,
            its <c>checkListen</c> method is first called
            with the <c>port</c> argument
            as its argument to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#DatagramSocket(int,%20java.net.InetAddress)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.DatagramSocket(int, java.net.InetAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while creating or binding the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DatagramSocket (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Net.DatagramSocket : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Net.DatagramSocket" Usage="new Java.Net.DatagramSocket (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public virtual void Bind (Java.Net.SocketAddress? addr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bind(class Java.Net.SocketAddress addr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.Bind(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Bind : Java.Net.SocketAddress -&gt; unit&#xA;override this.Bind : Java.Net.SocketAddress -&gt; unit" Usage="datagramSocket.Bind addr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="addr">The address and port to bind to.</param>
        <summary>Binds this DatagramSocket to a specific address and port.</summary>
        <remarks>
          <para>Binds this DatagramSocket to a specific address and port.</para>
          <para>If the address is <c>null</c>, then the system will pick up
            an ephemeral port and a valid local address to bind the socket.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#bind(java.net.SocketAddress)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.bind(java.net.SocketAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the SocketAddress is not supported</exception>
        <exception cref="T:Java.Net.SocketException">if the socket is already bound or a problem occurs during
             binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Broadcast">
      <MemberSignature Language="C#" Value="public virtual bool Broadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Broadcast" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.Broadcast" />
      <MemberSignature Language="F#" Value="member this.Broadcast : bool with get, set" Usage="Java.Net.DatagramSocket.Broadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBroadcast", "()Z", "GetGetBroadcastHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBroadcast", "()Z", "GetGetBroadcastHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBroadcast", "(Z)V", "GetSetBroadcast_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBroadcast", "(Z)V", "GetSetBroadcast_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">whether or not to have broadcast turned on.</param>
        <summary>Tests if SO_BROADCAST is enabled. -or- Enable/disable SO_BROADCAST.</summary>
        <value>a <c>boolean</c> indicating whether or not SO_BROADCAST is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tests if SO_BROADCAST is enabled.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getBroadcast()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getBroadcast()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable SO_BROADCAST.</para>
          <para>Some operating systems may require that the Java virtual machine be
            started with implementation specific privileges to enable this option or
            send broadcast datagrams.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#setBroadcast(boolean)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.setBroadcast(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if the socket is closed or the option is invalid.
</exception>
        <exception cref="T:Java.Net.SocketException">if the socket is closed or the option could not be set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.DatagramChannel? Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.Channels.DatagramChannel Channel" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.Channel" />
      <MemberSignature Language="F#" Value="member this.Channel : Java.Nio.Channels.DatagramChannel" Usage="Java.Net.DatagramSocket.Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/DatagramChannel;", "GetGetChannelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/DatagramChannel;", "GetGetChannelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.DatagramChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the unique <c>java.nio.channels.DatagramChannel</c> object
            associated with this datagram socket, if any.</summary>
        <value>the datagram channel associated with this datagram socket,
                     or <c>null</c> if this socket was not created for a channel</value>
        <remarks>
          <para>Returns the unique <c>java.nio.channels.DatagramChannel</c> object
            associated with this datagram socket, if any.</para>
          <para>A datagram socket will have a channel if, and only if, the channel
            itself was created via the <c>java.nio.channels.DatagramChannel#open
            DatagramChannel.open</c> method.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getChannel()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="datagramSocket.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.ICloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this datagram socket.</summary>
        <remarks>
          <para>Closes this datagram socket.</para>
          <para>Any thread currently blocked in <c>#receive</c> upon this socket
            will throw a <c>SocketException</c>.</para>
          <para>If this socket has an associated channel then the channel is closed
            as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#close()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Java.Net.SocketAddress? addr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.SocketAddress addr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.Connect(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Connect : Java.Net.SocketAddress -&gt; unit&#xA;override this.Connect : Java.Net.SocketAddress -&gt; unit" Usage="datagramSocket.Connect addr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;)V", "GetConnect_Ljava_net_SocketAddress_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;)V", "GetConnect_Ljava_net_SocketAddress_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="addr">The remote address.</param>
        <summary>Connects this socket to a remote socket address (IP address + port number).</summary>
        <remarks>
          <para>Connects this socket to a remote socket address (IP address + port number).</para>
          <para>If given an <c>InetSocketAddress InetSocketAddress</c>, this method
            behaves as if invoking <c>#connect(InetAddress,int) connect(InetAddress,int)</c>
            with the given socket addresses IP address and port number.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#connect(java.net.SocketAddress)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.connect(java.net.SocketAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Java.Net.InetAddress? address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.InetAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.Connect(Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Connect : Java.Net.InetAddress * int -&gt; unit&#xA;override this.Connect : Java.Net.InetAddress * int -&gt; unit" Usage="datagramSocket.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connect", "(Ljava/net/InetAddress;I)V", "GetConnect_Ljava_net_InetAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connect", "(Ljava/net/InetAddress;I)V", "GetConnect_Ljava_net_InetAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">the remote address for the socket</param>
        <param name="port">the remote port for the socket.</param>
        <summary>Connects the socket to a remote address for this socket.</summary>
        <remarks>
          <para>Connects the socket to a remote address for this socket. When a
            socket is connected to a remote address, packets may only be
            sent to or received from that address. By default a datagram
            socket is not connected.</para>
          <para>If the remote destination to which the socket is connected does not
            exist, or is otherwise unreachable, and if an ICMP destination unreachable
            packet has been received for that address, then a subsequent call to
            send or receive may throw a PortUnreachableException. Note, there is no
            guarantee that the exception will be thrown.</para>
          <para>If a security manager has been installed then it is invoked to check
            access to the remote address. Specifically, if the given <c>address</c>
            is a <c>InetAddress#isMulticastAddress multicast address</c>,
            the security manager's <c>java.lang.SecurityManager#checkMulticast(InetAddress)
            checkMulticast</c> method is invoked with the given <c>address</c>.
            Otherwise, the security manager's <c>java.lang.SecurityManager#checkConnect(String,int) checkConnect</c>
            and <c>java.lang.SecurityManager#checkAccept checkAccept</c> methods
            are invoked, with the given <c>address</c> and <c>port</c>, to
            verify that datagrams are permitted to be sent and received
            respectively.</para>
          <para>When a socket is connected, <c>#receive receive</c> and
            <c>#send send</c>&lt;b&gt;will not perform any security checks&lt;/b&gt;
            on incoming and outgoing packets, other than matching the packet's
            and the socket's address and port. On a send operation, if the
            packet's address is set and the packet's address and the socket's
            address do not match, an <c>IllegalArgumentException</c> will be
            thrown. A socket connected to a multicast address may only be used
            to send packets.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#connect(java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.connect(java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Java.Net.SocketAddress? addr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.SocketAddress addr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.ConnectAsync(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Java.Net.SocketAddress -&gt; System.Threading.Tasks.Task" Usage="datagramSocket.ConnectAsync addr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="addr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Java.Net.InetAddress? address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.InetAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.ConnectAsync(Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Java.Net.InetAddress * int -&gt; System.Threading.Tasks.Task" Usage="datagramSocket.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="port">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public virtual void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Disconnect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.Disconnect" />
      <MemberSignature Language="F#" Value="abstract member Disconnect : unit -&gt; unit&#xA;override this.Disconnect : unit -&gt; unit" Usage="datagramSocket.Disconnect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("disconnect", "()V", "GetDisconnectHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("disconnect", "()V", "GetDisconnectHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disconnects the socket.</summary>
        <remarks>
          <para>Disconnects the socket. If the socket is closed or not connected,
            then this method has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#disconnect()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.disconnect()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetOption">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? GetOption (Java.Net.ISocketOption? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetOption(class Java.Net.ISocketOption name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.GetOption(Java.Net.ISocketOption)" />
      <MemberSignature Language="F#" Value="abstract member GetOption : Java.Net.ISocketOption -&gt; Java.Lang.Object&#xA;override this.GetOption : Java.Net.ISocketOption -&gt; Java.Lang.Object" Usage="datagramSocket.GetOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOption", "(Ljava/net/SocketOption;)Ljava/lang/Object;", "GetGetOption_Ljava_net_SocketOption_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOption", "(Ljava/net/SocketOption;)Ljava/lang/Object;", "GetGetOption_Ljava_net_SocketOption_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Java.Net.ISocketOption" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">The type of the socket option value</param>
        <param name="name">The socket option</param>
        <summary>Returns the value of a socket option.</summary>
        <returns>The value of the socket option.</returns>
        <remarks>
          <para>Returns the value of a socket option.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getOption(java.net.SocketOption%3CT%3E)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getOption(java.net.SocketOption&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InetAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress? InetAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress InetAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.InetAddress" />
      <MemberSignature Language="F#" Value="member this.InetAddress : Java.Net.InetAddress" Usage="Java.Net.DatagramSocket.InetAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the address to which this socket is connected.</summary>
        <value>the address to which this socket is connected.</value>
        <remarks>
          <para>Returns the address to which this socket is connected. Returns
            <c>null</c> if the socket is not connected.</para>
          <para>If the socket was connected prior to being <c>#close closed</c>,
            then this method will continue to return the connected address
            after the socket is closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getInetAddress()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getInetAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsBound">
      <MemberSignature Language="C#" Value="public virtual bool IsBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBound" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.IsBound" />
      <MemberSignature Language="F#" Value="member this.IsBound : bool" Usage="Java.Net.DatagramSocket.IsBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the binding state of the socket.</summary>
        <value>true if the socket successfully bound to an address</value>
        <remarks>
          <para>Returns the binding state of the socket.</para>
          <para>If the socket was bound prior to being <c>#close closed</c>,
            then this method will continue to return <c>true</c>
            after the socket is closed.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#isBound()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.isBound()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.IsClosed" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="Java.Net.DatagramSocket.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the socket is closed or not.</summary>
        <value>true if the socket has been closed</value>
        <remarks>
          <para>Returns whether the socket is closed or not.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#isClosed()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.isClosed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.IsConnected" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="Java.Net.DatagramSocket.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the connection state of the socket.</summary>
        <value>true if the socket successfully connected to a server</value>
        <remarks>
          <para>Returns the connection state of the socket.</para>
          <para>If the socket was connected prior to being <c>#close closed</c>,
            then this method will continue to return <c>true</c>
            after the socket is closed.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#isConnected()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.isConnected()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Net.DatagramSocket.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress? LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.LocalAddress" />
      <MemberSignature Language="F#" Value="member this.LocalAddress : Java.Net.InetAddress" Usage="Java.Net.DatagramSocket.LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/InetAddress;", "GetGetLocalAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/InetAddress;", "GetGetLocalAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local address to which the socket is bound.</summary>
        <value>the local address to which the socket is bound,
                     <c>null</c> if the socket is closed, or
                     an <c>InetAddress</c> representing
                     <c>InetAddress#isAnyLocalAddress wildcard</c>
                     address if either the socket is not bound, or
                     the security manager <c>checkConnect</c>
                     method does not allow the operation</value>
        <remarks>
          <para>Gets the local address to which the socket is bound.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is first called
            with the host address and <c>-1</c>
            as its arguments to see if the operation is allowed.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getLocalAddress()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getLocalAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalPort">
      <MemberSignature Language="C#" Value="public virtual int LocalPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalPort" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.LocalPort" />
      <MemberSignature Language="F#" Value="member this.LocalPort : int" Usage="Java.Net.DatagramSocket.LocalPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the port number on the local host to which this socket
            is bound.</summary>
        <value>the port number on the local host to which this socket is bound,
                            <c>-1</c> if the socket is closed, or
                            <c>0</c> if it is not bound yet.</value>
        <remarks>
          <para>Returns the port number on the local host to which this socket
            is bound.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getLocalPort()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getLocalPort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress? LocalSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress LocalSocketAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.LocalSocketAddress" />
      <MemberSignature Language="F#" Value="member this.LocalSocketAddress : Java.Net.SocketAddress" Usage="Java.Net.DatagramSocket.LocalSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the address of the endpoint this socket is bound to.</summary>
        <value>a <c>SocketAddress</c> representing the local endpoint of this
                    socket, or <c>null</c> if it is closed or not bound yet.</value>
        <remarks>
          <para>Returns the address of the endpoint this socket is bound to.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getLocalSocketAddress()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getLocalSocketAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public virtual int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.Port" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="Java.Net.DatagramSocket.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPort", "()I", "GetGetPortHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPort", "()I", "GetGetPortHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the port number to which this socket is connected.</summary>
        <value>the port number to which this socket is connected.</value>
        <remarks>
          <para>Returns the port number to which this socket is connected.
            Returns <c>-1</c> if the socket is not connected.</para>
          <para>If the socket was connected prior to being <c>#close closed</c>,
            then this method will continue to return the connected port number
            after the socket is closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getPort()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getPort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public virtual void Receive (Java.Net.DatagramPacket? p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Receive(class Java.Net.DatagramPacket p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.Receive(Java.Net.DatagramPacket)" />
      <MemberSignature Language="F#" Value="abstract member Receive : Java.Net.DatagramPacket -&gt; unit&#xA;override this.Receive : Java.Net.DatagramPacket -&gt; unit" Usage="datagramSocket.Receive p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("receive", "(Ljava/net/DatagramPacket;)V", "GetReceive_Ljava_net_DatagramPacket_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("receive", "(Ljava/net/DatagramPacket;)V", "GetReceive_Ljava_net_DatagramPacket_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="p">the <c>DatagramPacket</c> into which to place
                            the incoming data.</param>
        <summary>Receives a datagram packet from this socket.</summary>
        <remarks>
          <para>Receives a datagram packet from this socket. When this method
            returns, the <c>DatagramPacket</c>'s buffer is filled with
            the data received. The datagram packet also contains the sender's
            IP address, and the port number on the sender's machine.</para>
          <para>This method blocks until a datagram is received. The
            <c>length</c> field of the datagram packet object contains
            the length of the received message. If the message is longer than
            the packet's length, the message is truncated.</para>
          <para>If there is a security manager, a packet cannot be received if the
            security manager's <c>checkAccept</c> method
            does not allow it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#receive(java.net.DatagramPacket)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.receive(java.net.DatagramPacket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while receiving the packet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReceiveAsync (Java.Net.DatagramPacket? p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ReceiveAsync(class Java.Net.DatagramPacket p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.ReceiveAsync(Java.Net.DatagramPacket)" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : Java.Net.DatagramPacket -&gt; System.Threading.Tasks.Task" Usage="datagramSocket.ReceiveAsync p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public virtual int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.ReceiveBufferSize" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="Java.Net.DatagramSocket.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="size">the size to which to set the receive buffer
            size. This value must be greater than 0.</param>
        <summary>Get value of the SO_RCVBUF option for this <c>DatagramSocket</c>, that is the
            buffer size used by the platform for input on this <c>DatagramSocket</c>. -or- Sets the SO_RCVBUF option to the specified value for this
            <c>DatagramSocket</c>.</summary>
        <value>the value of the SO_RCVBUF option for this <c>DatagramSocket</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get value of the SO_RCVBUF option for this <c>DatagramSocket</c>, that is the
            buffer size used by the platform for input on this <c>DatagramSocket</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getReceiveBufferSize()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getReceiveBufferSize()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the SO_RCVBUF option to the specified value for this
            <c>DatagramSocket</c>. The SO_RCVBUF option is used by
            the network implementation as a hint to size the underlying
            network I/O buffers. The SO_RCVBUF setting may also be used
            by the network implementation to determine the maximum size
            of the packet that can be received on this socket.</para>
          <para>Because SO_RCVBUF is a hint, applications that want to
            verify what size the buffers were set to should call
            <c>#getReceiveBufferSize()</c>.</para>
          <para>Increasing SO_RCVBUF may allow the network implementation
            to buffer multiple packets when packets arrive faster than
            are being received using <c>#receive(DatagramPacket)</c>.</para>
          <para>Note: It is implementation specific if a packet larger
            than SO_RCVBUF can be received.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#setReceiveBufferSize(int)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.setReceiveBufferSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="RemoteSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress? RemoteSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress RemoteSocketAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.RemoteSocketAddress" />
      <MemberSignature Language="F#" Value="member this.RemoteSocketAddress : Java.Net.SocketAddress" Usage="Java.Net.DatagramSocket.RemoteSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRemoteSocketAddress", "()Ljava/net/SocketAddress;", "GetGetRemoteSocketAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRemoteSocketAddress", "()Ljava/net/SocketAddress;", "GetGetRemoteSocketAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the address of the endpoint this socket is connected to, or
            <c>null</c> if it is unconnected.</summary>
        <value>a <c>SocketAddress</c> representing the remote
                    endpoint of this socket, or <c>null</c> if it is
                    not connected yet.</value>
        <remarks>
          <para>Returns the address of the endpoint this socket is connected to, or
            <c>null</c> if it is unconnected.</para>
          <para>If the socket was connected prior to being <c>#close closed</c>,
            then this method will continue to return the connected address
            after the socket is closed.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getRemoteSocketAddress()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getRemoteSocketAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReuseAddress">
      <MemberSignature Language="C#" Value="public virtual bool ReuseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReuseAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.ReuseAddress" />
      <MemberSignature Language="F#" Value="member this.ReuseAddress : bool with get, set" Usage="Java.Net.DatagramSocket.ReuseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">whether to enable or disable the</param>
        <summary>Tests if SO_REUSEADDR is enabled. -or- Enable/disable the SO_REUSEADDR socket option.</summary>
        <value>a <c>boolean</c> indicating whether or not SO_REUSEADDR is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tests if SO_REUSEADDR is enabled.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getReuseAddress()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getReuseAddress()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable the SO_REUSEADDR socket option.</para>
          <para>For UDP sockets it may be necessary to bind more than one
            socket to the same socket address. This is typically for the
            purpose of receiving multicast packets
            (See <c>java.net.MulticastSocket</c>). The
            <c>SO_REUSEADDR</c> socket option allows multiple
            sockets to be bound to the same socket address if the
            <c>SO_REUSEADDR</c> socket option is enabled prior
            to binding the socket using <c>#bind(SocketAddress)</c>.</para>
          <para>Note: This functionality is not supported by all existing platforms,
            so it is implementation specific whether this option will be ignored
            or not. However, if it is not supported then
            <c>#getReuseAddress()</c> will always return <c>false</c>.</para>
          <para>When a <c>DatagramSocket</c> is created the initial setting
            of <c>SO_REUSEADDR</c> is disabled.</para>
          <para>The behaviour when <c>SO_REUSEADDR</c> is enabled or
            disabled after a socket is bound (See <c>#isBound()</c>)
            is not defined.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#setReuseAddress(boolean)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.setReuseAddress(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if the socket is closed or the option is invalid.
</exception>
        <exception cref="T:Java.Net.SocketException">if the socket is closed or the option could not be set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public virtual void Send (Java.Net.DatagramPacket? p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class Java.Net.DatagramPacket p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.Send(Java.Net.DatagramPacket)" />
      <MemberSignature Language="F#" Value="abstract member Send : Java.Net.DatagramPacket -&gt; unit&#xA;override this.Send : Java.Net.DatagramPacket -&gt; unit" Usage="datagramSocket.Send p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("send", "(Ljava/net/DatagramPacket;)V", "GetSend_Ljava_net_DatagramPacket_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("send", "(Ljava/net/DatagramPacket;)V", "GetSend_Ljava_net_DatagramPacket_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="p">the <c>DatagramPacket</c> to be sent.</param>
        <summary>Sends a datagram packet from this socket.</summary>
        <remarks>
          <para>Sends a datagram packet from this socket. The
            <c>DatagramPacket</c> includes information indicating the
            data to be sent, its length, the IP address of the remote host,
            and the port number on the remote host.</para>
          <para>If there is a security manager, and the socket is not currently
            connected to a remote address, this method first performs some
            security checks. First, if <c>p.getAddress().isMulticastAddress()</c>
            is true, this method calls the
            security manager's <c>checkMulticast</c> method
            with <c>p.getAddress()</c> as its argument.
            If the evaluation of that expression is false,
            this method instead calls the security manager's
            <c>checkConnect</c> method with arguments
            <c>p.getAddress().getHostAddress()</c> and
            <c>p.getPort()</c>. Each call to a security manager method
            could result in a SecurityException if the operation is not allowed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#send(java.net.DatagramPacket)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.send(java.net.DatagramPacket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while sending the packet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendAsync (Java.Net.DatagramPacket? p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendAsync(class Java.Net.DatagramPacket p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.SendAsync(Java.Net.DatagramPacket)" />
      <MemberSignature Language="F#" Value="member this.SendAsync : Java.Net.DatagramPacket -&gt; System.Threading.Tasks.Task" Usage="datagramSocket.SendAsync p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public virtual int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.SendBufferSize" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="Java.Net.DatagramSocket.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSendBufferSize", "()I", "GetGetSendBufferSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSendBufferSize", "()I", "GetGetSendBufferSizeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSendBufferSize", "(I)V", "GetSetSendBufferSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSendBufferSize", "(I)V", "GetSetSendBufferSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="size">the size to which to set the send buffer
            size. This value must be greater than 0.</param>
        <summary>Get value of the SO_SNDBUF option for this <c>DatagramSocket</c>, that is the
            buffer size used by the platform for output on this <c>DatagramSocket</c>. -or- Sets the SO_SNDBUF option to the specified value for this
            <c>DatagramSocket</c>.</summary>
        <value>the value of the SO_SNDBUF option for this <c>DatagramSocket</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get value of the SO_SNDBUF option for this <c>DatagramSocket</c>, that is the
            buffer size used by the platform for output on this <c>DatagramSocket</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getSendBufferSize()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getSendBufferSize()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the SO_SNDBUF option to the specified value for this
            <c>DatagramSocket</c>. The SO_SNDBUF option is used by the
            network implementation as a hint to size the underlying
            network I/O buffers. The SO_SNDBUF setting may also be used
            by the network implementation to determine the maximum size
            of the packet that can be sent on this socket.</para>
          <para>As SO_SNDBUF is a hint, applications that want to verify
            what size the buffer is should call <c>#getSendBufferSize()</c>.</para>
          <para>Increasing the buffer size may allow multiple outgoing packets
            to be queued by the network implementation when the send rate
            is high.</para>
          <para>Note: If <c>#send(DatagramPacket)</c> is used to send a
            <c>DatagramPacket</c> that is larger than the setting
            of SO_SNDBUF then it is implementation specific if the
            packet is sent or discarded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#setSendBufferSize(int)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.setSendBufferSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SetDatagramSocketImplFactory">
      <MemberSignature Language="C#" Value="public static void SetDatagramSocketImplFactory (Java.Net.IDatagramSocketImplFactory? fac);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDatagramSocketImplFactory(class Java.Net.IDatagramSocketImplFactory fac) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.SetDatagramSocketImplFactory(Java.Net.IDatagramSocketImplFactory)" />
      <MemberSignature Language="F#" Value="static member SetDatagramSocketImplFactory : Java.Net.IDatagramSocketImplFactory -&gt; unit" Usage="Java.Net.DatagramSocket.SetDatagramSocketImplFactory fac" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDatagramSocketImplFactory", "(Ljava/net/DatagramSocketImplFactory;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDatagramSocketImplFactory", "(Ljava/net/DatagramSocketImplFactory;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fac" Type="Java.Net.IDatagramSocketImplFactory" />
      </Parameters>
      <Docs>
        <param name="fac">the desired factory.</param>
        <summary>Sets the datagram socket implementation factory for the
            application.</summary>
        <remarks>
          <para>Sets the datagram socket implementation factory for the
            application. The factory can be specified only once.</para>
          <para>When an application creates a new datagram socket, the socket
            implementation factory's <c>createDatagramSocketImpl</c> method is
            called to create the actual datagram socket implementation.</para>
          <para>Passing <c>null</c> to the method is a no-op unless the factory
            was already set.</para>
          <para>If there is a security manager, this method first calls
            the security manager's <c>checkSetFactory</c> method
            to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the factory has already been set.</exception>
        <altmember cref="T:Java.Net.IDatagramSocketImplFactory" />
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="public virtual Java.Net.DatagramSocket? SetOption (Java.Net.ISocketOption? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.DatagramSocket SetOption(class Java.Net.ISocketOption name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.SetOption(Java.Net.ISocketOption,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetOption : Java.Net.ISocketOption * Java.Lang.Object -&gt; Java.Net.DatagramSocket&#xA;override this.SetOption : Java.Net.ISocketOption * Java.Lang.Object -&gt; Java.Net.DatagramSocket" Usage="datagramSocket.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOption", "(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/net/DatagramSocket;", "GetSetOption_Ljava_net_SocketOption_Ljava_lang_Object_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOption", "(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/net/DatagramSocket;", "GetSetOption_Ljava_net_SocketOption_Ljava_lang_Object_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.DatagramSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Java.Net.ISocketOption" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">The type of the socket option value</param>
        <param name="name">The socket option</param>
        <param name="value">The value of the socket option. A value of <c>null</c>
                         may be valid for some options.</param>
        <summary>Sets the value of a socket option.</summary>
        <returns>this DatagramSocket</returns>
        <remarks>
          <para>Sets the value of a socket option.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#setOption(java.net.SocketOption%3CT%3E,%20T)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.setOption(java.net.SocketOption&lt;T&gt;, T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoTimeout">
      <MemberSignature Language="C#" Value="public virtual int SoTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoTimeout" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.SoTimeout" />
      <MemberSignature Language="F#" Value="member this.SoTimeout : int with get, set" Usage="Java.Net.DatagramSocket.SoTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="timeout">the specified timeout in milliseconds.</param>
        <summary>Retrieve setting for SO_TIMEOUT. -or- Enable/disable SO_TIMEOUT with the specified timeout, in
             milliseconds.</summary>
        <value>the setting for SO_TIMEOUT</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieve setting for SO_TIMEOUT.  0 returns implies that the
            option is disabled (i.e., timeout of infinity).</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getSoTimeout()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getSoTimeout()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable SO_TIMEOUT with the specified timeout, in
             milliseconds. With this option set to a non-zero timeout,
             a call to receive() for this DatagramSocket
             will block for only this amount of time.  If the timeout expires,
             a &lt;B&gt;java.net.SocketTimeoutException&lt;/B&gt; is raised, though the
             DatagramSocket is still valid.  The option &lt;B&gt;must&lt;/B&gt; be enabled
             prior to entering the blocking operation to have effect.  The
             timeout must be <c>&gt; 0</c>.
             A timeout of zero is interpreted as an infinite timeout.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#setSoTimeout(int)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.setSoTimeout(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while getting the option value.
</exception>
        <exception cref="T:Java.Net.SocketException">if an error occurs while setting the option.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportedOptions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;? SupportedOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class Java.Net.ISocketOption&gt; SupportedOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.DatagramSocket.SupportedOptions" />
      <MemberSignature Language="F#" Value="abstract member SupportedOptions : unit -&gt; System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;&#xA;override this.SupportedOptions : unit -&gt; System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;" Usage="datagramSocket.SupportedOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("supportedOptions", "()Ljava/util/Set;", "GetSupportedOptionsHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("supportedOptions", "()Ljava/util/Set;", "GetSupportedOptionsHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set of the socket options supported by this socket.</summary>
        <returns>A set of the socket options supported by this socket. This set
                   may be empty if the socket's DatagramSocketImpl cannot be created.</returns>
        <remarks>
          <para>Returns a set of the socket options supported by this socket.</para>
          <para>This method will continue to return the set of options even after
            the socket has been closed.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#supportedOptions()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.supportedOptions()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Net.DatagramSocket.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Net.DatagramSocket.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrafficClass">
      <MemberSignature Language="C#" Value="public virtual int TrafficClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrafficClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.DatagramSocket.TrafficClass" />
      <MemberSignature Language="F#" Value="member this.TrafficClass : int with get, set" Usage="Java.Net.DatagramSocket.TrafficClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTrafficClass", "()I", "GetGetTrafficClassHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTrafficClass", "()I", "GetGetTrafficClassHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTrafficClass", "(I)V", "GetSetTrafficClass_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTrafficClass", "(I)V", "GetSetTrafficClass_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="tc">an <c>int</c> value for the bitset.</param>
        <summary>Gets traffic class or type-of-service in the IP datagram
            header for packets sent from this DatagramSocket. -or- Sets traffic class or type-of-service octet in the IP
            datagram header for datagrams sent from this DatagramSocket.</summary>
        <value>the traffic class or type-of-service already set</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets traffic class or type-of-service in the IP datagram
            header for packets sent from this DatagramSocket.</para>
          <para>As the underlying network implementation may ignore the
            traffic class or type-of-service set using <c>#setTrafficClass(int)</c>
            this method may return a different value than was previously
            set using the <c>#setTrafficClass(int)</c> method on this
            DatagramSocket.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#getTrafficClass()" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.getTrafficClass()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets traffic class or type-of-service octet in the IP
            datagram header for datagrams sent from this DatagramSocket.
            As the underlying network implementation may ignore this
            value applications should consider it a hint.</para>
          <para>The tc &lt;B&gt;must&lt;/B&gt; be in the range <c>0 &lt;= tc &lt;=
            255</c> or an IllegalArgumentException will be thrown.</para>
          <para>Notes:</para>
          <para>For Internet Protocol v4 the value consists of an
            <c>integer</c>, the least significant 8 bits of which
            represent the value of the TOS octet in IP packets sent by
            the socket.
            RFC 1349 defines the TOS values as follows:
            
            &lt;UL&gt;
            &lt;LI&gt;<c>IPTOS_LOWCOST (0x02)</c>&lt;/LI&gt;
            &lt;LI&gt;<c>IPTOS_RELIABILITY (0x04)</c>&lt;/LI&gt;
            &lt;LI&gt;<c>IPTOS_THROUGHPUT (0x08)</c>&lt;/LI&gt;
            &lt;LI&gt;<c>IPTOS_LOWDELAY (0x10)</c>&lt;/LI&gt;
            &lt;/UL&gt;
            The last low order bit is always ignored as this
            corresponds to the MBZ (must be zero) bit.</para>
          <para>Setting bits in the precedence field may result in a
            SocketException indicating that the operation is not
            permitted.</para>
          <para>for Internet Protocol v6 <c>tc</c> is the value that
            would be placed into the sin6_flowinfo field of the IP header.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/DatagramSocket#setTrafficClass(int)" title="Reference documentation">Java documentation for <code>java.net.DatagramSocket.setTrafficClass(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if the socket is closed or the option is invalid.
</exception>
        <exception cref="T:Java.Net.SocketException">if the socket is closed or the option could not be set.
</exception>
        <altmember cref="F:Java.Net.SocketOptions.IpTos" />
      </Docs>
    </Member>
  </Members>
</Type>
