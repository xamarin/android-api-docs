<Type Name="InetAddress" FullName="Java.Net.InetAddress">
  <TypeSignature Language="C#" Value="public class InetAddress : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InetAddress extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Net.InetAddress" />
  <TypeSignature Language="F#" Value="type InetAddress = class&#xA;    inherit Object&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/net/InetAddress", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/net/InetAddress", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class represents an Internet Protocol (IP) address.</summary>
    <remarks>
      <para>This class represents an Internet Protocol (IP) address.</para>
      <para>An IP address is either a 32-bit or 128-bit unsigned number
            used by IP, a lower-level protocol on which protocols like UDP and
            TCP are built. The IP address architecture is defined by <see href="http://www.ietf.org/rfc/rfc790.txt"><i>RFC&amp;nbsp;790:
            Assigned Numbers</i></see>, <see href="http://www.ietf.org/rfc/rfc1918.txt"><i>RFC&amp;nbsp;1918:
            Address Allocation for Private Internets</i></see>, <see href="http://www.ietf.org/rfc/rfc2365.txt"><i>RFC&amp;nbsp;2365:
            Administratively Scoped IP Multicast</i></see>, and <see href="http://www.ietf.org/rfc/rfc2373.txt"><i>RFC&amp;nbsp;2373: IP
            Version 6 Addressing Architecture</i></see>. An instance of an
            InetAddress consists of an IP address and possibly its
            corresponding host name (depending on whether it is constructed
            with a host name or whether it has already done reverse host name
            resolution).
            
            &lt;h3&gt; Address types &lt;/h3&gt;
            
            &lt;blockquote&gt;&lt;table cellspacing=2 summary="Description of unicast and multicast address types"&gt;
              &lt;tr&gt;&lt;th valign=top&gt;<i>unicast</i>&lt;/th&gt;
                  &lt;td&gt;An identifier for a single interface. A packet sent to
                    a unicast address is delivered to the interface identified by
                    that address.</para>
      <para>The Unspecified Address -- Also called anylocal or wildcard
                    address. It must never be assigned to any node. It indicates the
                    absence of an address. One example of its use is as the target of
                    bind, which allows a server to accept a client connection on any
                    interface, in case the server host has multiple interfaces.</para>
      <para>The <i>unspecified</i> address must not be used as
                    the destination address of an IP packet.</para>
      <para>The <i>Loopback</i> Addresses -- This is the address
                    assigned to the loopback interface. Anything sent to this
                    IP address loops around and becomes IP input on the local
                    host. This address is often used when testing a
                    client.&lt;/td&gt;&lt;/tr&gt;
              &lt;tr&gt;&lt;th valign=top&gt;<i>multicast</i>&lt;/th&gt;
                  &lt;td&gt;An identifier for a set of interfaces (typically belonging
                    to different nodes). A packet sent to a multicast address is
                    delivered to all interfaces identified by that address.&lt;/td&gt;&lt;/tr&gt;
            &lt;/table&gt;&lt;/blockquote&gt;
            
            &lt;h4&gt; IP address scope &lt;/h4&gt;</para>
      <para>
        <i>Link-local</i> addresses are designed to be used for addressing
            on a single link for purposes such as auto-address configuration,
            neighbor discovery, or when no routers are present.</para>
      <para>
        <i>Site-local</i> addresses are designed to be used for addressing
            inside of a site without the need for a global prefix.</para>
      <para>
        <i>Global</i> addresses are unique across the internet.
            
            &lt;h4&gt; Textual representation of IP addresses &lt;/h4&gt;
            
            The textual representation of an IP address is address family specific.</para>
      <para>For IPv4 address format, please refer to Inet4Address#format; For IPv6
            address format, please refer to Inet6Address#format.</para>
      <para>There is a couple of
            System Properties affecting how IPv4 and IPv6 addresses are used.</para>
      <para>&lt;h4&gt; Host Name Resolution &lt;/h4&gt;
            
            Host name-to-IP address <i>resolution</i> is accomplished through
            the use of a combination of local machine configuration information
            and network naming services such as the Domain Name System (DNS)
            and Network Information Service(NIS). The particular naming
            services(s) being used is by default the local machine configured
            one. For any host name, its corresponding IP address is returned.</para>
      <para>
        <i>Reverse name resolution</i> means that for any IP address,
            the host associated with the IP address is returned.</para>
      <para>The InetAddress class provides methods to resolve host names to
            their IP addresses and vice versa.
            
            &lt;h4&gt; InetAddress Caching &lt;/h4&gt;
            
            The InetAddress class has a cache to store successful as well as
            unsuccessful host name resolutions.</para>
      <para>By default, when a security manager is installed, in order to
            protect against DNS spoofing attacks,
            the result of positive host name resolutions are
            cached forever. When a security manager is not installed, the default
            behavior is to cache entries for a finite (implementation dependent)
            period of time. The result of unsuccessful host
            name resolution is cached for a very short period of time (10
            seconds) to improve performance.</para>
      <para>If the default behavior is not desired, then a Java security property
            can be set to a different Time-to-live (TTL) value for positive
            caching. Likewise, a system admin can configure a different
            negative caching TTL value when needed.</para>
      <para>Two Java security properties control the TTL values used for
             positive and negative host name resolution caching:
            
            &lt;blockquote&gt;
            &lt;dl&gt;
            &lt;dt&gt;&lt;b&gt;networkaddress.cache.ttl&lt;/b&gt;&lt;/dt&gt;
            &lt;dd&gt;Indicates the caching policy for successful name lookups from
            the name service. The value is specified as as integer to indicate
            the number of seconds to cache the successful lookup. The default
            setting is to cache for an implementation specific period of time.</para>
      <para>A value of -1 indicates "cache forever".
            &lt;/dd&gt;
            &lt;dt&gt;&lt;b&gt;networkaddress.cache.negative.ttl&lt;/b&gt; (default: 10)&lt;/dt&gt;
            &lt;dd&gt;Indicates the caching policy for un-successful name lookups
            from the name service. The value is specified as as integer to
            indicate the number of seconds to cache the failure for
            un-successful lookups.</para>
      <para>A value of 0 indicates "never cache".
            A value of -1 indicates "cache forever".
            &lt;/dd&gt;
            &lt;/dl&gt;
            &lt;/blockquote&gt;</para>
      <para>Added in JDK1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/net/InetAddress" title="Reference documentation">Java documentation for <code>java.net.InetAddress</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InetAddress (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.InetAddress.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Net.InetAddress : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Net.InetAddress" Usage="new Java.Net.InetAddress (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanonicalHostName">
      <MemberSignature Language="C#" Value="public virtual string CanonicalHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CanonicalHostName" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.CanonicalHostName" />
      <MemberSignature Language="F#" Value="member this.CanonicalHostName : string" Usage="Java.Net.InetAddress.CanonicalHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCanonicalHostName", "()Ljava/lang/String;", "GetGetCanonicalHostNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCanonicalHostName", "()Ljava/lang/String;", "GetGetCanonicalHostNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the fully qualified domain name for this IP address.</summary>
        <value>the fully qualified domain name for this IP address,
               or if the operation is not allowed by the security check,
               the textual representation of the IP address.</value>
        <remarks>
          <para>Gets the fully qualified domain name for this IP address.
            Best effort method, meaning we may not be able to return
            the FQDN depending on the underlying system configuration.</para>
          <para>If there is a security manager, this method first
            calls its <c>checkConnect</c> method
            with the hostname and <c>-1</c>
            as its arguments to see if the calling code is allowed to know
            the hostname for this IP address, i.e., to connect to the host.
            If the operation is not allowed, it will return
            the textual representation of the IP address.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getCanonicalHostName()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getCanonicalHostName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAddress">
      <MemberSignature Language="C#" Value="public virtual byte[]? GetAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.InetAddress.GetAddress" />
      <MemberSignature Language="F#" Value="abstract member GetAddress : unit -&gt; byte[]&#xA;override this.GetAddress : unit -&gt; byte[]" Usage="inetAddress.GetAddress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAddress", "()[B", "GetGetAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAddress", "()[B", "GetGetAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the raw IP address of this <c>InetAddress</c>
            object.</summary>
        <returns>the raw IP address of this object.</returns>
        <remarks>
          <para>Returns the raw IP address of this <c>InetAddress</c>
            object. The result is in network byte order: the highest order
            byte of the address is in <c>getAddress()[0]</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getAddress()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAllByName">
      <MemberSignature Language="C#" Value="public static Java.Net.InetAddress[]? GetAllByName (string? host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.InetAddress[] GetAllByName(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.InetAddress.GetAllByName(System.String)" />
      <MemberSignature Language="F#" Value="static member GetAllByName : string -&gt; Java.Net.InetAddress[]" Usage="Java.Net.InetAddress.GetAllByName host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAllByName", "(Ljava/lang/String;)[Ljava/net/InetAddress;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAllByName", "(Ljava/lang/String;)[Ljava/net/InetAddress;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">the name of the host, or <c>null</c>.</param>
        <summary>Given the name of a host, returns an array of its IP addresses,
            based on the configured name service on the system.</summary>
        <returns>an array of all the IP addresses for a given host name.</returns>
        <remarks>
          <para>Given the name of a host, returns an array of its IP addresses,
            based on the configured name service on the system.</para>
          <para>The host name can either be a machine name, such as
            "<c>java.sun.com</c>", or a textual representation of its IP
            address. If a literal IP address is supplied, only the
            validity of the address format is checked.</para>
          <para>For <c>host</c> specified in <i>literal IPv6 address</i>,
            either the form defined in RFC 2732 or the literal IPv6 address
            format defined in RFC 2373 is accepted. A literal IPv6 address may
            also be qualified by appending a scoped zone identifier or scope_id.
            The syntax and usage of scope_ids is described
            here.</para>
          <para>If the host is <c>null</c> then an <c>InetAddress</c>
            representing an address of the loopback interface is returned.
            See <see href="http://www.ietf.org/rfc/rfc3330.txt">RFCÂ 3330</see>
            section&amp;nbsp;2 and <see href="http://www.ietf.org/rfc/rfc2373.txt">RFCÂ 2373</see>
            section&amp;nbsp;2.5.3.</para>
          <para>If there is a security manager and <c>host</c> is not
            null and <c>host.length()</c> is not equal to zero, the
            security manager's
            <c>checkConnect</c> method is called
            with the hostname and <c>-1</c>
            as its arguments to see if the operation is allowed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getAllByName(java.lang.String)" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getAllByName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the address lookup fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByAddress">
      <MemberSignature Language="C#" Value="public static Java.Net.InetAddress GetByAddress (byte[]? addr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.InetAddress GetByAddress(unsigned int8[] addr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.InetAddress.GetByAddress(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member GetByAddress : byte[] -&gt; Java.Net.InetAddress" Usage="Java.Net.InetAddress.GetByAddress addr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getByAddress", "([B)Ljava/net/InetAddress;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getByAddress", "([B)Ljava/net/InetAddress;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="addr">the raw IP address in network byte order</param>
        <summary>Returns an <c>InetAddress</c> object given the raw IP address .</summary>
        <returns>an InetAddress object created from the raw IP address.</returns>
        <remarks>
          <para>Returns an <c>InetAddress</c> object given the raw IP address .
            The argument is in network byte order: the highest order
            byte of the address is in <c>getAddress()[0]</c>.</para>
          <para>This method doesn't block, i.e. no reverse name service lookup
            is performed.</para>
          <para>IPv4 address byte array must be 4 bytes long and IPv6 byte array
            must be 16 bytes long</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getByAddress(byte[])" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getByAddress(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException" />
      </Docs>
    </Member>
    <Member MemberName="GetByAddress">
      <MemberSignature Language="C#" Value="public static Java.Net.InetAddress GetByAddress (string? host, byte[]? addr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.InetAddress GetByAddress(string host, unsigned int8[] addr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.InetAddress.GetByAddress(System.String,System.Byte[])" />
      <MemberSignature Language="F#" Value="static member GetByAddress : string * byte[] -&gt; Java.Net.InetAddress" Usage="Java.Net.InetAddress.GetByAddress (host, addr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getByAddress", "(Ljava/lang/String;[B)Ljava/net/InetAddress;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getByAddress", "(Ljava/lang/String;[B)Ljava/net/InetAddress;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="addr" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="host">the specified host</param>
        <param name="addr">the raw IP address in network byte order</param>
        <summary>Creates an InetAddress based on the provided host name and IP address.</summary>
        <returns>an InetAddress object created from the raw IP address.</returns>
        <remarks>
          <para>Creates an InetAddress based on the provided host name and IP address.
            No name service is checked for the validity of the address.</para>
          <para>The host name can either be a machine name, such as
            "<c>java.sun.com</c>", or a textual representation of its IP
            address.</para>
          <para>No validity checking is done on the host name either.</para>
          <para>If addr specifies an IPv4 address an instance of Inet4Address
            will be returned; otherwise, an instance of Inet6Address
            will be returned.</para>
          <para>IPv4 address byte array must be 4 bytes long and IPv6 byte array
            must be 16 bytes long</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getByAddress(java.lang.String,%20byte[])" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getByAddress(java.lang.String, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if <c>ipAddress</c> is null or the wrong length.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByName">
      <MemberSignature Language="C#" Value="public static Java.Net.InetAddress GetByName (string? host);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.InetAddress GetByName(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.InetAddress.GetByName(System.String)" />
      <MemberSignature Language="F#" Value="static member GetByName : string -&gt; Java.Net.InetAddress" Usage="Java.Net.InetAddress.GetByName host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getByName", "(Ljava/lang/String;)Ljava/net/InetAddress;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getByName", "(Ljava/lang/String;)Ljava/net/InetAddress;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">the specified host, or <c>null</c>.</param>
        <summary>Determines the IP address of a host, given the host's name.</summary>
        <returns>an IP address for the given host name.</returns>
        <remarks>
          <para>Determines the IP address of a host, given the host's name.</para>
          <para>The host name can either be a machine name, such as
            "<c>java.sun.com</c>", or a textual representation of its
            IP address. If a literal IP address is supplied, only the
            validity of the address format is checked.</para>
          <para>For <c>host</c> specified in literal IPv6 address,
            either the form defined in RFC 2732 or the literal IPv6 address
            format defined in RFC 2373 is accepted. IPv6 scoped addresses are also
            supported. See here for a description of IPv6
            scoped addresses.</para>
          <para>If the host is <c>null</c> then an <c>InetAddress</c>
            representing an address of the loopback interface is returned.
            See <see href="http://www.ietf.org/rfc/rfc3330.txt">RFCÂ 3330</see>
            section&amp;nbsp;2 and <see href="http://www.ietf.org/rfc/rfc2373.txt">RFCÂ 2373</see>
            section&amp;nbsp;2.5.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getByName(java.lang.String)" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getByName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the address lookup fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="HostAddress">
      <MemberSignature Language="C#" Value="public virtual string? HostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.HostAddress" />
      <MemberSignature Language="F#" Value="member this.HostAddress : string" Usage="Java.Net.InetAddress.HostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHostAddress", "()Ljava/lang/String;", "GetGetHostAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHostAddress", "()Ljava/lang/String;", "GetGetHostAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the IP address string in textual presentation.</summary>
        <value>the raw IP address in a string format.</value>
        <remarks>
          <para>Returns the IP address string in textual presentation.</para>
          <para>Added in JDK1.0.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getHostAddress()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getHostAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public virtual string HostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.HostName" />
      <MemberSignature Language="F#" Value="member this.HostName : string" Usage="Java.Net.InetAddress.HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHostName", "()Ljava/lang/String;", "GetGetHostNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHostName", "()Ljava/lang/String;", "GetGetHostNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the host name for this IP address.</summary>
        <value>the host name for this IP address, or if the operation
               is not allowed by the security check, the textual
               representation of the IP address.</value>
        <remarks>
          <para>Gets the host name for this IP address.</para>
          <para>If this InetAddress was created with a host name,
            this host name will be remembered and returned;
            otherwise, a reverse name lookup will be performed
            and the result will be returned based on the system
            configured name lookup service. If a lookup of the name service
            is required, call
            <c>#getCanonicalHostName() getCanonicalHostName</c>.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is first called
            with the hostname and <c>-1</c>
            as its arguments to see if the operation is allowed.
            If the operation is not allowed, it will return
            the textual representation of the IP address.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getHostName()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getHostName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAnyLocalAddress">
      <MemberSignature Language="C#" Value="public virtual bool IsAnyLocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnyLocalAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsAnyLocalAddress" />
      <MemberSignature Language="F#" Value="member this.IsAnyLocalAddress : bool" Usage="Java.Net.InetAddress.IsAnyLocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAnyLocalAddress", "()Z", "GetIsAnyLocalAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAnyLocalAddress", "()Z", "GetIsAnyLocalAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the InetAddress in a wildcard address.</summary>
        <value>a <c>boolean</c> indicating if the Inetaddress is
                    a wildcard address.</value>
        <remarks>
          <para>Utility routine to check if the InetAddress in a wildcard address.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isAnyLocalAddress()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isAnyLocalAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLinkLocalAddress">
      <MemberSignature Language="C#" Value="public virtual bool IsLinkLocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLinkLocalAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsLinkLocalAddress" />
      <MemberSignature Language="F#" Value="member this.IsLinkLocalAddress : bool" Usage="Java.Net.InetAddress.IsLinkLocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLinkLocalAddress", "()Z", "GetIsLinkLocalAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLinkLocalAddress", "()Z", "GetIsLinkLocalAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the InetAddress is an link local address.</summary>
        <value>a <c>boolean</c> indicating if the InetAddress is
            a link local address; or false if address is not a link local unicast address.</value>
        <remarks>
          <para>Utility routine to check if the InetAddress is an link local address.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isLinkLocalAddress()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isLinkLocalAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLoopbackAddress">
      <MemberSignature Language="C#" Value="public virtual bool IsLoopbackAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoopbackAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsLoopbackAddress" />
      <MemberSignature Language="F#" Value="member this.IsLoopbackAddress : bool" Usage="Java.Net.InetAddress.IsLoopbackAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLoopbackAddress", "()Z", "GetIsLoopbackAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLoopbackAddress", "()Z", "GetIsLoopbackAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the InetAddress is a loopback address.</summary>
        <value>a <c>boolean</c> indicating if the InetAddress is
            a loopback address; or false otherwise.</value>
        <remarks>
          <para>Utility routine to check if the InetAddress is a loopback address.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isLoopbackAddress()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isLoopbackAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMCGlobal">
      <MemberSignature Language="C#" Value="public virtual bool IsMCGlobal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMCGlobal" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsMCGlobal" />
      <MemberSignature Language="F#" Value="member this.IsMCGlobal : bool" Usage="Java.Net.InetAddress.IsMCGlobal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMCGlobal", "()Z", "GetIsMCGlobalHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMCGlobal", "()Z", "GetIsMCGlobalHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the multicast address has global scope.</summary>
        <value>a <c>boolean</c> indicating if the address has
                    is a multicast address of global scope, false if it is not
                    of global scope or it is not a multicast address</value>
        <remarks>
          <para>Utility routine to check if the multicast address has global scope.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isMCGlobal()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isMCGlobal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMCLinkLocal">
      <MemberSignature Language="C#" Value="public virtual bool IsMCLinkLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMCLinkLocal" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsMCLinkLocal" />
      <MemberSignature Language="F#" Value="member this.IsMCLinkLocal : bool" Usage="Java.Net.InetAddress.IsMCLinkLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMCLinkLocal", "()Z", "GetIsMCLinkLocalHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMCLinkLocal", "()Z", "GetIsMCLinkLocalHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the multicast address has link scope.</summary>
        <value>a <c>boolean</c> indicating if the address has
                    is a multicast address of link-local scope, false if it is not
                    of link-local scope or it is not a multicast address</value>
        <remarks>
          <para>Utility routine to check if the multicast address has link scope.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isMCLinkLocal()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isMCLinkLocal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMCNodeLocal">
      <MemberSignature Language="C#" Value="public virtual bool IsMCNodeLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMCNodeLocal" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsMCNodeLocal" />
      <MemberSignature Language="F#" Value="member this.IsMCNodeLocal : bool" Usage="Java.Net.InetAddress.IsMCNodeLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMCNodeLocal", "()Z", "GetIsMCNodeLocalHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMCNodeLocal", "()Z", "GetIsMCNodeLocalHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the multicast address has node scope.</summary>
        <value>a <c>boolean</c> indicating if the address has
                    is a multicast address of node-local scope, false if it is not
                    of node-local scope or it is not a multicast address</value>
        <remarks>
          <para>Utility routine to check if the multicast address has node scope.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isMCNodeLocal()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isMCNodeLocal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMCOrgLocal">
      <MemberSignature Language="C#" Value="public virtual bool IsMCOrgLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMCOrgLocal" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsMCOrgLocal" />
      <MemberSignature Language="F#" Value="member this.IsMCOrgLocal : bool" Usage="Java.Net.InetAddress.IsMCOrgLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMCOrgLocal", "()Z", "GetIsMCOrgLocalHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMCOrgLocal", "()Z", "GetIsMCOrgLocalHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the multicast address has organization scope.</summary>
        <value>a <c>boolean</c> indicating if the address has
                    is a multicast address of organization-local scope,
                    false if it is not of organization-local scope
                    or it is not a multicast address</value>
        <remarks>
          <para>Utility routine to check if the multicast address has organization scope.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isMCOrgLocal()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isMCOrgLocal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMCSiteLocal">
      <MemberSignature Language="C#" Value="public virtual bool IsMCSiteLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMCSiteLocal" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsMCSiteLocal" />
      <MemberSignature Language="F#" Value="member this.IsMCSiteLocal : bool" Usage="Java.Net.InetAddress.IsMCSiteLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMCSiteLocal", "()Z", "GetIsMCSiteLocalHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMCSiteLocal", "()Z", "GetIsMCSiteLocalHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the multicast address has site scope.</summary>
        <value>a <c>boolean</c> indicating if the address has
                    is a multicast address of site-local scope, false if it is not
                    of site-local scope or it is not a multicast address</value>
        <remarks>
          <para>Utility routine to check if the multicast address has site scope.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isMCSiteLocal()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isMCSiteLocal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMulticastAddress">
      <MemberSignature Language="C#" Value="public virtual bool IsMulticastAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMulticastAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsMulticastAddress" />
      <MemberSignature Language="F#" Value="member this.IsMulticastAddress : bool" Usage="Java.Net.InetAddress.IsMulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMulticastAddress", "()Z", "GetIsMulticastAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMulticastAddress", "()Z", "GetIsMulticastAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the InetAddress is an
            IP multicast address.</summary>
        <value>a <c>boolean</c> indicating if the InetAddress is
            an IP multicast address</value>
        <remarks>
          <para>Utility routine to check if the InetAddress is an
            IP multicast address.</para>
          <para>Added in JDK1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isMulticastAddress()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isMulticastAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsReachable">
      <MemberSignature Language="C#" Value="public virtual bool IsReachable (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsReachable(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.InetAddress.IsReachable(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsReachable : int -&gt; bool&#xA;override this.IsReachable : int -&gt; bool" Usage="inetAddress.IsReachable timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isReachable", "(I)Z", "GetIsReachable_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isReachable", "(I)Z", "GetIsReachable_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">the time, in milliseconds, before the call aborts</param>
        <summary>Test whether that address is reachable.</summary>
        <returns>a <c>boolean</c> indicating if the address is reachable.</returns>
        <remarks>
          <para>Test whether that address is reachable. Best effort is made by the
            implementation to try to reach the host, but firewalls and server
            configuration may block requests resulting in a unreachable status
            while some specific ports may be accessible.</para>
          <para>Android implementation attempts ICMP ECHO REQUESTs first, on failure it
            will fall back to TCP ECHO REQUESTs. Success on either protocol will
            return true.</para>
          <para>The timeout value, in milliseconds, indicates the maximum amount of time
            the try should take. If the operation times out before getting an
            answer, the host is deemed unreachable. A negative value will result
            in an IllegalArgumentException being thrown.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isReachable(int)" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isReachable(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs during an I/O operation.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if timeout is less than zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReachable">
      <MemberSignature Language="C#" Value="public virtual bool IsReachable (Java.Net.NetworkInterface? netif, int ttl, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsReachable(class Java.Net.NetworkInterface netif, int32 ttl, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.InetAddress.IsReachable(Java.Net.NetworkInterface,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsReachable : Java.Net.NetworkInterface * int * int -&gt; bool&#xA;override this.IsReachable : Java.Net.NetworkInterface * int * int -&gt; bool" Usage="inetAddress.IsReachable (netif, ttl, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isReachable", "(Ljava/net/NetworkInterface;II)Z", "GetIsReachable_Ljava_net_NetworkInterface_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isReachable", "(Ljava/net/NetworkInterface;II)Z", "GetIsReachable_Ljava_net_NetworkInterface_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="netif" Type="Java.Net.NetworkInterface" />
        <Parameter Name="ttl" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="netif">the NetworkInterface through which the
                               test will be done, or null for any interface</param>
        <param name="ttl">the maximum numbers of hops to try or 0 for the
                             default</param>
        <param name="timeout">the time, in milliseconds, before the call aborts</param>
        <summary>Test whether that address is reachable.</summary>
        <returns>a <c>boolean</c>indicating if the address is reachable.</returns>
        <remarks>
          <para>Test whether that address is reachable. Best effort is made by the
            implementation to try to reach the host, but firewalls and server
            configuration may block requests resulting in a unreachable status
            while some specific ports may be accessible.</para>
          <para>Android implementation attempts ICMP ECHO REQUESTs first, on failure it
            will fall back to TCP ECHO REQUESTs. Success on either protocol will
            return true.</para>
          <para>The <c>network interface</c> and <c>ttl</c> parameters
            let the caller specify which network interface the test will go through
            and the maximum number of hops the packets should go through.
            A negative value for the <c>ttl</c> will result in an
            IllegalArgumentException being thrown.</para>
          <para>The timeout value, in milliseconds, indicates the maximum amount of time
            the try should take. If the operation times out before getting an
            answer, the host is deemed unreachable. A negative value will result
            in an IllegalArgumentException being thrown.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isReachable(java.net.NetworkInterface,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isReachable(java.net.NetworkInterface, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs during an I/O operation.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if ttl or timeout is less than zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSiteLocalAddress">
      <MemberSignature Language="C#" Value="public virtual bool IsSiteLocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSiteLocalAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.IsSiteLocalAddress" />
      <MemberSignature Language="F#" Value="member this.IsSiteLocalAddress : bool" Usage="Java.Net.InetAddress.IsSiteLocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSiteLocalAddress", "()Z", "GetIsSiteLocalAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSiteLocalAddress", "()Z", "GetIsSiteLocalAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the InetAddress is a site local address.</summary>
        <value>a <c>boolean</c> indicating if the InetAddress is
            a site local address; or false if address is not a site local unicast address.</value>
        <remarks>
          <para>Utility routine to check if the InetAddress is a site local address.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#isSiteLocalAddress()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.isSiteLocalAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Net.InetAddress.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalHost">
      <MemberSignature Language="C#" Value="public static Java.Net.InetAddress LocalHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Net.InetAddress LocalHost" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.LocalHost" />
      <MemberSignature Language="F#" Value="static member LocalHost : Java.Net.InetAddress" Usage="Java.Net.InetAddress.LocalHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalHost", "()Ljava/net/InetAddress;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalHost", "()Ljava/net/InetAddress;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the address of the local host.</summary>
        <value>the address of the local host.</value>
        <remarks>
          <para>Returns the address of the local host. This is achieved by retrieving
            the name of the host from the system, then resolving that name into
            an <c>InetAddress</c>.</para>
          <para>Note: The resolved address may be cached for a short period of time.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is called
            with the local host name and <c>-1</c>
            as its arguments to see if the operation is allowed.
            If the operation is not allowed, an InetAddress representing
            the loopback address is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getLocalHost()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getLocalHost()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the address lookup fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LoopbackAddress">
      <MemberSignature Language="C#" Value="public static Java.Net.InetAddress LoopbackAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Net.InetAddress LoopbackAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.LoopbackAddress" />
      <MemberSignature Language="F#" Value="static member LoopbackAddress : Java.Net.InetAddress" Usage="Java.Net.InetAddress.LoopbackAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLoopbackAddress", "()Ljava/net/InetAddress;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLoopbackAddress", "()Ljava/net/InetAddress;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the loopback address.</summary>
        <value>the InetAddress loopback instance.</value>
        <remarks>
          <para>Returns the loopback address.</para>
          <para>The InetAddress returned will represent the IPv4
            loopback address, 127.0.0.1, or the IPv6 loopback
            address, ::1. The IPv4 loopback address returned
            is only one of many in the form 127.*.*.*</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/InetAddress#getLoopbackAddress()" title="Reference documentation">Java documentation for <code>java.net.InetAddress.getLoopbackAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Net.InetAddress.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Net.InetAddress.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Net.InetAddress.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
