<Type Name="Inet6Address" FullName="Java.Net.Inet6Address">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Inet6Address&#xA;Inherits InetAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class Inet6Address sealed : Java::Net::InetAddress" />
  <TypeSignature Language="C#" Value="public sealed class Inet6Address : Java.Net.InetAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Inet6Address extends Java.Net.InetAddress" />
  <TypeSignature Language="DocId" Value="T:Java.Net.Inet6Address" />
  <TypeSignature Language="F#" Value="type Inet6Address = class&#xA;    inherit InetAddress" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Net.InetAddress</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/net/Inet6Address", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/net/Inet6Address", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class represents an Internet Protocol version 6 (IPv6) address.</summary>
    <remarks>
      <para>This class represents an Internet Protocol version 6 (IPv6) address.
            Defined by <see href="http://www.ietf.org/rfc/rfc2373.txt"><i>RFC&amp;nbsp;2373: IP Version 6 Addressing Architecture</i></see>.
            
            &lt;h3&gt; "format"&gt;Textual representation of IP addresses&lt;/h3&gt;
            
            Textual representation of IPv6 address used as input to methods
            takes one of the following forms:
            
            &lt;ol&gt;
              &lt;li&gt;</para>
      <para>"lform"&gt;The preferred form is x:x:x:x:x:x:x:x,
              where the 'x's are
              the hexadecimal values of the eight 16-bit pieces of the
              address. This is the full form.  For example,
            
              &lt;blockquote&gt;&lt;table cellpadding=0 cellspacing=0 summary="layout"&gt;
              &lt;tr&gt;&lt;td&gt;<c>1080:0:0:0:8:800:200C:417A</c>&lt;td&gt;&lt;/tr&gt;
              &lt;/table&gt;&lt;/blockquote&gt;</para>
      <para>Note that it is not necessary to write the leading zeros in
              an individual field. However, there must be at least one numeral
              in every field, except as described below.&lt;/li&gt;
            
              &lt;li&gt;</para>
      <para>Due to some methods of allocating certain styles of IPv6
              addresses, it will be common for addresses to contain long
              strings of zero bits. In order to make writing addresses
              containing zero bits easier, a special syntax is available to
              compress the zeros. The use of "::" indicates multiple groups
              of 16-bits of zeros. The "::" can only appear once in an address.
              The "::" can also be used to compress the leading and/or trailing
              zeros in an address. For example,
            
              &lt;blockquote&gt;&lt;table cellpadding=0 cellspacing=0 summary="layout"&gt;
              &lt;tr&gt;&lt;td&gt;<c>1080::8:800:200C:417A</c>&lt;td&gt;&lt;/tr&gt;
              &lt;/table&gt;&lt;/blockquote&gt;
            
              &lt;li&gt;</para>
      <para>An alternative form that is sometimes more convenient
              when dealing with a mixed environment of IPv4 and IPv6 nodes is
              x:x:x:x:x:x:d.d.d.d, where the 'x's are the hexadecimal values
              of the six high-order 16-bit pieces of the address, and the 'd's
              are the decimal values of the four low-order 8-bit pieces of the
              standard IPv4 representation address, for example,
            
              &lt;blockquote&gt;&lt;table cellpadding=0 cellspacing=0 summary="layout"&gt;
              &lt;tr&gt;&lt;td&gt;<c>::FFFF:129.144.52.38</c>&lt;td&gt;&lt;/tr&gt;
              &lt;tr&gt;&lt;td&gt;<c>::129.144.52.38</c>&lt;td&gt;&lt;/tr&gt;
              &lt;/table&gt;&lt;/blockquote&gt;</para>
      <para>where "::FFFF:d.d.d.d" and "::d.d.d.d" are, respectively, the
              general forms of an IPv4-mapped IPv6 address and an
              IPv4-compatible IPv6 address. Note that the IPv4 portion must be
              in the "d.d.d.d" form. The following forms are invalid:
            
              &lt;blockquote&gt;&lt;table cellpadding=0 cellspacing=0 summary="layout"&gt;
              &lt;tr&gt;&lt;td&gt;<c>::FFFF:d.d.d</c>&lt;td&gt;&lt;/tr&gt;
              &lt;tr&gt;&lt;td&gt;<c>::FFFF:d.d</c>&lt;td&gt;&lt;/tr&gt;
              &lt;tr&gt;&lt;td&gt;<c>::d.d.d</c>&lt;td&gt;&lt;/tr&gt;
              &lt;tr&gt;&lt;td&gt;<c>::d.d</c>&lt;td&gt;&lt;/tr&gt;
              &lt;/table&gt;&lt;/blockquote&gt;</para>
      <para>The following form:
            
              &lt;blockquote&gt;&lt;table cellpadding=0 cellspacing=0 summary="layout"&gt;
              &lt;tr&gt;&lt;td&gt;<c>::FFFF:d</c>&lt;td&gt;&lt;/tr&gt;
              &lt;/table&gt;&lt;/blockquote&gt;</para>
      <para>is valid, however it is an unconventional representation of
              the IPv4-compatible IPv6 address,
            
              &lt;blockquote&gt;&lt;table cellpadding=0 cellspacing=0 summary="layout"&gt;
              &lt;tr&gt;&lt;td&gt;<c>::255.255.0.d</c>&lt;td&gt;&lt;/tr&gt;
              &lt;/table&gt;&lt;/blockquote&gt;</para>
      <para>while "::d" corresponds to the general IPv6 address
              "0:0:0:0:0:0:0:d".&lt;/li&gt;
            &lt;/ol&gt;</para>
      <para>For methods that return a textual representation as output
            value, the full form is used. Inet6Address will return the full
            form because it is unambiguous when used in combination with other
            textual data.
            
            &lt;h4&gt; Special IPv6 address &lt;/h4&gt;
            
            &lt;blockquote&gt;
            &lt;table cellspacing=2 summary="Description of IPv4-mapped address"&gt;
            &lt;tr&gt;&lt;th valign=top&gt;<i>IPv4-mapped address</i>&lt;/th&gt;
                    &lt;td&gt;Of the form::ffff:w.x.y.z, this IPv6 address is used to
                    represent an IPv4 address. It allows the native program to
                    use the same address data structure and also the same
                    socket when communicating with both IPv4 and IPv6 nodes.</para>
      <para>In InetAddress and Inet6Address, it is used for internal
                    representation; it has no functional role. Java will never
                    return an IPv4-mapped address.  These classes can take an
                    IPv4-mapped address as input, both in byte array and text
                    representation. However, it will be converted into an IPv4
                    address.&lt;/td&gt;&lt;/tr&gt;
            &lt;/table&gt;&lt;/blockquote&gt;
            
            &lt;h4&gt;"scoped"&gt;Textual representation of IPv6 scoped addresses&lt;/h4&gt;</para>
      <para>The textual representation of IPv6 addresses as described above can be
            extended to specify IPv6 scoped addresses. This extension to the basic
            addressing architecture is described in [draft-ietf-ipngwg-scoping-arch-04.txt].</para>
      <para>Because link-local and site-local addresses are non-global, it is possible
            that different hosts may have the same destination address and may be
            reachable through different interfaces on the same originating system. In
            this case, the originating system is said to be connected to multiple zones
            of the same scope. In order to disambiguate which is the intended destination
            zone, it is possible to append a zone identifier (or <i>scope_id</i>) to an
            IPv6 address.</para>
      <para>The general format for specifying the <i>scope_id</i> is the following:
            
            &lt;blockquote&gt;<i>IPv6-address</i>%<i>scope_id</i>&lt;/blockquote&gt;</para>
      <para>The IPv6-address is a literal IPv6 address as described above.
            The <i>scope_id</i> refers to an interface on the local system, and it can be
            specified in two ways.
            &lt;ol&gt;&lt;li&gt;<i>As a numeric identifier.</i> This must be a positive integer
            that identifies the particular interface and scope as understood by the
            system. Usually, the numeric values can be determined through administration
            tools on the system. Each interface may have multiple values, one for each
            scope. If the scope is unspecified, then the default value used is zero.&lt;/li&gt;
            &lt;li&gt;<i>As a string.</i> This must be the exact string that is returned by
            <c>java.net.NetworkInterface#getName()</c> for the particular interface in
            question. When an Inet6Address is created in this way, the numeric scope-id
            is determined at the time the object is created by querying the relevant
            NetworkInterface.&lt;/li&gt;&lt;/ol&gt;</para>
      <para>Note also, that the numeric <i>scope_id</i> can be retrieved from
            Inet6Address instances returned from the NetworkInterface class. This can be
            used to find out the current scope ids configured on the system.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/net/Inet6Address" title="Reference documentation">Java documentation for <code>java.net.Inet6Address</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="GetByAddress">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetByAddress (host As String, addr As Byte(), nif As NetworkInterface) As Inet6Address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Net::Inet6Address ^ GetByAddress(System::String ^ host, cli::array &lt;System::Byte&gt; ^ addr, Java::Net::NetworkInterface ^ nif);" />
      <MemberSignature Language="C#" Value="public static Java.Net.Inet6Address? GetByAddress (string? host, byte[]? addr, Java.Net.NetworkInterface? nif);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.Inet6Address GetByAddress(string host, unsigned int8[] addr, class Java.Net.NetworkInterface nif) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Inet6Address.GetByAddress(System.String,System.Byte[],Java.Net.NetworkInterface)" />
      <MemberSignature Language="F#" Value="static member GetByAddress : string * byte[] * Java.Net.NetworkInterface -&gt; Java.Net.Inet6Address" Usage="Java.Net.Inet6Address.GetByAddress (host, addr, nif)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getByAddress", "(Ljava/lang/String;[BLjava/net/NetworkInterface;)Ljava/net/Inet6Address;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getByAddress", "(Ljava/lang/String;[BLjava/net/NetworkInterface;)Ljava/net/Inet6Address;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Inet6Address</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="addr" Type="System.Byte[]" />
        <Parameter Name="nif" Type="Java.Net.NetworkInterface" />
      </Parameters>
      <Docs>
        <param name="host">the specified host</param>
        <param name="addr">the raw IP address in network byte order</param>
        <param name="nif">an interface this address must be associated with.</param>
        <summary>Create an Inet6Address in the exact manner of <c>InetAddress#getByAddress(String,byte[])</c> except that the IPv6 scope_id is
            set to the value corresponding to the given interface for the address
            type specified in <c>addr</c>.</summary>
        <returns>an Inet6Address object created from the raw IP address.</returns>
        <remarks>
          <para>Create an Inet6Address in the exact manner of <c>InetAddress#getByAddress(String,byte[])</c> except that the IPv6 scope_id is
            set to the value corresponding to the given interface for the address
            type specified in <c>addr</c>. The call will fail with an
            UnknownHostException if the given interface does not have a numeric
            scope_id assigned for the given address type (eg. link-local or site-local).
            See here for a description of IPv6
            scoped addresses.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Inet6Address#getByAddress(java.lang.String,%20byte[],%20java.net.NetworkInterface)" title="Reference documentation">Java documentation for <code>java.net.Inet6Address.getByAddress(java.lang.String, byte[], java.net.NetworkInterface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the address is <c>null</c> or has an invalid length or
             the interface doesn't have a numeric scope id for the given
             address type.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByAddress">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetByAddress (host As String, addr As Byte(), scope_id As Integer) As Inet6Address" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Net::Inet6Address ^ GetByAddress(System::String ^ host, cli::array &lt;System::Byte&gt; ^ addr, int scope_id);" />
      <MemberSignature Language="C#" Value="public static Java.Net.Inet6Address? GetByAddress (string? host, byte[]? addr, int scope_id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.Inet6Address GetByAddress(string host, unsigned int8[] addr, int32 scope_id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Inet6Address.GetByAddress(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetByAddress : string * byte[] * int -&gt; Java.Net.Inet6Address" Usage="Java.Net.Inet6Address.GetByAddress (host, addr, scope_id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getByAddress", "(Ljava/lang/String;[BI)Ljava/net/Inet6Address;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getByAddress", "(Ljava/lang/String;[BI)Ljava/net/Inet6Address;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Inet6Address</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="addr" Type="System.Byte[]" />
        <Parameter Name="scope_id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the specified host</param>
        <param name="addr">the raw IP address in network byte order</param>
        <param name="scope_id">the numeric scope_id for the address.</param>
        <summary>Create an Inet6Address in the exact manner of <c>InetAddress#getByAddress(String,byte[])</c> except that the IPv6 scope_id is
            set to the given numeric value.</summary>
        <returns>an Inet6Address object created from the raw IP address.</returns>
        <remarks>
          <para>Create an Inet6Address in the exact manner of <c>InetAddress#getByAddress(String,byte[])</c> except that the IPv6 scope_id is
            set to the given numeric value. The scope_id is not checked to determine
            if it corresponds to any interface on the system.
            See here for a description of IPv6
            scoped addresses.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Inet6Address#getByAddress(java.lang.String,%20byte[],%20int)" title="Reference documentation">Java documentation for <code>java.net.Inet6Address.getByAddress(java.lang.String, byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the address is null or has an invalid length.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsIPv4CompatibleAddress">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIPv4CompatibleAddress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIPv4CompatibleAddress { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsIPv4CompatibleAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIPv4CompatibleAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Inet6Address.IsIPv4CompatibleAddress" />
      <MemberSignature Language="F#" Value="member this.IsIPv4CompatibleAddress : bool" Usage="Java.Net.Inet6Address.IsIPv4CompatibleAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isIPv4CompatibleAddress", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isIPv4CompatibleAddress", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utility routine to check if the InetAddress is an
            IPv4 compatible IPv6 address.</summary>
        <value>a <c>boolean</c> indicating if the InetAddress is an IPv4
                    compatible IPv6 address; or false if address is IPv4 address.</value>
        <remarks>
          <para>Utility routine to check if the InetAddress is an
            IPv4 compatible IPv6 address.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Inet6Address#isIPv4CompatibleAddress()" title="Reference documentation">Java documentation for <code>java.net.Inet6Address.isIPv4CompatibleAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Inet6Address.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Net.Inet6Address.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopedInterface">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopedInterface As NetworkInterface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Java::Net::NetworkInterface ^ ScopedInterface { Java::Net::NetworkInterface ^ get(); };" />
      <MemberSignature Language="C#" Value="public Java.Net.NetworkInterface? ScopedInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.NetworkInterface ScopedInterface" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Inet6Address.ScopedInterface" />
      <MemberSignature Language="F#" Value="member this.ScopedInterface : Java.Net.NetworkInterface" Usage="Java.Net.Inet6Address.ScopedInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScopedInterface", "()Ljava/net/NetworkInterface;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScopedInterface", "()Ljava/net/NetworkInterface;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.NetworkInterface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the scoped interface, if this instance was created with
            with a scoped interface.</summary>
        <value>the scoped interface, or null if not set.</value>
        <remarks>
          <para>Returns the scoped interface, if this instance was created with
            with a scoped interface.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Inet6Address#getScopedInterface()" title="Reference documentation">Java documentation for <code>java.net.Inet6Address.getScopedInterface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScopeId">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopeId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScopeId { int get(); };" />
      <MemberSignature Language="C#" Value="public int ScopeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScopeId" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Inet6Address.ScopeId" />
      <MemberSignature Language="F#" Value="member this.ScopeId : int" Usage="Java.Net.Inet6Address.ScopeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScopeId", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScopeId", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the numeric scopeId, if this instance is associated with
            an interface.</summary>
        <value>the scopeId, or zero if not set.</value>
        <remarks>
          <para>Returns the numeric scopeId, if this instance is associated with
            an interface. If no scoped_id is set, the returned value is zero.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Inet6Address#getScopeId()" title="Reference documentation">Java documentation for <code>java.net.Inet6Address.getScopeId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Inet6Address.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Net.Inet6Address.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Inet6Address.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Net.Inet6Address.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
