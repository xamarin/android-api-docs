<Type Name="ISocketOptions" FullName="Java.Net.ISocketOptions">
  <TypeSignature Language="VB.NET" Value="Public Interface ISocketOptions&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISocketOptions : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface ISocketOptions : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ISocketOptions implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Net.ISocketOptions" />
  <TypeSignature Language="F#" Value="type ISocketOptions = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/net/SocketOptions", "", "Java.Net.ISocketOptionsInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/net/SocketOptions", "", "Java.Net.ISocketOptionsInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Interface of methods to get/set socket options.</summary>
    <remarks>
      <para>Interface of methods to get/set socket options.  This interface is
            implemented by: &lt;B&gt;SocketImpl&lt;/B&gt; and  &lt;B&gt;DatagramSocketImpl&lt;/B&gt;.
            Subclasses of these should override the methods
            of this interface in order to support their own options.</para>
      <para>The methods and constants which specify options in this interface are
            for implementation only.  If you're not subclassing SocketImpl or
            DatagramSocketImpl, &lt;B&gt;you won't use these directly.&lt;/B&gt; There are
            type-safe methods to get/set each of these options in Socket, ServerSocket,
            DatagramSocket and MulticastSocket.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/net/SocketOptions" title="Reference documentation">Java documentation for <code>java.net.SocketOptions</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="GetOption">
      <MemberSignature Language="VB.NET" Value="Public Function GetOption (optID As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::Object ^ GetOption(int optID);" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetOption (int optID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetOption(int32 optID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ISocketOptions.GetOption(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetOption : int -&gt; Java.Lang.Object" Usage="iSocketOptions.GetOption optID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOption", "(I)Ljava/lang/Object;", "GetGetOption_IHandler:Java.Net.ISocketOptionsInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOption", "(I)Ljava/lang/Object;", "GetGetOption_IHandler:Java.Net.ISocketOptionsInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="optID">an <c>int</c> identifying the option to fetch</param>
        <summary>Fetch the value of an option.</summary>
        <returns>the value of the option</returns>
        <remarks>
          <para>Fetch the value of an option.
            Binary options will return java.lang.Boolean.TRUE
            if enabled, java.lang.Boolean.FALSE if disabled, e.g.:
            &lt;BR&gt;</para>
          <code lang="text/java">SocketImpl s;
            ...
            Boolean noDelay = (Boolean)(s.getOption(TCP_NODELAY));
            if (noDelay.booleanValue()) {
                // true if TCP_NODELAY is enabled...
            ...
            }
            </code>
          <para>For options that take a particular type as a parameter,
            getOption(int) will return the parameter's value, else
            it will return java.lang.Boolean.FALSE:</para>
          <code lang="text/java">Object o = s.getOption(SO_LINGER);
            if (o instanceof Integer) {
                System.out.print("Linger time is " + ((Integer)o).intValue());
            } else {
              // the true type of o is java.lang.Boolean.FALSE;
            }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/SocketOptions#getOption(int)" title="Reference documentation">Java documentation for <code>java.net.SocketOptions.getOption(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs reading the option value.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="VB.NET" Value="Public Sub SetOption (optID As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOption(int optID, Java::Lang::Object ^ value);" />
      <MemberSignature Language="C#" Value="public void SetOption (int optID, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOption(int32 optID, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.ISocketOptions.SetOption(System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetOption : int * Java.Lang.Object -&gt; unit" Usage="iSocketOptions.SetOption (optID, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOption", "(ILjava/lang/Object;)V", "GetSetOption_ILjava_lang_Object_Handler:Java.Net.ISocketOptionsInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOption", "(ILjava/lang/Object;)V", "GetSetOption_ILjava_lang_Object_Handler:Java.Net.ISocketOptionsInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optID" Type="System.Int32" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="optID">identifies the option</param>
        <param name="value">the parameter of the socket option</param>
        <summary>Enable/disable the option specified by <i>optID</i>.</summary>
        <remarks>
          <para>Enable/disable the option specified by <i>optID</i>.  If the option
            is to be enabled, and it takes an option-specific "value",  this is
            passed in <i>value</i>.  The actual type of value is option-specific,
            and it is an error to pass something that isn't of the expected type:
            &lt;BR&gt;</para>
          <code lang="text/java">SocketImpl s;
            ...
            s.setOption(SO_LINGER, new Integer(10));
               // OK - set SO_LINGER w/ timeout of 10 sec.
            s.setOption(SO_LINGER, new Double(10));
               // ERROR - expects java.lang.Integer
            </code>
          <para>If the requested option is binary, it can be set using this method by
            a java.lang.Boolean:
            &lt;BR&gt;</para>
          <code lang="text/java">s.setOption(TCP_NODELAY, Boolean.TRUE);
               // OK - enables TCP_NODELAY, a binary option
            </code>
          <para>&lt;BR&gt;
            Any option can be disabled using this method with a Boolean.FALSE:
            &lt;BR&gt;</para>
          <code lang="text/java">s.setOption(TCP_NODELAY, Boolean.FALSE);
               // OK - disables TCP_NODELAY
            s.setOption(SO_LINGER, Boolean.FALSE);
               // OK - disables SO_LINGER
            </code>
          <para>&lt;BR&gt;
            For an option that has a notion of on and off, and requires
            a non-boolean parameter, setting its value to anything other than
            <i>Boolean.FALSE</i> implicitly enables it.
            &lt;BR&gt;
            Throws SocketException if the option is unrecognized,
            the socket is closed, or some low-level error occurred
            &lt;BR&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/SocketOptions#setOption(int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.net.SocketOptions.setOption(int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs setting the option value.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
