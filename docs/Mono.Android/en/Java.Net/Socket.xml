<Type Name="Socket" FullName="Java.Net.Socket">
  <TypeSignature Language="C#" Value="public class Socket : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Socket extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Net.Socket" />
  <TypeSignature Language="F#" Value="type Socket = class&#xA;    inherit Object&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/net/Socket", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/net/Socket", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class implements client sockets (also called just
            "sockets").</summary>
    <remarks>
      <para>This class implements client sockets (also called just
            "sockets"). A socket is an endpoint for communication
            between two machines.</para>
      <para>The actual work of the socket is performed by an instance of the
            <c>SocketImpl</c> class. An application, by changing
            the socket factory that creates the socket implementation,
            can configure itself to create sockets appropriate to the local
            firewall.</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/net/Socket" title="Reference documentation">Java documentation for <code>java.net.Socket</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates an unconnected socket, with the
            system-default type of SocketImpl.</summary>
        <remarks>
          <para>Creates an unconnected socket, with the
            system-default type of SocketImpl.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket()" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Net.ISocketImplFactory" />
        <altmember cref="T:Java.Net.SocketImpl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.Proxy? proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.Proxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.Proxy)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.Proxy -&gt; Java.Net.Socket" Usage="new Java.Net.Socket proxy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/net/Proxy;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/net/Proxy;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="proxy" Type="Java.Net.Proxy" />
      </Parameters>
      <Docs>
        <param name="proxy">a <c>java.net.Proxy Proxy</c> object specifying what kind
                         of proxying should be used.</param>
        <summary>Creates an unconnected socket, specifying the type of proxy, if any,
            that should be used regardless of any other settings.</summary>
        <remarks>
          <para>Creates an unconnected socket, specifying the type of proxy, if any,
            that should be used regardless of any other settings.</para>
          <para>If there is a security manager, its <c>checkConnect</c> method
            is called with the proxy host address and port number
            as its arguments. This could result in a SecurityException.</para>
          <para>Examples:
            &lt;UL&gt; &lt;LI&gt;<c>Socket s = new Socket(Proxy.NO_PROXY);</c> will create
            a plain socket ignoring any other proxy configuration.&lt;/LI&gt;
            &lt;LI&gt;<c>Socket s = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress("socks.mydom.com", 1080)));</c>
            will create a socket connecting through the specified SOCKS proxy
            server.&lt;/LI&gt;
            &lt;/UL&gt;</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket(java.net.Proxy)" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket(java.net.Proxy)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the argument <c>proxy</c> is <c>null</c> or of an
             invalid type.</exception>
        <altmember cref="T:Java.Net.ISocketImplFactory" />
        <altmember cref="T:Java.Net.SocketImpl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Socket (Java.Net.SocketImpl? impl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Net.SocketImpl impl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.SocketImpl)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.SocketImpl -&gt; Java.Net.Socket" Usage="new Java.Net.Socket impl" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/net/SocketImpl;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/net/SocketImpl;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="impl" Type="Java.Net.SocketImpl" />
      </Parameters>
      <Docs>
        <param name="impl">an instance of a &lt;B&gt;SocketImpl&lt;/B&gt;
            the subclass wishes to use on the Socket.</param>
        <summary>Creates an unconnected Socket with a user-specified
            SocketImpl.</summary>
        <remarks>
          <para>Creates an unconnected Socket with a user-specified
            SocketImpl.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket(java.net.SocketImpl)" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket(java.net.SocketImpl)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress? address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (address, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">the IP address.</param>
        <param name="port">the port number.</param>
        <summary>Creates a stream socket and connects it to the specified port
            number at the specified IP address.</summary>
        <remarks>
          <para>Creates a stream socket and connects it to the specified port
            number at the specified IP address.</para>
          <para>If the application has specified a socket factory, that factory's
            <c>createSocketImpl</c> method is called to create the
            actual socket implementation. Otherwise a "plain" socket is created.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is called
            with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket(java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket(java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Socket (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string? host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : string * int -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the host name, or <c>null</c> for the loopback address.</param>
        <param name="port">the port number.</param>
        <summary>Creates a stream socket and connects it to the specified port
            number on the named host.</summary>
        <remarks>
          <para>Creates a stream socket and connects it to the specified port
            number on the named host.</para>
          <para>If the specified host is <c>null</c> it is the equivalent of
            specifying the address as
            <c>java.net.InetAddress#getByName InetAddress.getByName</c><c>(null)</c>.
            In other words, it is equivalent to specifying an address of the
            loopback interface.</para>
          <para>If the application has specified a server socket factory, that
            factory's <c>createSocketImpl</c> method is called to create
            the actual socket implementation. Otherwise a "plain" socket is created.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is called
            with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress? host, int port, bool stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress host, int32 port, bool stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.InetAddress,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.InetAddress * int * bool -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (host, port, stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;IZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;IZ)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="stream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="host">the IP address.</param>
        <param name="port">the port number.</param>
        <param name="stream">if <c>true</c>, create a stream socket;
                                  otherwise, create a datagram socket.</param>
        <summary>Creates a socket and connects it to the specified port number at
            the specified IP address.</summary>
        <remarks>
          <para>Creates a socket and connects it to the specified port number at
            the specified IP address.</para>
          <para>If the stream argument is <c>true</c>, this creates a
            stream socket. If the stream argument is <c>false</c>, it
            creates a datagram socket.</para>
          <para>If the application has specified a server socket factory, that
            factory's <c>createSocketImpl</c> method is called to create
            the actual socket implementation. Otherwise a "plain" socket is created.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is called
            with <c>host.getHostAddress()</c> and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>If UDP socket is used, TCP/IP related socket options will not apply.</para>
          <para>This member is deprecated. Use DatagramSocket instead for UDP transport.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket(java.net.InetAddress,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket(java.net.InetAddress, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string? host, int port, bool stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port, bool stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : string * int * bool -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (host, port, stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;IZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;IZ)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="stream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="host">the host name, or <c>null</c> for the loopback address.</param>
        <param name="port">the port number.</param>
        <param name="stream">a <c>boolean</c> indicating whether this is
                                 a stream socket or a datagram socket.</param>
        <summary>Creates a stream socket and connects it to the specified port
            number on the named host.</summary>
        <remarks>
          <para>Creates a stream socket and connects it to the specified port
            number on the named host.</para>
          <para>If the specified host is <c>null</c> it is the equivalent of
            specifying the address as
            <c>java.net.InetAddress#getByName InetAddress.getByName</c><c>(null)</c>.
            In other words, it is equivalent to specifying an address of the
            loopback interface.</para>
          <para>If the stream argument is <c>true</c>, this creates a
            stream socket. If the stream argument is <c>false</c>, it
            creates a datagram socket.</para>
          <para>If the application has specified a server socket factory, that
            factory's <c>createSocketImpl</c> method is called to create
            the actual socket implementation. Otherwise a "plain" socket is created.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is called
            with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>If a UDP socket is used, TCP/IP related socket options will not apply.</para>
          <para>This member is deprecated. Use DatagramSocket instead for UDP transport.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket(java.lang.String,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket(java.lang.String, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress? address, int port, Java.Net.InetAddress? localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress address, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.InetAddress,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.InetAddress * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (address, port, localAddr, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">the remote address</param>
        <param name="port">the remote port</param>
        <param name="localAddr">the local address the socket is bound to, or
                   <c>null</c> for the <c>anyLocal</c> address.</param>
        <param name="localPort">the local port the socket is bound to or
                   <c>zero</c> for a system selected free port.</param>
        <summary>Creates a socket and connects it to the specified remote address on
            the specified remote port.</summary>
        <remarks>
          <para>Creates a socket and connects it to the specified remote address on
            the specified remote port. The Socket will also bind() to the local
            address and port supplied.</para>
          <para>If the specified local address is <c>null</c> it is the equivalent of
            specifying the address as the AnyLocal address
            (see <c>java.net.InetAddress#isAnyLocalAddress InetAddress.isAnyLocalAddress</c><c>()</c>).</para>
          <para>A local port number of <c>zero</c> will let the system pick up a
            free port in the <c>bind</c> operation.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is called
            with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket(java.net.InetAddress,%20int,%20java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket(java.net.InetAddress, int, java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string? host, int port, Java.Net.InetAddress? localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(System.String,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : string * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (host, port, localAddr, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;ILjava/net/InetAddress;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;ILjava/net/InetAddress;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the name of the remote host, or <c>null</c> for the loopback address.</param>
        <param name="port">the remote port</param>
        <param name="localAddr">the local address the socket is bound to, or
                   <c>null</c> for the <c>anyLocal</c> address.</param>
        <param name="localPort">the local port the socket is bound to, or
                   <c>zero</c> for a system selected free port.</param>
        <summary>Creates a socket and connects it to the specified remote host on
            the specified remote port.</summary>
        <remarks>
          <para>Creates a socket and connects it to the specified remote host on
            the specified remote port. The Socket will also bind() to the local
            address and port supplied.</para>
          <para>If the specified host is <c>null</c> it is the equivalent of
            specifying the address as
            <c>java.net.InetAddress#getByName InetAddress.getByName</c><c>(null)</c>.
            In other words, it is equivalent to specifying an address of the
            loopback interface.</para>
          <para>A local port number of <c>zero</c> will let the system pick up a
            free port in the <c>bind</c> operation.</para>
          <para>If there is a security manager, its
            <c>checkConnect</c> method is called
            with the host address and <c>port</c>
            as its arguments. This could result in a SecurityException.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#Socket(java.lang.String,%20int,%20java.net.InetAddress,%20int)" title="Reference documentation">Java documentation for <code>java.net.Socket.Socket(java.lang.String, int, java.net.InetAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public virtual void Bind (Java.Net.SocketAddress? bindpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bind(class Java.Net.SocketAddress bindpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.Bind(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Bind : Java.Net.SocketAddress -&gt; unit&#xA;override this.Bind : Java.Net.SocketAddress -&gt; unit" Usage="socket.Bind bindpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindpoint" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="bindpoint">the <c>SocketAddress</c> to bind to</param>
        <summary>Binds the socket to a local address.</summary>
        <remarks>
          <para>Binds the socket to a local address.</para>
          <para>If the address is <c>null</c>, then the system will pick up
            an ephemeral port and a valid local address to bind the socket.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#bind(java.net.SocketAddress)" title="Reference documentation">Java documentation for <code>java.net.Socket.bind(java.net.SocketAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already bound or an error occurs while
             binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.SocketChannel? Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.Channels.SocketChannel Channel" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.Channel" />
      <MemberSignature Language="F#" Value="member this.Channel : Java.Nio.Channels.SocketChannel" Usage="Java.Net.Socket.Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/SocketChannel;", "GetGetChannelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/SocketChannel;", "GetGetChannelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SocketChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the unique <c>java.nio.channels.SocketChannel SocketChannel</c>
            object associated with this socket, if any.</summary>
        <value>the socket channel associated with this socket,
                     or <c>null</c> if this socket was not created
                     for a channel</value>
        <remarks>
          <para>Returns the unique <c>java.nio.channels.SocketChannel SocketChannel</c>
            object associated with this socket, if any.</para>
          <para>A socket will have a channel if, and only if, the channel itself was
            created via the <c>java.nio.channels.SocketChannel#open
            SocketChannel.open</c> or <c>java.nio.channels.ServerSocketChannel#accept ServerSocketChannel.accept</c>
            methods.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getChannel()" title="Reference documentation">Java documentation for <code>java.net.Socket.getChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="socket.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.ICloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this socket.</summary>
        <remarks>
          <para>Closes this socket.</para>
          <para>Any thread currently blocked in an I/O operation upon this socket
            will throw a <c>SocketException</c>.</para>
          <para>Once a socket has been closed, it is not available for further networking
            use (i.e. can't be reconnected or rebound). A new socket needs to be
            created.</para>
          <para>Closing this socket will also close the socket's
            <c>java.io.InputStream InputStream</c> and
            <c>java.io.OutputStream OutputStream</c>.</para>
          <para>If this socket has an associated channel then the channel is closed
            as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#close()" title="Reference documentation">Java documentation for <code>java.net.Socket.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Java.Net.SocketAddress? endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.SocketAddress endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.Connect(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Connect : Java.Net.SocketAddress -&gt; unit&#xA;override this.Connect : Java.Net.SocketAddress -&gt; unit" Usage="socket.Connect endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;)V", "GetConnect_Ljava_net_SocketAddress_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;)V", "GetConnect_Ljava_net_SocketAddress_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="endpoint">the <c>SocketAddress</c></param>
        <summary>Connects this socket to the server.</summary>
        <remarks>
          <para>Connects this socket to the server.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#connect(java.net.SocketAddress)" title="Reference documentation">Java documentation for <code>java.net.Socket.connect(java.net.SocketAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already connected or an error occurs while
             connecting.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Java.Net.SocketAddress? endpoint, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.SocketAddress endpoint, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.Connect(Java.Net.SocketAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Connect : Java.Net.SocketAddress * int -&gt; unit&#xA;override this.Connect : Java.Net.SocketAddress * int -&gt; unit" Usage="socket.Connect (endpoint, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;I)V", "GetConnect_Ljava_net_SocketAddress_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;I)V", "GetConnect_Ljava_net_SocketAddress_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">the <c>SocketAddress</c></param>
        <param name="timeout">the timeout value to be used in milliseconds.</param>
        <summary>Connects this socket to the server with a specified timeout value.</summary>
        <remarks>
          <para>Connects this socket to the server with a specified timeout value.
            A timeout of zero is interpreted as an infinite timeout. The connection
            will then block until established or an error occurs.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#connect(java.net.SocketAddress,%20int)" title="Reference documentation">Java documentation for <code>java.net.Socket.connect(java.net.SocketAddress, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported or the
             timeout value is negative.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already connected or an error occurs while
             connecting.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Java.Net.SocketAddress? endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.SocketAddress endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.ConnectAsync(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Java.Net.SocketAddress -&gt; System.Threading.Tasks.Task" Usage="socket.ConnectAsync endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Java.Net.SocketAddress? endpoint, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.SocketAddress endpoint, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.ConnectAsync(Java.Net.SocketAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Java.Net.SocketAddress * int -&gt; System.Threading.Tasks.Task" Usage="socket.ConnectAsync (endpoint, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOption">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? GetOption (Java.Net.ISocketOption? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetOption(class Java.Net.ISocketOption name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.GetOption(Java.Net.ISocketOption)" />
      <MemberSignature Language="F#" Value="abstract member GetOption : Java.Net.ISocketOption -&gt; Java.Lang.Object&#xA;override this.GetOption : Java.Net.ISocketOption -&gt; Java.Lang.Object" Usage="socket.GetOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOption", "(Ljava/net/SocketOption;)Ljava/lang/Object;", "GetGetOption_Ljava_net_SocketOption_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOption", "(Ljava/net/SocketOption;)Ljava/lang/Object;", "GetGetOption_Ljava_net_SocketOption_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Java.Net.ISocketOption" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">The type of the socket option value</param>
        <param name="name">The socket option</param>
        <summary>Returns the value of a socket option.</summary>
        <returns>The value of the socket option.</returns>
        <remarks>
          <para>Returns the value of a socket option.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getOption(java.net.SocketOption%3CT%3E)" title="Reference documentation">Java documentation for <code>java.net.Socket.getOption(java.net.SocketOption&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InetAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress? InetAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress InetAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.InetAddress" />
      <MemberSignature Language="F#" Value="member this.InetAddress : Java.Net.InetAddress" Usage="Java.Net.Socket.InetAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the address to which the socket is connected.</summary>
        <value>the remote IP address to which this socket is connected,
                     or <c>null</c> if the socket is not connected.</value>
        <remarks>
          <para>Returns the address to which the socket is connected.</para>
          <para>If the socket was connected prior to being <c>#close closed</c>,
            then this method will continue to return the connected address
            after the socket is closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getInetAddress()" title="Reference documentation">Java documentation for <code>java.net.Socket.getInetAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream? InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.InputStream" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="Java.Net.Socket.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInputStream", "()Ljava/io/InputStream;", "GetGetInputStreamHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInputStream", "()Ljava/io/InputStream;", "GetGetInputStreamHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an input stream for this socket.</summary>
        <value>an input stream for reading bytes from this socket.</value>
        <remarks>
          <para>Returns an input stream for this socket.</para>
          <para>If this socket has an associated channel then the resulting input
            stream delegates all of its operations to the channel.  If the channel
            is in non-blocking mode then the input stream's <c>read</c> operations
            will throw an <c>java.nio.channels.IllegalBlockingModeException</c>.</para>
          <para>Under abnormal conditions the underlying connection may be
            broken by the remote host or the network software (for example
            a connection reset in the case of TCP connections). When a
            broken connection is detected by the network software the
            following applies to the returned input stream :-
            
            &lt;ul&gt;
            
              &lt;li&gt;</para>
          <para>The network software may discard bytes that are buffered
              by the socket. Bytes that aren't discarded by the network
              software can be read using <c>java.io.InputStream#read read</c>.
            
              &lt;li&gt;</para>
          <para>If there are no bytes buffered on the socket, or all
              buffered bytes have been consumed by
              <c>java.io.InputStream#read read</c>, then all subsequent
              calls to <c>java.io.InputStream#read read</c> will throw an
              <c>java.io.IOException IOException</c>.
            
              &lt;li&gt;</para>
          <para>If there are no bytes buffered on the socket, and the
              socket has not been closed using <c>#close close</c>, then
              <c>java.io.InputStream#available available</c> will
              return <c>0</c>.
            
            &lt;/ul&gt;</para>
          <para>Closing the returned <c>java.io.InputStream InputStream</c>
            will close the associated socket.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getInputStream()" title="Reference documentation">Java documentation for <code>java.net.Socket.getInputStream()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the input stream or the
             socket is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBound">
      <MemberSignature Language="C#" Value="public virtual bool IsBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBound" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsBound" />
      <MemberSignature Language="F#" Value="member this.IsBound : bool" Usage="Java.Net.Socket.IsBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the binding state of the socket.</summary>
        <value>true if the socket was successfuly bound to an address</value>
        <remarks>
          <para>Returns the binding state of the socket.</para>
          <para>Note: Closing a socket doesn't clear its binding state, which means
            this method will return <c>true</c> for a closed socket
            (see <c>#isClosed()</c>) if it was successfuly bound prior
            to being closed.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#isBound()" title="Reference documentation">Java documentation for <code>java.net.Socket.isBound()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsClosed" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="Java.Net.Socket.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the closed state of the socket.</summary>
        <value>true if the socket has been closed</value>
        <remarks>
          <para>Returns the closed state of the socket.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#isClosed()" title="Reference documentation">Java documentation for <code>java.net.Socket.isClosed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsConnected" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="Java.Net.Socket.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the connection state of the socket.</summary>
        <value>true if the socket was successfuly connected to a server</value>
        <remarks>
          <para>Returns the connection state of the socket.</para>
          <para>Note: Closing a socket doesn't clear its connection state, which means
            this method will return <c>true</c> for a closed socket
            (see <c>#isClosed()</c>) if it was successfuly connected prior
            to being closed.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#isConnected()" title="Reference documentation">Java documentation for <code>java.net.Socket.isConnected()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsInputShutdown">
      <MemberSignature Language="C#" Value="public virtual bool IsInputShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputShutdown" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsInputShutdown" />
      <MemberSignature Language="F#" Value="member this.IsInputShutdown : bool" Usage="Java.Net.Socket.IsInputShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInputShutdown", "()Z", "GetIsInputShutdownHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInputShutdown", "()Z", "GetIsInputShutdownHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the read-half of the socket connection is closed.</summary>
        <value>true if the input of the socket has been shutdown</value>
        <remarks>
          <para>Returns whether the read-half of the socket connection is closed.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#isInputShutdown()" title="Reference documentation">Java documentation for <code>java.net.Socket.isInputShutdown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputShutdown">
      <MemberSignature Language="C#" Value="public virtual bool IsOutputShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutputShutdown" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsOutputShutdown" />
      <MemberSignature Language="F#" Value="member this.IsOutputShutdown : bool" Usage="Java.Net.Socket.IsOutputShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOutputShutdown", "()Z", "GetIsOutputShutdownHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOutputShutdown", "()Z", "GetIsOutputShutdownHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the write-half of the socket connection is closed.</summary>
        <value>true if the output of the socket has been shutdown</value>
        <remarks>
          <para>Returns whether the write-half of the socket connection is closed.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#isOutputShutdown()" title="Reference documentation">Java documentation for <code>java.net.Socket.isOutputShutdown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Net.Socket.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public virtual bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.KeepAlive" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="Java.Net.Socket.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeepAlive", "()Z", "GetGetKeepAliveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeepAlive", "()Z", "GetGetKeepAliveHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setKeepAlive", "(Z)V", "GetSetKeepAlive_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setKeepAlive", "(Z)V", "GetSetKeepAlive_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">whether or not to have socket keep alive turned on.</param>
        <summary>Tests if <c>SocketOptions#SO_KEEPALIVE SO_KEEPALIVE</c> is enabled. -or- Enable/disable <c>SocketOptions#SO_KEEPALIVE SO_KEEPALIVE</c>.</summary>
        <value>a <c>boolean</c> indicating whether or not
                    <c>SocketOptions#SO_KEEPALIVE SO_KEEPALIVE</c> is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tests if <c>SocketOptions#SO_KEEPALIVE SO_KEEPALIVE</c> is enabled.</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getKeepAlive()" title="Reference documentation">Java documentation for <code>java.net.Socket.getKeepAlive()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable <c>SocketOptions#SO_KEEPALIVE SO_KEEPALIVE</c>.</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setKeepAlive(boolean)" title="Reference documentation">Java documentation for <code>java.net.Socket.setKeepAlive(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress? LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.LocalAddress" />
      <MemberSignature Language="F#" Value="member this.LocalAddress : Java.Net.InetAddress" Usage="Java.Net.Socket.LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/InetAddress;", "GetGetLocalAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/InetAddress;", "GetGetLocalAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local address to which the socket is bound.</summary>
        <value>the local address to which the socket is bound,
                    the loopback address if denied by the security manager, or
                    the wildcard address if the socket is closed or not bound yet.</value>
        <remarks>
          <para>Gets the local address to which the socket is bound.</para>
          <para>If there is a security manager set, its <c>checkConnect</c> method is
            called with the local address and <c>-1</c> as its arguments to see
            if the operation is allowed. If the operation is not allowed,
            the <c>InetAddress#getLoopbackAddress loopback</c> address is returned.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getLocalAddress()" title="Reference documentation">Java documentation for <code>java.net.Socket.getLocalAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalPort">
      <MemberSignature Language="C#" Value="public virtual int LocalPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalPort" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.LocalPort" />
      <MemberSignature Language="F#" Value="member this.LocalPort : int" Usage="Java.Net.Socket.LocalPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local port number to which this socket is bound.</summary>
        <value>the local port number to which this socket is bound or -1
                     if the socket is not bound yet.</value>
        <remarks>
          <para>Returns the local port number to which this socket is bound.</para>
          <para>If the socket was bound prior to being <c>#close closed</c>,
            then this method will continue to return the local port number
            after the socket is closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getLocalPort()" title="Reference documentation">Java documentation for <code>java.net.Socket.getLocalPort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress? LocalSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress LocalSocketAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.LocalSocketAddress" />
      <MemberSignature Language="F#" Value="member this.LocalSocketAddress : Java.Net.SocketAddress" Usage="Java.Net.Socket.LocalSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the address of the endpoint this socket is bound to.</summary>
        <value>a <c>SocketAddress</c> representing the local endpoint of
                    this socket, or a <c>SocketAddress</c> representing the
                    loopback address if denied by the security manager, or
                    <c>null</c> if the socket is not bound yet.</value>
        <remarks>
          <para>Returns the address of the endpoint this socket is bound to.</para>
          <para>If a socket bound to an endpoint represented by an
            <c>InetSocketAddress</c> is <c>#close closed</c>,
            then this method will continue to return an <c>InetSocketAddress</c>
            after the socket is closed. In that case the returned
            <c>InetSocketAddress</c>'s address is the
            <c>InetAddress#isAnyLocalAddress wildcard</c> address
            and its port is the local port that it was bound to.</para>
          <para>If there is a security manager set, its <c>checkConnect</c> method is
            called with the local address and <c>-1</c> as its arguments to see
            if the operation is allowed. If the operation is not allowed,
            a <c>SocketAddress</c> representing the
            <c>InetAddress#getLoopbackAddress loopback</c> address and the local
            port to which this socket is bound is returned.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getLocalSocketAddress()" title="Reference documentation">Java documentation for <code>java.net.Socket.getLocalSocketAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OOBInline">
      <MemberSignature Language="C#" Value="public virtual bool OOBInline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OOBInline" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.OOBInline" />
      <MemberSignature Language="F#" Value="member this.OOBInline : bool with get, set" Usage="Java.Net.Socket.OOBInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOOBInline", "()Z", "GetGetOOBInlineHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOOBInline", "()Z", "GetGetOOBInlineHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOOBInline", "(Z)V", "GetSetOOBInline_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOOBInline", "(Z)V", "GetSetOOBInline_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">
          <c>true</c> to enable
                      <c>SocketOptions#SO_OOBINLINE SO_OOBINLINE</c>,
                      <c>false</c> to disable.</param>
        <summary>Tests if <c>SocketOptions#SO_OOBINLINE SO_OOBINLINE</c> is enabled. -or- Enable/disable <c>SocketOptions#SO_OOBINLINE SO_OOBINLINE</c>
            (receipt of TCP urgent data)
            
            By default, this option is disabled and TCP urgent data received on a
            socket is silently discarded.</summary>
        <value>a <c>boolean</c> indicating whether or not
                    <c>SocketOptions#SO_OOBINLINE SO_OOBINLINE</c>is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tests if <c>SocketOptions#SO_OOBINLINE SO_OOBINLINE</c> is enabled.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getOOBInline()" title="Reference documentation">Java documentation for <code>java.net.Socket.getOOBInline()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable <c>SocketOptions#SO_OOBINLINE SO_OOBINLINE</c>
            (receipt of TCP urgent data)
            
            By default, this option is disabled and TCP urgent data received on a
            socket is silently discarded. If the user wishes to receive urgent data, then
            this option must be enabled. When enabled, urgent data is received
            inline with normal data.</para>
          <para>Note, only limited support is provided for handling incoming urgent
            data. In particular, no notification of incoming urgent data is provided
            and there is no capability to distinguish between normal data and urgent
            data unless provided by a higher level protocol.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setOOBInline(boolean)" title="Reference documentation">Java documentation for <code>java.net.Socket.setOOBInline(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream? OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.OutputStream" />
      <MemberSignature Language="F#" Value="member this.OutputStream : System.IO.Stream" Usage="Java.Net.Socket.OutputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOutputStream", "()Ljava/io/OutputStream;", "GetGetOutputStreamHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOutputStream", "()Ljava/io/OutputStream;", "GetGetOutputStreamHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an output stream for this socket.</summary>
        <value>an output stream for writing bytes to this socket.</value>
        <remarks>
          <para>Returns an output stream for this socket.</para>
          <para>If this socket has an associated channel then the resulting output
            stream delegates all of its operations to the channel.  If the channel
            is in non-blocking mode then the output stream's <c>write</c>
            operations will throw an <c>java.nio.channels.IllegalBlockingModeException</c>.</para>
          <para>Closing the returned <c>java.io.OutputStream OutputStream</c>
            will close the associated socket.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getOutputStream()" title="Reference documentation">Java documentation for <code>java.net.Socket.getOutputStream()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the output stream or the
             socket is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public virtual int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.Port" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="Java.Net.Socket.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPort", "()I", "GetGetPortHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPort", "()I", "GetGetPortHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the remote port number to which this socket is connected.</summary>
        <value>the remote port number to which this socket is connected, or
                     0 if the socket is not connected yet.</value>
        <remarks>
          <para>Returns the remote port number to which this socket is connected.</para>
          <para>If the socket was connected prior to being <c>#close closed</c>,
            then this method will continue to return the connected port number
            after the socket is closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getPort()" title="Reference documentation">Java documentation for <code>java.net.Socket.getPort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public virtual int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.ReceiveBufferSize" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="Java.Net.Socket.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="size">the size to which to set the receive buffer
            size. This value must be greater than 0.</param>
        <summary>Gets the value of the <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option
            for this <c>Socket</c>, that is the buffer size used by the platform
            for input on this <c>Socket</c>. -or- Sets the <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option to the
            specified value for this <c>Socket</c>.</summary>
        <value>the value of the <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c>
                    option for this <c>Socket</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the value of the <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option
            for this <c>Socket</c>, that is the buffer size used by the platform
            for input on this <c>Socket</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getReceiveBufferSize()" title="Reference documentation">Java documentation for <code>java.net.Socket.getReceiveBufferSize()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option to the
            specified value for this <c>Socket</c>. The
            <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> option is
            used by the platform's networking code as a hint for the size to set
            the underlying network I/O buffers.</para>
          <para>Increasing the receive buffer size can increase the performance of
            network I/O for high-volume connection, while decreasing it can
            help reduce the backlog of incoming data.</para>
          <para>Because <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> is a hint,
            applications that want to verify what size the buffers were set to
            should call <c>#getReceiveBufferSize()</c>.</para>
          <para>The value of <c>SocketOptions#SO_RCVBUF SO_RCVBUF</c> is also used
            to set the TCP receive window that is advertized to the remote peer.
            Generally, the window size can be modified at any time when a socket is
            connected. However, if a receive window larger than 64K is required then
            this must be requested &lt;B&gt;before&lt;/B&gt; the socket is connected to the
            remote peer. There are two cases to be aware of:
            &lt;ol&gt;
            &lt;li&gt;For sockets accepted from a ServerSocket, this must be done by calling
            <c>ServerSocket#setReceiveBufferSize(int)</c> before the ServerSocket
            is bound to a local address.&lt;/li&gt;
            &lt;li&gt;For client sockets, setReceiveBufferSize() must be called before
            connecting the socket to its remote peer.&lt;/li&gt;&lt;/ol&gt;</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setReceiveBufferSize(int)" title="Reference documentation">Java documentation for <code>java.net.Socket.setReceiveBufferSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="RemoteSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress? RemoteSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress RemoteSocketAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.RemoteSocketAddress" />
      <MemberSignature Language="F#" Value="member this.RemoteSocketAddress : Java.Net.SocketAddress" Usage="Java.Net.Socket.RemoteSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRemoteSocketAddress", "()Ljava/net/SocketAddress;", "GetGetRemoteSocketAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRemoteSocketAddress", "()Ljava/net/SocketAddress;", "GetGetRemoteSocketAddressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the address of the endpoint this socket is connected to, or
            <c>null</c> if it is unconnected.</summary>
        <value>a <c>SocketAddress</c> representing the remote endpoint of this
                    socket, or <c>null</c> if it is not connected yet.</value>
        <remarks>
          <para>Returns the address of the endpoint this socket is connected to, or
            <c>null</c> if it is unconnected.</para>
          <para>If the socket was connected prior to being <c>#close closed</c>,
            then this method will continue to return the connected address
            after the socket is closed.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getRemoteSocketAddress()" title="Reference documentation">Java documentation for <code>java.net.Socket.getRemoteSocketAddress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReuseAddress">
      <MemberSignature Language="C#" Value="public virtual bool ReuseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReuseAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.ReuseAddress" />
      <MemberSignature Language="F#" Value="member this.ReuseAddress : bool with get, set" Usage="Java.Net.Socket.ReuseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">whether to enable or disable the socket option</param>
        <summary>Tests if <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is enabled. -or- Enable/disable the <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c>
            socket option.</summary>
        <value>a <c>boolean</c> indicating whether or not
                    <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tests if <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is enabled.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getReuseAddress()" title="Reference documentation">Java documentation for <code>java.net.Socket.getReuseAddress()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable the <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c>
            socket option.</para>
          <para>When a TCP connection is closed the connection may remain
            in a timeout state for a period of time after the connection
            is closed (typically known as the <c>TIME_WAIT</c> state
            or <c>2MSL</c> wait state).
            For applications using a well known socket address or port
            it may not be possible to bind a socket to the required
            <c>SocketAddress</c> if there is a connection in the
            timeout state involving the socket address or port.</para>
          <para>Enabling <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c>
            prior to binding the socket using <c>#bind(SocketAddress)</c> allows
            the socket to be bound even though a previous connection is in a timeout
            state.</para>
          <para>When a <c>Socket</c> is created the initial setting
            of <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is disabled.</para>
          <para>The behaviour when <c>SocketOptions#SO_REUSEADDR SO_REUSEADDR</c> is
            enabled or disabled after a socket is bound (See <c>#isBound()</c>)
            is not defined.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setReuseAddress(boolean)" title="Reference documentation">Java documentation for <code>java.net.Socket.setReuseAddress(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public virtual int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.SendBufferSize" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="Java.Net.Socket.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSendBufferSize", "()I", "GetGetSendBufferSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSendBufferSize", "()I", "GetGetSendBufferSizeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSendBufferSize", "(I)V", "GetSetSendBufferSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSendBufferSize", "(I)V", "GetSetSendBufferSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="size">the size to which to set the send buffer
            size. This value must be greater than 0.</param>
        <summary>Get value of the <c>SocketOptions#SO_SNDBUF SO_SNDBUF</c> option
            for this <c>Socket</c>, that is the buffer size used by the platform
            for output on this <c>Socket</c>. -or- Sets the <c>SocketOptions#SO_SNDBUF SO_SNDBUF</c> option to the
            specified value for this <c>Socket</c>.</summary>
        <value>the value of the <c>SocketOptions#SO_SNDBUF SO_SNDBUF</c>
                    option for this <c>Socket</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get value of the <c>SocketOptions#SO_SNDBUF SO_SNDBUF</c> option
            for this <c>Socket</c>, that is the buffer size used by the platform
            for output on this <c>Socket</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getSendBufferSize()" title="Reference documentation">Java documentation for <code>java.net.Socket.getSendBufferSize()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>SocketOptions#SO_SNDBUF SO_SNDBUF</c> option to the
            specified value for this <c>Socket</c>.
            The <c>SocketOptions#SO_SNDBUF SO_SNDBUF</c> option is used by the
            platform's networking code as a hint for the size to set the underlying
            network I/O buffers.</para>
          <para>Because <c>SocketOptions#SO_SNDBUF SO_SNDBUF</c> is a hint,
            applications that want to verify what size the buffers were set to
            should call <c>#getSendBufferSize()</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setSendBufferSize(int)" title="Reference documentation">Java documentation for <code>java.net.Socket.setSendBufferSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SendUrgentData">
      <MemberSignature Language="C#" Value="public virtual void SendUrgentData (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendUrgentData(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SendUrgentData(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SendUrgentData : int -&gt; unit&#xA;override this.SendUrgentData : int -&gt; unit" Usage="socket.SendUrgentData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendUrgentData", "(I)V", "GetSendUrgentData_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendUrgentData", "(I)V", "GetSendUrgentData_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">The byte of data to send</param>
        <summary>Send one byte of urgent data on the socket.</summary>
        <remarks>
          <para>Send one byte of urgent data on the socket. The byte to be sent is the lowest eight
            bits of the data parameter. The urgent byte is
            sent after any preceding writes to the socket OutputStream
            and before any future writes to the OutputStream.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#sendUrgentData(int)" title="Reference documentation">Java documentation for <code>java.net.Socket.sendUrgentData(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while sending urgent data.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SendUrgentDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendUrgentDataAsync (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendUrgentDataAsync(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SendUrgentDataAsync(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SendUrgentDataAsync : int -&gt; System.Threading.Tasks.Task" Usage="socket.SendUrgentDataAsync data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="public virtual Java.Net.Socket? SetOption (Java.Net.ISocketOption? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket SetOption(class Java.Net.ISocketOption name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SetOption(Java.Net.ISocketOption,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetOption : Java.Net.ISocketOption * Java.Lang.Object -&gt; Java.Net.Socket&#xA;override this.SetOption : Java.Net.ISocketOption * Java.Lang.Object -&gt; Java.Net.Socket" Usage="socket.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOption", "(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/net/Socket;", "GetSetOption_Ljava_net_SocketOption_Ljava_lang_Object_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOption", "(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/net/Socket;", "GetSetOption_Ljava_net_SocketOption_Ljava_lang_Object_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Java.Net.ISocketOption" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">The type of the socket option value</param>
        <param name="name">The socket option</param>
        <param name="value">The value of the socket option. A value of <c>null</c>
                         may be valid for some options.</param>
        <summary>Sets the value of a socket option.</summary>
        <returns>this Socket</returns>
        <remarks>
          <para>Sets the value of a socket option.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setOption(java.net.SocketOption%3CT%3E,%20T)" title="Reference documentation">Java documentation for <code>java.net.Socket.setOption(java.net.SocketOption&lt;T&gt;, T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPerformancePreferences">
      <MemberSignature Language="C#" Value="public virtual void SetPerformancePreferences (int connectionTime, int latency, int bandwidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPerformancePreferences(int32 connectionTime, int32 latency, int32 bandwidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SetPerformancePreferences(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPerformancePreferences : int * int * int -&gt; unit&#xA;override this.SetPerformancePreferences : int * int * int -&gt; unit" Usage="socket.SetPerformancePreferences (connectionTime, latency, bandwidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPerformancePreferences", "(III)V", "GetSetPerformancePreferences_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPerformancePreferences", "(III)V", "GetSetPerformancePreferences_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTime" Type="System.Int32" />
        <Parameter Name="latency" Type="System.Int32" />
        <Parameter Name="bandwidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="connectionTime">An <c>int</c> expressing the relative importance of a short
                    connection time</param>
        <param name="latency">An <c>int</c> expressing the relative importance of low
                    latency</param>
        <param name="bandwidth">An <c>int</c> expressing the relative importance of high
                    bandwidth</param>
        <summary>Sets performance preferences for this socket.</summary>
        <remarks>
          <para>Sets performance preferences for this socket.</para>
          <para>Sockets use the TCP/IP protocol by default.  Some implementations
            may offer alternative protocols which have different performance
            characteristics than TCP/IP.  This method allows the application to
            express its own preferences as to how these tradeoffs should be made
            when the implementation chooses from the available protocols.</para>
          <para>Performance preferences are described by three integers
            whose values indicate the relative importance of short connection time,
            low latency, and high bandwidth.  The absolute values of the integers
            are irrelevant; in order to choose a protocol the values are simply
            compared, with larger values indicating stronger preferences. Negative
            values represent a lower priority than positive values. If the
            application prefers short connection time over both low latency and high
            bandwidth, for example, then it could invoke this method with the values
            <c>(1, 0, 0)</c>.  If the application prefers high bandwidth above low
            latency, and low latency above short connection time, then it could
            invoke this method with the values <c>(0, 1, 2)</c>.</para>
          <para>Invoking this method after this socket has been connected
            will have no effect.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setPerformancePreferences(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.net.Socket.setPerformancePreferences(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketImplFactory">
      <MemberSignature Language="C#" Value="public static void SetSocketImplFactory (Java.Net.ISocketImplFactory? fac);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSocketImplFactory(class Java.Net.ISocketImplFactory fac) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SetSocketImplFactory(Java.Net.ISocketImplFactory)" />
      <MemberSignature Language="F#" Value="static member SetSocketImplFactory : Java.Net.ISocketImplFactory -&gt; unit" Usage="Java.Net.Socket.SetSocketImplFactory fac" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSocketImplFactory", "(Ljava/net/SocketImplFactory;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSocketImplFactory", "(Ljava/net/SocketImplFactory;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fac" Type="Java.Net.ISocketImplFactory" />
      </Parameters>
      <Docs>
        <param name="fac">the desired factory.</param>
        <summary>Sets the client socket implementation factory for the
            application.</summary>
        <remarks>
          <para>Sets the client socket implementation factory for the
            application. The factory can be specified only once.</para>
          <para>When an application creates a new client socket, the socket
            implementation factory's <c>createSocketImpl</c> method is
            called to create the actual socket implementation.</para>
          <para>Passing <c>null</c> to the method is a no-op unless the factory
            was already set.</para>
          <para>If there is a security manager, this method first calls
            the security manager's <c>checkSetFactory</c> method
            to ensure the operation is allowed.
            This could result in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setSocketImplFactory(java.net.SocketImplFactory)" title="Reference documentation">Java documentation for <code>java.net.Socket.setSocketImplFactory(java.net.SocketImplFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the factory has been already set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSoLinger">
      <MemberSignature Language="C#" Value="public virtual void SetSoLinger (bool on, int linger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSoLinger(bool on, int32 linger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SetSoLinger(System.Boolean,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetSoLinger : bool * int -&gt; unit&#xA;override this.SetSoLinger : bool * int -&gt; unit" Usage="socket.SetSoLinger (on, linger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSoLinger", "(ZI)V", "GetSetSoLinger_ZIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSoLinger", "(ZI)V", "GetSetSoLinger_ZIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="on" Type="System.Boolean" />
        <Parameter Name="linger" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="on">whether or not to linger on.</param>
        <param name="linger">how long to linger for, if on is true.</param>
        <summary>Enable/disable <c>SocketOptions#SO_LINGER SO_LINGER</c> with the
            specified linger time in seconds.</summary>
        <remarks>
          <para>Enable/disable <c>SocketOptions#SO_LINGER SO_LINGER</c> with the
            specified linger time in seconds. The maximum timeout value is platform
            specific.
            
            The setting only affects socket close.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setSoLinger(boolean,%20int)" title="Reference documentation">Java documentation for <code>java.net.Socket.setSoLinger(boolean, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownInput">
      <MemberSignature Language="C#" Value="public virtual void ShutdownInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.ShutdownInput" />
      <MemberSignature Language="F#" Value="abstract member ShutdownInput : unit -&gt; unit&#xA;override this.ShutdownInput : unit -&gt; unit" Usage="socket.ShutdownInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shutdownInput", "()V", "GetShutdownInputHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shutdownInput", "()V", "GetShutdownInputHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Places the input stream for this socket at "end of stream".</summary>
        <remarks>
          <para>Places the input stream for this socket at "end of stream".
            Any data sent to the input stream side of the socket is acknowledged
            and then silently discarded.</para>
          <para>If you read from a socket input stream after invoking this method on the
            socket, the stream's <c>available</c> method will return 0, and its
            <c>read</c> methods will return <c>-1</c> (end of stream).</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#shutdownInput()" title="Reference documentation">Java documentation for <code>java.net.Socket.shutdownInput()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket input stream.</exception>
        <exception cref="T:Java.Net.SocketException">if the input stream is already closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ShutdownOutput">
      <MemberSignature Language="C#" Value="public virtual void ShutdownOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.ShutdownOutput" />
      <MemberSignature Language="F#" Value="abstract member ShutdownOutput : unit -&gt; unit&#xA;override this.ShutdownOutput : unit -&gt; unit" Usage="socket.ShutdownOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shutdownOutput", "()V", "GetShutdownOutputHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shutdownOutput", "()V", "GetShutdownOutputHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disables the output stream for this socket.</summary>
        <remarks>
          <para>Disables the output stream for this socket.
            For a TCP socket, any previously written data will be sent
            followed by TCP's normal connection termination sequence.</para>
          <para>If you write to a socket output stream after invoking
            shutdownOutput() on the socket, the stream will throw
            an IOException.</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#shutdownOutput()" title="Reference documentation">Java documentation for <code>java.net.Socket.shutdownOutput()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket output stream.</exception>
        <exception cref="T:Java.Net.SocketException">if the output stream is already closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SoLinger">
      <MemberSignature Language="C#" Value="public virtual int SoLinger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoLinger" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.SoLinger" />
      <MemberSignature Language="F#" Value="member this.SoLinger : int" Usage="Java.Net.Socket.SoLinger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSoLinger", "()I", "GetGetSoLingerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSoLinger", "()I", "GetGetSoLingerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns setting for <c>SocketOptions#SO_LINGER SO_LINGER</c>.</summary>
        <value>the setting for <c>SocketOptions#SO_LINGER SO_LINGER</c>.</value>
        <remarks>
          <para>Returns setting for <c>SocketOptions#SO_LINGER SO_LINGER</c>.
            -1 returns implies that the
            option is disabled.
            
            The setting only affects socket close.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getSoLinger()" title="Reference documentation">Java documentation for <code>java.net.Socket.getSoLinger()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SoTimeout">
      <MemberSignature Language="C#" Value="public virtual int SoTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoTimeout" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.SoTimeout" />
      <MemberSignature Language="F#" Value="member this.SoTimeout : int with get, set" Usage="Java.Net.Socket.SoTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="timeout">the specified timeout, in milliseconds.</param>
        <summary>Returns setting for <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c>. -or- Enable/disable <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c>
             with the specified timeout, in milliseconds.</summary>
        <value>the setting for <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns setting for <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c>.
            0 returns implies that the option is disabled (i.e., timeout of infinity).</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getSoTimeout()" title="Reference documentation">Java documentation for <code>java.net.Socket.getSoTimeout()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable <c>SocketOptions#SO_TIMEOUT SO_TIMEOUT</c>
             with the specified timeout, in milliseconds. With this option set
             to a non-zero timeout, a read() call on the InputStream associated with
             this Socket will block for only this amount of time.  If the timeout
             expires, a &lt;B&gt;java.net.SocketTimeoutException&lt;/B&gt; is raised, though the
             Socket is still valid. The option &lt;B&gt;must&lt;/B&gt; be enabled
             prior to entering the blocking operation to have effect. The
             timeout must be <c>&gt; 0</c>.
             A timeout of zero is interpreted as an infinite timeout.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setSoTimeout(int)" title="Reference documentation">Java documentation for <code>java.net.Socket.setSoTimeout(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SupportedOptions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;? SupportedOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class Java.Net.ISocketOption&gt; SupportedOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SupportedOptions" />
      <MemberSignature Language="F#" Value="abstract member SupportedOptions : unit -&gt; System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;&#xA;override this.SupportedOptions : unit -&gt; System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;" Usage="socket.SupportedOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("supportedOptions", "()Ljava/util/Set;", "GetSupportedOptionsHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("supportedOptions", "()Ljava/util/Set;", "GetSupportedOptionsHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Net.ISocketOption&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set of the socket options supported by this socket.</summary>
        <returns>A set of the socket options supported by this socket. This set
                    may be empty if the socket's SocketImpl cannot be created.</returns>
        <remarks>
          <para>Returns a set of the socket options supported by this socket.</para>
          <para>This method will continue to return the set of options even after
            the socket has been closed.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#supportedOptions()" title="Reference documentation">Java documentation for <code>java.net.Socket.supportedOptions()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TcpNoDelay">
      <MemberSignature Language="C#" Value="public virtual bool TcpNoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TcpNoDelay" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.TcpNoDelay" />
      <MemberSignature Language="F#" Value="member this.TcpNoDelay : bool with get, set" Usage="Java.Net.Socket.TcpNoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTcpNoDelay", "()Z", "GetGetTcpNoDelayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTcpNoDelay", "()Z", "GetGetTcpNoDelayHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTcpNoDelay", "(Z)V", "GetSetTcpNoDelay_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTcpNoDelay", "(Z)V", "GetSetTcpNoDelay_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">
          <c>true</c> to enable TCP_NODELAY,
            <c>false</c> to disable.</param>
        <summary>Tests if <c>SocketOptions#TCP_NODELAY TCP_NODELAY</c> is enabled. -or- Enable/disable <c>SocketOptions#TCP_NODELAY TCP_NODELAY</c>
            (disable/enable Nagle's algorithm).</summary>
        <value>a <c>boolean</c> indicating whether or not
                    <c>SocketOptions#TCP_NODELAY TCP_NODELAY</c> is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tests if <c>SocketOptions#TCP_NODELAY TCP_NODELAY</c> is enabled.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getTcpNoDelay()" title="Reference documentation">Java documentation for <code>java.net.Socket.getTcpNoDelay()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable/disable <c>SocketOptions#TCP_NODELAY TCP_NODELAY</c>
            (disable/enable Nagle's algorithm).</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setTcpNoDelay(boolean)" title="Reference documentation">Java documentation for <code>java.net.Socket.setTcpNoDelay(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Net.Socket.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Net.Socket.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrafficClass">
      <MemberSignature Language="C#" Value="public virtual int TrafficClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrafficClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.TrafficClass" />
      <MemberSignature Language="F#" Value="member this.TrafficClass : int with get, set" Usage="Java.Net.Socket.TrafficClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTrafficClass", "()I", "GetGetTrafficClassHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTrafficClass", "()I", "GetGetTrafficClassHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTrafficClass", "(I)V", "GetSetTrafficClass_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTrafficClass", "(I)V", "GetSetTrafficClass_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="tc">an <c>int</c> value for the bitset.</param>
        <summary>Gets traffic class or type-of-service in the IP header
            for packets sent from this Socket -or- Sets traffic class or type-of-service octet in the IP
            header for packets sent from this Socket.</summary>
        <value>the traffic class or type-of-service already set</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets traffic class or type-of-service in the IP header
            for packets sent from this Socket</para>
          <para>As the underlying network implementation may ignore the
            traffic class or type-of-service set using <c>#setTrafficClass(int)</c>
            this method may return a different value than was previously
            set using the <c>#setTrafficClass(int)</c> method on this Socket.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#getTrafficClass()" title="Reference documentation">Java documentation for <code>java.net.Socket.getTrafficClass()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets traffic class or type-of-service octet in the IP
            header for packets sent from this Socket.
            As the underlying network implementation may ignore this
            value applications should consider it a hint.</para>
          <para>The tc &lt;B&gt;must&lt;/B&gt; be in the range <c>0 &lt;= tc &lt;=
            255</c> or an IllegalArgumentException will be thrown.</para>
          <para>Notes:</para>
          <para>For Internet Protocol v4 the value consists of an
            <c>integer</c>, the least significant 8 bits of which
            represent the value of the TOS octet in IP packets sent by
            the socket.
            RFC 1349 defines the TOS values as follows:
            
            &lt;UL&gt;
            &lt;LI&gt;<c>IPTOS_LOWCOST (0x02)</c>&lt;/LI&gt;
            &lt;LI&gt;<c>IPTOS_RELIABILITY (0x04)</c>&lt;/LI&gt;
            &lt;LI&gt;<c>IPTOS_THROUGHPUT (0x08)</c>&lt;/LI&gt;
            &lt;LI&gt;<c>IPTOS_LOWDELAY (0x10)</c>&lt;/LI&gt;
            &lt;/UL&gt;
            The last low order bit is always ignored as this
            corresponds to the MBZ (must be zero) bit.</para>
          <para>Setting bits in the precedence field may result in a
            SocketException indicating that the operation is not
            permitted.</para>
          <para>As RFC 1122 section 4.2.4.2 indicates, a compliant TCP
            implementation should, but is not required to, let application
            change the TOS field during the lifetime of a connection.
            So whether the type-of-service field can be changed after the
            TCP connection has been established depends on the implementation
            in the underlying platform. Applications should not assume that
            they can change the TOS field after the connection.</para>
          <para>For Internet Protocol v6 <c>tc</c> is the value that
            would be placed into the sin6_flowinfo field of the IP header.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/net/Socket#setTrafficClass(int)" title="Reference documentation">Java documentation for <code>java.net.Socket.setTrafficClass(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Java.Net.SocketOptions.IpTos" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
  </Members>
</Type>
