<Type Name="InputMethodService" FullName="Android.InputMethodServices.InputMethodService">
  <TypeSignature Language="VB.NET" Value="Public Class InputMethodService&#xA;Inherits AbstractInputMethodService" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputMethodService : Android::InputMethodServices::AbstractInputMethodService" />
  <TypeSignature Language="C#" Value="public class InputMethodService : Android.InputMethodServices.AbstractInputMethodService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputMethodService extends Android.InputMethodServices.AbstractInputMethodService" />
  <TypeSignature Language="DocId" Value="T:Android.InputMethodServices.InputMethodService" />
  <TypeSignature Language="F#" Value="type InputMethodService = class&#xA;    inherit AbstractInputMethodService" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.InputMethodServices.AbstractInputMethodService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/inputmethodservice/InputMethodService", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/inputmethodservice/InputMethodService", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>InputMethodService provides a standard implementation of an InputMethod,
            which final implementations can derive from and customize.</summary>
    <remarks>
      <para>InputMethodService provides a standard implementation of an InputMethod,
            which final implementations can derive from and customize.  See the
            base class <c>AbstractInputMethodService</c> and the <c>InputMethod</c>
            interface for more information on the basics of writing input methods.</para>
      <para>In addition to the normal Service lifecycle methods, this class
            introduces some new specific callbacks that most subclasses will want
            to make use of:</para>
      <para>&lt;ul&gt;
            &lt;li&gt; <c>#onInitializeInterface()</c> for user-interface initialization,
            in particular to deal with configuration changes while the service is
            running.
            &lt;li&gt; <c>#onBindInput</c> to find out about switching to a new client.
            &lt;li&gt; <c>#onStartInput</c> to deal with an input session starting with
            the client.
            &lt;li&gt; <c>#onCreateInputView()</c>, <c>#onCreateCandidatesView()</c>,
            and <c>#onCreateExtractTextView()</c> for non-demand generation of the UI.
            &lt;li&gt; <c>#onStartInputView(EditorInfo, boolean)</c> to deal with input
            starting within the input area of the IME.
            &lt;/ul&gt;</para>
      <para>An input method has significant discretion in how it goes about its
            work: the <c>android.inputmethodservice.InputMethodService</c> provides
            a basic framework for standard UI elements (input view, candidates view,
            and running in fullscreen mode), but it is up to a particular implementor
            to decide how to use them.  For example, one input method could implement
            an input area with a keyboard, another could allow the user to draw text,
            while a third could have no input area (and thus not be visible to the
            user) but instead listen to audio and perform text to speech conversion.</para>
      <para>In the implementation provided here, all of these elements are placed
            together in a single window managed by the InputMethodService.  It will
            execute callbacks as it needs information about them, and provides APIs for
            programmatic control over them.  They layout of these elements is explicitly
            defined:</para>
      <para>&lt;ul&gt;
            &lt;li&gt;The soft input view, if available, is placed at the bottom of the
            screen.
            &lt;li&gt;The candidates view, if currently shown, is placed above the soft
            input view.
            &lt;li&gt;If not running fullscreen, the application is moved or resized to be
            above these views; if running fullscreen, the window will completely cover
            the application and its top part will contain the extract text of what is
            currently being edited by the application.
            &lt;/ul&gt;
            
            
            "SoftInputView"&gt;&lt;h3&gt;Soft Input View&lt;/h3&gt;</para>
      <para>Central to most input methods is the soft input view.  This is where most
            user interaction occurs: pressing on soft keys, drawing characters, or
            however else your input method wants to generate text.  Most implementations
            will simply have their own view doing all of this work, and return a new
            instance of it when <c>#onCreateInputView()</c> is called.  At that point,
            as long as the input view is visible, you will see user interaction in
            that view and can call back on the InputMethodService to interact with the
            application as appropriate.</para>
      <para>There are some situations where you want to decide whether or not your
            soft input view should be shown to the user.  This is done by implementing
            the <c>#onEvaluateInputViewShown()</c> to return true or false based on
            whether it should be shown in the current environment.  If any of your
            state has changed that may impact this, call
            <c>#updateInputViewShown()</c> to have it re-evaluated.  The default
            implementation always shows the input view unless there is a hard
            keyboard available, which is the appropriate behavior for most input
            methods.</para>
      <para>"CandidatesView"&gt;&lt;h3&gt;Candidates View&lt;/h3&gt;</para>
      <para>Often while the user is generating raw text, an input method wants to
            provide them with a list of possible interpretations of that text that can
            be selected for use.  This is accomplished with the candidates view, and
            like the soft input view you implement <c>#onCreateCandidatesView()</c>
            to instantiate your own view implementing your candidates UI.</para>
      <para>Management of the candidates view is a little different than the input
            view, because the candidates view tends to be more transient, being shown
            only when there are possible candidates for the current text being entered
            by the user.  To control whether the candidates view is shown, you use
            <c>#setCandidatesViewShown(boolean)</c>.  Note that because the candidate
            view tends to be shown and hidden a lot, it does not impact the application
            UI in the same way as the soft input view: it will never cause application
            windows to resize, only cause them to be panned if needed for the user to
            see the current focus.</para>
      <para>"FullscreenMode"&gt;&lt;h3&gt;Fullscreen Mode&lt;/h3&gt;</para>
      <para>Sometimes your input method UI is too large to integrate with the
            application UI, so you just want to take over the screen.  This is
            accomplished by switching to full-screen mode, causing the input method
            window to fill the entire screen and add its own "extracted text" editor
            showing the user the text that is being typed.  Unlike the other UI elements,
            there is a standard implementation for the extract editor that you should
            not need to change.  The editor is placed at the top of the IME, above the
            input and candidates views.</para>
      <para>Similar to the input view, you control whether the IME is running in
            fullscreen mode by implementing <c>#onEvaluateFullscreenMode()</c>
            to return true or false based on
            whether it should be fullscreen in the current environment.  If any of your
            state has changed that may impact this, call
            <c>#updateFullscreenMode()</c> to have it re-evaluated.  The default
            implementation selects fullscreen mode when the screen is in a landscape
            orientation, which is appropriate behavior for most input methods that have
            a significant input area.</para>
      <para>When in fullscreen mode, you have some special requirements because the
            user can not see the application UI.  In particular, you should implement
            <c>#onDisplayCompletions(CompletionInfo[])</c> to show completions
            generated by your application, typically in your candidates view like you
            would normally show candidates.
            
            
            "GeneratingText"&gt;&lt;h3&gt;Generating Text&lt;/h3&gt;</para>
      <para>The key part of an IME is of course generating text for the application.
            This is done through calls to the
            <c>android.view.inputmethod.InputConnection</c> interface to the
            application, which can be retrieved from <c>#getCurrentInputConnection()</c>.
            This interface allows you to generate raw key events or, if the target
            supports it, directly edit in strings of candidates and committed text.</para>
      <para>Information about what the target is expected and supports can be found
            through the <c>android.view.inputmethod.EditorInfo</c> class, which is
            retrieved with <c>#getCurrentInputEditorInfo()</c> method.  The most
            important part of this is <c>android.view.inputmethod.EditorInfo#inputType
            EditorInfo.inputType</c>; in particular, if this is
            <c>android.view.inputmethod.EditorInfo#TYPE_NULL EditorInfo.TYPE_NULL</c>,
            then the target does not support complex edits and you need to only deliver
            raw key events to it.  An input method will also want to look at other
            values here, to for example detect password mode, auto complete text views,
            phone number entry, etc.</para>
      <para>When the user switches between input targets, you will receive calls to
            <c>#onFinishInput()</c> and <c>#onStartInput(EditorInfo, boolean)</c>.
            You can use these to reset and initialize your input state for the current
            target.  For example, you will often want to clear any input state, and
            update a soft keyboard to be appropriate for the new inputType.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputMethodService();" />
      <MemberSignature Language="C#" Value="public InputMethodService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputMethodService(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected InputMethodService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.InputMethodServices.InputMethodService : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.InputMethodServices.InputMethodService" Usage="new Android.InputMethodServices.InputMethodService (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackDisposition">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackDisposition As BackDisposition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::InputMethodServices::BackDisposition BackDisposition { Android::InputMethodServices::BackDisposition get(); void set(Android::InputMethodServices::BackDisposition value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.InputMethodServices.BackDisposition BackDisposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.InputMethodServices.BackDisposition BackDisposition" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.BackDisposition" />
      <MemberSignature Language="F#" Value="member this.BackDisposition : Android.InputMethodServices.BackDisposition with get, set" Usage="Android.InputMethodServices.InputMethodService.BackDisposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBackDisposition", "()I", "GetGetBackDispositionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBackDisposition", "()I", "GetGetBackDispositionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBackDisposition", "(I)V", "GetSetBackDisposition_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBackDisposition", "(I)V", "GetSetBackDisposition_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.InputMethodServices.BackDisposition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="disposition">disposition mode to be set</param>
        <summary>Retrieves the current disposition mode that indicates the expected back button affordance. -or- Sets the disposition mode that indicates the expected affordance for the back button.</summary>
        <value>currently selected disposition mode</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieves the current disposition mode that indicates the expected back button affordance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getBackDisposition()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getBackDisposition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the disposition mode that indicates the expected affordance for the back button.</para>
          <para>Keep in mind that specifying this flag does not change the the default behavior of
            <c>#onKeyDown(int, KeyEvent)</c>.  It is IME developers' responsibility for making sure that
            their custom implementation of <c>#onKeyDown(int, KeyEvent)</c> is consistent with the mode
            specified to this API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#setBackDisposition(int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.setBackDisposition(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CandidatesHiddenVisibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CandidatesHiddenVisibility As ViewStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ViewStates CandidatesHiddenVisibility { Android::Views::ViewStates get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewStates CandidatesHiddenVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ViewStates CandidatesHiddenVisibility" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.CandidatesHiddenVisibility" />
      <MemberSignature Language="F#" Value="member this.CandidatesHiddenVisibility : Android.Views.ViewStates" Usage="Android.InputMethodServices.InputMethodService.CandidatesHiddenVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCandidatesHiddenVisibility", "()I", "GetGetCandidatesHiddenVisibilityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCandidatesHiddenVisibility", "()I", "GetGetCandidatesHiddenVisibilityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the visibility mode (either <c>View#INVISIBLE View.INVISIBLE</c>
            or <c>View#GONE View.GONE</c>) of the candidates view when it is not
            shown.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the visibility mode (either <c>View#INVISIBLE View.INVISIBLE</c>
            or <c>View#GONE View.GONE</c>) of the candidates view when it is not
            shown.  The default implementation returns GONE when
            <c>#isExtractViewShown</c> returns true,
            otherwise INVISIBLE.  Be careful if you change this to return GONE in
            other situations -- if showing or hiding the candidates view causes
            your window to resize, this can cause temporary drawing artifacts as
            the resize takes place.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getCandidatesHiddenVisibility()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getCandidatesHiddenVisibility()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInputBinding">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentInputBinding As InputBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::InputMethods::InputBinding ^ CurrentInputBinding { Android::Views::InputMethods::InputBinding ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.InputBinding? CurrentInputBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.InputMethods.InputBinding CurrentInputBinding" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.CurrentInputBinding" />
      <MemberSignature Language="F#" Value="member this.CurrentInputBinding : Android.Views.InputMethods.InputBinding" Usage="Android.InputMethodServices.InputMethodService.CurrentInputBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentInputBinding", "()Landroid/view/inputmethod/InputBinding;", "GetGetCurrentInputBindingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentInputBinding", "()Landroid/view/inputmethod/InputBinding;", "GetGetCurrentInputBindingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.InputBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the currently active InputBinding for the input method, or
            null if there is none.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the currently active InputBinding for the input method, or
            null if there is none.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getCurrentInputBinding()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getCurrentInputBinding()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInputConnection">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentInputConnection As IInputConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::InputMethods::IInputConnection ^ CurrentInputConnection { Android::Views::InputMethods::IInputConnection ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.IInputConnection? CurrentInputConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.InputMethods.IInputConnection CurrentInputConnection" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.CurrentInputConnection" />
      <MemberSignature Language="F#" Value="member this.CurrentInputConnection : Android.Views.InputMethods.IInputConnection" Usage="Android.InputMethodServices.InputMethodService.CurrentInputConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentInputConnection", "()Landroid/view/inputmethod/InputConnection;", "GetGetCurrentInputConnectionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentInputConnection", "()Landroid/view/inputmethod/InputConnection;", "GetGetCurrentInputConnectionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.IInputConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the currently active InputConnection that is bound to
            the input method, or null if there is none.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Retrieve the currently active InputConnection that is bound to
            the input method, or null if there is none.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getCurrentInputConnection()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getCurrentInputConnection()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInputEditorInfo">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentInputEditorInfo As EditorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::InputMethods::EditorInfo ^ CurrentInputEditorInfo { Android::Views::InputMethods::EditorInfo ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.EditorInfo? CurrentInputEditorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.InputMethods.EditorInfo CurrentInputEditorInfo" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.CurrentInputEditorInfo" />
      <MemberSignature Language="F#" Value="member this.CurrentInputEditorInfo : Android.Views.InputMethods.EditorInfo" Usage="Android.InputMethodServices.InputMethodService.CurrentInputEditorInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentInputEditorInfo", "()Landroid/view/inputmethod/EditorInfo;", "GetGetCurrentInputEditorInfoHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentInputEditorInfo", "()Landroid/view/inputmethod/EditorInfo;", "GetGetCurrentInputEditorInfoHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.EditorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInputStarted">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentInputStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CurrentInputStarted { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool CurrentInputStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CurrentInputStarted" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.CurrentInputStarted" />
      <MemberSignature Language="F#" Value="member this.CurrentInputStarted : bool" Usage="Android.InputMethodServices.InputMethodService.CurrentInputStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentInputStarted", "()Z", "GetGetCurrentInputStartedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentInputStarted", "()Z", "GetGetCurrentInputStartedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="EnableHardwareAcceleration">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableHardwareAcceleration () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EnableHardwareAcceleration();" />
      <MemberSignature Language="C#" Value="public virtual bool EnableHardwareAcceleration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EnableHardwareAcceleration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.EnableHardwareAcceleration" />
      <MemberSignature Language="F#" Value="abstract member EnableHardwareAcceleration : unit -&gt; bool&#xA;override this.EnableHardwareAcceleration : unit -&gt; bool" Usage="inputMethodService.EnableHardwareAcceleration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enableHardwareAcceleration", "()Z", "GetEnableHardwareAccelerationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enableHardwareAcceleration", "()Z", "GetEnableHardwareAccelerationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>You can call this to try to enable accelerated drawing for your IME.</summary>
        <returns>
          <c>true</c> if accelerated drawing is successfully enabled otherwise <c>false</c>.
                    On API 21 and later devices the return value is basically just a hint and your IME
                    does not need to change the behavior based on the it</returns>
        <remarks>
          <para>You can call this to try to enable accelerated drawing for your IME. This must be set before
            <c>#onCreate()</c>, so you will typically call it in your constructor.  It is not always
            possible to use hardware accelerated drawing in an IME (for example on low-end devices that
            do not have the resources to support this), so the call <c>true</c> if it succeeds otherwise
            <c>false</c> if you will need to draw in software.  You must be able to handle either case.</para>
          <para>In API 21 and later, system may automatically enable hardware accelerated drawing for your
            IME on capable devices even if this method is not explicitly called. Make sure that your IME
            is able to handle either case.</para>
          <para>This member is deprecated. Starting in API 21, hardware acceleration is always enabled on capable devices</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#enableHardwareAcceleration()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.enableHardwareAcceleration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ExtractViewShown">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractViewShown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractViewShown { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool ExtractViewShown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractViewShown" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.ExtractViewShown" />
      <MemberSignature Language="F#" Value="member this.ExtractViewShown : bool with get, set" Usage="Android.InputMethodServices.InputMethodService.ExtractViewShown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isExtractViewShown", "()Z", "GetIsExtractViewShownHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isExtractViewShown", "()Z", "GetIsExtractViewShownHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setExtractViewShown", "(Z)V", "GetSetExtractViewShown_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setExtractViewShown", "(Z)V", "GetSetExtractViewShown_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the fullscreen extract view is shown. -or- Controls the visibility of the extracted text area.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return whether the fullscreen extract view is shown.  This will only
            return true if <c>#isFullscreenMode()</c> returns true, and in that
            case its value depends on the last call to
            <c>#setExtractViewShown(boolean)</c>.  This effectively lets you
            determine if the application window is entirely covered (when this
            returns true) or if some part of it may be shown (if this returns
            false, though if <c>#isFullscreenMode()</c> returns true in that case
            then it is probably only a sliver of the application).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#isExtractViewShown()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.isExtractViewShown()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Controls the visibility of the extracted text area.  This only applies
            when the input method is in fullscreen mode, and thus showing extracted
            text.  When false, the extracted text will not be shown, allowing some
            of the application to be seen behind.  This is normally set for you
            by <c>#onUpdateExtractingVisibility</c>.  This controls the visibility
            of both the extracted text and candidate view; the latter since it is
            not useful if there is no text to see.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#setExtractViewShown(boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.setExtractViewShown(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FinishStylusHandwriting">
      <MemberSignature Language="VB.NET" Value="Public Sub FinishStylusHandwriting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinishStylusHandwriting();" />
      <MemberSignature Language="C#" Value="public void FinishStylusHandwriting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinishStylusHandwriting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.FinishStylusHandwriting" />
      <MemberSignature Language="F#" Value="member this.FinishStylusHandwriting : unit -&gt; unit" Usage="inputMethodService.FinishStylusHandwriting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finishStylusHandwriting", "()V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finishStylusHandwriting", "()V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finish the current stylus handwriting session.</summary>
        <remarks>
          <para>Finish the current stylus handwriting session.
            
            This dismisses the <c>#getStylusHandwritingWindow ink window</c> and stops intercepting
            stylus <c>MotionEvent</c>s.
            
            Note for IME developers: Call this method at any time to finish current handwriting session.
            Generally, this should be invoked after a short timeout, giving the user enough time
            to start the next stylus stroke, if any. By default, system will time-out after few seconds.
            To override default timeout, use <c>#setStylusHandwritingSessionTimeout(Duration)</c>.
            
            Handwriting session will be finished by framework on next <c>#onFinishInput()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#finishStylusHandwriting()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.finishStylusHandwriting()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextForImeAction">
      <MemberSignature Language="VB.NET" Value="Public Function GetTextForImeAction (imeOptions As ImeAction) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextForImeAction(Android::Views::InputMethods::ImeAction imeOptions);" />
      <MemberSignature Language="C#" Value="public string? GetTextForImeAction (Android.Views.InputMethods.ImeAction imeOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextForImeAction(valuetype Android.Views.InputMethods.ImeAction imeOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.GetTextForImeAction(Android.Views.InputMethods.ImeAction)" />
      <MemberSignature Language="F#" Value="member this.GetTextForImeAction : Android.Views.InputMethods.ImeAction -&gt; string" Usage="inputMethodService.GetTextForImeAction imeOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imeOptions" Type="Android.Views.InputMethods.ImeAction">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="imeOptions">The value from <c>EditorInfo#imeOptions EditorInfo.imeOptions</c>.</param>
        <summary>Return text that can be used as a button label for the given
            <c>EditorInfo#imeOptions EditorInfo.imeOptions</c>.</summary>
        <returns>Returns a label to use, or null if there is no action.</returns>
        <remarks>
          <para>Return text that can be used as a button label for the given
            <c>EditorInfo#imeOptions EditorInfo.imeOptions</c>.  Returns null
            if there is no action requested.  Note that there is no guarantee that
            the returned text will be relatively short, so you probably do not
            want to use it as text on a soft keyboard key label.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getTextForImeAction(int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getTextForImeAction(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextForImeActionFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTextForImeActionFormatted (imeOptions As ImeAction) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::ICharSequence ^ GetTextForImeActionFormatted(Android::Views::InputMethods::ImeAction imeOptions);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetTextForImeActionFormatted (Android.Views.InputMethods.ImeAction imeOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTextForImeActionFormatted(valuetype Android.Views.InputMethods.ImeAction imeOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.GetTextForImeActionFormatted(Android.Views.InputMethods.ImeAction)" />
      <MemberSignature Language="F#" Value="abstract member GetTextForImeActionFormatted : Android.Views.InputMethods.ImeAction -&gt; Java.Lang.ICharSequence&#xA;override this.GetTextForImeActionFormatted : Android.Views.InputMethods.ImeAction -&gt; Java.Lang.ICharSequence" Usage="inputMethodService.GetTextForImeActionFormatted imeOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextForImeAction", "(I)Ljava/lang/CharSequence;", "GetGetTextForImeAction_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextForImeAction", "(I)Ljava/lang/CharSequence;", "GetGetTextForImeAction_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imeOptions" Type="Android.Views.InputMethods.ImeAction">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="imeOptions">The value from <c>EditorInfo#imeOptions EditorInfo.imeOptions</c>.</param>
        <summary>Return text that can be used as a button label for the given
            <c>EditorInfo#imeOptions EditorInfo.imeOptions</c>.</summary>
        <returns>Returns a label to use, or null if there is no action.</returns>
        <remarks>
          <para>Return text that can be used as a button label for the given
            <c>EditorInfo#imeOptions EditorInfo.imeOptions</c>.  Returns null
            if there is no action requested.  Note that there is no guarantee that
            the returned text will be relatively short, so you probably do not
            want to use it as text on a soft keyboard key label.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getTextForImeAction(int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getTextForImeAction(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="HideStatusIcon">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HideStatusIcon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HideStatusIcon();" />
      <MemberSignature Language="C#" Value="public virtual void HideStatusIcon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HideStatusIcon() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.HideStatusIcon" />
      <MemberSignature Language="F#" Value="abstract member HideStatusIcon : unit -&gt; unit&#xA;override this.HideStatusIcon : unit -&gt; unit" Usage="inputMethodService.HideStatusIcon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hideStatusIcon", "()V", "GetHideStatusIconHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hideStatusIcon", "()V", "GetHideStatusIconHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="HideWindow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HideWindow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HideWindow();" />
      <MemberSignature Language="C#" Value="public virtual void HideWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HideWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.HideWindow" />
      <MemberSignature Language="F#" Value="abstract member HideWindow : unit -&gt; unit&#xA;override this.HideWindow : unit -&gt; unit" Usage="inputMethodService.HideWindow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hideWindow", "()V", "GetHideWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hideWindow", "()V", "GetHideWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InputMethodWindowRecommendedHeight">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputMethodWindowRecommendedHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int InputMethodWindowRecommendedHeight { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int InputMethodWindowRecommendedHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputMethodWindowRecommendedHeight" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.InputMethodWindowRecommendedHeight" />
      <MemberSignature Language="F#" Value="member this.InputMethodWindowRecommendedHeight : int" Usage="Android.InputMethodServices.InputMethodService.InputMethodWindowRecommendedHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInputMethodWindowRecommendedHeight", "()I", "GetGetInputMethodWindowRecommendedHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInputMethodWindowRecommendedHeight", "()I", "GetGetInputMethodWindowRecommendedHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aimed to return the previous input method's <c>Insets#contentTopInsets</c>, but its actual
            semantics has never been well defined.</summary>
        <value>on Android <c>android.os.Build.VERSION_CODES#Q</c> and later devices this method
                    always returns <c>0</c></value>
        <remarks>
          <para>Aimed to return the previous input method's <c>Insets#contentTopInsets</c>, but its actual
            semantics has never been well defined.</para>
          <para>Note that the previous document clearly mentioned that this method could return <c>0</c>
            at any time for whatever reason.  Now this method is just always returning <c>0</c>.</para>
          <para>This member is deprecated. the actual behavior of this method has never been well defined.  You cannot use
                        this method in a reliable and predictable way</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getInputMethodWindowRecommendedHeight()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getInputMethodWindowRecommendedHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullscreenMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFullscreenMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFullscreenMode { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsFullscreenMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullscreenMode" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.IsFullscreenMode" />
      <MemberSignature Language="F#" Value="member this.IsFullscreenMode : bool" Usage="Android.InputMethodServices.InputMethodService.IsFullscreenMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFullscreenMode", "()Z", "GetIsFullscreenModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFullscreenMode", "()Z", "GetIsFullscreenModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the input method is &lt;em&gt;currently&lt;/em&gt; running in
            fullscreen mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return whether the input method is &lt;em&gt;currently&lt;/em&gt; running in
            fullscreen mode.  This is the mode that was last determined and
            applied by <c>#updateFullscreenMode()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#isFullscreenMode()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.isFullscreenMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsInputViewShown">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsInputViewShown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInputViewShown { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsInputViewShown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputViewShown" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.IsInputViewShown" />
      <MemberSignature Language="F#" Value="member this.IsInputViewShown : bool" Usage="Android.InputMethodServices.InputMethodService.IsInputViewShown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInputViewShown", "()Z", "GetIsInputViewShownHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInputViewShown", "()Z", "GetIsInputViewShownHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the soft input view is &lt;em&gt;currently&lt;/em&gt; shown to the
            user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return whether the soft input view is &lt;em&gt;currently&lt;/em&gt; shown to the
            user.  This is the state that was last determined and
            applied by <c>#updateInputViewShown()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#isInputViewShown()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.isInputViewShown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsShowInputRequested">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsShowInputRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsShowInputRequested { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsShowInputRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShowInputRequested" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.IsShowInputRequested" />
      <MemberSignature Language="F#" Value="member this.IsShowInputRequested : bool" Usage="Android.InputMethodServices.InputMethodService.IsShowInputRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isShowInputRequested", "()Z", "GetIsShowInputRequestedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isShowInputRequested", "()Z", "GetIsShowInputRequestedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if we have been asked to show our input view.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns true if we have been asked to show our input view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#isShowInputRequested()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.isShowInputRequested()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.InputMethodServices.InputMethodService.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInflater">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LayoutInflater As LayoutInflater" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::LayoutInflater ^ LayoutInflater { Android::Views::LayoutInflater ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutInflater? LayoutInflater { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater LayoutInflater" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.LayoutInflater" />
      <MemberSignature Language="F#" Value="member this.LayoutInflater : Android.Views.LayoutInflater" Usage="Android.InputMethodServices.InputMethodService.LayoutInflater" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLayoutInflater", "()Landroid/view/LayoutInflater;", "GetGetLayoutInflaterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLayoutInflater", "()Landroid/view/LayoutInflater;", "GetGetLayoutInflaterHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxWidth { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int MaxWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWidth" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.MaxWidth" />
      <MemberSignature Language="F#" Value="member this.MaxWidth : int" Usage="Android.InputMethodServices.InputMethodService.MaxWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxWidth", "()I", "GetGetMaxWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxWidth", "()I", "GetGetMaxWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the maximum width, in pixels, available the input method.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the maximum width, in pixels, available the input method.
            Input methods are positioned at the bottom of the screen and, unless
            running in fullscreen, will generally want to be as short as possible
            so should compute their height based on their contents.  However, they
            can stretch as much as needed horizontally.  The function returns to
            you the maximum amount of space available horizontally, which you can
            use if needed for UI placement.</para>
          <para>In many cases this is not needed, you can just rely on the normal
            view layout mechanisms to position your views within the full horizontal
            space given to the input method.</para>
          <para>Note that this value can change dynamically, in particular when the
            screen orientation changes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getMaxWidth()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getMaxWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnAppPrivateCommand">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAppPrivateCommand (action As String, data As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAppPrivateCommand(System::String ^ action, Android::OS::Bundle ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void OnAppPrivateCommand (string? action, Android.OS.Bundle? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAppPrivateCommand(string action, class Android.OS.Bundle data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnAppPrivateCommand(System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnAppPrivateCommand : string * Android.OS.Bundle -&gt; unit&#xA;override this.OnAppPrivateCommand : string * Android.OS.Bundle -&gt; unit" Usage="inputMethodService.OnAppPrivateCommand (action, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAppPrivateCommand", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnAppPrivateCommand_Ljava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAppPrivateCommand", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnAppPrivateCommand_Ljava_lang_String_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="data" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnBindInput">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnBindInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnBindInput();" />
      <MemberSignature Language="C#" Value="public virtual void OnBindInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBindInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnBindInput" />
      <MemberSignature Language="F#" Value="abstract member OnBindInput : unit -&gt; unit&#xA;override this.OnBindInput : unit -&gt; unit" Usage="inputMethodService.OnBindInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBindInput", "()V", "GetOnBindInputHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBindInput", "()V", "GetOnBindInputHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when a new client has bound to the input method.</summary>
        <remarks>
          <para>Called when a new client has bound to the input method.  This
            may be followed by a series of <c>#onStartInput(EditorInfo, boolean)</c>
            and <c>#onFinishInput()</c> calls as the user navigates through its
            UI.  Upon this call you know that <c>#getCurrentInputBinding</c>
            and <c>#getCurrentInputConnection</c> return valid objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onBindInput()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onBindInput()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnComputeInsets">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComputeInsets (outInsets As InputMethodService.Insets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComputeInsets(Android::InputMethodServices::InputMethodService::Insets ^ outInsets);" />
      <MemberSignature Language="C#" Value="public virtual void OnComputeInsets (Android.InputMethodServices.InputMethodService.Insets? outInsets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComputeInsets(class Android.InputMethodServices.InputMethodService/Insets outInsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnComputeInsets(Android.InputMethodServices.InputMethodService.Insets)" />
      <MemberSignature Language="F#" Value="abstract member OnComputeInsets : Android.InputMethodServices.InputMethodService.Insets -&gt; unit&#xA;override this.OnComputeInsets : Android.InputMethodServices.InputMethodService.Insets -&gt; unit" Usage="inputMethodService.OnComputeInsets outInsets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onComputeInsets", "(Landroid/inputmethodservice/InputMethodService$Insets;)V", "GetOnComputeInsets_Landroid_inputmethodservice_InputMethodService_Insets_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onComputeInsets", "(Landroid/inputmethodservice/InputMethodService$Insets;)V", "GetOnComputeInsets_Landroid_inputmethodservice_InputMethodService_Insets_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outInsets" Type="Android.InputMethodServices.InputMethodService+Insets" />
      </Parameters>
      <Docs>
        <param name="outInsets">Fill in with the current UI insets.</param>
        <summary>Compute the interesting insets into your UI.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onComputeInsets(android.inputmethodservice.Insets)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onComputeInsets(android.inputmethodservice.Insets)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnConfigureWindow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnConfigureWindow (win As Window, isFullscreen As Boolean, isCandidatesOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnConfigureWindow(Android::Views::Window ^ win, bool isFullscreen, bool isCandidatesOnly);" />
      <MemberSignature Language="C#" Value="public virtual void OnConfigureWindow (Android.Views.Window? win, bool isFullscreen, bool isCandidatesOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConfigureWindow(class Android.Views.Window win, bool isFullscreen, bool isCandidatesOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnConfigureWindow(Android.Views.Window,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnConfigureWindow : Android.Views.Window * bool * bool -&gt; unit&#xA;override this.OnConfigureWindow : Android.Views.Window * bool * bool -&gt; unit" Usage="inputMethodService.OnConfigureWindow (win, isFullscreen, isCandidatesOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onConfigureWindow", "(Landroid/view/Window;ZZ)V", "GetOnConfigureWindow_Landroid_view_Window_ZZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onConfigureWindow", "(Landroid/view/Window;ZZ)V", "GetOnConfigureWindow_Landroid_view_Window_ZZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win" Type="Android.Views.Window" />
        <Parameter Name="isFullscreen" Type="System.Boolean" />
        <Parameter Name="isCandidatesOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="win">The input method's window.</param>
        <param name="isFullscreen">If true, the window is running in fullscreen mode
            and intended to cover the entire application display.</param>
        <param name="isCandidatesOnly">If true, the window is only showing the
            candidates view and none of the rest of its UI.  This is mutually
            exclusive with fullscreen mode.</param>
        <summary>Update the given window's parameters for the given mode.</summary>
        <remarks>
          <para>Update the given window's parameters for the given mode.  This is called
            when the window is first displayed and each time the fullscreen or
            candidates only mode changes.</para>
          <para>The default implementation makes the layout for the window
            MATCH_PARENT x MATCH_PARENT when in fullscreen mode, and
            MATCH_PARENT x WRAP_CONTENT when in non-fullscreen mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onConfigureWindow(android.view.Window,%20boolean,%20boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onConfigureWindow(android.view.Window, boolean, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateCandidatesView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCreateCandidatesView () As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ OnCreateCandidatesView();" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? OnCreateCandidatesView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreateCandidatesView() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnCreateCandidatesView" />
      <MemberSignature Language="F#" Value="abstract member OnCreateCandidatesView : unit -&gt; Android.Views.View&#xA;override this.OnCreateCandidatesView : unit -&gt; Android.Views.View" Usage="inputMethodService.OnCreateCandidatesView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateCandidatesView", "()Landroid/view/View;", "GetOnCreateCandidatesViewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateCandidatesView", "()Landroid/view/View;", "GetOnCreateCandidatesViewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create and return the view hierarchy used to show candidates.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create and return the view hierarchy used to show candidates.  This will
            be called once, when the candidates are first displayed.  You can return
            null to have no candidates view; the default implementation returns null.</para>
          <para>To control when the candidates view is displayed, use
            <c>#setCandidatesViewShown(boolean)</c>.
            To change the candidates view after the first one is created by this
            function, use <c>#setCandidatesView(View)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onCreateCandidatesView()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onCreateCandidatesView()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateExtractTextView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCreateExtractTextView () As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ OnCreateExtractTextView();" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? OnCreateExtractTextView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreateExtractTextView() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnCreateExtractTextView" />
      <MemberSignature Language="F#" Value="abstract member OnCreateExtractTextView : unit -&gt; Android.Views.View&#xA;override this.OnCreateExtractTextView : unit -&gt; Android.Views.View" Usage="inputMethodService.OnCreateExtractTextView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateExtractTextView", "()Landroid/view/View;", "GetOnCreateExtractTextViewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateExtractTextView", "()Landroid/view/View;", "GetOnCreateExtractTextViewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the framework to create the layout for showing extracted text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Called by the framework to create the layout for showing extracted text.
            Only called when in fullscreen mode.  The returned view hierarchy must
            have an <c>ExtractEditText</c> whose ID is 
            <c>android.R.id#inputExtractEditText</c>, with action ID
            <c>android.R.id#inputExtractAction</c> and accessories ID
            <c>android.R.id#inputExtractAccessories</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onCreateExtractTextView()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onCreateExtractTextView()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateInlineSuggestionsRequest">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCreateInlineSuggestionsRequest (uiExtras As Bundle) As InlineSuggestionsRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::InputMethods::InlineSuggestionsRequest ^ OnCreateInlineSuggestionsRequest(Android::OS::Bundle ^ uiExtras);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.InlineSuggestionsRequest? OnCreateInlineSuggestionsRequest (Android.OS.Bundle uiExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.InputMethods.InlineSuggestionsRequest OnCreateInlineSuggestionsRequest(class Android.OS.Bundle uiExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnCreateInlineSuggestionsRequest(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateInlineSuggestionsRequest : Android.OS.Bundle -&gt; Android.Views.InputMethods.InlineSuggestionsRequest&#xA;override this.OnCreateInlineSuggestionsRequest : Android.OS.Bundle -&gt; Android.Views.InputMethods.InlineSuggestionsRequest" Usage="inputMethodService.OnCreateInlineSuggestionsRequest uiExtras" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateInlineSuggestionsRequest", "(Landroid/os/Bundle;)Landroid/view/inputmethod/InlineSuggestionsRequest;", "GetOnCreateInlineSuggestionsRequest_Landroid_os_Bundle_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateInlineSuggestionsRequest", "(Landroid/os/Bundle;)Landroid/view/inputmethod/InlineSuggestionsRequest;", "GetOnCreateInlineSuggestionsRequest_Landroid_os_Bundle_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.InlineSuggestionsRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uiExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="uiExtras">the extras that contain the UI renderer related information</param>
        <summary>Called when Autofill is requesting an <c>InlineSuggestionsRequest</c> from the IME.</summary>
        <returns>an <c>InlineSuggestionsRequest</c> to be sent to Autofill.</returns>
        <remarks>
          <para>Called when Autofill is requesting an <c>InlineSuggestionsRequest</c> from the IME.</para>
          <para>The Autofill Framework will first request the IME to create and send an
            <c>InlineSuggestionsRequest</c> back. Once Autofill Framework receives a valid request and
            also receives valid inline suggestions, they will be returned via
            <c>#onInlineSuggestionsResponse(InlineSuggestionsResponse)</c>.</para>
          <para>IME Lifecycle - The request will wait to be created after inputStarted</para>
          <para>If the IME wants to support displaying inline suggestions, they must set
            supportsInlineSuggestions in its XML and implement this method to return a valid
            <c>InlineSuggestionsRequest</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onCreateInlineSuggestionsRequest(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onCreateInlineSuggestionsRequest(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateInputMethodInterface">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnCreateInputMethodInterface () As AbstractInputMethodService.AbstractInputMethodImpl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Android::InputMethodServices::AbstractInputMethodService::AbstractInputMethodImpl ^ OnCreateInputMethodInterface();" />
      <MemberSignature Language="C#" Value="public override Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodImpl? OnCreateInputMethodInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.InputMethodServices.AbstractInputMethodService/AbstractInputMethodImpl OnCreateInputMethodInterface() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnCreateInputMethodInterface" />
      <MemberSignature Language="F#" Value="override this.OnCreateInputMethodInterface : unit -&gt; Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodImpl" Usage="inputMethodService.OnCreateInputMethodInterface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateInputMethodInterface", "()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodImpl;", "GetOnCreateInputMethodInterfaceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateInputMethodInterface", "()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodImpl;", "GetOnCreateInputMethodInterfaceHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.InputMethodServices.AbstractInputMethodService+AbstractInputMethodImpl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implement to return our standard <c>InputMethodImpl</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onCreateInputMethodInterface()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onCreateInputMethodInterface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateInputMethodSessionInterface">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnCreateInputMethodSessionInterface () As AbstractInputMethodService.AbstractInputMethodSessionImpl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Android::InputMethodServices::AbstractInputMethodService::AbstractInputMethodSessionImpl ^ OnCreateInputMethodSessionInterface();" />
      <MemberSignature Language="C#" Value="public override Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodSessionImpl? OnCreateInputMethodSessionInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.InputMethodServices.AbstractInputMethodService/AbstractInputMethodSessionImpl OnCreateInputMethodSessionInterface() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnCreateInputMethodSessionInterface" />
      <MemberSignature Language="F#" Value="override this.OnCreateInputMethodSessionInterface : unit -&gt; Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodSessionImpl" Usage="inputMethodService.OnCreateInputMethodSessionInterface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateInputMethodSessionInterface", "()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl;", "GetOnCreateInputMethodSessionInterfaceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateInputMethodSessionInterface", "()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl;", "GetOnCreateInputMethodSessionInterfaceHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.InputMethodServices.AbstractInputMethodService+AbstractInputMethodSessionImpl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implement to return our standard <c>InputMethodSessionImpl</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onCreateInputMethodSessionInterface()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onCreateInputMethodSessionInterface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateInputView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCreateInputView () As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ OnCreateInputView();" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? OnCreateInputView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreateInputView() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnCreateInputView" />
      <MemberSignature Language="F#" Value="abstract member OnCreateInputView : unit -&gt; Android.Views.View&#xA;override this.OnCreateInputView : unit -&gt; Android.Views.View" Usage="inputMethodService.OnCreateInputView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateInputView", "()Landroid/view/View;", "GetOnCreateInputViewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateInputView", "()Landroid/view/View;", "GetOnCreateInputViewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create and return the view hierarchy used for the input area (such as
            a soft keyboard).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create and return the view hierarchy used for the input area (such as
            a soft keyboard).  This will be called once, when the input area is
            first displayed.  You can return null to have no input area; the default
            implementation returns null.</para>
          <para>To control when the input view is displayed, implement
            <c>#onEvaluateInputViewShown()</c>.
            To change the input view after the first one is created by this
            function, use <c>#setInputView(View)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onCreateInputView()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onCreateInputView()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentInputMethodSubtypeChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentInputMethodSubtypeChanged (newSubtype As InputMethodSubtype)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentInputMethodSubtypeChanged(Android::Views::InputMethods::InputMethodSubtype ^ newSubtype);" />
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentInputMethodSubtypeChanged (Android.Views.InputMethods.InputMethodSubtype? newSubtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentInputMethodSubtypeChanged(class Android.Views.InputMethods.InputMethodSubtype newSubtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnCurrentInputMethodSubtypeChanged(Android.Views.InputMethods.InputMethodSubtype)" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentInputMethodSubtypeChanged : Android.Views.InputMethods.InputMethodSubtype -&gt; unit&#xA;override this.OnCurrentInputMethodSubtypeChanged : Android.Views.InputMethods.InputMethodSubtype -&gt; unit" Usage="inputMethodService.OnCurrentInputMethodSubtypeChanged newSubtype" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCurrentInputMethodSubtypeChanged", "(Landroid/view/inputmethod/InputMethodSubtype;)V", "GetOnCurrentInputMethodSubtypeChanged_Landroid_view_inputmethod_InputMethodSubtype_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCurrentInputMethodSubtypeChanged", "(Landroid/view/inputmethod/InputMethodSubtype;)V", "GetOnCurrentInputMethodSubtypeChanged_Landroid_view_inputmethod_InputMethodSubtype_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSubtype" Type="Android.Views.InputMethods.InputMethodSubtype" />
      </Parameters>
      <Docs>
        <param name="newSubtype">the subtype which is being changed to.</param>
        <summary>Called when the subtype was changed.</summary>
        <remarks>
          <para>Called when the subtype was changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayCompletions">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDisplayCompletions (completions As CompletionInfo())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDisplayCompletions(cli::array &lt;Android::Views::InputMethods::CompletionInfo ^&gt; ^ completions);" />
      <MemberSignature Language="C#" Value="public virtual void OnDisplayCompletions (Android.Views.InputMethods.CompletionInfo[]? completions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDisplayCompletions(class Android.Views.InputMethods.CompletionInfo[] completions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnDisplayCompletions(Android.Views.InputMethods.CompletionInfo[])" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayCompletions : Android.Views.InputMethods.CompletionInfo[] -&gt; unit&#xA;override this.OnDisplayCompletions : Android.Views.InputMethods.CompletionInfo[] -&gt; unit" Usage="inputMethodService.OnDisplayCompletions completions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDisplayCompletions", "([Landroid/view/inputmethod/CompletionInfo;)V", "GetOnDisplayCompletions_arrayLandroid_view_inputmethod_CompletionInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDisplayCompletions", "([Landroid/view/inputmethod/CompletionInfo;)V", "GetOnDisplayCompletions_arrayLandroid_view_inputmethod_CompletionInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completions" Type="Android.Views.InputMethods.CompletionInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completions">To be added.</param>
        <summary>Called when the application has reported auto-completion candidates that
            it would like to have the input method displayed.</summary>
        <remarks>
          <para>Called when the application has reported auto-completion candidates that
            it would like to have the input method displayed.  Typically these are
            only used when an input method is running in full-screen mode, since
            otherwise the user can see and interact with the pop-up window of
            completions shown by the application.</para>
          <para>The default implementation here does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onDisplayCompletions(android.view.inputmethod.CompletionInfo[])" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onDisplayCompletions(android.view.inputmethod.CompletionInfo[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnEvaluateFullscreenMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEvaluateFullscreenMode () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnEvaluateFullscreenMode();" />
      <MemberSignature Language="C#" Value="public virtual bool OnEvaluateFullscreenMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnEvaluateFullscreenMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnEvaluateFullscreenMode" />
      <MemberSignature Language="F#" Value="abstract member OnEvaluateFullscreenMode : unit -&gt; bool&#xA;override this.OnEvaluateFullscreenMode : unit -&gt; bool" Usage="inputMethodService.OnEvaluateFullscreenMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onEvaluateFullscreenMode", "()Z", "GetOnEvaluateFullscreenModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onEvaluateFullscreenMode", "()Z", "GetOnEvaluateFullscreenModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Override this to control when the input method should run in
            fullscreen mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Override this to control when the input method should run in
            fullscreen mode.  The default implementation runs in fullsceen only
            when the screen is in landscape mode.  If you change what
            this returns, you will need to call <c>#updateFullscreenMode()</c>
            yourself whenever the returned value may have changed to have it
            re-evaluated and applied.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onEvaluateFullscreenMode()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onEvaluateFullscreenMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnEvaluateInputViewShown">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEvaluateInputViewShown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnEvaluateInputViewShown();" />
      <MemberSignature Language="C#" Value="public virtual bool OnEvaluateInputViewShown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnEvaluateInputViewShown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnEvaluateInputViewShown" />
      <MemberSignature Language="F#" Value="abstract member OnEvaluateInputViewShown : unit -&gt; bool&#xA;override this.OnEvaluateInputViewShown : unit -&gt; bool" Usage="inputMethodService.OnEvaluateInputViewShown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onEvaluateInputViewShown", "()Z", "GetOnEvaluateInputViewShownHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onEvaluateInputViewShown", "()Z", "GetOnEvaluateInputViewShownHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Override this to control when the soft input area should be shown to the user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Override this to control when the soft input area should be shown to the user.  The default
            implementation returns <c>false</c> when there is no hard keyboard or the keyboard is hidden
            unless the user shows an intention to use software keyboard.  If you change what this
            returns, you will need to call <c>#updateInputViewShown()</c> yourself whenever the returned
            value may have changed to have it re-evaluated and applied.</para>
          <para>When you override this method, it is recommended to call
            <c>super.onEvaluateInputViewShown()</c> and return <c>true</c> when <c>true</c> is
            returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onEvaluateInputViewShown()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onEvaluateInputViewShown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnExtractedCursorMovement">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExtractedCursorMovement (dx As Integer, dy As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExtractedCursorMovement(int dx, int dy);" />
      <MemberSignature Language="C#" Value="public virtual void OnExtractedCursorMovement (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExtractedCursorMovement(int32 dx, int32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnExtractedCursorMovement(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnExtractedCursorMovement : int * int -&gt; unit&#xA;override this.OnExtractedCursorMovement : int * int -&gt; unit" Usage="inputMethodService.OnExtractedCursorMovement (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onExtractedCursorMovement", "(II)V", "GetOnExtractedCursorMovement_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onExtractedCursorMovement", "(II)V", "GetOnExtractedCursorMovement_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx">The amount of cursor movement in the x dimension.</param>
        <param name="dy">The amount of cursor movement in the y dimension.</param>
        <summary>This is called when the user has performed a cursor movement in the
            extracted text view, when it is running in fullscreen mode.</summary>
        <remarks>
          <para>This is called when the user has performed a cursor movement in the
            extracted text view, when it is running in fullscreen mode.  The default
            implementation hides the candidates view when a vertical movement
            happens, but only if the extracted text editor has a vertical scroll bar
            because its text doesn't fit.
            Re-implement this to provide whatever behavior you want.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onExtractedCursorMovement(int,%20int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onExtractedCursorMovement(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnExtractedSelectionChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExtractedSelectionChanged (start As Integer, end As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExtractedSelectionChanged(int start, int end);" />
      <MemberSignature Language="C#" Value="public virtual void OnExtractedSelectionChanged (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExtractedSelectionChanged(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnExtractedSelectionChanged(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnExtractedSelectionChanged : int * int -&gt; unit&#xA;override this.OnExtractedSelectionChanged : int * int -&gt; unit" Usage="inputMethodService.OnExtractedSelectionChanged (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onExtractedSelectionChanged", "(II)V", "GetOnExtractedSelectionChanged_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onExtractedSelectionChanged", "(II)V", "GetOnExtractedSelectionChanged_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>This is called when the user has moved the cursor in the extracted
            text view, when running in fullsreen mode.</summary>
        <remarks>
          <para>This is called when the user has moved the cursor in the extracted
            text view, when running in fullsreen mode.  The default implementation
            performs the corresponding selection change on the underlying text
            editor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onExtractedSelectionChanged(int,%20int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onExtractedSelectionChanged(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnExtractedTextClicked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExtractedTextClicked ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExtractedTextClicked();" />
      <MemberSignature Language="C#" Value="public virtual void OnExtractedTextClicked ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExtractedTextClicked() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnExtractedTextClicked" />
      <MemberSignature Language="F#" Value="abstract member OnExtractedTextClicked : unit -&gt; unit&#xA;override this.OnExtractedTextClicked : unit -&gt; unit" Usage="inputMethodService.OnExtractedTextClicked " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onExtractedTextClicked", "()V", "GetOnExtractedTextClickedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onExtractedTextClicked", "()V", "GetOnExtractedTextClickedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when the user has clicked on the extracted text view,
            when running in fullscreen mode.</summary>
        <remarks>
          <para>This is called when the user has clicked on the extracted text view,
            when running in fullscreen mode.  The default implementation hides
            the candidates view when this happens, but only if the extracted text
            editor has a vertical scroll bar because its text doesn't fit.
            Re-implement this to provide whatever behavior you want.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onExtractedTextClicked()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onExtractedTextClicked()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnExtractingInputChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExtractingInputChanged (ei As EditorInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExtractingInputChanged(Android::Views::InputMethods::EditorInfo ^ ei);" />
      <MemberSignature Language="C#" Value="public virtual void OnExtractingInputChanged (Android.Views.InputMethods.EditorInfo? ei);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExtractingInputChanged(class Android.Views.InputMethods.EditorInfo ei) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnExtractingInputChanged(Android.Views.InputMethods.EditorInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnExtractingInputChanged : Android.Views.InputMethods.EditorInfo -&gt; unit&#xA;override this.OnExtractingInputChanged : Android.Views.InputMethods.EditorInfo -&gt; unit" Usage="inputMethodService.OnExtractingInputChanged ei" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onExtractingInputChanged", "(Landroid/view/inputmethod/EditorInfo;)V", "GetOnExtractingInputChanged_Landroid_view_inputmethod_EditorInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onExtractingInputChanged", "(Landroid/view/inputmethod/EditorInfo;)V", "GetOnExtractingInputChanged_Landroid_view_inputmethod_EditorInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ei" Type="Android.Views.InputMethods.EditorInfo" />
      </Parameters>
      <Docs>
        <param name="ei">To be added.</param>
        <summary>This is called when, while currently displayed in extract mode, the
            current input target changes.</summary>
        <remarks>
          <para>This is called when, while currently displayed in extract mode, the
            current input target changes.  The default implementation will
            auto-hide the IME if the new target is not a full editor, since this
            can be a confusing experience for the user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onExtractingInputChanged(android.view.inputmethod.EditorInfo)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onExtractingInputChanged(android.view.inputmethod.EditorInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnExtractTextContextMenuItem">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnExtractTextContextMenuItem (id As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnExtractTextContextMenuItem(int id);" />
      <MemberSignature Language="C#" Value="public virtual bool OnExtractTextContextMenuItem (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnExtractTextContextMenuItem(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnExtractTextContextMenuItem(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnExtractTextContextMenuItem : int -&gt; bool&#xA;override this.OnExtractTextContextMenuItem : int -&gt; bool" Usage="inputMethodService.OnExtractTextContextMenuItem id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onExtractTextContextMenuItem", "(I)Z", "GetOnExtractTextContextMenuItem_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onExtractTextContextMenuItem", "(I)Z", "GetOnExtractTextContextMenuItem_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>This is called when the user has selected a context menu item from the
            extracted text view, when running in fullscreen mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>This is called when the user has selected a context menu item from the
            extracted text view, when running in fullscreen mode.  The default
            implementation sends this action to the current InputConnection's
            <c>InputConnection#performContextMenuAction(int)</c>, for it
            to be processed in underlying "real" editor.  Re-implement this to
            provide whatever behavior you want.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onExtractTextContextMenuItem(int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onExtractTextContextMenuItem(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishCandidatesView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnFinishCandidatesView (finishingInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnFinishCandidatesView(bool finishingInput);" />
      <MemberSignature Language="C#" Value="public virtual void OnFinishCandidatesView (bool finishingInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFinishCandidatesView(bool finishingInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnFinishCandidatesView(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnFinishCandidatesView : bool -&gt; unit&#xA;override this.OnFinishCandidatesView : bool -&gt; unit" Usage="inputMethodService.OnFinishCandidatesView finishingInput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFinishCandidatesView", "(Z)V", "GetOnFinishCandidatesView_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFinishCandidatesView", "(Z)V", "GetOnFinishCandidatesView_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finishingInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finishingInput">If true, <c>#onFinishInput</c> will be
            called immediately after.</param>
        <summary>Called when the candidates view is being hidden from the user.</summary>
        <remarks>
          <para>Called when the candidates view is being hidden from the user.  This will
            be called either prior to hiding the window, or prior to switching to
            another target for editing.</para>
          <para>The default
            implementation uses the InputConnection to clear any active composing
            text; you can override this (not calling the base class implementation)
            to perform whatever behavior you would like.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onFinishCandidatesView(boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onFinishCandidatesView(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishInput">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnFinishInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnFinishInput();" />
      <MemberSignature Language="C#" Value="public virtual void OnFinishInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFinishInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnFinishInput" />
      <MemberSignature Language="F#" Value="abstract member OnFinishInput : unit -&gt; unit&#xA;override this.OnFinishInput : unit -&gt; unit" Usage="inputMethodService.OnFinishInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFinishInput", "()V", "GetOnFinishInputHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFinishInput", "()V", "GetOnFinishInputHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called to inform the input method that text input has finished in
            the last editor.</summary>
        <remarks>
          <para>Called to inform the input method that text input has finished in
            the last editor.  At this point there may be a call to
            <c>#onStartInput(EditorInfo, boolean)</c> to perform input in a
            new editor, or the input method may be left idle.  This method is
            &lt;em&gt;not&lt;/em&gt; called when input restarts in the same editor.</para>
          <para>The default
            implementation uses the InputConnection to clear any active composing
            text; you can override this (not calling the base class implementation)
            to perform whatever behavior you would like.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onFinishInput()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onFinishInput()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishInputView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnFinishInputView (finishingInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnFinishInputView(bool finishingInput);" />
      <MemberSignature Language="C#" Value="public virtual void OnFinishInputView (bool finishingInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFinishInputView(bool finishingInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnFinishInputView(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnFinishInputView : bool -&gt; unit&#xA;override this.OnFinishInputView : bool -&gt; unit" Usage="inputMethodService.OnFinishInputView finishingInput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFinishInputView", "(Z)V", "GetOnFinishInputView_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFinishInputView", "(Z)V", "GetOnFinishInputView_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finishingInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finishingInput">If true, <c>#onFinishInput</c> will be
            called immediately after.</param>
        <summary>Called when the input view is being hidden from the user.</summary>
        <remarks>
          <para>Called when the input view is being hidden from the user.  This will
            be called either prior to hiding the window, or prior to switching to
            another target for editing.</para>
          <para>The default
            implementation uses the InputConnection to clear any active composing
            text; you can override this (not calling the base class implementation)
            to perform whatever behavior you would like.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onFinishInputView(boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onFinishInputView(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishStylusHandwriting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnFinishStylusHandwriting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnFinishStylusHandwriting();" />
      <MemberSignature Language="C#" Value="public virtual void OnFinishStylusHandwriting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFinishStylusHandwriting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnFinishStylusHandwriting" />
      <MemberSignature Language="F#" Value="abstract member OnFinishStylusHandwriting : unit -&gt; unit&#xA;override this.OnFinishStylusHandwriting : unit -&gt; unit" Usage="inputMethodService.OnFinishStylusHandwriting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFinishStylusHandwriting", "()V", "GetOnFinishStylusHandwritingHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFinishStylusHandwriting", "()V", "GetOnFinishStylusHandwritingHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the current stylus handwriting session was finished (either by the system or
            via <c>#finishStylusHandwriting()</c>.</summary>
        <remarks>
          <para>Called when the current stylus handwriting session was finished (either by the system or
            via <c>#finishStylusHandwriting()</c>.
            
            When this is called, the ink window has been made invisible, and the IME no longer
            intercepts handwriting-related <c>MotionEvent</c>s.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onFinishStylusHandwriting()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onFinishStylusHandwriting()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitializeInterface">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnInitializeInterface ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnInitializeInterface();" />
      <MemberSignature Language="C#" Value="public virtual void OnInitializeInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeInterface() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnInitializeInterface" />
      <MemberSignature Language="F#" Value="abstract member OnInitializeInterface : unit -&gt; unit&#xA;override this.OnInitializeInterface : unit -&gt; unit" Usage="inputMethodService.OnInitializeInterface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onInitializeInterface", "()V", "GetOnInitializeInterfaceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onInitializeInterface", "()V", "GetOnInitializeInterfaceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is a hook that subclasses can use to perform initialization of
            their interface.</summary>
        <remarks>
          <para>This is a hook that subclasses can use to perform initialization of
            their interface.  It is called for you prior to any of your UI objects
            being created, both after the service is first created and after a
            configuration change happens.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onInitializeInterface()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onInitializeInterface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnInlineSuggestionsResponse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnInlineSuggestionsResponse (response As InlineSuggestionsResponse) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnInlineSuggestionsResponse(Android::Views::InputMethods::InlineSuggestionsResponse ^ response);" />
      <MemberSignature Language="C#" Value="public virtual bool OnInlineSuggestionsResponse (Android.Views.InputMethods.InlineSuggestionsResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnInlineSuggestionsResponse(class Android.Views.InputMethods.InlineSuggestionsResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnInlineSuggestionsResponse(Android.Views.InputMethods.InlineSuggestionsResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnInlineSuggestionsResponse : Android.Views.InputMethods.InlineSuggestionsResponse -&gt; bool&#xA;override this.OnInlineSuggestionsResponse : Android.Views.InputMethods.InlineSuggestionsResponse -&gt; bool" Usage="inputMethodService.OnInlineSuggestionsResponse response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onInlineSuggestionsResponse", "(Landroid/view/inputmethod/InlineSuggestionsResponse;)Z", "GetOnInlineSuggestionsResponse_Landroid_view_inputmethod_InlineSuggestionsResponse_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onInlineSuggestionsResponse", "(Landroid/view/inputmethod/InlineSuggestionsResponse;)Z", "GetOnInlineSuggestionsResponse_Landroid_view_inputmethod_InlineSuggestionsResponse_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Views.InputMethods.InlineSuggestionsResponse" />
      </Parameters>
      <Docs>
        <param name="response">
          <c>InlineSuggestionsResponse</c> passed back by Autofill.</param>
        <summary>Called when Autofill responds back with <c>InlineSuggestionsResponse</c> containing
            inline suggestions.</summary>
        <returns>Whether the IME will use and render  the inline suggestions.</returns>
        <remarks>
          <para>Called when Autofill responds back with <c>InlineSuggestionsResponse</c> containing
            inline suggestions.</para>
          <para>Should be implemented by subclasses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onInlineSuggestionsResponse(android.view.inputmethod.InlineSuggestionsResponse)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onInlineSuggestionsResponse(android.view.inputmethod.InlineSuggestionsResponse)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnKeyDown (keyCode As Keycode, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool OnKeyDown(Android::Views::Keycode keyCode, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public override bool OnKeyDown (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool OnKeyDown(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnKeyDown(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="inputMethodService.OnKeyDown (keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyDown", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyDown_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyDown", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyDown_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="keyCode">The value in <c>event.getKeyCode()</c></param>
        <param name="event">Description of the key event</param>
        <summary>Called back when a <c>KeyEvent</c> is forwarded from the target application.</summary>
        <returns>
          <c>true</c> if the event is consumed by the IME and the application no longer needs
                    to consume it.  Return <c>false</c> when the event should be handled as if the IME
                    had not seen the event at all.</returns>
        <remarks>
          <para>Called back when a <c>KeyEvent</c> is forwarded from the target application.</para>
          <para>The default implementation intercepts <c>KeyEvent#KEYCODE_BACK</c> if the IME is
            currently shown , to possibly hide it when the key goes up (if not canceled or long pressed).
            In addition, in fullscreen mode only, it will consume DPAD movement events to move the cursor
            in the extracted text view, not allowing them to perform navigation in the underlying
            application.</para>
          <para>The default implementation does not take flags specified to
            <c>#setBackDisposition(int)</c> into account, even on API version
            <c>android.os.Build.VERSION_CODES#P</c> and later devices.  IME developers are responsible
            for making sure that their special handling for <c>KeyEvent#KEYCODE_BACK</c> are consistent
            with the flag they specified to <c>#setBackDisposition(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onKeyDown(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onKeyDown(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyLongPress">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnKeyLongPress (keyCode As Keycode, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool OnKeyLongPress(Android::Views::Keycode keyCode, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public override bool OnKeyLongPress (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool OnKeyLongPress(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnKeyLongPress(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="override this.OnKeyLongPress : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="inputMethodService.OnKeyLongPress (keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyLongPress_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyLongPress_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Default implementation of <c>KeyEvent.Callback#onKeyLongPress(int, KeyEvent)
            KeyEvent.Callback.onKeyLongPress()</c>: always returns false (doesn't handle
            the event).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Default implementation of <c>KeyEvent.Callback#onKeyLongPress(int, KeyEvent)
            KeyEvent.Callback.onKeyLongPress()</c>: always returns false (doesn't handle
            the event).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onKeyLongPress(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onKeyLongPress(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyMultiple">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnKeyMultiple (keyCode As Keycode, count As Integer, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool OnKeyMultiple(Android::Views::Keycode keyCode, int count, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public override bool OnKeyMultiple (Android.Views.Keycode keyCode, int count, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool OnKeyMultiple(valuetype Android.Views.Keycode keyCode, int32 count, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnKeyMultiple(Android.Views.Keycode,System.Int32,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="override this.OnKeyMultiple : Android.Views.Keycode * int * Android.Views.KeyEvent -&gt; bool" Usage="inputMethodService.OnKeyMultiple (keyCode, count, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", "GetOnKeyMultiple_IILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", "GetOnKeyMultiple_IILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <param name="count">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Override this to intercept special key multiple events before they are
            processed by the
            application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Override this to intercept special key multiple events before they are
            processed by the
            application.  If you return true, the application will not itself
            process the event.  If you return false, the normal application processing
            will occur as if the IME had not seen the event at all.</para>
          <para>The default implementation always returns false, except when
            in fullscreen mode, where it will consume DPAD movement
            events to move the cursor in the extracted text view, not allowing
            them to perform navigation in the underlying application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onKeyMultiple(int,%20int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onKeyMultiple(int, int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnKeyUp (keyCode As Keycode, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool OnKeyUp(Android::Views::Keycode keyCode, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public override bool OnKeyUp (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool OnKeyUp(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnKeyUp(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="inputMethodService.OnKeyUp (keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyUp", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyUp_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyUp", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyUp_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Override this to intercept key up events before they are processed by the
            application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Override this to intercept key up events before they are processed by the
            application.  If you return true, the application will not itself
            process the event.  If you return false, the normal application processing
            will occur as if the IME had not seen the event at all.</para>
          <para>The default implementation intercepts <c>KeyEvent#KEYCODE_BACK
            KeyEvent.KEYCODE_BACK</c> to hide the current IME UI if it is shown.  In
            addition, in fullscreen mode only, it will consume DPAD movement
            events to move the cursor in the extracted text view, not allowing
            them to perform navigation in the underlying application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onKeyUp(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onKeyUp(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnPrepareStylusHandwriting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPrepareStylusHandwriting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPrepareStylusHandwriting();" />
      <MemberSignature Language="C#" Value="public virtual void OnPrepareStylusHandwriting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPrepareStylusHandwriting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnPrepareStylusHandwriting" />
      <MemberSignature Language="F#" Value="abstract member OnPrepareStylusHandwriting : unit -&gt; unit&#xA;override this.OnPrepareStylusHandwriting : unit -&gt; unit" Usage="inputMethodService.OnPrepareStylusHandwriting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPrepareStylusHandwriting", "()V", "GetOnPrepareStylusHandwritingHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPrepareStylusHandwriting", "()V", "GetOnPrepareStylusHandwritingHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called to prepare stylus handwriting.</summary>
        <remarks>
          <para>Called to prepare stylus handwriting.
            The system calls this before the <c>#onStartStylusHandwriting</c> request.</para>
          <para>Note: The system tries to call this as early as possible, when it detects that
            handwriting stylus input is imminent. However, that a subsequent call to
            <c>#onStartStylusHandwriting</c> actually happens is not guaranteed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onPrepareStylusHandwriting()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onPrepareStylusHandwriting()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowInputRequested">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnShowInputRequested (flags As ShowFlags, configChange As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnShowInputRequested(Android::Views::InputMethods::ShowFlags flags, bool configChange);" />
      <MemberSignature Language="C#" Value="public virtual bool OnShowInputRequested (Android.Views.InputMethods.ShowFlags flags, bool configChange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnShowInputRequested(valuetype Android.Views.InputMethods.ShowFlags flags, bool configChange) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnShowInputRequested(Android.Views.InputMethods.ShowFlags,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnShowInputRequested : Android.Views.InputMethods.ShowFlags * bool -&gt; bool&#xA;override this.OnShowInputRequested : Android.Views.InputMethods.ShowFlags * bool -&gt; bool" Usage="inputMethodService.OnShowInputRequested (flags, configChange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onShowInputRequested", "(IZ)Z", "GetOnShowInputRequested_IZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onShowInputRequested", "(IZ)Z", "GetOnShowInputRequested_IZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.InputMethods.ShowFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="configChange" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flags">Provides additional information about the show request,
            as per <c>InputMethod#showSoftInput InputMethod.showSoftInput()</c>.</param>
        <param name="configChange">This is true if we are re-showing due to a
            configuration change.</param>
        <summary>The system has decided that it may be time to show your input method.</summary>
        <returns>Returns true to indicate that the window should be shown.</returns>
        <remarks>
          <para>The system has decided that it may be time to show your input method.
            This is called due to a corresponding call to your
            <c>InputMethod#showSoftInput InputMethod.showSoftInput()</c>
            method.  The default implementation uses
            <c>#onEvaluateInputViewShown()</c>, <c>#onEvaluateFullscreenMode()</c>,
            and the current configuration to decide whether the input view should
            be shown at this point.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onShowInputRequested(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onShowInputRequested(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnStartCandidatesView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnStartCandidatesView (editorInfo As EditorInfo, restarting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnStartCandidatesView(Android::Views::InputMethods::EditorInfo ^ editorInfo, bool restarting);" />
      <MemberSignature Language="C#" Value="public virtual void OnStartCandidatesView (Android.Views.InputMethods.EditorInfo? editorInfo, bool restarting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStartCandidatesView(class Android.Views.InputMethods.EditorInfo editorInfo, bool restarting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnStartCandidatesView(Android.Views.InputMethods.EditorInfo,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnStartCandidatesView : Android.Views.InputMethods.EditorInfo * bool -&gt; unit&#xA;override this.OnStartCandidatesView : Android.Views.InputMethods.EditorInfo * bool -&gt; unit" Usage="inputMethodService.OnStartCandidatesView (editorInfo, restarting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStartCandidatesView", "(Landroid/view/inputmethod/EditorInfo;Z)V", "GetOnStartCandidatesView_Landroid_view_inputmethod_EditorInfo_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStartCandidatesView", "(Landroid/view/inputmethod/EditorInfo;Z)V", "GetOnStartCandidatesView_Landroid_view_inputmethod_EditorInfo_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorInfo" Type="Android.Views.InputMethods.EditorInfo" />
        <Parameter Name="restarting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="editorInfo">Description of the type of text being edited.</param>
        <param name="restarting">Set to true if we are restarting input on the
            same text field as before.</param>
        <summary>Called when only the candidates view has been shown for showing
            processing as the user enters text through a hard keyboard.</summary>
        <remarks>
          <para>Called when only the candidates view has been shown for showing
            processing as the user enters text through a hard keyboard.
            This will always be called after <c>#onStartInput</c>,
            allowing you to do your general setup there and just view-specific
            setup here.  You are guaranteed that <c>#onCreateCandidatesView()</c>
            will have been called some time before this function is called.</para>
          <para>Note that this will &lt;em&gt;not&lt;/em&gt; be called when the input method
            is running in full editing mode, and thus receiving
            <c>#onStartInputView</c> to initiate that operation.  This is only
            for the case when candidates are being shown while the input method
            editor is hidden but wants to show its candidates UI as text is
            entered through some other mechanism.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onStartCandidatesView(android.view.inputmethod.EditorInfo,%20boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onStartCandidatesView(android.view.inputmethod.EditorInfo, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnStartInput">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnStartInput (attribute As EditorInfo, restarting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnStartInput(Android::Views::InputMethods::EditorInfo ^ attribute, bool restarting);" />
      <MemberSignature Language="C#" Value="public virtual void OnStartInput (Android.Views.InputMethods.EditorInfo? attribute, bool restarting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStartInput(class Android.Views.InputMethods.EditorInfo attribute, bool restarting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnStartInput(Android.Views.InputMethods.EditorInfo,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnStartInput : Android.Views.InputMethods.EditorInfo * bool -&gt; unit&#xA;override this.OnStartInput : Android.Views.InputMethods.EditorInfo * bool -&gt; unit" Usage="inputMethodService.OnStartInput (attribute, restarting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStartInput", "(Landroid/view/inputmethod/EditorInfo;Z)V", "GetOnStartInput_Landroid_view_inputmethod_EditorInfo_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStartInput", "(Landroid/view/inputmethod/EditorInfo;Z)V", "GetOnStartInput_Landroid_view_inputmethod_EditorInfo_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="Android.Views.InputMethods.EditorInfo" />
        <Parameter Name="restarting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attribute">The attributes of the editor that input is starting
            in.</param>
        <param name="restarting">Set to true if input is restarting in the same
            editor such as because the application has changed the text in
            the editor.  Otherwise will be false, indicating this is a new
            session with the editor.</param>
        <summary>Called to inform the input method that text input has started in an
            editor.</summary>
        <remarks>
          <para>Called to inform the input method that text input has started in an
            editor.  You should use this callback to initialize the state of your
            input to match the state of the editor given to it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onStartInput(android.view.inputmethod.EditorInfo,%20boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onStartInput(android.view.inputmethod.EditorInfo, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnStartInputView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnStartInputView (editorInfo As EditorInfo, restarting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnStartInputView(Android::Views::InputMethods::EditorInfo ^ editorInfo, bool restarting);" />
      <MemberSignature Language="C#" Value="public virtual void OnStartInputView (Android.Views.InputMethods.EditorInfo? editorInfo, bool restarting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStartInputView(class Android.Views.InputMethods.EditorInfo editorInfo, bool restarting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnStartInputView(Android.Views.InputMethods.EditorInfo,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnStartInputView : Android.Views.InputMethods.EditorInfo * bool -&gt; unit&#xA;override this.OnStartInputView : Android.Views.InputMethods.EditorInfo * bool -&gt; unit" Usage="inputMethodService.OnStartInputView (editorInfo, restarting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStartInputView", "(Landroid/view/inputmethod/EditorInfo;Z)V", "GetOnStartInputView_Landroid_view_inputmethod_EditorInfo_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStartInputView", "(Landroid/view/inputmethod/EditorInfo;Z)V", "GetOnStartInputView_Landroid_view_inputmethod_EditorInfo_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorInfo" Type="Android.Views.InputMethods.EditorInfo" />
        <Parameter Name="restarting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="editorInfo">Description of the type of text being edited.</param>
        <param name="restarting">Set to true if we are restarting input on the
            same text field as before.</param>
        <summary>Called when the input view is being shown and input has started on
            a new editor.</summary>
        <remarks>
          <para>Called when the input view is being shown and input has started on
            a new editor.  This will always be called after <c>#onStartInput</c>,
            allowing you to do your general setup there and just view-specific
            setup here.  You are guaranteed that <c>#onCreateInputView()</c> will
            have been called some time before this function is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onStartInputView(android.view.inputmethod.EditorInfo,%20boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onStartInputView(android.view.inputmethod.EditorInfo, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnStartStylusHandwriting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnStartStylusHandwriting () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnStartStylusHandwriting();" />
      <MemberSignature Language="C#" Value="public virtual bool OnStartStylusHandwriting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnStartStylusHandwriting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnStartStylusHandwriting" />
      <MemberSignature Language="F#" Value="abstract member OnStartStylusHandwriting : unit -&gt; bool&#xA;override this.OnStartStylusHandwriting : unit -&gt; bool" Usage="inputMethodService.OnStartStylusHandwriting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStartStylusHandwriting", "()Z", "GetOnStartStylusHandwritingHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStartStylusHandwriting", "()Z", "GetOnStartStylusHandwritingHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when an app requests stylus handwriting
            <c>InputMethodManager#startStylusHandwriting(View)</c>.</summary>
        <returns>
          <c>true</c> if IME can honor the request, <c>false</c> if IME cannot at this time.</returns>
        <remarks>
          <para>Called when an app requests stylus handwriting
            <c>InputMethodManager#startStylusHandwriting(View)</c>.
            
            This will always be preceded by <c>#onStartInput(EditorInfo, boolean)</c> for the
            <c>EditorInfo</c> and <c>InputConnection</c> for which stylus handwriting is being
            requested.
            
            If the IME supports handwriting for the current input, it should return <c>true</c>,
            ensure its inking views are attached to the <c>#getStylusHandwritingWindow()</c>, and handle
            stylus input received from <c>#onStylusHandwritingMotionEvent(MotionEvent)</c> on the
            <c>#getStylusHandwritingWindow()</c> via <c>#getCurrentInputConnection()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onStartStylusHandwriting()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onStartStylusHandwriting()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusHandwritingMotionEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnStylusHandwritingMotionEvent (motionEvent As MotionEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnStylusHandwritingMotionEvent(Android::Views::MotionEvent ^ motionEvent);" />
      <MemberSignature Language="C#" Value="public virtual void OnStylusHandwritingMotionEvent (Android.Views.MotionEvent motionEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStylusHandwritingMotionEvent(class Android.Views.MotionEvent motionEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnStylusHandwritingMotionEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnStylusHandwritingMotionEvent : Android.Views.MotionEvent -&gt; unit&#xA;override this.OnStylusHandwritingMotionEvent : Android.Views.MotionEvent -&gt; unit" Usage="inputMethodService.OnStylusHandwritingMotionEvent motionEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStylusHandwritingMotionEvent", "(Landroid/view/MotionEvent;)V", "GetOnStylusHandwritingMotionEvent_Landroid_view_MotionEvent_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStylusHandwritingMotionEvent", "(Landroid/view/MotionEvent;)V", "GetOnStylusHandwritingMotionEvent_Landroid_view_MotionEvent_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="motionEvent" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="motionEvent">
          <c>MotionEvent</c> from stylus.</param>
        <summary>Called after <c>#onStartStylusHandwriting()</c> returns <c>true</c> for every Stylus
            <c>MotionEvent</c>.</summary>
        <remarks>
          <para>Called after <c>#onStartStylusHandwriting()</c> returns <c>true</c> for every Stylus
            <c>MotionEvent</c>.
            By default, this method forwards all <c>MotionEvent</c>s to the
            <c>#getStylusHandwritingWindow()</c> once its visible, however IME can override it to
            receive them sooner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onStylusHandwritingMotionEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onStylusHandwritingMotionEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnbindInput">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUnbindInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUnbindInput();" />
      <MemberSignature Language="C#" Value="public virtual void OnUnbindInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUnbindInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnUnbindInput" />
      <MemberSignature Language="F#" Value="abstract member OnUnbindInput : unit -&gt; unit&#xA;override this.OnUnbindInput : unit -&gt; unit" Usage="inputMethodService.OnUnbindInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUnbindInput", "()V", "GetOnUnbindInputHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUnbindInput", "()V", "GetOnUnbindInputHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the previous bound client is no longer associated
            with the input method.</summary>
        <remarks>
          <para>Called when the previous bound client is no longer associated
            with the input method.  After returning <c>#getCurrentInputBinding</c>
            and <c>#getCurrentInputConnection</c> will no longer return
            valid objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onUnbindInput()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onUnbindInput()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCursor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUpdateCursor (newCursor As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUpdateCursor(Android::Graphics::Rect ^ newCursor);" />
      <MemberSignature Language="C#" Value="public virtual void OnUpdateCursor (Android.Graphics.Rect? newCursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUpdateCursor(class Android.Graphics.Rect newCursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnUpdateCursor(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCursor : Android.Graphics.Rect -&gt; unit&#xA;override this.OnUpdateCursor : Android.Graphics.Rect -&gt; unit" Usage="inputMethodService.OnUpdateCursor newCursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUpdateCursor", "(Landroid/graphics/Rect;)V", "GetOnUpdateCursor_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUpdateCursor", "(Landroid/graphics/Rect;)V", "GetOnUpdateCursor_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCursor" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="newCursor">To be added.</param>
        <summary>Called when the application has reported a new location of its text
            cursor.</summary>
        <remarks>
          <para>Called when the application has reported a new location of its text
            cursor.  This is only called if explicitly requested by the input method.
            The default implementation does nothing.</para>
          <para>This member is deprecated. Use <c>#onUpdateCursorAnchorInfo(CursorAnchorInfo)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onUpdateCursor(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onUpdateCursor(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCursorAnchorInfo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUpdateCursorAnchorInfo (cursorAnchorInfo As CursorAnchorInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUpdateCursorAnchorInfo(Android::Views::InputMethods::CursorAnchorInfo ^ cursorAnchorInfo);" />
      <MemberSignature Language="C#" Value="public virtual void OnUpdateCursorAnchorInfo (Android.Views.InputMethods.CursorAnchorInfo? cursorAnchorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUpdateCursorAnchorInfo(class Android.Views.InputMethods.CursorAnchorInfo cursorAnchorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnUpdateCursorAnchorInfo(Android.Views.InputMethods.CursorAnchorInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCursorAnchorInfo : Android.Views.InputMethods.CursorAnchorInfo -&gt; unit&#xA;override this.OnUpdateCursorAnchorInfo : Android.Views.InputMethods.CursorAnchorInfo -&gt; unit" Usage="inputMethodService.OnUpdateCursorAnchorInfo cursorAnchorInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUpdateCursorAnchorInfo", "(Landroid/view/inputmethod/CursorAnchorInfo;)V", "GetOnUpdateCursorAnchorInfo_Landroid_view_inputmethod_CursorAnchorInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUpdateCursorAnchorInfo", "(Landroid/view/inputmethod/CursorAnchorInfo;)V", "GetOnUpdateCursorAnchorInfo_Landroid_view_inputmethod_CursorAnchorInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorAnchorInfo" Type="Android.Views.InputMethods.CursorAnchorInfo" />
      </Parameters>
      <Docs>
        <param name="cursorAnchorInfo">The positional information of the text insertion point and the
            composition string.</param>
        <summary>Called when the application has reported a new location of its text insertion point and
            characters in the composition string.</summary>
        <remarks>
          <para>Called when the application has reported a new location of its text insertion point and
            characters in the composition string.  This is only called if explicitly requested by the
            input method. The default implementation does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateEditorToolType">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUpdateEditorToolType (toolType As MotionEventToolType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUpdateEditorToolType(Android::Views::MotionEventToolType toolType);" />
      <MemberSignature Language="C#" Value="public virtual void OnUpdateEditorToolType (Android.Views.MotionEventToolType toolType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUpdateEditorToolType(valuetype Android.Views.MotionEventToolType toolType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnUpdateEditorToolType(Android.Views.MotionEventToolType)" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateEditorToolType : Android.Views.MotionEventToolType -&gt; unit&#xA;override this.OnUpdateEditorToolType : Android.Views.MotionEventToolType -&gt; unit" Usage="inputMethodService.OnUpdateEditorToolType toolType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUpdateEditorToolType", "(I)V", "GetOnUpdateEditorToolType_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUpdateEditorToolType", "(I)V", "GetOnUpdateEditorToolType_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolType" Type="Android.Views.MotionEventToolType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="toolType">what <c>MotionEvent#getToolType(int)</c> was used to click on editor.</param>
        <summary>Called when the user tapped or clicked an <c>android.widget.Editor</c>.</summary>
        <remarks>
          <para>Called when the user tapped or clicked an <c>android.widget.Editor</c>.
            This can be useful when IME makes a decision of showing Virtual keyboard based on what
            <c>MotionEvent#getToolType(int)</c> was used to click the editor.
            e.g. when toolType is <c>MotionEvent#TOOL_TYPE_STYLUS</c>, IME may choose to show a
            companion widget instead of normal virtual keyboard.</para>
          <para>This method is called after <c>#onStartInput(EditorInfo, boolean)</c> and before
            <c>#onStartInputView(EditorInfo, boolean)</c> when editor was clicked with a known tool
            type.</para>
          <para>Default implementation does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onUpdateEditorToolType(int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onUpdateEditorToolType(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateExtractedText">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUpdateExtractedText (token As Integer, text As ExtractedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUpdateExtractedText(int token, Android::Views::InputMethods::ExtractedText ^ text);" />
      <MemberSignature Language="C#" Value="public virtual void OnUpdateExtractedText (int token, Android.Views.InputMethods.ExtractedText? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUpdateExtractedText(int32 token, class Android.Views.InputMethods.ExtractedText text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnUpdateExtractedText(System.Int32,Android.Views.InputMethods.ExtractedText)" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateExtractedText : int * Android.Views.InputMethods.ExtractedText -&gt; unit&#xA;override this.OnUpdateExtractedText : int * Android.Views.InputMethods.ExtractedText -&gt; unit" Usage="inputMethodService.OnUpdateExtractedText (token, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUpdateExtractedText", "(ILandroid/view/inputmethod/ExtractedText;)V", "GetOnUpdateExtractedText_ILandroid_view_inputmethod_ExtractedText_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUpdateExtractedText", "(ILandroid/view/inputmethod/ExtractedText;)V", "GetOnUpdateExtractedText_ILandroid_view_inputmethod_ExtractedText_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
        <Parameter Name="text" Type="Android.Views.InputMethods.ExtractedText" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="text">To be added.</param>
        <summary>Called when the application has reported new extracted text to be shown
            due to changes in its current text state.</summary>
        <remarks>
          <para>Called when the application has reported new extracted text to be shown
            due to changes in its current text state.  The default implementation
            here places the new text in the extract edit text, when the input
            method is running in fullscreen mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onUpdateExtractedText(int,%20android.view.inputmethod.ExtractedText)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onUpdateExtractedText(int, android.view.inputmethod.ExtractedText)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateExtractingViews">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUpdateExtractingViews (ei As EditorInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUpdateExtractingViews(Android::Views::InputMethods::EditorInfo ^ ei);" />
      <MemberSignature Language="C#" Value="public virtual void OnUpdateExtractingViews (Android.Views.InputMethods.EditorInfo? ei);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUpdateExtractingViews(class Android.Views.InputMethods.EditorInfo ei) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnUpdateExtractingViews(Android.Views.InputMethods.EditorInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateExtractingViews : Android.Views.InputMethods.EditorInfo -&gt; unit&#xA;override this.OnUpdateExtractingViews : Android.Views.InputMethods.EditorInfo -&gt; unit" Usage="inputMethodService.OnUpdateExtractingViews ei" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUpdateExtractingViews", "(Landroid/view/inputmethod/EditorInfo;)V", "GetOnUpdateExtractingViews_Landroid_view_inputmethod_EditorInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUpdateExtractingViews", "(Landroid/view/inputmethod/EditorInfo;)V", "GetOnUpdateExtractingViews_Landroid_view_inputmethod_EditorInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ei" Type="Android.Views.InputMethods.EditorInfo" />
      </Parameters>
      <Docs>
        <param name="ei">To be added.</param>
        <summary>Called when the fullscreen-mode extracting editor info has changed,
            to update the state of its UI such as the action buttons shown.</summary>
        <remarks>
          <para>Called when the fullscreen-mode extracting editor info has changed,
            to update the state of its UI such as the action buttons shown.
            You do not need to deal with this if you are using the standard
            full screen extract UI.  If replacing it, you will need to re-implement
            this to put the appropriate action button in your own UI and handle it,
            and perform any other changes.</para>
          <para>The standard implementation turns on or off its accessory area
            depending on whether there is an action button, and hides or shows
            the entire extract area depending on whether it makes sense for the
            current editor.  In particular, a <c>InputType#TYPE_NULL</c> or 
            <c>InputType#TYPE_TEXT_VARIATION_FILTER</c> input type will turn off the
            extract area since there is no text to be shown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onUpdateExtractingViews(android.view.inputmethod.EditorInfo)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onUpdateExtractingViews(android.view.inputmethod.EditorInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateExtractingVisibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUpdateExtractingVisibility (ei As EditorInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUpdateExtractingVisibility(Android::Views::InputMethods::EditorInfo ^ ei);" />
      <MemberSignature Language="C#" Value="public virtual void OnUpdateExtractingVisibility (Android.Views.InputMethods.EditorInfo? ei);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUpdateExtractingVisibility(class Android.Views.InputMethods.EditorInfo ei) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnUpdateExtractingVisibility(Android.Views.InputMethods.EditorInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateExtractingVisibility : Android.Views.InputMethods.EditorInfo -&gt; unit&#xA;override this.OnUpdateExtractingVisibility : Android.Views.InputMethods.EditorInfo -&gt; unit" Usage="inputMethodService.OnUpdateExtractingVisibility ei" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUpdateExtractingVisibility", "(Landroid/view/inputmethod/EditorInfo;)V", "GetOnUpdateExtractingVisibility_Landroid_view_inputmethod_EditorInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUpdateExtractingVisibility", "(Landroid/view/inputmethod/EditorInfo;)V", "GetOnUpdateExtractingVisibility_Landroid_view_inputmethod_EditorInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ei" Type="Android.Views.InputMethods.EditorInfo" />
      </Parameters>
      <Docs>
        <param name="ei">To be added.</param>
        <summary>Called when the fullscreen-mode extracting editor info has changed,
            to determine whether the extracting (extract text and candidates) portion
            of the UI should be shown.</summary>
        <remarks>
          <para>Called when the fullscreen-mode extracting editor info has changed,
            to determine whether the extracting (extract text and candidates) portion
            of the UI should be shown.  The standard implementation hides or shows
            the extract area depending on whether it makes sense for the
            current editor.  In particular, a <c>InputType#TYPE_NULL</c>
            input type or <c>EditorInfo#IME_FLAG_NO_EXTRACT_UI</c> flag will
            turn off the extract area since there is no text to be shown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateSelection">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUpdateSelection (oldSelStart As Integer, oldSelEnd As Integer, newSelStart As Integer, newSelEnd As Integer, candidatesStart As Integer, candidatesEnd As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUpdateSelection(int oldSelStart, int oldSelEnd, int newSelStart, int newSelEnd, int candidatesStart, int candidatesEnd);" />
      <MemberSignature Language="C#" Value="public virtual void OnUpdateSelection (int oldSelStart, int oldSelEnd, int newSelStart, int newSelEnd, int candidatesStart, int candidatesEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUpdateSelection(int32 oldSelStart, int32 oldSelEnd, int32 newSelStart, int32 newSelEnd, int32 candidatesStart, int32 candidatesEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnUpdateSelection(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateSelection : int * int * int * int * int * int -&gt; unit&#xA;override this.OnUpdateSelection : int * int * int * int * int * int -&gt; unit" Usage="inputMethodService.OnUpdateSelection (oldSelStart, oldSelEnd, newSelStart, newSelEnd, candidatesStart, candidatesEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUpdateSelection", "(IIIIII)V", "GetOnUpdateSelection_IIIIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUpdateSelection", "(IIIIII)V", "GetOnUpdateSelection_IIIIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldSelStart" Type="System.Int32" />
        <Parameter Name="oldSelEnd" Type="System.Int32" />
        <Parameter Name="newSelStart" Type="System.Int32" />
        <Parameter Name="newSelEnd" Type="System.Int32" />
        <Parameter Name="candidatesStart" Type="System.Int32" />
        <Parameter Name="candidatesEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldSelStart">To be added.</param>
        <param name="oldSelEnd">To be added.</param>
        <param name="newSelStart">To be added.</param>
        <param name="newSelEnd">To be added.</param>
        <param name="candidatesStart">To be added.</param>
        <param name="candidatesEnd">To be added.</param>
        <summary>Called when the application has reported a new selection region of
            the text.</summary>
        <remarks>
          <para>Called when the application has reported a new selection region of
            the text.  This is called whether or not the input method has requested
            extracted text updates, although if so it will not receive this call
            if the extracted text has changed as well.</para>
          <para>The default implementation takes care of updating the cursor in
            the extract text, if it is being shown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onUpdateSelection(int,%20int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onUpdateSelection(int, int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnViewClicked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnViewClicked (focusChanged As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnViewClicked(bool focusChanged);" />
      <MemberSignature Language="C#" Value="public virtual void OnViewClicked (bool focusChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnViewClicked(bool focusChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnViewClicked(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnViewClicked : bool -&gt; unit&#xA;override this.OnViewClicked : bool -&gt; unit" Usage="inputMethodService.OnViewClicked focusChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onViewClicked", "(Z)V", "GetOnViewClicked_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onViewClicked", "(Z)V", "GetOnViewClicked_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="focusChanged">true if the user changed the focused view by this click.</param>
        <summary>Called when the user tapped or clicked a text view.</summary>
        <remarks>
          <para>Called when the user tapped or clicked a text view.
            IMEs can't rely on this method being called because this was not part of the original IME
            protocol, so applications with custom text editing written before this method appeared will
            not call to inform the IME of this interaction.</para>
          <para>This member is deprecated. The method may not be called for composite <c>View</c> that works as a giant
                        "Canvas", which can host its own UI hierarchy and sub focus state.
                        <c>android.webkit.WebView</c> is a good example. Application / IME developers
                        should not rely on this method. If your goal is just being notified when an
                        on-going input is interrupted, simply monitor <c>#onFinishInput()</c>.
                        If your goal is to know what <c>MotionEvent#getToolType(int)</c> clicked on
                        editor, use <c>#onUpdateEditorToolType(int)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onViewClicked(boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onViewClicked(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowHidden">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnWindowHidden ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnWindowHidden();" />
      <MemberSignature Language="C#" Value="public virtual void OnWindowHidden ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowHidden() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnWindowHidden" />
      <MemberSignature Language="F#" Value="abstract member OnWindowHidden : unit -&gt; unit&#xA;override this.OnWindowHidden : unit -&gt; unit" Usage="inputMethodService.OnWindowHidden " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowHidden", "()V", "GetOnWindowHiddenHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowHidden", "()V", "GetOnWindowHiddenHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the input method window has been hidden from the user,
            after previously being visible.</summary>
        <remarks>
          <para>Called when the input method window has been hidden from the user,
            after previously being visible.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onWindowHidden()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onWindowHidden()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowShown">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnWindowShown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnWindowShown();" />
      <MemberSignature Language="C#" Value="public virtual void OnWindowShown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowShown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.OnWindowShown" />
      <MemberSignature Language="F#" Value="abstract member OnWindowShown : unit -&gt; unit&#xA;override this.OnWindowShown : unit -&gt; unit" Usage="inputMethodService.OnWindowShown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowShown", "()V", "GetOnWindowShownHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowShown", "()V", "GetOnWindowShownHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called immediately before the input method window is shown to the user.</summary>
        <remarks>
          <para>Called immediately before the input method window is shown to the user.
            You could override this to prepare for the window to be shown
            (update view structure etc).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#onWindowShown()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.onWindowShown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RequestHideSelf">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RequestHideSelf (flags As HideSoftInputFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RequestHideSelf(Android::Views::InputMethods::HideSoftInputFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void RequestHideSelf (Android.Views.InputMethods.HideSoftInputFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestHideSelf(valuetype Android.Views.InputMethods.HideSoftInputFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.RequestHideSelf(Android.Views.InputMethods.HideSoftInputFlags)" />
      <MemberSignature Language="F#" Value="abstract member RequestHideSelf : Android.Views.InputMethods.HideSoftInputFlags -&gt; unit&#xA;override this.RequestHideSelf : Android.Views.InputMethods.HideSoftInputFlags -&gt; unit" Usage="inputMethodService.RequestHideSelf flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestHideSelf", "(I)V", "GetRequestHideSelf_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestHideSelf", "(I)V", "GetRequestHideSelf_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.InputMethods.HideSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Provides additional operating flags.</param>
        <summary>Close this input method's soft input area, removing it from the display.</summary>
        <remarks>
          <para>Close this input method's soft input area, removing it from the display.</para>
          <para>The input method will continue running, but the user can no longer use it to generate input
            by touching the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#requestHideSelf(int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.requestHideSelf(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RequestShowSelf">
      <MemberSignature Language="VB.NET" Value="Public Sub RequestShowSelf (flags As ShowFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestShowSelf(Android::Views::InputMethods::ShowFlags flags);" />
      <MemberSignature Language="C#" Value="public void RequestShowSelf (Android.Views.InputMethods.ShowFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestShowSelf(valuetype Android.Views.InputMethods.ShowFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.RequestShowSelf(Android.Views.InputMethods.ShowFlags)" />
      <MemberSignature Language="F#" Value="member this.RequestShowSelf : Android.Views.InputMethods.ShowFlags -&gt; unit" Usage="inputMethodService.RequestShowSelf flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestShowSelf", "(I)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestShowSelf", "(I)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.InputMethods.ShowFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Provides additional operating flags.</param>
        <summary>Show the input method's soft input area, so the user sees the input method window and can
            interact with it.</summary>
        <remarks>
          <para>Show the input method's soft input area, so the user sees the input method window and can
            interact with it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#requestShowSelf(int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.requestShowSelf(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDefaultEditorAction">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendDefaultEditorAction (fromEnterKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SendDefaultEditorAction(bool fromEnterKey);" />
      <MemberSignature Language="C#" Value="public virtual bool SendDefaultEditorAction (bool fromEnterKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SendDefaultEditorAction(bool fromEnterKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SendDefaultEditorAction(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SendDefaultEditorAction : bool -&gt; bool&#xA;override this.SendDefaultEditorAction : bool -&gt; bool" Usage="inputMethodService.SendDefaultEditorAction fromEnterKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendDefaultEditorAction", "(Z)Z", "GetSendDefaultEditorAction_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendDefaultEditorAction", "(Z)Z", "GetSendDefaultEditorAction_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromEnterKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fromEnterKey">If true, this will be executed as if the user had
            pressed an enter key on the keyboard, that is it will &lt;em&gt;not&lt;/em&gt;
            be done if the editor has set <c>EditorInfo#IME_FLAG_NO_ENTER_ACTION
            EditorInfo.IME_FLAG_NO_ENTER_ACTION</c>.  If false, the action will be
            sent regardless of how the editor has set that flag.</param>
        <summary>Ask the input target to execute its default action via
            <c>InputConnection#performEditorAction
            InputConnection.performEditorAction()</c>.</summary>
        <returns>Returns a boolean indicating whether an action has been sent.
            If false, either the editor did not specify a default action or it
            does not want an action from the enter key.  If true, the action was
            sent (or there was no input connection at all).</returns>
        <remarks>
          <para>Ask the input target to execute its default action via
            <c>InputConnection#performEditorAction
            InputConnection.performEditorAction()</c>.</para>
          <para>For compatibility, this method does not execute a custom action even if <c>EditorInfo#actionLabel EditorInfo.actionLabel</c> is set. The implementor should directly call
            <c>InputConnection#performEditorAction InputConnection.performEditorAction()</c> with
            <c>EditorInfo#actionId EditorInfo.actionId</c> if they want to execute a custom action.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#sendDefaultEditorAction(boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.sendDefaultEditorAction(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SendDownUpKeyEvents">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendDownUpKeyEvents (keyEventCode As Keycode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendDownUpKeyEvents(Android::Views::Keycode keyEventCode);" />
      <MemberSignature Language="C#" Value="public virtual void SendDownUpKeyEvents (Android.Views.Keycode keyEventCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendDownUpKeyEvents(valuetype Android.Views.Keycode keyEventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SendDownUpKeyEvents(Android.Views.Keycode)" />
      <MemberSignature Language="F#" Value="abstract member SendDownUpKeyEvents : Android.Views.Keycode -&gt; unit&#xA;override this.SendDownUpKeyEvents : Android.Views.Keycode -&gt; unit" Usage="inputMethodService.SendDownUpKeyEvents keyEventCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendDownUpKeyEvents", "(I)V", "GetSendDownUpKeyEvents_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendDownUpKeyEvents", "(I)V", "GetSendDownUpKeyEvents_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyEventCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyEventCode">The raw key code to send, as defined by
            <c>KeyEvent</c>.</param>
        <summary>Send the given key event code (as defined by <c>KeyEvent</c>) to the
            current input connection is a key down + key up event pair.</summary>
        <remarks>
          <para>Send the given key event code (as defined by <c>KeyEvent</c>) to the
            current input connection is a key down + key up event pair.  The sent
            events have <c>KeyEvent#FLAG_SOFT_KEYBOARD KeyEvent.FLAG_SOFT_KEYBOARD</c>
            set, so that the recipient can identify them as coming from a software
            input method, and
            <c>KeyEvent#FLAG_KEEP_TOUCH_MODE KeyEvent.FLAG_KEEP_TOUCH_MODE</c>, so
            that they don't impact the current touch mode of the UI.</para>
          <para>Note that it's discouraged to send such key events in normal operation;
            this is mainly for use with <c>android.text.InputType#TYPE_NULL</c> type
            text fields, or for non-rich input methods. A reasonably capable software
            input method should use the
            <c>android.view.inputmethod.InputConnection#commitText</c> family of methods
            to send text to an application, rather than sending key events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#sendDownUpKeyEvents(int)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.sendDownUpKeyEvents(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SendKeyChar">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendKeyChar (charCode As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendKeyChar(char charCode);" />
      <MemberSignature Language="C#" Value="public virtual void SendKeyChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeyChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SendKeyChar(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member SendKeyChar : char -&gt; unit&#xA;override this.SendKeyChar : char -&gt; unit" Usage="inputMethodService.SendKeyChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendKeyChar", "(C)V", "GetSendKeyChar_CHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendKeyChar", "(C)V", "GetSendKeyChar_CHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">The UTF-16 character code to send.</param>
        <summary>Send the given UTF-16 character to the current input connection.</summary>
        <remarks>
          <para>Send the given UTF-16 character to the current input connection.  Most
            characters will be delivered simply by calling
            <c>InputConnection#commitText InputConnection.commitText()</c> with
            the character; some, however, may be handled different.  In particular,
            the enter character ('\n') will either be delivered as an action code
            or a raw key event, as appropriate.  Consider this as a convenience
            method for IMEs that do not have a full implementation of actions; a
            fully complying IME will decide of the right action for each event and
            will likely never call this method except maybe to handle events coming
            from an actual hardware keyboard.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#sendKeyChar(char)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.sendKeyChar(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetCandidatesView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCandidatesView (view As View)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCandidatesView(Android::Views::View ^ view);" />
      <MemberSignature Language="C#" Value="public virtual void SetCandidatesView (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCandidatesView(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SetCandidatesView(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member SetCandidatesView : Android.Views.View -&gt; unit&#xA;override this.SetCandidatesView : Android.Views.View -&gt; unit" Usage="inputMethodService.SetCandidatesView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCandidatesView", "(Landroid/view/View;)V", "GetSetCandidatesView_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCandidatesView", "(Landroid/view/View;)V", "GetSetCandidatesView_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>Replaces the current candidates view with a new one.</summary>
        <remarks>
          <para>Replaces the current candidates view with a new one.  You only need to
            call this when dynamically changing the view; normally, you should
            implement <c>#onCreateCandidatesView()</c> and create your view when
            first needed by the input method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#setCandidatesView(android.view.View)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.setCandidatesView(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetCandidatesViewShown">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCandidatesViewShown (shown As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCandidatesViewShown(bool shown);" />
      <MemberSignature Language="C#" Value="public virtual void SetCandidatesViewShown (bool shown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCandidatesViewShown(bool shown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SetCandidatesViewShown(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetCandidatesViewShown : bool -&gt; unit&#xA;override this.SetCandidatesViewShown : bool -&gt; unit" Usage="inputMethodService.SetCandidatesViewShown shown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCandidatesViewShown", "(Z)V", "GetSetCandidatesViewShown_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCandidatesViewShown", "(Z)V", "GetSetCandidatesViewShown_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shown" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shown">To be added.</param>
        <summary>Controls the visibility of the candidates display area.</summary>
        <remarks>
          <para>Controls the visibility of the candidates display area.  By default
            it is hidden.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#setCandidatesViewShown(boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.setCandidatesViewShown(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetExtractView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetExtractView (view As View)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetExtractView(Android::Views::View ^ view);" />
      <MemberSignature Language="C#" Value="public virtual void SetExtractView (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExtractView(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SetExtractView(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member SetExtractView : Android.Views.View -&gt; unit&#xA;override this.SetExtractView : Android.Views.View -&gt; unit" Usage="inputMethodService.SetExtractView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setExtractView", "(Landroid/view/View;)V", "GetSetExtractView_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setExtractView", "(Landroid/view/View;)V", "GetSetExtractView_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetInputView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetInputView (view As View)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetInputView(Android::Views::View ^ view);" />
      <MemberSignature Language="C#" Value="public virtual void SetInputView (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInputView(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SetInputView(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member SetInputView : Android.Views.View -&gt; unit&#xA;override this.SetInputView : Android.Views.View -&gt; unit" Usage="inputMethodService.SetInputView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInputView", "(Landroid/view/View;)V", "GetSetInputView_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInputView", "(Landroid/view/View;)V", "GetSetInputView_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>Replaces the current input view with a new one.</summary>
        <remarks>
          <para>Replaces the current input view with a new one.  You only need to
            call this when dynamically changing the view; normally, you should
            implement <c>#onCreateInputView()</c> and create your view when
            first needed by the input method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#setInputView(android.view.View)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.setInputView(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShouldOfferSwitchingToNextInputMethod">
      <MemberSignature Language="VB.NET" Value="Public Function ShouldOfferSwitchingToNextInputMethod () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldOfferSwitchingToNextInputMethod();" />
      <MemberSignature Language="C#" Value="public bool ShouldOfferSwitchingToNextInputMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldOfferSwitchingToNextInputMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.ShouldOfferSwitchingToNextInputMethod" />
      <MemberSignature Language="F#" Value="member this.ShouldOfferSwitchingToNextInputMethod : unit -&gt; bool" Usage="inputMethodService.ShouldOfferSwitchingToNextInputMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldOfferSwitchingToNextInputMethod", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shouldOfferSwitchingToNextInputMethod", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if the current IME needs to offer the users ways to switch to a next input
            method (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns true if the current IME needs to offer the users ways to switch to a next input
            method (e.g. a globe key.).
            When an IME sets supportsSwitchingToNextInputMethod and this method returns true,
            the IME has to offer ways to to invoke <c>#switchToNextInputMethod</c> accordingly.</para>
          <para>Note that the system determines the most appropriate next input method
            and subtype in order to provide the consistent user experience in switching
            between IMEs and subtypes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#shouldOfferSwitchingToNextInputMethod()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.shouldOfferSwitchingToNextInputMethod()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStatusIcon">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ShowStatusIcon (iconResId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowStatusIcon(int iconResId);" />
      <MemberSignature Language="C#" Value="public virtual void ShowStatusIcon (int iconResId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowStatusIcon(int32 iconResId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.ShowStatusIcon(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ShowStatusIcon : int -&gt; unit&#xA;override this.ShowStatusIcon : int -&gt; unit" Usage="inputMethodService.ShowStatusIcon iconResId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showStatusIcon", "(I)V", "GetShowStatusIcon_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showStatusIcon", "(I)V", "GetShowStatusIcon_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iconResId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="iconResId">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowWindow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ShowWindow (showInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowWindow(bool showInput);" />
      <MemberSignature Language="C#" Value="public virtual void ShowWindow (bool showInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowWindow(bool showInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.ShowWindow(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ShowWindow : bool -&gt; unit&#xA;override this.ShowWindow : bool -&gt; unit" Usage="inputMethodService.ShowWindow showInput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showWindow", "(Z)V", "GetShowWindow_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showWindow", "(Z)V", "GetShowWindow_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="showInput">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="StylusHandwritingIdleTimeoutMax">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StylusHandwritingIdleTimeoutMax As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Time::Duration ^ StylusHandwritingIdleTimeoutMax { Java::Time::Duration ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Time.Duration StylusHandwritingIdleTimeoutMax { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Time.Duration StylusHandwritingIdleTimeoutMax" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.StylusHandwritingIdleTimeoutMax" />
      <MemberSignature Language="F#" Value="member this.StylusHandwritingIdleTimeoutMax : Java.Time.Duration" Usage="Android.InputMethodServices.InputMethodService.StylusHandwritingIdleTimeoutMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStylusHandwritingIdleTimeoutMax", "()Ljava/time/Duration;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStylusHandwritingIdleTimeoutMax", "()Ljava/time/Duration;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum stylus handwriting session idle-timeout for use with
            <c>#setStylusHandwritingSessionTimeout(Duration)</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the maximum stylus handwriting session idle-timeout for use with
            <c>#setStylusHandwritingSessionTimeout(Duration)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getStylusHandwritingIdleTimeoutMax()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getStylusHandwritingIdleTimeoutMax()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusHandwritingSessionTimeout">
      <MemberSignature Language="VB.NET" Value="Public Property StylusHandwritingSessionTimeout As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Java::Time::Duration ^ StylusHandwritingSessionTimeout { Java::Time::Duration ^ get(); void set(Java::Time::Duration ^ value); };" />
      <MemberSignature Language="C#" Value="public Java.Time.Duration StylusHandwritingSessionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Time.Duration StylusHandwritingSessionTimeout" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.StylusHandwritingSessionTimeout" />
      <MemberSignature Language="F#" Value="member this.StylusHandwritingSessionTimeout : Java.Time.Duration with get, set" Usage="Android.InputMethodServices.InputMethodService.StylusHandwritingSessionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStylusHandwritingSessionTimeout", "()Ljava/time/Duration;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStylusHandwritingSessionTimeout", "()Ljava/time/Duration;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStylusHandwritingSessionTimeout", "(Ljava/time/Duration;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStylusHandwritingSessionTimeout", "(Ljava/time/Duration;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="duration">timeout to set.</param>
        <summary>Returns the duration after which an ongoing stylus handwriting session that hasn't received
            new <c>MotionEvent</c>s will time out and <c>#finishStylusHandwriting()</c> will be called. -or- Sets the duration after which an ongoing stylus handwriting session that hasn't received new
            <c>MotionEvent</c>s will time out and <c>#finishStylusHandwriting()</c> will be called.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the duration after which an ongoing stylus handwriting session that hasn't received
            new <c>MotionEvent</c>s will time out and <c>#finishStylusHandwriting()</c> will be called.
            The current timeout can be changed using
            <c>#setStylusHandwritingSessionTimeout(Duration)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getStylusHandwritingSessionTimeout()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getStylusHandwritingSessionTimeout()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the duration after which an ongoing stylus handwriting session that hasn't received new
            <c>MotionEvent</c>s will time out and <c>#finishStylusHandwriting()</c> will be called.
            
            The maximum allowed duration is returned by
            <c>#getStylusHandwritingIdleTimeoutMax()</c>, larger values will be clamped.
            
            Note: this value is bound to the <c>InputMethodService</c> instance and resets to the
            default whenever a new instance is constructed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#setStylusHandwritingSessionTimeout(java.time.Duration)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.setStylusHandwritingSessionTimeout(java.time.Duration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusHandwritingWindow">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StylusHandwritingWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::Window ^ StylusHandwritingWindow { Android::Views::Window ^ get(); };" />
      <MemberSignature Language="C#" Value="public Android.Views.Window? StylusHandwritingWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Window StylusHandwritingWindow" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.StylusHandwritingWindow" />
      <MemberSignature Language="F#" Value="member this.StylusHandwritingWindow : Android.Views.Window" Usage="Android.InputMethodServices.InputMethodService.StylusHandwritingWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStylusHandwritingWindow", "()Landroid/view/Window;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStylusHandwritingWindow", "()Landroid/view/Window;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the stylus handwriting inking window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the stylus handwriting inking window.
            IMEs supporting stylus input are expected to attach their inking views to this
            window (e.g. with <c>Window#setContentView(View)</c> )). Handwriting-related
            <c>MotionEvent</c>s are dispatched to the attached view hierarchy.
            
            Note: This returns <c>null</c> if IME doesn't support stylus handwriting
              i.e. if <c>InputMethodInfo#supportsStylusHandwriting()</c> is false.
              This method should be called after <c>#onStartStylusHandwriting()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#getStylusHandwritingWindow()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.getStylusHandwritingWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchInputMethod">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SwitchInputMethod (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SwitchInputMethod(System::String ^ id);" />
      <MemberSignature Language="C#" Value="public virtual void SwitchInputMethod (string? id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SwitchInputMethod(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SwitchInputMethod(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SwitchInputMethod : string -&gt; unit&#xA;override this.SwitchInputMethod : string -&gt; unit" Usage="inputMethodService.SwitchInputMethod id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("switchInputMethod", "(Ljava/lang/String;)V", "GetSwitchInputMethod_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("switchInputMethod", "(Ljava/lang/String;)V", "GetSwitchInputMethod_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Unique identifier of the new input method to start.</param>
        <summary>Force switch to a new input method, as identified by &lt;var&gt;id&lt;/var&gt;.</summary>
        <remarks>
          <para>Force switch to a new input method, as identified by &lt;var&gt;id&lt;/var&gt;.  This
            input method will be destroyed, and the requested one started on the
            current input field.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#switchInputMethod(java.lang.String)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.switchInputMethod(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SwitchInputMethod">
      <MemberSignature Language="VB.NET" Value="Public Sub SwitchInputMethod (id As String, subtype As InputMethodSubtype)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SwitchInputMethod(System::String ^ id, Android::Views::InputMethods::InputMethodSubtype ^ subtype);" />
      <MemberSignature Language="C#" Value="public void SwitchInputMethod (string? id, Android.Views.InputMethods.InputMethodSubtype? subtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SwitchInputMethod(string id, class Android.Views.InputMethods.InputMethodSubtype subtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SwitchInputMethod(System.String,Android.Views.InputMethods.InputMethodSubtype)" />
      <MemberSignature Language="F#" Value="member this.SwitchInputMethod : string * Android.Views.InputMethods.InputMethodSubtype -&gt; unit" Usage="inputMethodService.SwitchInputMethod (id, subtype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("switchInputMethod", "(Ljava/lang/String;Landroid/view/inputmethod/InputMethodSubtype;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("switchInputMethod", "(Ljava/lang/String;Landroid/view/inputmethod/InputMethodSubtype;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="subtype" Type="Android.Views.InputMethods.InputMethodSubtype" />
      </Parameters>
      <Docs>
        <param name="id">Unique identifier of the new input method to start.</param>
        <param name="subtype">The new subtype of the new input method to be switched to.</param>
        <summary>Force switch to a new input method, as identified by <c>id</c>.</summary>
        <remarks>
          <para>Force switch to a new input method, as identified by <c>id</c>.  This
            input method will be destroyed, and the requested one started on the
            current input field.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#switchInputMethod(java.lang.String,%20android.view.inputmethod.InputMethodSubtype)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.switchInputMethod(java.lang.String, android.view.inputmethod.InputMethodSubtype)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchToNextInputMethod">
      <MemberSignature Language="VB.NET" Value="Public Function SwitchToNextInputMethod (onlyCurrentIme As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SwitchToNextInputMethod(bool onlyCurrentIme);" />
      <MemberSignature Language="C#" Value="public bool SwitchToNextInputMethod (bool onlyCurrentIme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SwitchToNextInputMethod(bool onlyCurrentIme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SwitchToNextInputMethod(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SwitchToNextInputMethod : bool -&gt; bool" Usage="inputMethodService.SwitchToNextInputMethod onlyCurrentIme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("switchToNextInputMethod", "(Z)Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("switchToNextInputMethod", "(Z)Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onlyCurrentIme" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="onlyCurrentIme">if true, the framework will find the next subtype which
            belongs to the current IME</param>
        <summary>Force switch to the next input method and subtype.</summary>
        <returns>true if the current input method and subtype was successfully switched to the next
            input method and subtype.</returns>
        <remarks>
          <para>Force switch to the next input method and subtype. If there is no IME enabled except
            current IME and subtype, do nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#switchToNextInputMethod(boolean)" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.switchToNextInputMethod(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchToPreviousInputMethod">
      <MemberSignature Language="VB.NET" Value="Public Function SwitchToPreviousInputMethod () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SwitchToPreviousInputMethod();" />
      <MemberSignature Language="C#" Value="public bool SwitchToPreviousInputMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SwitchToPreviousInputMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.SwitchToPreviousInputMethod" />
      <MemberSignature Language="F#" Value="member this.SwitchToPreviousInputMethod : unit -&gt; bool" Usage="inputMethodService.SwitchToPreviousInputMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("switchToPreviousInputMethod", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("switchToPreviousInputMethod", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Force switch to the last used input method and subtype.</summary>
        <returns>true if the current input method and subtype was successfully switched to the last
            used input method and subtype.</returns>
        <remarks>
          <para>Force switch to the last used input method and subtype. If the last input method didn't have
            any subtypes, the framework will simply switch to the last input method with no subtype
            specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#switchToPreviousInputMethod()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.switchToPreviousInputMethod()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.InputMethodServices.InputMethodService.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.InputMethodServices.InputMethodService.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFullscreenMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateFullscreenMode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateFullscreenMode();" />
      <MemberSignature Language="C#" Value="public virtual void UpdateFullscreenMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFullscreenMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.UpdateFullscreenMode" />
      <MemberSignature Language="F#" Value="abstract member UpdateFullscreenMode : unit -&gt; unit&#xA;override this.UpdateFullscreenMode : unit -&gt; unit" Usage="inputMethodService.UpdateFullscreenMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateFullscreenMode", "()V", "GetUpdateFullscreenModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateFullscreenMode", "()V", "GetUpdateFullscreenModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Re-evaluate whether the input method should be running in fullscreen
            mode, and update its UI if this has changed since the last time it
            was evaluated.</summary>
        <remarks>
          <para>Re-evaluate whether the input method should be running in fullscreen
            mode, and update its UI if this has changed since the last time it
            was evaluated.  This will call <c>#onEvaluateFullscreenMode()</c> to
            determine whether it should currently run in fullscreen mode.  You
            can use <c>#isFullscreenMode()</c> to determine if the input method
            is currently running in fullscreen mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#updateFullscreenMode()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.updateFullscreenMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="UpdateInputViewShown">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateInputViewShown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateInputViewShown();" />
      <MemberSignature Language="C#" Value="public virtual void UpdateInputViewShown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateInputViewShown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.InputMethodServices.InputMethodService.UpdateInputViewShown" />
      <MemberSignature Language="F#" Value="abstract member UpdateInputViewShown : unit -&gt; unit&#xA;override this.UpdateInputViewShown : unit -&gt; unit" Usage="inputMethodService.UpdateInputViewShown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateInputViewShown", "()V", "GetUpdateInputViewShownHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateInputViewShown", "()V", "GetUpdateInputViewShownHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Re-evaluate whether the soft input area should currently be shown, and
            update its UI if this has changed since the last time it
            was evaluated.</summary>
        <remarks>
          <para>Re-evaluate whether the soft input area should currently be shown, and
            update its UI if this has changed since the last time it
            was evaluated.  This will call <c>#onEvaluateInputViewShown()</c> to
            determine whether the input view should currently be shown.  You
            can use <c>#isInputViewShown()</c> to determine if the input view
            is currently shown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/inputmethodservice/InputMethodService#updateInputViewShown()" title="Reference documentation">Java documentation for <code>android.inputmethodservice.InputMethodService.updateInputViewShown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Window As Dialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Dialog ^ Window { Android::App::Dialog ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Dialog? Window { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Dialog Window" />
      <MemberSignature Language="DocId" Value="P:Android.InputMethodServices.InputMethodService.Window" />
      <MemberSignature Language="F#" Value="member this.Window : Android.App.Dialog" Usage="Android.InputMethodServices.InputMethodService.Window" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindow", "()Landroid/app/Dialog;", "GetGetWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindow", "()Landroid/app/Dialog;", "GetGetWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Dialog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
  </Members>
</Type>
