<Type Name="Matcher" FullName="Java.Util.Regex.Matcher">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matcher&#xA;Inherits Object&#xA;Implements IDisposable, IJavaPeerable, IMatchResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matcher sealed : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Java::Util::Regex::IMatchResult" />
  <TypeSignature Language="C#" Value="public sealed class Matcher : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Util.Regex.IMatchResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matcher extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Util.Regex.IMatchResult, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Regex.Matcher" />
  <TypeSignature Language="F#" Value="type Matcher = class&#xA;    inherit Object&#xA;    interface IMatchResult&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Regex.IMatchResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/regex/Matcher", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/regex/Matcher", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An engine that performs match operations on a java.</summary>
    <remarks>
      <para>An engine that performs match operations on a java.lang.CharSequence character sequence by interpreting a <c>Pattern</c>.</para>
      <para>A matcher is created from a pattern by invoking the pattern's <c>Pattern#matcher matcher</c> method.  Once created, a matcher can be used to
            perform three different kinds of match operations:
            
            &lt;ul&gt;
            
              &lt;li&gt;</para>
      <para>The <c>#matches matches</c> method attempts to match the entire
              input sequence against the pattern.</para>
      <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
      <para>The <c>#lookingAt lookingAt</c> method attempts to match the
              input sequence, starting at the beginning, against the pattern.</para>
      <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
      <para>The <c>#find find</c> method scans the input sequence looking
              for the next subsequence that matches the pattern.</para>
      <para>&lt;/li&gt;
            
            &lt;/ul&gt;</para>
      <para>Each of these methods returns a boolean indicating success or failure.
            More information about a successful match can be obtained by querying the
            state of the matcher.</para>
      <para>A matcher finds matches in a subset of its input called the
            <i>region</i>. By default, the region contains all of the matcher's input.
            The region can be modified via the <c>#region(int, int) region</c> method
            and queried via the <c>#regionStart() regionStart</c> and <c>#regionEnd() regionEnd</c> methods. The way that the region boundaries interact
            with some pattern constructs can be changed. See <c>#useAnchoringBounds(boolean) useAnchoringBounds</c> and <c>#useTransparentBounds(boolean) useTransparentBounds</c> for more details.</para>
      <para>This class also defines methods for replacing matched subsequences with
            new strings whose contents can, if desired, be computed from the match
            result.  The <c>#appendReplacement appendReplacement</c> and <c>#appendTail appendTail</c> methods can be used in tandem in order to collect
            the result into an existing string buffer or string builder. Alternatively,
            the more convenient <c>#replaceAll replaceAll</c> method can be used to
            create a string in which every matching subsequence in the input sequence
            is replaced.</para>
      <para>The explicit state of a matcher includes the start and end indices of
            the most recent successful match.  It also includes the start and end
            indices of the input subsequence captured by each capturing group in the pattern as well as a total
            count of such subsequences.  As a convenience, methods are also provided for
            returning these captured subsequences in string form.</para>
      <para>The explicit state of a matcher is initially undefined; attempting to
            query any part of it before a successful match will cause an <c>IllegalStateException</c> to be thrown.  The explicit state of a matcher is
            recomputed by every match operation.</para>
      <para>The implicit state of a matcher includes the input character sequence as
            well as the <i>append position</i>, which is initially zero and is updated
            by the <c>#appendReplacement appendReplacement</c> method.</para>
      <para>A matcher may be reset explicitly by invoking its <c>#reset()</c>
            method or, if a new input sequence is desired, its <c>#reset(java.lang.CharSequence) reset(CharSequence)</c> method.  Resetting a
            matcher discards its explicit state information and sets the append position
            to zero.</para>
      <para>Instances of this class are not safe for use by multiple concurrent
            threads.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/regex/Matcher" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="AppendReplacement">
      <MemberSignature Language="VB.NET" Value="Public Function AppendReplacement (sb As StringBuffer, replacement As String) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ AppendReplacement(Java::Lang::StringBuffer ^ sb, System::String ^ replacement);" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher AppendReplacement (Java.Lang.StringBuffer sb, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher AppendReplacement(class Java.Lang.StringBuffer sb, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.AppendReplacement(Java.Lang.StringBuffer,System.String)" />
      <MemberSignature Language="F#" Value="member this.AppendReplacement : Java.Lang.StringBuffer * string -&gt; Java.Util.Regex.Matcher" Usage="matcher.AppendReplacement (sb, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("appendReplacement", "(Ljava/lang/StringBuffer;Ljava/lang/String;)Ljava/util/regex/Matcher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("appendReplacement", "(Ljava/lang/StringBuffer;Ljava/lang/String;)Ljava/util/regex/Matcher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="Java.Lang.StringBuffer" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sb">The target string buffer</param>
        <param name="replacement">The replacement string</param>
        <summary>Implements a non-terminal append-and-replace step.</summary>
        <returns>This matcher</returns>
        <remarks>
          <para>Implements a non-terminal append-and-replace step.</para>
          <para>This method performs the following actions:</para>
          <para>&lt;ol&gt;
            
              &lt;li&gt;</para>
          <para>It reads characters from the input sequence, starting at the
              append position, and appends them to the given string buffer.  It
              stops after reading the last character preceding the previous match,
              that is, the character at index <c>#start()</c>&amp;nbsp;<c>-</c>&amp;nbsp;<c>1</c>.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>It appends the given replacement string to the string buffer.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>It sets the append position of this matcher to the index of
              the last character matched, plus one, that is, to <c>#end()</c>.</para>
          <para>&lt;/li&gt;
            
            &lt;/ol&gt;</para>
          <para>The replacement string may contain references to subsequences
            captured during the previous match: Each occurrence of
            <c>${</c><i>name</i><c>}</c> or <c>$</c><i>g</i>
            will be replaced by the result of evaluating the corresponding
            <c>#group(String) group(name)</c> or <c>#group(int) group(g)</c>
            respectively. For <c>$</c><i>g</i>,
            the first number after the <c>$</c> is always treated as part of
            the group reference. Subsequent numbers are incorporated into g if
            they would form a legal group reference. Only the numerals '0'
            through '9' are considered as potential components of the group
            reference. If the second group matched the string <c>"foo"</c>, for
            example, then passing the replacement string <c>"$2bar"</c> would
            cause <c>"foobar"</c> to be appended to the string buffer. A dollar
            sign (<c>$</c>) may be included as a literal in the replacement
            string by preceding it with a backslash (<c>\$</c>).</para>
          <para>Note that backslashes (<c>\</c>) and dollar signs (<c>$</c>) in
            the replacement string may cause the results to be different than if it
            were being treated as a literal replacement string. Dollar signs may be
            treated as references to captured subsequences as described above, and
            backslashes are used to escape literal characters in the replacement
            string.</para>
          <para>This method is intended to be used in a loop together with the
            <c>#appendTail(StringBuffer) appendTail</c> and <c>#find() find</c>
            methods.  The following code, for example, writes <c>one dog two dogs
            in the yard</c> to the standard-output stream:</para>
          <para>&lt;blockquote&gt;</para>
          <code lang="text/java">Pattern p = Pattern.compile("cat");
            Matcher m = p.matcher("one cat two cats in the yard");
            StringBuffer sb = new StringBuffer();
            while (m.find()) {
                m.appendReplacement(sb, "dog");
            }
            m.appendTail(sb);
            System.out.println(sb.toString());</code>
          <para>&lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#appendReplacement(java.lang.StringBuffer,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendReplacement">
      <MemberSignature Language="VB.NET" Value="Public Function AppendReplacement (sb As StringBuilder, replacement As String) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ AppendReplacement(Java::Lang::StringBuilder ^ sb, System::String ^ replacement);" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher AppendReplacement (Java.Lang.StringBuilder sb, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher AppendReplacement(class Java.Lang.StringBuilder sb, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.AppendReplacement(Java.Lang.StringBuilder,System.String)" />
      <MemberSignature Language="F#" Value="member this.AppendReplacement : Java.Lang.StringBuilder * string -&gt; Java.Util.Regex.Matcher" Usage="matcher.AppendReplacement (sb, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("appendReplacement", "(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/regex/Matcher;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("appendReplacement", "(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/regex/Matcher;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="Java.Lang.StringBuilder" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sb">The target string builder</param>
        <param name="replacement">The replacement string</param>
        <summary>Implements a non-terminal append-and-replace step.</summary>
        <returns>This matcher</returns>
        <remarks>
          <para>Implements a non-terminal append-and-replace step.</para>
          <para>This method performs the following actions:</para>
          <para>&lt;ol&gt;
            
              &lt;li&gt;</para>
          <para>It reads characters from the input sequence, starting at the
              append position, and appends them to the given string builder.  It
              stops after reading the last character preceding the previous match,
              that is, the character at index <c>#start()</c>&amp;nbsp;<c>-</c>&amp;nbsp;<c>1</c>.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>It appends the given replacement string to the string builder.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>It sets the append position of this matcher to the index of
              the last character matched, plus one, that is, to <c>#end()</c>.</para>
          <para>&lt;/li&gt;
            
            &lt;/ol&gt;</para>
          <para>The replacement string may contain references to subsequences
            captured during the previous match: Each occurrence of
            <c>$</c><i>g</i> will be replaced by the result of
            evaluating <c>#group(int) group</c><c>(</c><i>g</i><c>)</c>.
            The first number after the <c>$</c> is always treated as part of
            the group reference. Subsequent numbers are incorporated into g if
            they would form a legal group reference. Only the numerals '0'
            through '9' are considered as potential components of the group
            reference. If the second group matched the string <c>"foo"</c>, for
            example, then passing the replacement string <c>"$2bar"</c> would
            cause <c>"foobar"</c> to be appended to the string builder. A dollar
            sign (<c>$</c>) may be included as a literal in the replacement
            string by preceding it with a backslash (<c>\$</c>).</para>
          <para>Note that backslashes (<c>\</c>) and dollar signs (<c>$</c>) in
            the replacement string may cause the results to be different than if it
            were being treated as a literal replacement string. Dollar signs may be
            treated as references to captured subsequences as described above, and
            backslashes are used to escape literal characters in the replacement
            string.</para>
          <para>This method is intended to be used in a loop together with the
            <c>#appendTail(StringBuilder) appendTail</c> and
            <c>#find() find</c> methods. The following code, for example, writes
            <c>one dog two dogs in the yard</c> to the standard-output stream:</para>
          <para>&lt;blockquote&gt;</para>
          <code lang="text/java">Pattern p = Pattern.compile("cat");
            Matcher m = p.matcher("one cat two cats in the yard");
            StringBuilder sb = new StringBuilder();
            while (m.find()) {
                m.appendReplacement(sb, "dog");
            }
            m.appendTail(sb);
            System.out.println(sb.toString());</code>
          <para>&lt;/blockquote&gt;</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#appendReplacement(java.lang.StringBuilder,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.appendReplacement(java.lang.StringBuilder, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTail">
      <MemberSignature Language="VB.NET" Value="Public Function AppendTail (sb As StringBuffer) As StringBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::StringBuffer ^ AppendTail(Java::Lang::StringBuffer ^ sb);" />
      <MemberSignature Language="C#" Value="public Java.Lang.StringBuffer AppendTail (Java.Lang.StringBuffer sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.StringBuffer AppendTail(class Java.Lang.StringBuffer sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.AppendTail(Java.Lang.StringBuffer)" />
      <MemberSignature Language="F#" Value="member this.AppendTail : Java.Lang.StringBuffer -&gt; Java.Lang.StringBuffer" Usage="matcher.AppendTail sb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("appendTail", "(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("appendTail", "(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="Java.Lang.StringBuffer" />
      </Parameters>
      <Docs>
        <param name="sb">The target string buffer</param>
        <summary>Implements a terminal append-and-replace step.</summary>
        <returns>The target string buffer</returns>
        <remarks>
          <para>Implements a terminal append-and-replace step.</para>
          <para>This method reads characters from the input sequence, starting at
            the append position, and appends them to the given string buffer.  It is
            intended to be invoked after one or more invocations of the <c>#appendReplacement(StringBuffer, String) appendReplacement</c> method in
            order to copy the remainder of the input sequence.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#appendTail(java.lang.StringBuffer)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.appendTail(java.lang.StringBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendTail">
      <MemberSignature Language="VB.NET" Value="Public Function AppendTail (sb As StringBuilder) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::StringBuilder ^ AppendTail(Java::Lang::StringBuilder ^ sb);" />
      <MemberSignature Language="C#" Value="public Java.Lang.StringBuilder AppendTail (Java.Lang.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.StringBuilder AppendTail(class Java.Lang.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.AppendTail(Java.Lang.StringBuilder)" />
      <MemberSignature Language="F#" Value="member this.AppendTail : Java.Lang.StringBuilder -&gt; Java.Lang.StringBuilder" Usage="matcher.AppendTail sb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("appendTail", "(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("appendTail", "(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="Java.Lang.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">The target string builder</param>
        <summary>Implements a terminal append-and-replace step.</summary>
        <returns>The target string builder</returns>
        <remarks>
          <para>Implements a terminal append-and-replace step.</para>
          <para>This method reads characters from the input sequence, starting at
            the append position, and appends them to the given string builder.  It is
            intended to be invoked after one or more invocations of the <c>#appendReplacement(StringBuilder, String)
            appendReplacement</c> method in order to copy the remainder of the input
            sequence.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#appendTail(java.lang.StringBuilder)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.appendTail(java.lang.StringBuilder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="VB.NET" Value="Public Function End () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int End();" />
      <MemberSignature Language="C#" Value="public int End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 End() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.End" />
      <MemberSignature Language="F#" Value="abstract member End : unit -&gt; int&#xA;override this.End : unit -&gt; int" Usage="matcher.End " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Regex.IMatchResult.End</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("end", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("end", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the offset after the last character matched.</summary>
        <returns>The offset after the last character matched</returns>
        <remarks>
          <para>Returns the offset after the last character matched.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#end()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.end()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="VB.NET" Value="Public Function End (group As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int End(int group);" />
      <MemberSignature Language="C#" Value="public int End (int group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 End(int32 group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.End(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member End : int -&gt; int&#xA;override this.End : int -&gt; int" Usage="matcher.End group" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Regex.IMatchResult.End(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("end", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("end", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="group">The index of a capturing group in this matcher's pattern</param>
        <summary>Returns the offset after the last character of the subsequence
            captured by the given group during the previous match operation.</summary>
        <returns>The offset after the last character captured by the group,
                     or <c>-1</c> if the match was successful
                     but the group itself did not match anything</returns>
        <remarks>
          <para>Returns the offset after the last character of the subsequence
            captured by the given group during the previous match operation.</para>
          <para>Capturing groups are indexed from left
            to right, starting at one.  Group zero denotes the entire pattern, so
            the expression <i>m.</i><c>end(0)</c> is equivalent to
            <i>m.</i><c>end()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#end(int)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.end(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="VB.NET" Value="Public Function End (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int End(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public int End (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 End(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.End(System.String)" />
      <MemberSignature Language="F#" Value="member this.End : string -&gt; int" Usage="matcher.End name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("end", "(Ljava/lang/String;)I", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("end", "(Ljava/lang/String;)I", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of a named-capturing group in this matcher's pattern</param>
        <summary>Returns the offset after the last character of the subsequence
            captured by the given named-capturing
            group during the previous match operation.</summary>
        <returns>The offset after the last character captured by the group,
                     or <c>-1</c> if the match was successful
                     but the group itself did not match anything</returns>
        <remarks>
          <para>Returns the offset after the last character of the subsequence
            captured by the given named-capturing
            group during the previous match operation.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#end(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.end(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="VB.NET" Value="Public Function Find () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Find();" />
      <MemberSignature Language="C#" Value="public bool Find ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Find() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Find" />
      <MemberSignature Language="F#" Value="member this.Find : unit -&gt; bool" Usage="matcher.Find " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("find", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("find", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Attempts to find the next subsequence of the input sequence that matches
            the pattern.</summary>
        <returns>
          <c>true</c> if, and only if, a subsequence of the input
                     sequence matches this matcher's pattern</returns>
        <remarks>
          <para>Attempts to find the next subsequence of the input sequence that matches
            the pattern.</para>
          <para>This method starts at the beginning of this matcher's region, or, if
            a previous invocation of the method was successful and the matcher has
            not since been reset, at the first character not matched by the previous
            match.</para>
          <para>If the match succeeds then more information can be obtained via the
            <c>start</c>, <c>end</c>, and <c>group</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#find()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.find()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="VB.NET" Value="Public Function Find (start As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Find(int start);" />
      <MemberSignature Language="C#" Value="public bool Find (int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Find(int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Find(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Find : int -&gt; bool" Usage="matcher.Find start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("find", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("find", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the index to start searching for a match</param>
        <summary>Resets this matcher and then attempts to find the next subsequence of
            the input sequence that matches the pattern, starting at the specified
            index.</summary>
        <returns>
          <c>true</c> if, and only if, a subsequence of the input
                     sequence starting at the given index matches this matcher's
                     pattern</returns>
        <remarks>
          <para>Resets this matcher and then attempts to find the next subsequence of
            the input sequence that matches the pattern, starting at the specified
            index.</para>
          <para>If the match succeeds then more information can be obtained via the
            <c>start</c>, <c>end</c>, and <c>group</c> methods, and subsequent
            invocations of the <c>#find()</c> method will start at the first
            character not matched by this match.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#find(int)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.find(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>start  input.length()</c></exception>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="VB.NET" Value="Public Function Group () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Group();" />
      <MemberSignature Language="C#" Value="public string Group ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Group() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Group" />
      <MemberSignature Language="F#" Value="abstract member Group : unit -&gt; string&#xA;override this.Group : unit -&gt; string" Usage="matcher.Group " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Regex.IMatchResult.Group</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("group", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("group", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the input subsequence matched by the previous match.</summary>
        <returns>The (possibly empty) subsequence matched by the previous match,
                    in string form</returns>
        <remarks>
          <para>Returns the input subsequence matched by the previous match.</para>
          <para>For a matcher <i>m</i> with input sequence <i>s</i>,
            the expressions <i>m.</i><c>group()</c> and
            <i>s.</i><c>substring(</c><i>m.</i><c>start(),</c>&amp;nbsp;<i>m.</i><c>end())</c> are equivalent.</para>
          <para>Note that some patterns, for example <c>a*</c>, match the empty
            string.  This method will return the empty string when the pattern
            successfully matches the empty string in the input.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#group()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.group()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="VB.NET" Value="Public Function Group (group As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Group(int group);" />
      <MemberSignature Language="C#" Value="public string? Group (int group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Group(int32 group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Group(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Group : int -&gt; string&#xA;override this.Group : int -&gt; string" Usage="matcher.Group group" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Regex.IMatchResult.Group(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("group", "(I)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("group", "(I)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="group">The index of a capturing group in this matcher's pattern</param>
        <summary>Returns the input subsequence captured by the given group during the
            previous match operation.</summary>
        <returns>The (possibly empty) subsequence captured by the group
                     during the previous match, or <c>null</c> if the group
                     failed to match part of the input</returns>
        <remarks>
          <para>Returns the input subsequence captured by the given group during the
            previous match operation.</para>
          <para>For a matcher <i>m</i>, input sequence <i>s</i>, and group index
            <i>g</i>, the expressions <i>m.</i><c>group(</c><i>g</i><c>)</c> and
            <i>s.</i><c>substring(</c><i>m.</i><c>start(</c><i>g</i><c>),</c>&amp;nbsp;<i>m.</i><c>end(</c><i>g</i><c>))</c>
            are equivalent.</para>
          <para>Capturing groups are indexed from left
            to right, starting at one.  Group zero denotes the entire pattern, so
            the expression <c>m.group(0)</c> is equivalent to <c>m.group()</c>.</para>
          <para>If the match was successful but the group specified failed to match
            any part of the input sequence, then <c>null</c> is returned. Note
            that some groups, for example <c>(a*)</c>, match the empty string.
            This method will return the empty string when such a group successfully
            matches the empty string in the input.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#group(int)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.group(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="VB.NET" Value="Public Function Group (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Group(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public string? Group (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Group(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Group(System.String)" />
      <MemberSignature Language="F#" Value="member this.Group : string -&gt; string" Usage="matcher.Group name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("group", "(Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("group", "(Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of a named-capturing group in this matcher's pattern</param>
        <summary>Returns the input subsequence captured by the given
            named-capturing group during the
            previous match operation.</summary>
        <returns>The (possibly empty) subsequence captured by the named group
                     during the previous match, or <c>null</c> if the group
                     failed to match part of the input</returns>
        <remarks>
          <para>Returns the input subsequence captured by the given
            named-capturing group during the
            previous match operation.</para>
          <para>If the match was successful but the group specified failed to match
            any part of the input sequence, then <c>null</c> is returned. Note
            that some groups, for example <c>(a*)</c>, match the empty string.
            This method will return the empty string when such a group successfully
            matches the empty string in the input.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#group(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.group(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupCount">
      <MemberSignature Language="VB.NET" Value="Public Function GroupCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GroupCount();" />
      <MemberSignature Language="C#" Value="public int GroupCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GroupCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.GroupCount" />
      <MemberSignature Language="F#" Value="abstract member GroupCount : unit -&gt; int&#xA;override this.GroupCount : unit -&gt; int" Usage="matcher.GroupCount " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Regex.IMatchResult.GroupCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("groupCount", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("groupCount", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of capturing groups in this matcher's pattern.</summary>
        <returns>The number of capturing groups in this matcher's pattern</returns>
        <remarks>
          <para>Returns the number of capturing groups in this matcher's pattern.</para>
          <para>Group zero denotes the entire pattern by convention. It is not
            included in this count.</para>
          <para>Any non-negative integer smaller than or equal to the value
            returned by this method is guaranteed to be a valid group index for
            this matcher.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#groupCount()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.groupCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasAnchoringBounds">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnchoringBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnchoringBounds { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool HasAnchoringBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnchoringBounds" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Regex.Matcher.HasAnchoringBounds" />
      <MemberSignature Language="F#" Value="member this.HasAnchoringBounds : bool" Usage="Java.Util.Regex.Matcher.HasAnchoringBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasAnchoringBounds", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasAnchoringBounds", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Queries the anchoring of region bounds for this matcher.</summary>
        <value>
          <c>true</c> iff this matcher is using anchoring bounds,
                    <c>false</c> otherwise.</value>
        <remarks>
          <para>Queries the anchoring of region bounds for this matcher.</para>
          <para>This method returns <c>true</c> if this matcher uses
            <i>anchoring</i> bounds, <c>false</c> otherwise.</para>
          <para>See <c>#useAnchoringBounds(boolean) useAnchoringBounds</c> for a
            description of anchoring bounds.</para>
          <para>By default, a matcher uses anchoring region boundaries.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#hasAnchoringBounds()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.hasAnchoringBounds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasTransparentBounds">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasTransparentBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasTransparentBounds { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool HasTransparentBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTransparentBounds" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Regex.Matcher.HasTransparentBounds" />
      <MemberSignature Language="F#" Value="member this.HasTransparentBounds : bool" Usage="Java.Util.Regex.Matcher.HasTransparentBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasTransparentBounds", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasTransparentBounds", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Queries the transparency of region bounds for this matcher.</summary>
        <value>
          <c>true</c> iff this matcher is using transparent bounds,
                    <c>false</c> otherwise.</value>
        <remarks>
          <para>Queries the transparency of region bounds for this matcher.</para>
          <para>This method returns <c>true</c> if this matcher uses
            <i>transparent</i> bounds, <c>false</c> if it uses <i>opaque</i>
            bounds.</para>
          <para>See <c>#useTransparentBounds(boolean) useTransparentBounds</c> for a
            description of transparent and opaque bounds.</para>
          <para>By default, a matcher uses opaque region boundaries.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#hasTransparentBounds()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.hasTransparentBounds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HitEnd">
      <MemberSignature Language="VB.NET" Value="Public Function HitEnd () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitEnd();" />
      <MemberSignature Language="C#" Value="public bool HitEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.HitEnd" />
      <MemberSignature Language="F#" Value="member this.HitEnd : unit -&gt; bool" Usage="matcher.HitEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hitEnd", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hitEnd", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if the end of input was hit by the search engine in
            the last match operation performed by this matcher.</summary>
        <returns>true iff the end of input was hit in the last match; false
                     otherwise</returns>
        <remarks>
          <para>Returns true if the end of input was hit by the search engine in
            the last match operation performed by this matcher.</para>
          <para>When this method returns true, then it is possible that more input
            would have changed the result of the last search.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#hitEnd()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.hitEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Regex.Matcher.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Regex.Matcher.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookingAt">
      <MemberSignature Language="VB.NET" Value="Public Function LookingAt () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool LookingAt();" />
      <MemberSignature Language="C#" Value="public bool LookingAt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LookingAt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.LookingAt" />
      <MemberSignature Language="F#" Value="member this.LookingAt : unit -&gt; bool" Usage="matcher.LookingAt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lookingAt", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lookingAt", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Attempts to match the input sequence, starting at the beginning of the
            region, against the pattern.</summary>
        <returns>
          <c>true</c> if, and only if, a prefix of the input
                     sequence matches this matcher's pattern</returns>
        <remarks>
          <para>Attempts to match the input sequence, starting at the beginning of the
            region, against the pattern.</para>
          <para>Like the <c>#matches matches</c> method, this method always starts
            at the beginning of the region; unlike that method, it does not
            require that the entire region be matched.</para>
          <para>If the match succeeds then more information can be obtained via the
            <c>start</c>, <c>end</c>, and <c>group</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#lookingAt()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.lookingAt()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="VB.NET" Value="Public Function Matches () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches();" />
      <MemberSignature Language="C#" Value="public bool Matches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Matches" />
      <MemberSignature Language="F#" Value="member this.Matches : unit -&gt; bool" Usage="matcher.Matches " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("matches", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("matches", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Attempts to match the entire region against the pattern.</summary>
        <returns>
          <c>true</c> if, and only if, the entire region sequence
                     matches this matcher's pattern</returns>
        <remarks>
          <para>Attempts to match the entire region against the pattern.</para>
          <para>If the match succeeds then more information can be obtained via the
            <c>start</c>, <c>end</c>, and <c>group</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#matches()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.matches()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="VB.NET" Value="Public Function Pattern () As Pattern" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Pattern ^ Pattern();" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Pattern Pattern ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Pattern Pattern() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Pattern" />
      <MemberSignature Language="F#" Value="member this.Pattern : unit -&gt; Java.Util.Regex.Pattern" Usage="matcher.Pattern " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pattern", "()Ljava/util/regex/Pattern;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pattern", "()Ljava/util/regex/Pattern;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Pattern</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the pattern that is interpreted by this matcher.</summary>
        <returns>The pattern for which this matcher was created</returns>
        <remarks>
          <para>Returns the pattern that is interpreted by this matcher.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#pattern()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.pattern()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuoteReplacement">
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuoteReplacement (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ QuoteReplacement(System::String ^ s);" />
      <MemberSignature Language="C#" Value="public static string QuoteReplacement (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QuoteReplacement(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.QuoteReplacement(System.String)" />
      <MemberSignature Language="F#" Value="static member QuoteReplacement : string -&gt; string" Usage="Java.Util.Regex.Matcher.QuoteReplacement s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("quoteReplacement", "(Ljava/lang/String;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("quoteReplacement", "(Ljava/lang/String;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">The string to be literalized</param>
        <summary>Returns a literal replacement <c>String</c> for the specified
            <c>String</c>.</summary>
        <returns>A literal string replacement</returns>
        <remarks>
          <para>Returns a literal replacement <c>String</c> for the specified
            <c>String</c>.
            
            This method produces a <c>String</c> that will work
            as a literal replacement <c>s</c> in the
            <c>appendReplacement</c> method of the <c>Matcher</c> class.
            The <c>String</c> produced will match the sequence of characters
            in <c>s</c> treated as a literal sequence. Slashes ('\') and
            dollar signs ('$') will be given no special meaning.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#quoteReplacement(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.quoteReplacement(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Region">
      <MemberSignature Language="VB.NET" Value="Public Function Region (start As Integer, end As Integer) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ Region(int start, int end);" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher Region (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher Region(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Region(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Region : int * int -&gt; Java.Util.Regex.Matcher" Usage="matcher.Region (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("region", "(II)Ljava/util/regex/Matcher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("region", "(II)Ljava/util/regex/Matcher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">The index to start searching at (inclusive)</param>
        <param name="end">The index to end searching at (exclusive)</param>
        <summary>Sets the limits of this matcher's region.</summary>
        <returns>this matcher</returns>
        <remarks>
          <para>Sets the limits of this matcher's region. The region is the part of the
            input sequence that will be searched to find a match. Invoking this
            method resets the matcher, and then sets the region to start at the
            index specified by the <c>start</c> parameter and end at the
            index specified by the <c>end</c> parameter.</para>
          <para>Depending on the transparency and anchoring being used (see
            <c>#useTransparentBounds(boolean) useTransparentBounds</c> and
            <c>#useAnchoringBounds(boolean) useAnchoringBounds</c>), certain
            constructs such as anchors may behave differently at or around the
            boundaries of the region.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#region(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.region(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegionEnd">
      <MemberSignature Language="VB.NET" Value="Public Function RegionEnd () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RegionEnd();" />
      <MemberSignature Language="C#" Value="public int RegionEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RegionEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.RegionEnd" />
      <MemberSignature Language="F#" Value="member this.RegionEnd : unit -&gt; int" Usage="matcher.RegionEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("regionEnd", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("regionEnd", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reports the end index (exclusive) of this matcher's region.</summary>
        <returns>the ending point of this matcher's region</returns>
        <remarks>
          <para>Reports the end index (exclusive) of this matcher's region.
            The searches this matcher conducts are limited to finding matches
            within <c>#regionStart() regionStart</c> (inclusive) and
            <c>#regionEnd() regionEnd</c> (exclusive).</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#regionEnd()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.regionEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegionStart">
      <MemberSignature Language="VB.NET" Value="Public Function RegionStart () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RegionStart();" />
      <MemberSignature Language="C#" Value="public int RegionStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RegionStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.RegionStart" />
      <MemberSignature Language="F#" Value="member this.RegionStart : unit -&gt; int" Usage="matcher.RegionStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("regionStart", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("regionStart", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reports the start index of this matcher's region.</summary>
        <returns>The starting point of this matcher's region</returns>
        <remarks>
          <para>Reports the start index of this matcher's region. The
            searches this matcher conducts are limited to finding matches
            within <c>#regionStart() regionStart</c> (inclusive) and
            <c>#regionEnd() regionEnd</c> (exclusive).</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#regionStart()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.regionStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceAll">
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceAll (replacer As IFunction) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReplaceAll(Java::Util::Functions::IFunction ^ replacer);" />
      <MemberSignature Language="C#" Value="public string ReplaceAll (Java.Util.Functions.IFunction replacer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReplaceAll(class Java.Util.Functions.IFunction replacer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.ReplaceAll(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="member this.ReplaceAll : Java.Util.Functions.IFunction -&gt; string" Usage="matcher.ReplaceAll replacer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replaceAll", "(Ljava/util/function/Function;)Ljava/lang/String;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replaceAll", "(Ljava/util/function/Function;)Ljava/lang/String;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replacer" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="replacer">The function to be applied to the match result of this matcher
                    that returns a replacement string.</param>
        <summary>Replaces every subsequence of the input sequence that matches the
            pattern with the result of applying the given replacer function to the
            match result of this matcher corresponding to that subsequence.</summary>
        <returns>The string constructed by replacing each matching subsequence
                     with the result of applying the replacer function to that
                     matched subsequence, substituting captured subsequences as
                     needed.</returns>
        <remarks>
          <para>Replaces every subsequence of the input sequence that matches the
            pattern with the result of applying the given replacer function to the
            match result of this matcher corresponding to that subsequence.
            Exceptions thrown by the function are relayed to the caller.</para>
          <para>This method first resets this matcher.  It then scans the input
            sequence looking for matches of the pattern.  Characters that are not
            part of any match are appended directly to the result string; each match
            is replaced in the result by the applying the replacer function that
            returns a replacement string.  Each replacement string may contain
            references to captured subsequences as in the <c>#appendReplacement
            appendReplacement</c> method.</para>
          <para>Note that backslashes (<c>\</c>) and dollar signs (<c>$</c>) in
            a replacement string may cause the results to be different than if it
            were being treated as a literal replacement string. Dollar signs may be
            treated as references to captured subsequences as described above, and
            backslashes are used to escape literal characters in the replacement
            string.</para>
          <para>Given the regular expression <c>dog</c>, the input
            <c>"zzzdogzzzdogzzz"</c>, and the function
            <c>mr -&gt; mr.group().toUpperCase()</c>, an invocation of this method on
            a matcher for that expression would yield the string
            <c>"zzzDOGzzzDOGzzz"</c>.</para>
          <para>Invoking this method changes this matcher's state.  If the matcher
            is to be used in further matching operations then it should first be
            reset.</para>
          <para>The replacer function should not modify this matcher's state during
            replacement.  This method will, on a best-effort basis, throw a
            <c>java.util.ConcurrentModificationException</c> if such modification is
            detected.</para>
          <para>The state of each match result passed to the replacer function is
            guaranteed to be constant only for the duration of the replacer function
            call and only if the replacer function does not modify this matcher's
            state.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#replaceAll(java.util.function.Function%3Cjava.util.regex.MatchResult,%20java.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.replaceAll(java.util.function.Function&lt;java.util.regex.MatchResult, java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAll">
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceAll (replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReplaceAll(System::String ^ replacement);" />
      <MemberSignature Language="C#" Value="public string ReplaceAll (string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReplaceAll(string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.ReplaceAll(System.String)" />
      <MemberSignature Language="F#" Value="member this.ReplaceAll : string -&gt; string" Usage="matcher.ReplaceAll replacement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replaceAll", "(Ljava/lang/String;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replaceAll", "(Ljava/lang/String;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="replacement">The replacement string</param>
        <summary>Replaces every subsequence of the input sequence that matches the
            pattern with the given replacement string.</summary>
        <returns>The string constructed by replacing each matching subsequence
                     by the replacement string, substituting captured subsequences
                     as needed</returns>
        <remarks>
          <para>Replaces every subsequence of the input sequence that matches the
            pattern with the given replacement string.</para>
          <para>This method first resets this matcher.  It then scans the input
            sequence looking for matches of the pattern.  Characters that are not
            part of any match are appended directly to the result string; each match
            is replaced in the result by the replacement string.  The replacement
            string may contain references to captured subsequences as in the <c>#appendReplacement appendReplacement</c> method.</para>
          <para>Note that backslashes (<c>\</c>) and dollar signs (<c>$</c>) in
            the replacement string may cause the results to be different than if it
            were being treated as a literal replacement string. Dollar signs may be
            treated as references to captured subsequences as described above, and
            backslashes are used to escape literal characters in the replacement
            string.</para>
          <para>Given the regular expression <c>a*b</c>, the input
            <c>"aabfooaabfooabfoob"</c>, and the replacement string
            <c>"-"</c>, an invocation of this method on a matcher for that
            expression would yield the string <c>"-foo-foo-foo-"</c>.</para>
          <para>Invoking this method changes this matcher's state.  If the matcher
            is to be used in further matching operations then it should first be
            reset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#replaceAll(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.replaceAll(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceFirst">
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceFirst (replacer As IFunction) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReplaceFirst(Java::Util::Functions::IFunction ^ replacer);" />
      <MemberSignature Language="C#" Value="public string ReplaceFirst (Java.Util.Functions.IFunction replacer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReplaceFirst(class Java.Util.Functions.IFunction replacer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.ReplaceFirst(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="member this.ReplaceFirst : Java.Util.Functions.IFunction -&gt; string" Usage="matcher.ReplaceFirst replacer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replaceFirst", "(Ljava/util/function/Function;)Ljava/lang/String;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replaceFirst", "(Ljava/util/function/Function;)Ljava/lang/String;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replacer" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="replacer">The function to be applied to the match result of this matcher
                    that returns a replacement string.</param>
        <summary>Replaces the first subsequence of the input sequence that matches the
            pattern with the result of applying the given replacer function to the
            match result of this matcher corresponding to that subsequence.</summary>
        <returns>The string constructed by replacing the first matching
                     subsequence with the result of applying the replacer function to
                     the matched subsequence, substituting captured subsequences as
                     needed.</returns>
        <remarks>
          <para>Replaces the first subsequence of the input sequence that matches the
            pattern with the result of applying the given replacer function to the
            match result of this matcher corresponding to that subsequence.
            Exceptions thrown by the replace function are relayed to the caller.</para>
          <para>This method first resets this matcher.  It then scans the input
            sequence looking for a match of the pattern.  Characters that are not
            part of the match are appended directly to the result string; the match
            is replaced in the result by the applying the replacer function that
            returns a replacement string.  The replacement string may contain
            references to captured subsequences as in the <c>#appendReplacement
            appendReplacement</c> method.</para>
          <para>Note that backslashes (<c>\</c>) and dollar signs (<c>$</c>) in
            the replacement string may cause the results to be different than if it
            were being treated as a literal replacement string. Dollar signs may be
            treated as references to captured subsequences as described above, and
            backslashes are used to escape literal characters in the replacement
            string.</para>
          <para>Given the regular expression <c>dog</c>, the input
            <c>"zzzdogzzzdogzzz"</c>, and the function
            <c>mr -&gt; mr.group().toUpperCase()</c>, an invocation of this method on
            a matcher for that expression would yield the string
            <c>"zzzDOGzzzdogzzz"</c>.</para>
          <para>Invoking this method changes this matcher's state.  If the matcher
            is to be used in further matching operations then it should first be
            reset.</para>
          <para>The replacer function should not modify this matcher's state during
            replacement.  This method will, on a best-effort basis, throw a
            <c>java.util.ConcurrentModificationException</c> if such modification is
            detected.</para>
          <para>The state of the match result passed to the replacer function is
            guaranteed to be constant only for the duration of the replacer function
            call and only if the replacer function does not modify this matcher's
            state.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#replaceFirst(java.util.function.Function%3Cjava.util.regex.MatchResult,%20java.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.replaceFirst(java.util.function.Function&lt;java.util.regex.MatchResult, java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFirst">
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceFirst (replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReplaceFirst(System::String ^ replacement);" />
      <MemberSignature Language="C#" Value="public string ReplaceFirst (string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReplaceFirst(string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.ReplaceFirst(System.String)" />
      <MemberSignature Language="F#" Value="member this.ReplaceFirst : string -&gt; string" Usage="matcher.ReplaceFirst replacement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replaceFirst", "(Ljava/lang/String;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replaceFirst", "(Ljava/lang/String;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="replacement">The replacement string</param>
        <summary>Replaces the first subsequence of the input sequence that matches the
            pattern with the given replacement string.</summary>
        <returns>The string constructed by replacing the first matching
                     subsequence by the replacement string, substituting captured
                     subsequences as needed</returns>
        <remarks>
          <para>Replaces the first subsequence of the input sequence that matches the
            pattern with the given replacement string.</para>
          <para>This method first resets this matcher.  It then scans the input
            sequence looking for a match of the pattern.  Characters that are not
            part of the match are appended directly to the result string; the match
            is replaced in the result by the replacement string.  The replacement
            string may contain references to captured subsequences as in the <c>#appendReplacement appendReplacement</c> method.</para>
          <para>Note that backslashes (<c>\</c>) and dollar signs (<c>$</c>) in
            the replacement string may cause the results to be different than if it
            were being treated as a literal replacement string. Dollar signs may be
            treated as references to captured subsequences as described above, and
            backslashes are used to escape literal characters in the replacement
            string.</para>
          <para>Given the regular expression <c>dog</c>, the input
            <c>"zzzdogzzzdogzzz"</c>, and the replacement string
            <c>"cat"</c>, an invocation of this method on a matcher for that
            expression would yield the string <c>"zzzcatzzzdogzzz"</c>.</para>
          <para>Invoking this method changes this matcher's state.  If the matcher
            is to be used in further matching operations then it should first be
            reset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#replaceFirst(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.replaceFirst(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequireEnd">
      <MemberSignature Language="VB.NET" Value="Public Function RequireEnd () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RequireEnd();" />
      <MemberSignature Language="C#" Value="public bool RequireEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequireEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.RequireEnd" />
      <MemberSignature Language="F#" Value="member this.RequireEnd : unit -&gt; bool" Usage="matcher.RequireEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requireEnd", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requireEnd", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if more input could change a positive match into a
            negative one.</summary>
        <returns>true iff more input could change a positive match into a
                     negative one.</returns>
        <remarks>
          <para>Returns true if more input could change a positive match into a
            negative one.</para>
          <para>If this method returns true, and a match was found, then more
            input could cause the match to be lost. If this method returns false
            and a match was found, then more input might change the match but the
            match won't be lost. If a match was not found, then requireEnd has no
            meaning.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#requireEnd()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.requireEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Function Reset () As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ Reset();" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Reset" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; Java.Util.Regex.Matcher" Usage="matcher.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()Ljava/util/regex/Matcher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()Ljava/util/regex/Matcher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this matcher.</summary>
        <returns>This matcher</returns>
        <remarks>
          <para>Resets this matcher.</para>
          <para>Resetting a matcher discards all of its explicit state information
            and sets its append position to zero. The matcher's region is set to the
            default region, which is its entire character sequence. The anchoring
            and transparency of this matcher's region boundaries are unaffected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#reset()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Function Reset (input As ICharSequence) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ Reset(Java::Lang::ICharSequence ^ input);" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher Reset (Java.Lang.ICharSequence input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher Reset(class Java.Lang.ICharSequence input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Reset(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="member this.Reset : Java.Lang.ICharSequence -&gt; Java.Util.Regex.Matcher" Usage="matcher.Reset input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="input">The new input character sequence</param>
        <summary>Resets this matcher with a new input sequence.</summary>
        <returns>This matcher</returns>
        <remarks>
          <para>Resets this matcher with a new input sequence.</para>
          <para>Resetting a matcher discards all of its explicit state information
            and sets its append position to zero.  The matcher's region is set to
            the default region, which is its entire character sequence.  The
            anchoring and transparency of this matcher's region boundaries are
            unaffected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#reset(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.reset(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Function Reset (input As String) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ Reset(System::String ^ input);" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher Reset (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher Reset(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Reset(System.String)" />
      <MemberSignature Language="F#" Value="member this.Reset : string -&gt; Java.Util.Regex.Matcher" Usage="matcher.Reset input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The new input character sequence</param>
        <summary>Resets this matcher with a new input sequence.</summary>
        <returns>This matcher</returns>
        <remarks>
          <para>Resets this matcher with a new input sequence.</para>
          <para>Resetting a matcher discards all of its explicit state information
            and sets its append position to zero.  The matcher's region is set to
            the default region, which is its entire character sequence.  The
            anchoring and transparency of this matcher's region boundaries are
            unaffected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#reset(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.reset(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="VB.NET" Value="Public Function Start () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Start();" />
      <MemberSignature Language="C#" Value="public int Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; int&#xA;override this.Start : unit -&gt; int" Usage="matcher.Start " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Regex.IMatchResult.Start</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the start index of the previous match.</summary>
        <returns>The index of the first character matched</returns>
        <remarks>
          <para>Returns the start index of the previous match.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#start()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="VB.NET" Value="Public Function Start (group As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Start(int group);" />
      <MemberSignature Language="C#" Value="public int Start (int group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Start(int32 group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Start(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Start : int -&gt; int&#xA;override this.Start : int -&gt; int" Usage="matcher.Start group" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Regex.IMatchResult.Start(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="group">The index of a capturing group in this matcher's pattern</param>
        <summary>Returns the start index of the subsequence captured by the given group
            during the previous match operation.</summary>
        <returns>The index of the first character captured by the group,
                     or <c>-1</c> if the match was successful but the group
                     itself did not match anything</returns>
        <remarks>
          <para>Returns the start index of the subsequence captured by the given group
            during the previous match operation.</para>
          <para>Capturing groups are indexed from left
            to right, starting at one.  Group zero denotes the entire pattern, so
            the expression <i>m.</i><c>start(0)</c> is equivalent to
            <i>m.</i><c>start()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#start(int)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.start(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="VB.NET" Value="Public Function Start (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Start(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public int Start (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Start(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.Start(System.String)" />
      <MemberSignature Language="F#" Value="member this.Start : string -&gt; int" Usage="matcher.Start name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "(Ljava/lang/String;)I", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "(Ljava/lang/String;)I", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of a named-capturing group in this matcher's pattern</param>
        <summary>Returns the start index of the subsequence captured by the given
            named-capturing group during the
            previous match operation.</summary>
        <returns>The index of the first character captured by the group,
                     or <c>-1</c> if the match was successful but the group
                     itself did not match anything</returns>
        <remarks>
          <para>Returns the start index of the subsequence captured by the given
            named-capturing group during the
            previous match operation.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#start(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.start(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Regex.Matcher.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Regex.Matcher.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Regex.Matcher.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Regex.Matcher.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToMatchResult">
      <MemberSignature Language="VB.NET" Value="Public Function ToMatchResult () As IMatchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::IMatchResult ^ ToMatchResult();" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.IMatchResult ToMatchResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.IMatchResult ToMatchResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.ToMatchResult" />
      <MemberSignature Language="F#" Value="member this.ToMatchResult : unit -&gt; Java.Util.Regex.IMatchResult" Usage="matcher.ToMatchResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toMatchResult", "()Ljava/util/regex/MatchResult;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toMatchResult", "()Ljava/util/regex/MatchResult;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.IMatchResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the match state of this matcher as a <c>MatchResult</c>.</summary>
        <returns>a <c>MatchResult</c> with the state of this matcher</returns>
        <remarks>
          <para>Returns the match state of this matcher as a <c>MatchResult</c>.
            The result is unaffected by subsequent operations performed upon this
            matcher.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#toMatchResult()" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.toMatchResult()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no successful match has been made.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAnchoringBounds">
      <MemberSignature Language="VB.NET" Value="Public Function UseAnchoringBounds (b As Boolean) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ UseAnchoringBounds(bool b);" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher UseAnchoringBounds (bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher UseAnchoringBounds(bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.UseAnchoringBounds(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.UseAnchoringBounds : bool -&gt; Java.Util.Regex.Matcher" Usage="matcher.UseAnchoringBounds b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("useAnchoringBounds", "(Z)Ljava/util/regex/Matcher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("useAnchoringBounds", "(Z)Ljava/util/regex/Matcher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="b">a boolean indicating whether or not to use anchoring bounds.</param>
        <summary>Sets the anchoring of region bounds for this matcher.</summary>
        <returns>this matcher</returns>
        <remarks>
          <para>Sets the anchoring of region bounds for this matcher.</para>
          <para>Invoking this method with an argument of <c>true</c> will set this
            matcher to use <i>anchoring</i> bounds. If the boolean
            argument is <c>false</c>, then <i>non-anchoring</i> bounds will be
            used.</para>
          <para>Using anchoring bounds, the boundaries of this
            matcher's region match anchors such as ^ and $.</para>
          <para>Without anchoring bounds, the boundaries of this
            matcher's region will not match anchors such as ^ and $.</para>
          <para>By default, a matcher uses anchoring region boundaries.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#useAnchoringBounds(boolean)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.useAnchoringBounds(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UsePattern">
      <MemberSignature Language="VB.NET" Value="Public Function UsePattern (newPattern As Pattern) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ UsePattern(Java::Util::Regex::Pattern ^ newPattern);" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher UsePattern (Java.Util.Regex.Pattern newPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher UsePattern(class Java.Util.Regex.Pattern newPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.UsePattern(Java.Util.Regex.Pattern)" />
      <MemberSignature Language="F#" Value="member this.UsePattern : Java.Util.Regex.Pattern -&gt; Java.Util.Regex.Matcher" Usage="matcher.UsePattern newPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("usePattern", "(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("usePattern", "(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPattern" Type="Java.Util.Regex.Pattern" />
      </Parameters>
      <Docs>
        <param name="newPattern">The new pattern used by this matcher</param>
        <summary>Changes the <c>Pattern</c> that this <c>Matcher</c> uses to
            find matches with.</summary>
        <returns>This matcher</returns>
        <remarks>
          <para>Changes the <c>Pattern</c> that this <c>Matcher</c> uses to
            find matches with.</para>
          <para>This method causes this matcher to lose information
            about the groups of the last match that occurred. The
            matcher's position in the input is maintained and its
            last append position is unaffected.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#usePattern(java.util.regex.Pattern)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.usePattern(java.util.regex.Pattern)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UseTransparentBounds">
      <MemberSignature Language="VB.NET" Value="Public Function UseTransparentBounds (b As Boolean) As Matcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Util::Regex::Matcher ^ UseTransparentBounds(bool b);" />
      <MemberSignature Language="C#" Value="public Java.Util.Regex.Matcher UseTransparentBounds (bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Regex.Matcher UseTransparentBounds(bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Regex.Matcher.UseTransparentBounds(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.UseTransparentBounds : bool -&gt; Java.Util.Regex.Matcher" Usage="matcher.UseTransparentBounds b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("useTransparentBounds", "(Z)Ljava/util/regex/Matcher;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("useTransparentBounds", "(Z)Ljava/util/regex/Matcher;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Matcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="b">a boolean indicating whether to use opaque or transparent
                    regions</param>
        <summary>Sets the transparency of region bounds for this matcher.</summary>
        <returns>this matcher</returns>
        <remarks>
          <para>Sets the transparency of region bounds for this matcher.</para>
          <para>Invoking this method with an argument of <c>true</c> will set this
            matcher to use <i>transparent</i> bounds. If the boolean
            argument is <c>false</c>, then <i>opaque</i> bounds will be used.</para>
          <para>Using transparent bounds, the boundaries of this
            matcher's region are transparent to lookahead, lookbehind,
            and boundary matching constructs. Those constructs can see beyond the
            boundaries of the region to see if a match is appropriate.</para>
          <para>Using opaque bounds, the boundaries of this matcher's
            region are opaque to lookahead, lookbehind, and boundary matching
            constructs that may try to see beyond them. Those constructs cannot
            look past the boundaries so they will fail to match anything outside
            of the region.</para>
          <para>By default, a matcher uses opaque bounds.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/regex/Matcher#useTransparentBounds(boolean)" title="Reference documentation">Java documentation for <code>java.util.regex.Matcher.useTransparentBounds(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
