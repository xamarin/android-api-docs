<Type Name="MethodHandles" FullName="Java.Lang.Invoke.MethodHandles">
  <TypeSignature Language="C#" Value="public class MethodHandles : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodHandles extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Invoke.MethodHandles" />
  <TypeSignature Language="F#" Value="type MethodHandles = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/invoke/MethodHandles", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/invoke/MethodHandles", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class consists exclusively of static methods that operate on or return
            method handles.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MethodHandles (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Lang.Invoke.MethodHandles : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.Invoke.MethodHandles" Usage="new Java.Lang.Invoke.MethodHandles (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElementGetter">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? ArrayElementGetter (Java.Lang.Class? arrayClass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle ArrayElementGetter(class Java.Lang.Class arrayClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.ArrayElementGetter(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member ArrayElementGetter : Java.Lang.Class -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.ArrayElementGetter arrayClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("arrayElementGetter", "(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("arrayElementGetter", "(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="arrayClass">an array type</param>
        <summary>Produces a method handle giving read access to elements of an array.</summary>
        <returns>a method handle which can load values from the given array type</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#arrayElementGetter(java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.arrayElementGetter(java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElementSetter">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? ArrayElementSetter (Java.Lang.Class? arrayClass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle ArrayElementSetter(class Java.Lang.Class arrayClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.ArrayElementSetter(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member ArrayElementSetter : Java.Lang.Class -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.ArrayElementSetter arrayClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("arrayElementSetter", "(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("arrayElementSetter", "(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="arrayClass">the class of an array</param>
        <summary>Produces a method handle giving write access to elements of an array.</summary>
        <returns>a method handle which can store values into the array type</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#arrayElementSetter(java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.arrayElementSetter(java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchException">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? CatchException (Java.Lang.Invoke.MethodHandle? target, Java.Lang.Class? exType, Java.Lang.Invoke.MethodHandle? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle CatchException(class Java.Lang.Invoke.MethodHandle target, class Java.Lang.Class exType, class Java.Lang.Invoke.MethodHandle handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.CatchException(Java.Lang.Invoke.MethodHandle,Java.Lang.Class,Java.Lang.Invoke.MethodHandle)" />
      <MemberSignature Language="F#" Value="static member CatchException : Java.Lang.Invoke.MethodHandle * Java.Lang.Class * Java.Lang.Invoke.MethodHandle -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.CatchException (target, exType, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("catchException", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("catchException", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="exType" Type="Java.Lang.Class" />
        <Parameter Name="handler" Type="Java.Lang.Invoke.MethodHandle" />
      </Parameters>
      <Docs>
        <param name="target">method handle to call</param>
        <param name="exType">the type of exception which the handler will catch</param>
        <param name="handler">method handle to call if a matching exception is thrown</param>
        <summary>Makes a method handle which adapts a target method handle,
            by running it inside an exception handler.</summary>
        <returns>method handle which incorporates the specified try/catch logic</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#catchException(java.lang.invoke.MethodHandle,%20java.lang.Class,%20java.lang.invoke.MethodHandle)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.catchException(java.lang.invoke.MethodHandle, java.lang.Class, java.lang.invoke.MethodHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectArguments">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? CollectArguments (Java.Lang.Invoke.MethodHandle? target, int pos, Java.Lang.Invoke.MethodHandle? filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle CollectArguments(class Java.Lang.Invoke.MethodHandle target, int32 pos, class Java.Lang.Invoke.MethodHandle filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.CollectArguments(Java.Lang.Invoke.MethodHandle,System.Int32,Java.Lang.Invoke.MethodHandle)" />
      <MemberSignature Language="F#" Value="static member CollectArguments : Java.Lang.Invoke.MethodHandle * int * Java.Lang.Invoke.MethodHandle -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.CollectArguments (target, pos, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("collectArguments", "(Ljava/lang/invoke/MethodHandle;ILjava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("collectArguments", "(Ljava/lang/invoke/MethodHandle;ILjava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="filter" Type="Java.Lang.Invoke.MethodHandle" />
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke after filtering the subsequence of arguments</param>
        <param name="pos">the position of the first adapter argument to pass to the filter,
                       and/or the target argument which receives the result of the filter</param>
        <param name="filter">method handle to call on the subsequence of arguments</param>
        <summary>Adapts a target method handle by pre-processing
            a sub-sequence of its arguments with a filter (another method handle).</summary>
        <returns>method handle which incorporates the specified argument subsequence filtering logic</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#collectArguments(java.lang.invoke.MethodHandle,%20int,%20java.lang.invoke.MethodHandle)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.collectArguments(java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? Constant (Java.Lang.Class? type, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle Constant(class Java.Lang.Class type, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.Constant(Java.Lang.Class,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="static member Constant : Java.Lang.Class * Java.Lang.Object -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.Constant (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("constant", "(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("constant", "(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Class" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="type">the return type of the desired method handle</param>
        <param name="value">the value to return</param>
        <summary>Produces a method handle of the requested return type which returns the given
            constant value every time it is invoked.</summary>
        <returns>a method handle of the given return type and no arguments, which always returns the given value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#constant(java.lang.Class,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.constant(java.lang.Class, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropArguments">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? DropArguments (Java.Lang.Invoke.MethodHandle? target, int pos, params Java.Lang.Class[]? valueTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle DropArguments(class Java.Lang.Invoke.MethodHandle target, int32 pos, class Java.Lang.Class[] valueTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.DropArguments(Java.Lang.Invoke.MethodHandle,System.Int32,Java.Lang.Class[])" />
      <MemberSignature Language="F#" Value="static member DropArguments : Java.Lang.Invoke.MethodHandle * int * Java.Lang.Class[] -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.DropArguments (target, pos, valueTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dropArguments", "(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dropArguments", "(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="valueTypes" Type="Java.Lang.Class[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke after the arguments are dropped</param>
        <param name="valueTypes">the type(s) of the argument(s) to drop</param>
        <param name="pos">position of first argument to drop (zero for the leftmost)</param>
        <summary>Produces a method handle which will discard some dummy arguments
            before calling some other specified <i>target</i> method handle.</summary>
        <returns>a method handle which drops arguments of the given types,
                    before calling the original method handle</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#dropArguments(java.lang.invoke.MethodHandle,%20int,%20java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.dropArguments(java.lang.invoke.MethodHandle, int, java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropArguments">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? DropArguments (Java.Lang.Invoke.MethodHandle? target, int pos, System.Collections.Generic.IList&lt;Java.Lang.Class&gt;? valueTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle DropArguments(class Java.Lang.Invoke.MethodHandle target, int32 pos, class System.Collections.Generic.IList`1&lt;class Java.Lang.Class&gt; valueTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.DropArguments(Java.Lang.Invoke.MethodHandle,System.Int32,System.Collections.Generic.IList{Java.Lang.Class})" />
      <MemberSignature Language="F#" Value="static member DropArguments : Java.Lang.Invoke.MethodHandle * int * System.Collections.Generic.IList&lt;Java.Lang.Class&gt; -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.DropArguments (target, pos, valueTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dropArguments", "(Ljava/lang/invoke/MethodHandle;ILjava/util/List;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dropArguments", "(Ljava/lang/invoke/MethodHandle;ILjava/util/List;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="valueTypes" Type="System.Collections.Generic.IList&lt;Java.Lang.Class&gt;" />
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke after the arguments are dropped</param>
        <param name="valueTypes">the type(s) of the argument(s) to drop</param>
        <param name="pos">position of first argument to drop (zero for the leftmost)</param>
        <summary>Produces a method handle which will discard some dummy arguments
            before calling some other specified <i>target</i> method handle.</summary>
        <returns>a method handle which drops arguments of the given types,
                    before calling the original method handle</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#dropArguments(java.lang.invoke.MethodHandle,%20int,%20java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.dropArguments(java.lang.invoke.MethodHandle, int, java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactInvoker">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? ExactInvoker (Java.Lang.Invoke.MethodType? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle ExactInvoker(class Java.Lang.Invoke.MethodType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.ExactInvoker(Java.Lang.Invoke.MethodType)" />
      <MemberSignature Language="F#" Value="static member ExactInvoker : Java.Lang.Invoke.MethodType -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.ExactInvoker type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exactInvoker", "(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exactInvoker", "(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Invoke.MethodType" />
      </Parameters>
      <Docs>
        <param name="type">the desired target type</param>
        <summary>Produces a special &lt;em&gt;invoker method handle&lt;/em&gt; which can be used to
            invoke any method handle of the given type, as if by <c>MethodHandle#invokeExact invokeExact</c>.</summary>
        <returns>a method handle suitable for invoking any method handle of the given type</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#exactInvoker(java.lang.invoke.MethodType)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.exactInvoker(java.lang.invoke.MethodType)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCastArguments">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? ExplicitCastArguments (Java.Lang.Invoke.MethodHandle? target, Java.Lang.Invoke.MethodType? newType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle ExplicitCastArguments(class Java.Lang.Invoke.MethodHandle target, class Java.Lang.Invoke.MethodType newType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.ExplicitCastArguments(Java.Lang.Invoke.MethodHandle,Java.Lang.Invoke.MethodType)" />
      <MemberSignature Language="F#" Value="static member ExplicitCastArguments : Java.Lang.Invoke.MethodHandle * Java.Lang.Invoke.MethodType -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.ExplicitCastArguments (target, newType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("explicitCastArguments", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("explicitCastArguments", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="newType" Type="Java.Lang.Invoke.MethodType" />
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke after arguments are retyped</param>
        <param name="newType">the expected type of the new method handle</param>
        <summary>Produces a method handle which adapts the type of the
            given method handle to a new type by pairwise argument and return type conversion.</summary>
        <returns>a method handle which delegates to the target after performing
                      any necessary argument conversions, and arranges for any
                      necessary return value conversions</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#explicitCastArguments(java.lang.invoke.MethodHandle,%20java.lang.invoke.MethodType)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.explicitCastArguments(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterArguments">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? FilterArguments (Java.Lang.Invoke.MethodHandle? target, int pos, params Java.Lang.Invoke.MethodHandle[]? filters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle FilterArguments(class Java.Lang.Invoke.MethodHandle target, int32 pos, class Java.Lang.Invoke.MethodHandle[] filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.FilterArguments(Java.Lang.Invoke.MethodHandle,System.Int32,Java.Lang.Invoke.MethodHandle[])" />
      <MemberSignature Language="F#" Value="static member FilterArguments : Java.Lang.Invoke.MethodHandle * int * Java.Lang.Invoke.MethodHandle[] -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.FilterArguments (target, pos, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("filterArguments", "(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("filterArguments", "(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="filters" Type="Java.Lang.Invoke.MethodHandle[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke after arguments are filtered</param>
        <param name="pos">the position of the first argument to filter</param>
        <param name="filters">method handles to call initially on filtered arguments</param>
        <summary>Adapts a target method handle by pre-processing
            one or more of its arguments, each with its own unary filter function,
            and then calling the target with each pre-processed argument
            replaced by the result of its corresponding filter function.</summary>
        <returns>method handle which incorporates the specified argument filtering logic</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#filterArguments(java.lang.invoke.MethodHandle,%20int,%20java.lang.invoke.MethodHandle)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.filterArguments(java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterReturnValue">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? FilterReturnValue (Java.Lang.Invoke.MethodHandle? target, Java.Lang.Invoke.MethodHandle? filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle FilterReturnValue(class Java.Lang.Invoke.MethodHandle target, class Java.Lang.Invoke.MethodHandle filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.FilterReturnValue(Java.Lang.Invoke.MethodHandle,Java.Lang.Invoke.MethodHandle)" />
      <MemberSignature Language="F#" Value="static member FilterReturnValue : Java.Lang.Invoke.MethodHandle * Java.Lang.Invoke.MethodHandle -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.FilterReturnValue (target, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("filterReturnValue", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("filterReturnValue", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="filter" Type="Java.Lang.Invoke.MethodHandle" />
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke before filtering the return value</param>
        <param name="filter">method handle to call on the return value</param>
        <summary>Adapts a target method handle by post-processing
            its return value (if any) with a filter (another method handle).</summary>
        <returns>method handle which incorporates the specified return value filtering logic</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#filterReturnValue(java.lang.invoke.MethodHandle,%20java.lang.invoke.MethodHandle)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.filterReturnValue(java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldArguments">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? FoldArguments (Java.Lang.Invoke.MethodHandle? target, Java.Lang.Invoke.MethodHandle? combiner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle FoldArguments(class Java.Lang.Invoke.MethodHandle target, class Java.Lang.Invoke.MethodHandle combiner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.FoldArguments(Java.Lang.Invoke.MethodHandle,Java.Lang.Invoke.MethodHandle)" />
      <MemberSignature Language="F#" Value="static member FoldArguments : Java.Lang.Invoke.MethodHandle * Java.Lang.Invoke.MethodHandle -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.FoldArguments (target, combiner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("foldArguments", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("foldArguments", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="combiner" Type="Java.Lang.Invoke.MethodHandle" />
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke after arguments are combined</param>
        <param name="combiner">method handle to call initially on the incoming arguments</param>
        <summary>Adapts a target method handle by pre-processing
            some of its arguments, and then calling the target with
            the result of the pre-processing, inserted into the original
            sequence of arguments.</summary>
        <returns>method handle which incorporates the specified argument folding logic</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#foldArguments(java.lang.invoke.MethodHandle,%20java.lang.invoke.MethodHandle)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.foldArguments(java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GuardWithTest">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? GuardWithTest (Java.Lang.Invoke.MethodHandle? test, Java.Lang.Invoke.MethodHandle? target, Java.Lang.Invoke.MethodHandle? fallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle GuardWithTest(class Java.Lang.Invoke.MethodHandle test, class Java.Lang.Invoke.MethodHandle target, class Java.Lang.Invoke.MethodHandle fallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.GuardWithTest(Java.Lang.Invoke.MethodHandle,Java.Lang.Invoke.MethodHandle,Java.Lang.Invoke.MethodHandle)" />
      <MemberSignature Language="F#" Value="static member GuardWithTest : Java.Lang.Invoke.MethodHandle * Java.Lang.Invoke.MethodHandle * Java.Lang.Invoke.MethodHandle -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.GuardWithTest (test, target, fallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("guardWithTest", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("guardWithTest", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="fallback" Type="Java.Lang.Invoke.MethodHandle" />
      </Parameters>
      <Docs>
        <param name="test">method handle used for test, must return boolean</param>
        <param name="target">method handle to call if test passes</param>
        <param name="fallback">method handle to call if test fails</param>
        <summary>Makes a method handle which adapts a target method handle,
            by guarding it with a test, a boolean-valued method handle.</summary>
        <returns>method handle which incorporates the specified if/then/else logic</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#guardWithTest(java.lang.invoke.MethodHandle,%20java.lang.invoke.MethodHandle,%20java.lang.invoke.MethodHandle)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? Identity (Java.Lang.Class? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle Identity(class Java.Lang.Class type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.Identity(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member Identity : Java.Lang.Class -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.Identity type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("identity", "(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("identity", "(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertArguments">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? InsertArguments (Java.Lang.Invoke.MethodHandle? target, int pos, params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle InsertArguments(class Java.Lang.Invoke.MethodHandle target, int32 pos, class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.InsertArguments(Java.Lang.Invoke.MethodHandle,System.Int32,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member InsertArguments : Java.Lang.Invoke.MethodHandle * int * Java.Lang.Object[] -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.InsertArguments (target, pos, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insertArguments", "(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insertArguments", "(Ljava/lang/invoke/MethodHandle;I[Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke after the argument is inserted</param>
        <param name="pos">where to insert the argument (zero for the first)</param>
        <param name="values">the series of arguments to insert</param>
        <summary>Provides a target method handle with one or more &lt;em&gt;bound arguments&lt;/em&gt;
            in advance of the method handle's invocation.</summary>
        <returns>a method handle which inserts an additional argument,
                    before calling the original method handle</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#insertArguments(java.lang.invoke.MethodHandle,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.insertArguments(java.lang.invoke.MethodHandle, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeLookup">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandles.Lookup? InvokeLookup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandles/Lookup InvokeLookup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.InvokeLookup" />
      <MemberSignature Language="F#" Value="static member InvokeLookup : unit -&gt; Java.Lang.Invoke.MethodHandles.Lookup" Usage="Java.Lang.Invoke.MethodHandles.InvokeLookup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lookup", "()Ljava/lang/invoke/MethodHandles$Lookup;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lookup", "()Ljava/lang/invoke/MethodHandles$Lookup;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandles+Lookup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Lookup lookup object</c> with
            full capabilities to emulate all supported bytecode behaviors of the caller.</summary>
        <returns>a lookup object for the caller of this method, with private access</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#lookup()" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.lookup()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? Invoker (Java.Lang.Invoke.MethodType? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle Invoker(class Java.Lang.Invoke.MethodType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.Invoker(Java.Lang.Invoke.MethodType)" />
      <MemberSignature Language="F#" Value="static member Invoker : Java.Lang.Invoke.MethodType -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.Invoker type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invoker", "(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invoker", "(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Invoke.MethodType" />
      </Parameters>
      <Docs>
        <param name="type">the desired target type</param>
        <summary>Produces a special &lt;em&gt;invoker method handle&lt;/em&gt; which can be used to
            invoke any method handle compatible with the given type, as if by <c>MethodHandle#invoke invoke</c>.</summary>
        <returns>a method handle suitable for invoking any method handle convertible to the given type</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#invoker(java.lang.invoke.MethodType)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.invoker(java.lang.invoke.MethodType)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Invoke.MethodHandles.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Invoke.MethodHandles.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermuteArguments">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? PermuteArguments (Java.Lang.Invoke.MethodHandle? target, Java.Lang.Invoke.MethodType? newType, params int[]? reorder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle PermuteArguments(class Java.Lang.Invoke.MethodHandle target, class Java.Lang.Invoke.MethodType newType, int32[] reorder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.PermuteArguments(Java.Lang.Invoke.MethodHandle,Java.Lang.Invoke.MethodType,System.Int32[])" />
      <MemberSignature Language="F#" Value="static member PermuteArguments : Java.Lang.Invoke.MethodHandle * Java.Lang.Invoke.MethodType * int[] -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.PermuteArguments (target, newType, reorder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("permuteArguments", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;[I)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("permuteArguments", "(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;[I)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
        <Parameter Name="newType" Type="Java.Lang.Invoke.MethodType" />
        <Parameter Name="reorder" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="target">the method handle to invoke after arguments are reordered</param>
        <param name="newType">the expected type of the new method handle</param>
        <param name="reorder">an index array which controls the reordering</param>
        <summary>Produces a method handle which adapts the calling sequence of the
            given method handle to a new type, by reordering the arguments.</summary>
        <returns>a method handle which delegates to the target after it
                      drops unused arguments and moves and/or duplicates the other arguments</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#permuteArguments(java.lang.invoke.MethodHandle,%20java.lang.invoke.MethodType,%20int)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.permuteArguments(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicLookup">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandles.Lookup? PublicLookup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandles/Lookup PublicLookup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.PublicLookup" />
      <MemberSignature Language="F#" Value="static member PublicLookup : unit -&gt; Java.Lang.Invoke.MethodHandles.Lookup" Usage="Java.Lang.Invoke.MethodHandles.PublicLookup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("publicLookup", "()Ljava/lang/invoke/MethodHandles$Lookup;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("publicLookup", "()Ljava/lang/invoke/MethodHandles$Lookup;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandles+Lookup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Lookup lookup object</c> which is trusted minimally.</summary>
        <returns>a lookup object which is trusted minimally</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#publicLookup()" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.publicLookup()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectAs">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object? ReflectAs (Java.Lang.Class? expected, Java.Lang.Invoke.MethodHandle? target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Object ReflectAs(class Java.Lang.Class expected, class Java.Lang.Invoke.MethodHandle target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.ReflectAs(Java.Lang.Class,Java.Lang.Invoke.MethodHandle)" />
      <MemberSignature Language="F#" Value="static member ReflectAs : Java.Lang.Class * Java.Lang.Invoke.MethodHandle -&gt; Java.Lang.Object" Usage="Java.Lang.Invoke.MethodHandles.ReflectAs (expected, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reflectAs", "(Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;)Ljava/lang/reflect/Member;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reflectAs", "(Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;)Ljava/lang/reflect/Member;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.reflect.Member" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.reflect.Member" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="Java.Lang.Class" />
        <Parameter Name="target" Type="Java.Lang.Invoke.MethodHandle" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the desired type of the result, either <c>Member</c> or a subtype</param>
        <param name="target">a direct method handle to crack into symbolic reference components</param>
        <param name="expected">a class object representing the desired result type <c>T</c></param>
        <summary>Performs an unchecked "crack" of a
            &lt;a href="MethodHandleInfo.</summary>
        <returns>a reference to the method, constructor, or field object</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#reflectAs(java.lang.Class,%20java.lang.invoke.MethodHandle)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.reflectAs(java.lang.Class, java.lang.invoke.MethodHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpreadInvoker">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? SpreadInvoker (Java.Lang.Invoke.MethodType? type, int leadingArgCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle SpreadInvoker(class Java.Lang.Invoke.MethodType type, int32 leadingArgCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.SpreadInvoker(Java.Lang.Invoke.MethodType,System.Int32)" />
      <MemberSignature Language="F#" Value="static member SpreadInvoker : Java.Lang.Invoke.MethodType * int -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.SpreadInvoker (type, leadingArgCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("spreadInvoker", "(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("spreadInvoker", "(Ljava/lang/invoke/MethodType;I)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Invoke.MethodType" />
        <Parameter Name="leadingArgCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">the desired target type</param>
        <param name="leadingArgCount">number of fixed arguments, to be passed unchanged to the target</param>
        <summary>Produces a method handle which will invoke any method handle of the
            given <c>type</c>, with a given number of trailing arguments replaced by
            a single trailing <c>Object[]</c> array.</summary>
        <returns>a method handle suitable for invoking any method handle of the given type</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#spreadInvoker(java.lang.invoke.MethodType,%20int)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.spreadInvoker(java.lang.invoke.MethodType, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Invoke.MethodHandles.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Invoke.MethodHandles.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Invoke.MethodHandles.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Invoke.MethodHandles.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public static Java.Lang.Invoke.MethodHandle? ThrowException (Java.Lang.Class? returnType, Java.Lang.Class? exType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Invoke.MethodHandle ThrowException(class Java.Lang.Class returnType, class Java.Lang.Class exType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandles.ThrowException(Java.Lang.Class,Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member ThrowException : Java.Lang.Class * Java.Lang.Class -&gt; Java.Lang.Invoke.MethodHandle" Usage="Java.Lang.Invoke.MethodHandles.ThrowException (returnType, exType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("throwException", "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("throwException", "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="Java.Lang.Class" />
        <Parameter Name="exType" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="returnType">the return type of the desired method handle</param>
        <param name="exType">the parameter type of the desired method handle</param>
        <summary>Produces a method handle which will throw exceptions of the given <c>exType</c>.</summary>
        <returns>method handle which can throw the given exceptions</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandles#throwException(java.lang.Class,%20java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandles.throwException(java.lang.Class, java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
