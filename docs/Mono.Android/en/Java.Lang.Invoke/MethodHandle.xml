<Type Name="MethodHandle" FullName="Java.Lang.Invoke.MethodHandle">
  <TypeSignature Language="F#" Value="type MethodHandle = class&#xA;    inherit Object" />
  <TypeSignature Language="C#" Value="public abstract class MethodHandle : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MethodHandle extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Invoke.MethodHandle" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/invoke/MethodHandle", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A method handle is a typed, directly executable reference to an underlying method,
            constructor, field, or similar low-level operation, with optional
            transformations of arguments or return values.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Java.Lang.Invoke.MethodHandle : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.Invoke.MethodHandle" Usage="new Java.Lang.Invoke.MethodHandle (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected MethodHandle (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsCollector">
      <MemberSignature Language="F#" Value="abstract member AsCollector : Java.Lang.Class * int -&gt; Java.Lang.Invoke.MethodHandle&#xA;override this.AsCollector : Java.Lang.Class * int -&gt; Java.Lang.Invoke.MethodHandle" Usage="methodHandle.AsCollector (arrayType, arrayLength)" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Invoke.MethodHandle? AsCollector (Java.Lang.Class? arrayType, int arrayLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Invoke.MethodHandle AsCollector(class Java.Lang.Class arrayType, int32 arrayLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.AsCollector(Java.Lang.Class,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asCollector", "(Ljava/lang/Class;I)Ljava/lang/invoke/MethodHandle;", "GetAsCollector_Ljava_lang_Class_IHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayType" Type="Java.Lang.Class" />
        <Parameter Name="arrayLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arrayType">often <c>Object[]</c>, the type of the array argument which will collect the arguments</param>
        <param name="arrayLength">the number of arguments to collect into a new array argument</param>
        <summary>Makes an &lt;em&gt;array-collecting&lt;/em&gt; method handle, which accepts a given number of trailing
            positional arguments and collects them into an array argument.</summary>
        <returns>a new method handle which collects some trailing argument
                    into an array, before calling the original method handle</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#asCollector(java.lang.Class,%20int)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.asCollector(java.lang.Class, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsFixedArity">
      <MemberSignature Language="F#" Value="abstract member AsFixedArity : unit -&gt; Java.Lang.Invoke.MethodHandle&#xA;override this.AsFixedArity : unit -&gt; Java.Lang.Invoke.MethodHandle" Usage="methodHandle.AsFixedArity " />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Invoke.MethodHandle? AsFixedArity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Invoke.MethodHandle AsFixedArity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.AsFixedArity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asFixedArity", "()Ljava/lang/invoke/MethodHandle;", "GetAsFixedArityHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Makes a &lt;em&gt;fixed arity&lt;/em&gt; method handle which is otherwise
            equivalent to the current method handle.</summary>
        <returns>a new method handle which accepts only a fixed number of arguments</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#asFixedArity()" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.asFixedArity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsSpreader">
      <MemberSignature Language="F#" Value="abstract member AsSpreader : Java.Lang.Class * int -&gt; Java.Lang.Invoke.MethodHandle&#xA;override this.AsSpreader : Java.Lang.Class * int -&gt; Java.Lang.Invoke.MethodHandle" Usage="methodHandle.AsSpreader (arrayType, arrayLength)" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Invoke.MethodHandle? AsSpreader (Java.Lang.Class? arrayType, int arrayLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Invoke.MethodHandle AsSpreader(class Java.Lang.Class arrayType, int32 arrayLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.AsSpreader(Java.Lang.Class,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asSpreader", "(Ljava/lang/Class;I)Ljava/lang/invoke/MethodHandle;", "GetAsSpreader_Ljava_lang_Class_IHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayType" Type="Java.Lang.Class" />
        <Parameter Name="arrayLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arrayType">usually <c>Object[]</c>, the type of the array argument from which to extract the spread arguments</param>
        <param name="arrayLength">the number of arguments to spread from an incoming array argument</param>
        <summary>Makes an &lt;em&gt;array-spreading&lt;/em&gt; method handle, which accepts a trailing array argument
            and spreads its elements as positional arguments.</summary>
        <returns>a new method handle which spreads its final array argument,
                    before calling the original method handle</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#asSpreader(java.lang.Class,%20int)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.asSpreader(java.lang.Class, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsType">
      <MemberSignature Language="F#" Value="abstract member AsType : Java.Lang.Invoke.MethodType -&gt; Java.Lang.Invoke.MethodHandle&#xA;override this.AsType : Java.Lang.Invoke.MethodType -&gt; Java.Lang.Invoke.MethodHandle" Usage="methodHandle.AsType newType" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Invoke.MethodHandle? AsType (Java.Lang.Invoke.MethodType? newType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Invoke.MethodHandle AsType(class Java.Lang.Invoke.MethodType newType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.AsType(Java.Lang.Invoke.MethodType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asType", "(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;", "GetAsType_Ljava_lang_invoke_MethodType_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newType" Type="Java.Lang.Invoke.MethodType" />
      </Parameters>
      <Docs>
        <param name="newType">the expected type of the new method handle</param>
        <summary>Produces an adapter method handle which adapts the type of the
            current method handle to a new type.</summary>
        <returns>a method handle which delegates to <c>this</c> after performing
                      any necessary argument conversions, and arranges for any
                      necessary return value conversions</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#asType(java.lang.invoke.MethodType)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsVarargsCollector">
      <MemberSignature Language="F#" Value="abstract member AsVarargsCollector : Java.Lang.Class -&gt; Java.Lang.Invoke.MethodHandle&#xA;override this.AsVarargsCollector : Java.Lang.Class -&gt; Java.Lang.Invoke.MethodHandle" Usage="methodHandle.AsVarargsCollector arrayType" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Invoke.MethodHandle? AsVarargsCollector (Java.Lang.Class? arrayType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Invoke.MethodHandle AsVarargsCollector(class Java.Lang.Class arrayType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.AsVarargsCollector(Java.Lang.Class)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asVarargsCollector", "(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;", "GetAsVarargsCollector_Ljava_lang_Class_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayType" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="arrayType">often <c>Object[]</c>, the type of the array argument which will collect the arguments</param>
        <summary>Makes a &lt;em&gt;variable arity&lt;/em&gt; adapter which is able to accept
            any number of trailing positional arguments and collect them
            into an array argument.</summary>
        <returns>a new method handle which can collect any number of trailing arguments
                    into an array, before calling the original method handle</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#asVarargsCollector(java.lang.Class)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.asVarargsCollector(java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindTo">
      <MemberSignature Language="F#" Value="abstract member BindTo : Java.Lang.Object -&gt; Java.Lang.Invoke.MethodHandle&#xA;override this.BindTo : Java.Lang.Object -&gt; Java.Lang.Invoke.MethodHandle" Usage="methodHandle.BindTo x" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Invoke.MethodHandle? BindTo (Java.Lang.Object? x);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Invoke.MethodHandle BindTo(class Java.Lang.Object x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.BindTo(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bindTo", "(Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;", "GetBindTo_Ljava_lang_Object_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="x">the value to bind to the first argument of the target</param>
        <summary>Binds a value <c>x</c> to the first argument of a method handle, without invoking it.</summary>
        <returns>a new method handle which prepends the given value to the incoming
                    argument list, before calling the original method handle</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#bindTo(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.bindTo(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="F#" Value="member this.Invoke : Java.Lang.Object[] -&gt; Java.Lang.Object" Usage="methodHandle.Invoke args" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Invoke (params Java.Lang.Object[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Invoke(class Java.Lang.Object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.Invoke(Java.Lang.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invoke", "([Ljava/lang/Object;)Ljava/lang/Object;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args">the signature-polymorphic parameter list, statically represented using varargs</param>
        <summary>Invokes the method handle, allowing any caller type descriptor,
            and optionally performing conversions on arguments and return values.</summary>
        <returns>the signature-polymorphic result, statically represented using <c>Object</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#invoke(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.invoke(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeExact">
      <MemberSignature Language="F#" Value="member this.InvokeExact : Java.Lang.Object[] -&gt; Java.Lang.Object" Usage="methodHandle.InvokeExact args" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object? InvokeExact (params Java.Lang.Object[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object InvokeExact(class Java.Lang.Object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.InvokeExact(Java.Lang.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeExact", "([Ljava/lang/Object;)Ljava/lang/Object;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args">the signature-polymorphic parameter list, statically represented using varargs</param>
        <summary>Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match.</summary>
        <returns>the signature-polymorphic result, statically represented using <c>Object</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#invokeExact(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.invokeExact(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeWithArguments">
      <MemberSignature Language="F#" Value="abstract member InvokeWithArguments : Java.Lang.Object[] -&gt; Java.Lang.Object&#xA;override this.InvokeWithArguments : Java.Lang.Object[] -&gt; Java.Lang.Object" Usage="methodHandle.InvokeWithArguments arguments" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? InvokeWithArguments (params Java.Lang.Object[]? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object InvokeWithArguments(class Java.Lang.Object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.InvokeWithArguments(Java.Lang.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeWithArguments", "([Ljava/lang/Object;)Ljava/lang/Object;", "GetInvokeWithArguments_arrayLjava_lang_Object_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="arguments">the arguments to pass to the target</param>
        <summary>Performs a variable arity invocation, passing the arguments in the given list
            to the method handle, as if via an inexact <c>#invoke invoke</c> from a call site
            which mentions only the type <c>Object</c>, and whose arity is the length
            of the argument list.</summary>
        <returns>the result returned by the target</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#invokeWithArguments(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.invokeWithArguments(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeWithArguments">
      <MemberSignature Language="F#" Value="abstract member InvokeWithArguments : System.Collections.Generic.IList&lt;obj&gt; -&gt; Java.Lang.Object&#xA;override this.InvokeWithArguments : System.Collections.Generic.IList&lt;obj&gt; -&gt; Java.Lang.Object" Usage="methodHandle.InvokeWithArguments arguments" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? InvokeWithArguments (System.Collections.Generic.IList&lt;object&gt;? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object InvokeWithArguments(class System.Collections.Generic.IList`1&lt;object&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.InvokeWithArguments(System.Collections.Generic.IList{System.Object})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeWithArguments", "(Ljava/util/List;)Ljava/lang/Object;", "GetInvokeWithArguments_Ljava_util_List_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="arguments">the arguments to pass to the target</param>
        <summary>Performs a variable arity invocation, passing the arguments in the given list
            to the method handle, as if via an inexact <c>#invoke invoke</c> from a call site
            which mentions only the type <c>Object</c>, and whose arity is the length
            of the argument list.</summary>
        <returns>the result returned by the target</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#invokeWithArguments(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.invokeWithArguments(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVarargsCollector">
      <MemberSignature Language="F#" Value="member this.IsVarargsCollector : bool" Usage="Java.Lang.Invoke.MethodHandle.IsVarargsCollector" />
      <MemberSignature Language="C#" Value="public virtual bool IsVarargsCollector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVarargsCollector" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Invoke.MethodHandle.IsVarargsCollector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVarargsCollector", "()Z", "GetIsVarargsCollectorHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines if this method handle
            supports #asVarargsCollector variable arity calls.</summary>
        <value>true if this method handle accepts more than one arity of plain, inexact <c>invoke</c> calls</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#isVarargsCollector()" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.isVarargsCollector()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Invoke.MethodHandle.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Invoke.MethodHandle.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Invoke.MethodHandle.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Invoke.MethodHandle.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Invoke.MethodHandle.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Invoke.MethodHandle.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="F#" Value="abstract member Type : unit -&gt; Java.Lang.Invoke.MethodType&#xA;override this.Type : unit -&gt; Java.Lang.Invoke.MethodType" Usage="methodHandle.Type " />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Invoke.MethodType? Type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Invoke.MethodType Type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Invoke.MethodHandle.Type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("type", "()Ljava/lang/invoke/MethodType;", "GetTypeHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Invoke.MethodType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reports the type of this method handle.</summary>
        <returns>the method handle type</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/invoke/MethodHandle#type()" title="Reference documentation">Java documentation for <code>java.lang.invoke.MethodHandle.type()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
